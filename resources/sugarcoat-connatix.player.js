{
    const $___mock_81ba332f770640cb = {};
    (exports => {
        'use strict';
        const xhrUnsent = 0;
        const xhrOpened = 1;
        const xhrHeadersReceived = 2;
        const xhrLoading = 3;
        const xhrDone = 4;
        const xhrDeferredHandleSymbol = Symbol('deferredHandle');
        const xhrOnLoadStartSymbol = Symbol('onloadstart');
        const xhrOnProgressSymbol = Symbol('onprogress');
        const xhrOnAbortSymbol = Symbol('onabort');
        const xhrOnErrorSymbol = Symbol('onerror');
        const xhrOnLoadSymbol = Symbol('onload');
        const xhrOnTimeoutSymbol = Symbol('ontimeout');
        const xhrOnLoadEndSymbol = Symbol('onloadend');
        const xhrOnReadyStateChangeSymbol = Symbol('onreadystatechange');
        const xhrReadyStateSymbol = Symbol('readyState');
        const xhrTimeoutSymbol = Symbol('timeout');
        const xhrWithCredentialsSymbol = Symbol('withCredentials');
        const xhrUploadSymbol = Symbol('upload');
        const xhrResponseTypeSymbol = Symbol('responseType');
        const defineEvent = (obj, symbol) => {
            const type = symbol.description.substring(2);
            Object.defineProperty(obj, symbol, {
                configurable: false,
                enumerable: false,
                value: null,
                writable: true
            });
            obj.addEventListener(type, function (event) {
                const handler = this[symbol];
                if (handler) {
                    handler.call(this, event);
                }
            });
        };
        const changeReadyState = (xhr, readyState) => {
            xhr[xhrReadyStateSymbol] = readyState;
            xhr.dispatchEvent(new Event('readystatechange'));
        };
        let isSealed = true;
        class XMLHttpRequestEventTarget extends EventTarget {
            constructor() {
                super();
                if (!(this instanceof XMLHttpRequest) && !(this instanceof XMLHttpRequestUpload)) {
                    throw new TypeError('Illegal constructor');
                }
                defineEvent(this, xhrOnLoadStartSymbol);
                defineEvent(this, xhrOnProgressSymbol);
                defineEvent(this, xhrOnAbortSymbol);
                defineEvent(this, xhrOnErrorSymbol);
                defineEvent(this, xhrOnLoadSymbol);
                defineEvent(this, xhrOnTimeoutSymbol);
                defineEvent(this, xhrOnLoadEndSymbol);
            }
            get onloadstart() {
                return this[xhrOnLoadStartSymbol];
            }
            set onloadstart(value) {
                this[xhrOnLoadStartSymbol] = value;
            }
            get onprogress() {
                return this[xhrOnProgressSymbol];
            }
            set onprogress(value) {
                this[xhrOnProgressSymbol] = value;
            }
            get onabort() {
                return this[xhrOnAbortSymbol];
            }
            set onabort(value) {
                this[xhrOnAbortSymbol] = value;
            }
            get onerror() {
                return this[xhrOnErrorSymbol];
            }
            set onerror(value) {
                this[xhrOnErrorSymbol] = value;
            }
            get ontimeout() {
                return this[xhrOnTimeoutSymbol];
            }
            set ontimeout(value) {
                this[xhrOnTimeoutSymbol] = value;
            }
            get onloadend() {
                return this[xhrOnLoadEndSymbol];
            }
            set onloadend(value) {
                this[xhrOnLoadEndSymbol] = value;
            }
        }
        exports.XMLHttpRequestEventTarget = {
            configurable: true,
            enumerable: true,
            value: XMLHttpRequestEventTarget,
            writable: true
        };
        class XMLHttpRequestUpload extends XMLHttpRequestEventTarget {
            constructor() {
                if (isSealed) {
                    throw new TypeError('Illegal constructor');
                }
                super();
            }
        }
        exports.XMLHttpRequestUpload = {
            configurable: true,
            enumerable: true,
            value: XMLHttpRequestUpload,
            writable: true
        };
        class XMLHttpRequest extends XMLHttpRequestEventTarget {
            constructor() {
                super();
                isSealed = false;
                const xhrUpload = new XMLHttpRequestUpload();
                isSealed = true;
                Object.defineProperty(this, xhrDeferredHandleSymbol, {
                    configurable: false,
                    enumerable: false,
                    value: null,
                    writable: true
                });
                defineEvent(this, xhrOnReadyStateChangeSymbol);
                Object.defineProperty(this, xhrReadyStateSymbol, {
                    configurable: false,
                    enumerable: false,
                    value: xhrUnsent,
                    writable: true
                });
                Object.defineProperty(this, xhrTimeoutSymbol, {
                    configurable: false,
                    enumerable: false,
                    value: 0,
                    writable: true
                });
                Object.defineProperty(this, xhrWithCredentialsSymbol, {
                    configurable: false,
                    enumerable: false,
                    value: false,
                    writable: true
                });
                Object.defineProperty(this, xhrUploadSymbol, {
                    configurable: false,
                    enumerable: false,
                    value: xhrUpload,
                    writable: false
                });
                Object.defineProperty(this, xhrResponseTypeSymbol, {
                    configurable: false,
                    enumerable: false,
                    value: '',
                    writable: true
                });
            }
            get onreadystatechange() {
                return this[xhrOnReadyStateChangeSymbol];
            }
            set onreadystatechange(value) {
                this[xhrOnReadyStateChangeSymbol] = value;
            }
            get readyState() {
                return this[xhrReadyStateSymbol];
            }
            open(method, url) {
                switch (this[xhrReadyStateSymbol]) {
                case xhrUnsent:
                case xhrDone: {
                        changeReadyState(this, xhrOpened);
                        break;
                    }
                }
            }
            setRequestHeader(name, value) {
            }
            setTrustToken(trustToken) {
            }
            get timeout() {
                return this[xhrTimeoutSymbol];
            }
            set timeout(value) {
                this[xhrTimeoutSymbol] = value;
            }
            get withCredentials() {
                return this[xhrWithCredentialsSymbol];
            }
            set withCredentials(value) {
                switch (this[xhrReadyStateSymbol]) {
                case xhrUnsent:
                case xhrOpened: {
                        break;
                    }
                default: {
                        throw new DOMException('Failed to set the \'withCredentials\' property on \'XMLHttpRequest\': The value may only be set if the object\'s state is UNSENT or OPENED.');
                    }
                }
                this[xhrWithCredentialsSymbol] = !!value;
            }
            get upload() {
                return this[xhrUploadSymbol];
            }
            send() {
                if (this[xhrReadyStateSymbol] === xhrOpened && this[xhrDeferredHandleSymbol] === null) {
                    this[xhrDeferredHandleSymbol] = setTimeout(() => {
                        this[xhrDeferredHandleSymbol] = null;
                        changeReadyState(this, xhrDone);
                        this.dispatchEvent(new ProgressEvent('error'));
                        this.dispatchEvent(new ProgressEvent('loadend'));
                    }, 0);
                } else {
                    throw new DOMException('Failed to execute \'send\' on \'XMLHttpRequest\': The object\'s state must be OPENED.');
                }
            }
            abort() {
                if (this[xhrReadyStateSymbol] === xhrOpened && this[xhrDeferredHandleSymbol] !== null) {
                    clearTimeout(this[xhrDeferredHandleSymbol]);
                    this[xhrDeferredHandleSymbol] = null;
                    changeReadyState(this, xhrUnsent);
                    this.dispatchEvent(new ProgressEvent('abort'));
                    this.dispatchEvent(new ProgressEvent('loadend'));
                }
            }
            get responseURL() {
                return '';
            }
            get status() {
                return 0;
            }
            get statusText() {
                return '';
            }
            getResponseHeader(name) {
                return null;
            }
            overrideMimeType(mime) {
            }
            get responseType() {
                return this[xhrResponseTypeSymbol];
            }
            set responseType(value) {
                switch (this[xhrReadyStateSymbol]) {
                case xhrDone: {
                        throw new DOMException('Failed to set the \'responseType\' property on \'XMLHttpRequest\': The response type cannot be set if the object\'s state is LOADING or DONE.');
                    }
                }
                switch (value) {
                case '':
                case 'arraybuffer':
                case 'blob':
                case 'document':
                case 'json':
                case 'text': {
                        this[xhrResponseTypeSymbol] = value;
                        break;
                    }
                }
            }
            get response() {
                const responseType = this[xhrResponseTypeSymbol];
                return responseType === '' || responseType === 'text' ? '' : null;
            }
            get responseText() {
                const responseType = this[xhrResponseTypeSymbol];
                if (responseType === '' || responseType === 'text') {
                    return '';
                } else {
                    throw new DOMException('Failed to read the \'responseText\' property from \'XMLHttpRequest\': The value is only accessible if the object\'s \'responseType\' is \'\' or \'text\' (was \'arraybuffer\').');
                }
            }
            get responseXML() {
                return null;
            }
        }
        Object.defineProperty(XMLHttpRequest, 'UNSENT', {
            configurable: false,
            enumerable: true,
            value: xhrUnsent
        });
        Object.defineProperty(XMLHttpRequest, 'OPENED', {
            configurable: false,
            enumerable: true,
            value: xhrOpened
        });
        Object.defineProperty(XMLHttpRequest, 'HEADERS_RECEIVED', {
            configurable: false,
            enumerable: true,
            value: xhrHeadersReceived
        });
        Object.defineProperty(XMLHttpRequest, 'LOADING', {
            configurable: false,
            enumerable: true,
            value: xhrLoading
        });
        Object.defineProperty(XMLHttpRequest, 'DONE', {
            configurable: false,
            enumerable: true,
            value: xhrDone
        });
        exports.XMLHttpRequest = {
            configurable: true,
            enumerable: true,
            value: XMLHttpRequest,
            writable: true
        };
    })($___mock_81ba332f770640cb);
    (function () {
        !function (t) {
            var i = {};
            function e(s) {
                if (i[s])
                    return i[s].exports;
                var n = i[s] = {
                    i: s,
                    l: !1,
                    exports: {}
                };
                return t[s].call(n.exports, n, n.exports, e), n.l = !0, n.exports;
            }
            e.m = t, e.c = i, e.d = function (t, i, s) {
                e.o(t, i) || Object.defineProperty(t, i, {
                    enumerable: !0,
                    get: s
                });
            }, e.r = function (t) {
                'undefined' != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: 'Module' }), Object.defineProperty(t, '_', { value: !0 });
            }, e.t = function (t, i) {
                if (1 & i && (t = e(t)), 8 & i)
                    return t;
                if (4 & i && 'object' == typeof t && t && t._)
                    return t;
                var s = Object.create(null);
                if (e.r(s), Object.defineProperty(s, 'default', {
                        enumerable: !0,
                        value: t
                    }), 2 & i && 'string' != typeof t)
                    for (var n in t)
                        e.d(s, n, function (i) {
                            return t[i];
                        }.bind(null, n));
                return s;
            }, e.n = function (t) {
                var i = t && t._ ? function () {
                    return t.default;
                } : function () {
                    return t;
                };
                return e.d(i, 'a', i), i;
            }, e.o = function (t, i) {
                return Object.prototype.hasOwnProperty.call(t, i);
            }, e.p = '', e(e.s = 156);
        }([
            function (t, i, e) {
                'use strict';
                var s, n, r = e(60), h = r.Reader, a = r.Writer, o = r.util, c = r.roots.default || (r.roots.default = {});
                c.ProtoAdBreak = function () {
                    function t(t) {
                        if (this.types = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.types = o.emptyArray, t.prototype.maxAdPodDuration = 0, t.prototype.maxAdSlotDuration = 180, t.prototype.numberOfAdSlots = 1, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoAdBreak(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                if (s.types && s.types.length || (s.types = []), 2 == (7 & n))
                                    for (var r = t.uint32() + t.pos; t.pos < r;)
                                        s.types.push(t.int32());
                                else
                                    s.types.push(t.int32());
                                break;
                            case 2:
                                s.maxAdPodDuration = t.int32();
                                break;
                            case 3:
                                s.maxAdSlotDuration = t.int32();
                                break;
                            case 4:
                                s.numberOfAdSlots = t.int32();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.types = []), i.defaults && (e.maxAdPodDuration = 0, e.maxAdSlotDuration = 180, e.numberOfAdSlots = 1), t.types && t.types.length) {
                            e.types = [];
                            for (var s = 0; s < t.types.length; ++s)
                                e.types[s] = i.enums === String ? c.ProtoAdBreakTypeEnum[t.types[s]] : t.types[s];
                        }
                        return null != t.maxAdPodDuration && t.hasOwnProperty('maxAdPodDuration') && (e.maxAdPodDuration = t.maxAdPodDuration), null != t.maxAdSlotDuration && t.hasOwnProperty('maxAdSlotDuration') && (e.maxAdSlotDuration = t.maxAdSlotDuration), null != t.numberOfAdSlots && t.hasOwnProperty('numberOfAdSlots') && (e.numberOfAdSlots = t.numberOfAdSlots), e;
                    }, t;
                }(), c.ProtoAdDomainBlockingResponse = function () {
                    function t(t) {
                        if (this.domains = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.domains = o.emptyArray, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoAdDomainBlockingResponse(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.domains && s.domains.length || (s.domains = []), s.domains.push(t.string());
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.domains = []), t.domains && t.domains.length) {
                            e.domains = [];
                            for (var s = 0; s < t.domains.length; ++s)
                                e.domains[s] = t.domains[s];
                        }
                        return e;
                    }, t;
                }(), c.ProtoCoreTamBidRequest = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.lineItemId = '', t.prototype.code = '', t.prototype.metadata = null, t.prototype.exploration = !1, t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.lineItemId && Object.hasOwnProperty.call(t, 'lineItemId') && i.uint32(10).string(t.lineItemId), null != t.code && Object.hasOwnProperty.call(t, 'code') && i.uint32(18).string(t.code), null != t.metadata && Object.hasOwnProperty.call(t, 'metadata') && c.MetadataModel.encode(t.metadata, i.uint32(26).fork()).ldelim(), null != t.exploration && Object.hasOwnProperty.call(t, 'exploration') && i.uint32(32).bool(t.exploration), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoCoreTamBidRequest)
                            return t;
                        var i = new c.ProtoCoreTamBidRequest();
                        if (null != t.lineItemId && (i.lineItemId = String(t.lineItemId)), null != t.code && (i.code = String(t.code)), null != t.metadata) {
                            if ('object' != typeof t.metadata)
                                throw TypeError('.ProtoCoreTamBidRequest.metadata: object expected');
                            i.metadata = c.MetadataModel.fromObject(t.metadata);
                        }
                        return null != t.exploration && (i.exploration = Boolean(t.exploration)), i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.MetadataModel = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.version = 0, t.prototype.sessionId = '', t.prototype.playerId = '', t.prototype.userId = '', t.prototype.browser = null, t.prototype.geo = null, t.prototype.clientAb0 = 0, t.prototype.clientAb1 = 0, t.prototype.serverAb0 = 0, t.prototype.serverAb1 = 0, t.prototype.pageUrl = '', t.prototype.bundleId = '', t.prototype.implementationType = 0, t.prototype.trackAllRequests = !1, t.prototype.customParam1 = '', t.prototype.customParam2 = '', t.prototype.customParam3 = '', t.prototype.abTestId = '', t.prototype.pageInFocus = !1, t.prototype.customParam4 = '', t.prototype.customParam5 = '', t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.version && Object.hasOwnProperty.call(t, 'version') && i.uint32(8).int32(t.version), null != t.sessionId && Object.hasOwnProperty.call(t, 'sessionId') && i.uint32(18).string(t.sessionId), null != t.playerId && Object.hasOwnProperty.call(t, 'playerId') && i.uint32(26).string(t.playerId), null != t.userId && Object.hasOwnProperty.call(t, 'userId') && i.uint32(34).string(t.userId), null != t.browser && Object.hasOwnProperty.call(t, 'browser') && c.Browser.encode(t.browser, i.uint32(42).fork()).ldelim(), null != t.geo && Object.hasOwnProperty.call(t, 'geo') && c.GeoLocation.encode(t.geo, i.uint32(50).fork()).ldelim(), null != t.clientAb0 && Object.hasOwnProperty.call(t, 'clientAb0') && i.uint32(56).int32(t.clientAb0), null != t.clientAb1 && Object.hasOwnProperty.call(t, 'clientAb1') && i.uint32(64).int32(t.clientAb1), null != t.serverAb0 && Object.hasOwnProperty.call(t, 'serverAb0') && i.uint32(72).int32(t.serverAb0), null != t.serverAb1 && Object.hasOwnProperty.call(t, 'serverAb1') && i.uint32(80).int32(t.serverAb1), null != t.pageUrl && Object.hasOwnProperty.call(t, 'pageUrl') && i.uint32(122).string(t.pageUrl), null != t.bundleId && Object.hasOwnProperty.call(t, 'bundleId') && i.uint32(138).string(t.bundleId), null != t.implementationType && Object.hasOwnProperty.call(t, 'implementationType') && i.uint32(144).int32(t.implementationType), null != t.trackAllRequests && Object.hasOwnProperty.call(t, 'trackAllRequests') && i.uint32(152).bool(t.trackAllRequests), null != t.customParam1 && Object.hasOwnProperty.call(t, 'customParam1') && i.uint32(162).string(t.customParam1), null != t.customParam2 && Object.hasOwnProperty.call(t, 'customParam2') && i.uint32(170).string(t.customParam2), null != t.customParam3 && Object.hasOwnProperty.call(t, 'customParam3') && i.uint32(178).string(t.customParam3), null != t.abTestId && Object.hasOwnProperty.call(t, 'abTestId') && i.uint32(194).string(t.abTestId), null != t.pageInFocus && Object.hasOwnProperty.call(t, 'pageInFocus') && i.uint32(200).bool(t.pageInFocus), null != t.customParam4 && Object.hasOwnProperty.call(t, 'customParam4') && i.uint32(210).string(t.customParam4), null != t.customParam5 && Object.hasOwnProperty.call(t, 'customParam5') && i.uint32(218).string(t.customParam5), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.MetadataModel)
                            return t;
                        var i = new c.MetadataModel();
                        if (null != t.version && (i.version = 0 | t.version), null != t.sessionId && (i.sessionId = String(t.sessionId)), null != t.playerId && (i.playerId = String(t.playerId)), null != t.userId && (i.userId = String(t.userId)), null != t.browser) {
                            if ('object' != typeof t.browser)
                                throw TypeError('.MetadataModel.browser: object expected');
                            i.browser = c.Browser.fromObject(t.browser);
                        }
                        if (null != t.geo) {
                            if ('object' != typeof t.geo)
                                throw TypeError('.MetadataModel.geo: object expected');
                            i.geo = c.GeoLocation.fromObject(t.geo);
                        }
                        switch (null != t.clientAb0 && (i.clientAb0 = 0 | t.clientAb0), null != t.clientAb1 && (i.clientAb1 = 0 | t.clientAb1), null != t.serverAb0 && (i.serverAb0 = 0 | t.serverAb0), null != t.serverAb1 && (i.serverAb1 = 0 | t.serverAb1), null != t.pageUrl && (i.pageUrl = String(t.pageUrl)), null != t.bundleId && (i.bundleId = String(t.bundleId)), t.implementationType) {
                        case 'Web':
                        case 0:
                            i.implementationType = 0;
                            break;
                        case 'Amp':
                        case 1:
                            i.implementationType = 1;
                        }
                        return null != t.trackAllRequests && (i.trackAllRequests = Boolean(t.trackAllRequests)), null != t.customParam1 && (i.customParam1 = String(t.customParam1)), null != t.customParam2 && (i.customParam2 = String(t.customParam2)), null != t.customParam3 && (i.customParam3 = String(t.customParam3)), null != t.abTestId && (i.abTestId = String(t.abTestId)), null != t.pageInFocus && (i.pageInFocus = Boolean(t.pageInFocus)), null != t.customParam4 && (i.customParam4 = String(t.customParam4)), null != t.customParam5 && (i.customParam5 = String(t.customParam5)), i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.Browser = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.browserVersion = '', t.prototype.browserType = '', t.prototype.osCode = '', t.prototype.device = 0, t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.browserVersion && Object.hasOwnProperty.call(t, 'browserVersion') && i.uint32(10).string(t.browserVersion), null != t.browserType && Object.hasOwnProperty.call(t, 'browserType') && i.uint32(18).string(t.browserType), null != t.osCode && Object.hasOwnProperty.call(t, 'osCode') && i.uint32(26).string(t.osCode), null != t.device && Object.hasOwnProperty.call(t, 'device') && i.uint32(32).int32(t.device), i;
                    }, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.Browser(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.browserVersion = t.string();
                                break;
                            case 2:
                                s.browserType = t.string();
                                break;
                            case 3:
                                s.osCode = t.string();
                                break;
                            case 4:
                                s.device = t.int32();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.Browser)
                            return t;
                        var i = new c.Browser();
                        switch (null != t.browserVersion && (i.browserVersion = String(t.browserVersion)), null != t.browserType && (i.browserType = String(t.browserType)), null != t.osCode && (i.osCode = String(t.osCode)), t.device) {
                        case 'Desktop':
                        case 0:
                            i.device = 0;
                            break;
                        case 'Smartphone':
                        case 1:
                            i.device = 1;
                            break;
                        case 'Tablet':
                        case 2:
                            i.device = 2;
                            break;
                        case 'GameConsole':
                        case 3:
                            i.device = 3;
                            break;
                        case 'SmartTV':
                        case 4:
                            i.device = 4;
                            break;
                        case 'WearableComputer':
                        case 5:
                            i.device = 5;
                            break;
                        case 'PDA':
                        case 6:
                            i.device = 6;
                            break;
                        case 'Unrecognized':
                        case 7:
                            i.device = 7;
                        }
                        return i;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.browserVersion = '', e.browserType = '', e.osCode = '', e.device = i.enums === String ? 'Desktop' : 0), null != t.browserVersion && t.hasOwnProperty('browserVersion') && (e.browserVersion = t.browserVersion), null != t.browserType && t.hasOwnProperty('browserType') && (e.browserType = t.browserType), null != t.osCode && t.hasOwnProperty('osCode') && (e.osCode = t.osCode), null != t.device && t.hasOwnProperty('device') && (e.device = i.enums === String ? c.ProtoDeviceType[t.device] : t.device), e;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.GeoLocation = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.countryGeoId = 0, t.prototype.cityId = 0, t.prototype.subdivisionId = 0, t.prototype.dmaId = 0, t.prototype.ip = '', t.prototype.lat = 0, t.prototype.lon = 0, t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.countryGeoId && Object.hasOwnProperty.call(t, 'countryGeoId') && i.uint32(8).int32(t.countryGeoId), null != t.cityId && Object.hasOwnProperty.call(t, 'cityId') && i.uint32(16).int32(t.cityId), null != t.subdivisionId && Object.hasOwnProperty.call(t, 'subdivisionId') && i.uint32(24).int32(t.subdivisionId), null != t.dmaId && Object.hasOwnProperty.call(t, 'dmaId') && i.uint32(32).int32(t.dmaId), null != t.ip && Object.hasOwnProperty.call(t, 'ip') && i.uint32(42).string(t.ip), null != t.lat && Object.hasOwnProperty.call(t, 'lat') && i.uint32(49).double(t.lat), null != t.lon && Object.hasOwnProperty.call(t, 'lon') && i.uint32(57).double(t.lon), i;
                    }, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.GeoLocation(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.countryGeoId = t.int32();
                                break;
                            case 2:
                                s.cityId = t.int32();
                                break;
                            case 3:
                                s.subdivisionId = t.int32();
                                break;
                            case 4:
                                s.dmaId = t.int32();
                                break;
                            case 5:
                                s.ip = t.string();
                                break;
                            case 6:
                                s.lat = t.double();
                                break;
                            case 7:
                                s.lon = t.double();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.GeoLocation)
                            return t;
                        var i = new c.GeoLocation();
                        return null != t.countryGeoId && (i.countryGeoId = 0 | t.countryGeoId), null != t.cityId && (i.cityId = 0 | t.cityId), null != t.subdivisionId && (i.subdivisionId = 0 | t.subdivisionId), null != t.dmaId && (i.dmaId = 0 | t.dmaId), null != t.ip && (i.ip = String(t.ip)), null != t.lat && (i.lat = Number(t.lat)), null != t.lon && (i.lon = Number(t.lon)), i;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.countryGeoId = 0, e.cityId = 0, e.subdivisionId = 0, e.dmaId = 0, e.ip = '', e.lat = 0, e.lon = 0), null != t.countryGeoId && t.hasOwnProperty('countryGeoId') && (e.countryGeoId = t.countryGeoId), null != t.cityId && t.hasOwnProperty('cityId') && (e.cityId = t.cityId), null != t.subdivisionId && t.hasOwnProperty('subdivisionId') && (e.subdivisionId = t.subdivisionId), null != t.dmaId && t.hasOwnProperty('dmaId') && (e.dmaId = t.dmaId), null != t.ip && t.hasOwnProperty('ip') && (e.ip = t.ip), null != t.lat && t.hasOwnProperty('lat') && (e.lat = i.json && !isFinite(t.lat) ? String(t.lat) : t.lat), null != t.lon && t.hasOwnProperty('lon') && (e.lon = i.json && !isFinite(t.lon) ? String(t.lon) : t.lon), e;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoCoreTamBidResponse = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.errorMessage = '', t.prototype.encryptedBidPrice = '', t.prototype.ofskp = 0, t.prototype.impressionTimeSpent = 0, t.prototype.bidRate = 0, t.prototype.successRate = 0, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoCoreTamBidResponse(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.errorMessage = t.string();
                                break;
                            case 10:
                                s.encryptedBidPrice = t.string();
                                break;
                            case 12:
                                s.ofskp = t.double();
                                break;
                            case 13:
                                s.impressionTimeSpent = t.int32();
                                break;
                            case 14:
                                s.bidRate = t.double();
                                break;
                            case 15:
                                s.successRate = t.double();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.errorMessage = '', e.encryptedBidPrice = '', e.ofskp = 0, e.impressionTimeSpent = 0, e.bidRate = 0, e.successRate = 0), null != t.errorMessage && t.hasOwnProperty('errorMessage') && (e.errorMessage = t.errorMessage), null != t.encryptedBidPrice && t.hasOwnProperty('encryptedBidPrice') && (e.encryptedBidPrice = t.encryptedBidPrice), null != t.ofskp && t.hasOwnProperty('ofskp') && (e.ofskp = i.json && !isFinite(t.ofskp) ? String(t.ofskp) : t.ofskp), null != t.impressionTimeSpent && t.hasOwnProperty('impressionTimeSpent') && (e.impressionTimeSpent = t.impressionTimeSpent), null != t.bidRate && t.hasOwnProperty('bidRate') && (e.bidRate = i.json && !isFinite(t.bidRate) ? String(t.bidRate) : t.bidRate), null != t.successRate && t.hasOwnProperty('successRate') && (e.successRate = i.json && !isFinite(t.successRate) ? String(t.successRate) : t.successRate), e;
                    }, t;
                }(), c.ProtoCookieSettings = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.name = '', t.prototype.value = '', t.prototype.timestamp = o.Long ? o.Long.fromBits(0, 0, !1) : 0, t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.name && Object.hasOwnProperty.call(t, 'name') && i.uint32(10).string(t.name), null != t.value && Object.hasOwnProperty.call(t, 'value') && i.uint32(18).string(t.value), null != t.timestamp && Object.hasOwnProperty.call(t, 'timestamp') && i.uint32(24).int64(t.timestamp), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoCookieSettings)
                            return t;
                        var i = new c.ProtoCookieSettings();
                        return null != t.name && (i.name = String(t.name)), null != t.value && (i.value = String(t.value)), null != t.timestamp && (o.Long ? (i.timestamp = o.Long.fromValue(t.timestamp)).unsigned = !1 : 'string' == typeof t.timestamp ? i.timestamp = parseInt(t.timestamp, 10) : 'number' == typeof t.timestamp ? i.timestamp = t.timestamp : 'object' == typeof t.timestamp && (i.timestamp = new o.LongBits(t.timestamp.low >>> 0, t.timestamp.high >>> 0).toNumber())), i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoCookieSyncRequest = function () {
                    function t(t) {
                        if (this.cookieList = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.cookieList = o.emptyArray, t.prototype.secureMode = 0, t.prototype.browserInfo = null, t.encode = function (t, i) {
                        if (i || (i = a.create()), null != t.cookieList && t.cookieList.length)
                            for (var e = 0; e < t.cookieList.length; ++e)
                                c.ProtoCookieSettings.encode(t.cookieList[e], i.uint32(10).fork()).ldelim();
                        return null != t.secureMode && Object.hasOwnProperty.call(t, 'secureMode') && i.uint32(16).int32(t.secureMode), null != t.browserInfo && Object.hasOwnProperty.call(t, 'browserInfo') && c.Browser.encode(t.browserInfo, i.uint32(26).fork()).ldelim(), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoCookieSyncRequest)
                            return t;
                        var i = new c.ProtoCookieSyncRequest();
                        if (t.cookieList) {
                            if (!Array.isArray(t.cookieList))
                                throw TypeError('.ProtoCookieSyncRequest.cookieList: array expected');
                            i.cookieList = [];
                            for (var e = 0; e < t.cookieList.length; ++e) {
                                if ('object' != typeof t.cookieList[e])
                                    throw TypeError('.ProtoCookieSyncRequest.cookieList: object expected');
                                i.cookieList[e] = c.ProtoCookieSettings.fromObject(t.cookieList[e]);
                            }
                        }
                        switch (t.secureMode) {
                        case 'Secure':
                        case 0:
                            i.secureMode = 0;
                            break;
                        case 'Unsecure':
                        case 1:
                            i.secureMode = 1;
                            break;
                        case 'Auto':
                        case 2:
                            i.secureMode = 2;
                        }
                        if (null != t.browserInfo) {
                            if ('object' != typeof t.browserInfo)
                                throw TypeError('.ProtoCookieSyncRequest.browserInfo: object expected');
                            i.browserInfo = c.Browser.fromObject(t.browserInfo);
                        }
                        return i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoUserInformation = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.userId = '', t.prototype.lookupId = '', t.prototype.lookupResponseCode = 0, t.prototype.callFraudSensor = !1, t.prototype.publisherAdsTxt = '', t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoUserInformation(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.userId = t.string();
                                break;
                            case 3:
                                s.lookupId = t.string();
                                break;
                            case 4:
                                s.lookupResponseCode = t.int32();
                                break;
                            case 5:
                                s.callFraudSensor = t.bool();
                                break;
                            case 6:
                                s.publisherAdsTxt = t.string();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.userId = '', e.lookupId = '', e.lookupResponseCode = 0, e.callFraudSensor = !1, e.publisherAdsTxt = ''), null != t.userId && t.hasOwnProperty('userId') && (e.userId = t.userId), null != t.lookupId && t.hasOwnProperty('lookupId') && (e.lookupId = t.lookupId), null != t.lookupResponseCode && t.hasOwnProperty('lookupResponseCode') && (e.lookupResponseCode = t.lookupResponseCode), null != t.callFraudSensor && t.hasOwnProperty('callFraudSensor') && (e.callFraudSensor = t.callFraudSensor), null != t.publisherAdsTxt && t.hasOwnProperty('publisherAdsTxt') && (e.publisherAdsTxt = t.publisherAdsTxt), e;
                    }, t;
                }(), c.CreativeTrackerViewModel = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.type = 0, t.prototype.trigger = 0, t.prototype.url = '', t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.CreativeTrackerViewModel(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.type = t.int32();
                                break;
                            case 2:
                                s.trigger = t.int32();
                                break;
                            case 3:
                                s.url = t.string();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.type = i.enums === String ? 'Image' : 0, e.trigger = i.enums === String ? 'Impression' : 0, e.url = ''), null != t.type && t.hasOwnProperty('type') && (e.type = i.enums === String ? c.ProtoTrackerType[t.type] : t.type), null != t.trigger && t.hasOwnProperty('trigger') && (e.trigger = i.enums === String ? c.ProtoTrackerTriggerType[t.trigger] : t.trigger), null != t.url && t.hasOwnProperty('url') && (e.url = t.url), e;
                    }, t;
                }(), c.ProtoLineItemAdBreakTargeting = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.adRollType = 0, t.prototype.adBreakTypeEnum = 1, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoLineItemAdBreakTargeting(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.adRollType = t.int32();
                                break;
                            case 2:
                                s.adBreakTypeEnum = t.int32();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.adRollType = i.enums === String ? 'None' : 0, e.adBreakTypeEnum = i.enums === String ? 'All' : 1), null != t.adRollType && t.hasOwnProperty('adRollType') && (e.adRollType = i.enums === String ? c.ProtoAdBreakTypeEnum[t.adRollType] : t.adRollType), null != t.adBreakTypeEnum && t.hasOwnProperty('adBreakTypeEnum') && (e.adBreakTypeEnum = i.enums === String ? c.ProtoLineItemAdBreakTypeEnum[t.adBreakTypeEnum] : t.adBreakTypeEnum), e;
                    }, t;
                }(), c.ProtoLineItemAdPodTargeting = function () {
                    function t(t) {
                        if (this.adSlotPositions = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.targetingType = 0, t.prototype.adSlotTargetingType = 1, t.prototype.adSlotPositions = o.emptyArray, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoLineItemAdPodTargeting(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.targetingType = t.int32();
                                break;
                            case 2:
                                s.adSlotTargetingType = t.int32();
                                break;
                            case 3:
                                if (s.adSlotPositions && s.adSlotPositions.length || (s.adSlotPositions = []), 2 == (7 & n))
                                    for (var r = t.uint32() + t.pos; t.pos < r;)
                                        s.adSlotPositions.push(t.int32());
                                else
                                    s.adSlotPositions.push(t.int32());
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.adSlotPositions = []), i.defaults && (e.targetingType = i.enums === String ? 'Only' : 0, e.adSlotTargetingType = i.enums === String ? 'SpecificSlots' : 1), null != t.targetingType && t.hasOwnProperty('targetingType') && (e.targetingType = i.enums === String ? c.ProtoLineItemTargetingTypeEnum[t.targetingType] : t.targetingType), null != t.adSlotTargetingType && t.hasOwnProperty('adSlotTargetingType') && (e.adSlotTargetingType = i.enums === String ? c.ProtoLineItemAdSlotTargetingTypeEnum[t.adSlotTargetingType] : t.adSlotTargetingType), t.adSlotPositions && t.adSlotPositions.length) {
                            e.adSlotPositions = [];
                            for (var s = 0; s < t.adSlotPositions.length; ++s)
                                e.adSlotPositions[s] = t.adSlotPositions[s];
                        }
                        return e;
                    }, t;
                }(), c.ProtoLineItemAdBreakSettings = function () {
                    function t(t) {
                        if (this.adBreakTargeting = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.adBreakTargeting = o.emptyArray, t.prototype.adPodTargeting = null, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoLineItemAdBreakSettings(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.adBreakTargeting && s.adBreakTargeting.length || (s.adBreakTargeting = []), s.adBreakTargeting.push(c.ProtoLineItemAdBreakTargeting.decode(t, t.uint32()));
                                break;
                            case 2:
                                s.adPodTargeting = c.ProtoLineItemAdPodTargeting.decode(t, t.uint32());
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.adBreakTargeting = []), i.defaults && (e.adPodTargeting = null), t.adBreakTargeting && t.adBreakTargeting.length) {
                            e.adBreakTargeting = [];
                            for (var s = 0; s < t.adBreakTargeting.length; ++s)
                                e.adBreakTargeting[s] = c.ProtoLineItemAdBreakTargeting.toObject(t.adBreakTargeting[s], i);
                        }
                        return null != t.adPodTargeting && t.hasOwnProperty('adPodTargeting') && (e.adPodTargeting = c.ProtoLineItemAdPodTargeting.toObject(t.adPodTargeting, i)), e;
                    }, t;
                }(), c.ProtoLineItem = function () {
                    function t(t) {
                        if (this.trackers = [], this.renditions = [], this.floorPrices = [], this.advertiserContextualTargeting = [], this.publisherContextualTargeting = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.publisherLineItemId = '', t.prototype.advertiserLineItemId = '', t.prototype.adTag = '', t.prototype.creativeType = 0, t.prototype.sound = !1, t.prototype.viewability = !1, t.prototype.impressionTimeSpent = 0, t.prototype.vendorId = '', t.prototype.trackers = o.emptyArray, t.prototype.duration = 0, t.prototype.renditions = o.emptyArray, t.prototype.mediaCreativeId = '', t.prototype.ignoreFilledRequests = !1, t.prototype.requestCap = 3, t.prototype.impressionCap = 0, t.prototype.successRate = 0, t.prototype.lineItemPriority = 0, t.prototype.headerBidderBids = '', t.prototype.headerBidderTimeout = 0, t.prototype.mediaCreativeClickUrl = '', t.prototype.resetRequestsCapTime = 60, t.prototype.resetImpressionsCapTime = 60, t.prototype.resetCapType = 0, t.prototype.creativeHlsFileName = '', t.prototype.timeBetweenRequests = 0, t.prototype.skipMode = 0, t.prototype.mediaIdTargeting = null, t.prototype.mediaKeywordsTargeting = null, t.prototype.mediaLanguageTargeting = null, t.prototype.adType = 0, t.prototype.overlayTime = 30, t.prototype.floorPrice = 0, t.prototype.adBreakSettings = null, t.prototype.floorPrices = o.emptyArray, t.prototype.bidRate = 0, t.prototype.pauseAdOutOfView = 0, t.prototype.moatTrackingEnabled = !1, t.prototype.cnxCreativeId = '', t.prototype.blockedDomainsRevisionNumber = 0, t.prototype.advertiserContextualTargeting = o.emptyArray, t.prototype.publisherContextualTargeting = o.emptyArray, t.prototype.amazonDealId = '', t.prototype.playerSizeTargetings = null, t.prototype.playerSize = '', t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoLineItem(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.publisherLineItemId = t.string();
                                break;
                            case 2:
                                s.advertiserLineItemId = t.string();
                                break;
                            case 3:
                                s.adTag = t.string();
                                break;
                            case 4:
                                s.creativeType = t.int32();
                                break;
                            case 6:
                                s.sound = t.bool();
                                break;
                            case 7:
                                s.viewability = t.bool();
                                break;
                            case 9:
                                s.impressionTimeSpent = t.int32();
                                break;
                            case 10:
                                s.vendorId = t.string();
                                break;
                            case 12:
                                s.trackers && s.trackers.length || (s.trackers = []), s.trackers.push(c.CreativeTrackerViewModel.decode(t, t.uint32()));
                                break;
                            case 13:
                                s.duration = t.int32();
                                break;
                            case 14:
                                s.renditions && s.renditions.length || (s.renditions = []), s.renditions.push(c.ProtoRendition.decode(t, t.uint32()));
                                break;
                            case 15:
                                s.mediaCreativeId = t.string();
                                break;
                            case 16:
                                s.ignoreFilledRequests = t.bool();
                                break;
                            case 17:
                                s.requestCap = t.int32();
                                break;
                            case 18:
                                s.impressionCap = t.int32();
                                break;
                            case 19:
                                s.successRate = t.double();
                                break;
                            case 20:
                                s.lineItemPriority = t.int32();
                                break;
                            case 21:
                                s.headerBidderBids = t.string();
                                break;
                            case 22:
                                s.headerBidderTimeout = t.int32();
                                break;
                            case 23:
                                s.mediaCreativeClickUrl = t.string();
                                break;
                            case 24:
                                s.resetRequestsCapTime = t.int32();
                                break;
                            case 25:
                                s.resetImpressionsCapTime = t.int32();
                                break;
                            case 26:
                                s.resetCapType = t.int32();
                                break;
                            case 27:
                                s.creativeHlsFileName = t.string();
                                break;
                            case 28:
                                s.timeBetweenRequests = t.int32();
                                break;
                            case 29:
                                s.skipMode = t.int32();
                                break;
                            case 30:
                                s.mediaIdTargeting = c.ProtoTargetingChoiceModel.decode(t, t.uint32());
                                break;
                            case 31:
                                s.mediaKeywordsTargeting = c.ProtoTargetingChoiceModel.decode(t, t.uint32());
                                break;
                            case 32:
                                s.mediaLanguageTargeting = c.ProtoTargetingChoiceModel.decode(t, t.uint32());
                                break;
                            case 33:
                                s.adType = t.int32();
                                break;
                            case 34:
                                s.overlayTime = t.int32();
                                break;
                            case 35:
                                s.floorPrice = t.double();
                                break;
                            case 36:
                                s.adBreakSettings = c.ProtoLineItemAdBreakSettings.decode(t, t.uint32());
                                break;
                            case 38:
                                if (s.floorPrices && s.floorPrices.length || (s.floorPrices = []), 2 == (7 & n))
                                    for (var r = t.uint32() + t.pos; t.pos < r;)
                                        s.floorPrices.push(t.double());
                                else
                                    s.floorPrices.push(t.double());
                                break;
                            case 39:
                                s.bidRate = t.double();
                                break;
                            case 40:
                                s.pauseAdOutOfView = t.int32();
                                break;
                            case 41:
                                s.moatTrackingEnabled = t.bool();
                                break;
                            case 42:
                                s.cnxCreativeId = t.string();
                                break;
                            case 44:
                                s.blockedDomainsRevisionNumber = t.int32();
                                break;
                            case 45:
                                s.advertiserContextualTargeting && s.advertiserContextualTargeting.length || (s.advertiserContextualTargeting = []), s.advertiserContextualTargeting.push(c.ProtoContextualTargetingCaseModel.decode(t, t.uint32()));
                                break;
                            case 46:
                                s.publisherContextualTargeting && s.publisherContextualTargeting.length || (s.publisherContextualTargeting = []), s.publisherContextualTargeting.push(c.ProtoContextualTargetingCaseModel.decode(t, t.uint32()));
                                break;
                            case 48:
                                s.amazonDealId = t.string();
                                break;
                            case 47:
                                s.playerSizeTargetings = c.ProtoPlayerSizeTargetings.decode(t, t.uint32());
                                break;
                            case 101:
                                s.playerSize = t.string();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.trackers = [], e.renditions = [], e.floorPrices = [], e.advertiserContextualTargeting = [], e.publisherContextualTargeting = []), i.defaults && (e.publisherLineItemId = '', e.advertiserLineItemId = '', e.adTag = '', e.creativeType = i.enums === String ? 'ThirdParty' : 0, e.sound = !1, e.viewability = !1, e.impressionTimeSpent = 0, e.vendorId = '', e.duration = 0, e.mediaCreativeId = '', e.ignoreFilledRequests = !1, e.requestCap = 3, e.impressionCap = 0, e.successRate = 0, e.lineItemPriority = i.enums === String ? 'House' : 0, e.headerBidderBids = '', e.headerBidderTimeout = 0, e.mediaCreativeClickUrl = '', e.resetRequestsCapTime = 60, e.resetImpressionsCapTime = 60, e.resetCapType = i.enums === String ? 'TimeCapping' : 0, e.creativeHlsFileName = '', e.timeBetweenRequests = 0, e.skipMode = i.enums === String ? 'IfLongerThan31Sec' : 0, e.mediaIdTargeting = null, e.mediaKeywordsTargeting = null, e.mediaLanguageTargeting = null, e.adType = i.enums === String ? 'Video' : 0, e.overlayTime = 30, e.floorPrice = 0, e.adBreakSettings = null, e.bidRate = 0, e.pauseAdOutOfView = i.enums === String ? 'Default' : 0, e.moatTrackingEnabled = !1, e.cnxCreativeId = '', e.blockedDomainsRevisionNumber = 0, e.playerSizeTargetings = null, e.amazonDealId = '', e.playerSize = ''), null != t.publisherLineItemId && t.hasOwnProperty('publisherLineItemId') && (e.publisherLineItemId = t.publisherLineItemId), null != t.advertiserLineItemId && t.hasOwnProperty('advertiserLineItemId') && (e.advertiserLineItemId = t.advertiserLineItemId), null != t.adTag && t.hasOwnProperty('adTag') && (e.adTag = t.adTag), null != t.creativeType && t.hasOwnProperty('creativeType') && (e.creativeType = i.enums === String ? c.ProtoCreativeTypeEnum[t.creativeType] : t.creativeType), null != t.sound && t.hasOwnProperty('sound') && (e.sound = t.sound), null != t.viewability && t.hasOwnProperty('viewability') && (e.viewability = t.viewability), null != t.impressionTimeSpent && t.hasOwnProperty('impressionTimeSpent') && (e.impressionTimeSpent = t.impressionTimeSpent), null != t.vendorId && t.hasOwnProperty('vendorId') && (e.vendorId = t.vendorId), t.trackers && t.trackers.length) {
                            e.trackers = [];
                            for (var s = 0; s < t.trackers.length; ++s)
                                e.trackers[s] = c.CreativeTrackerViewModel.toObject(t.trackers[s], i);
                        }
                        if (null != t.duration && t.hasOwnProperty('duration') && (e.duration = t.duration), t.renditions && t.renditions.length) {
                            e.renditions = [];
                            for (s = 0; s < t.renditions.length; ++s)
                                e.renditions[s] = c.ProtoRendition.toObject(t.renditions[s], i);
                        }
                        if (null != t.mediaCreativeId && t.hasOwnProperty('mediaCreativeId') && (e.mediaCreativeId = t.mediaCreativeId), null != t.ignoreFilledRequests && t.hasOwnProperty('ignoreFilledRequests') && (e.ignoreFilledRequests = t.ignoreFilledRequests), null != t.requestCap && t.hasOwnProperty('requestCap') && (e.requestCap = t.requestCap), null != t.impressionCap && t.hasOwnProperty('impressionCap') && (e.impressionCap = t.impressionCap), null != t.successRate && t.hasOwnProperty('successRate') && (e.successRate = i.json && !isFinite(t.successRate) ? String(t.successRate) : t.successRate), null != t.lineItemPriority && t.hasOwnProperty('lineItemPriority') && (e.lineItemPriority = i.enums === String ? c.ProtoLineItemPriority[t.lineItemPriority] : t.lineItemPriority), null != t.headerBidderBids && t.hasOwnProperty('headerBidderBids') && (e.headerBidderBids = t.headerBidderBids), null != t.headerBidderTimeout && t.hasOwnProperty('headerBidderTimeout') && (e.headerBidderTimeout = t.headerBidderTimeout), null != t.mediaCreativeClickUrl && t.hasOwnProperty('mediaCreativeClickUrl') && (e.mediaCreativeClickUrl = t.mediaCreativeClickUrl), null != t.resetRequestsCapTime && t.hasOwnProperty('resetRequestsCapTime') && (e.resetRequestsCapTime = t.resetRequestsCapTime), null != t.resetImpressionsCapTime && t.hasOwnProperty('resetImpressionsCapTime') && (e.resetImpressionsCapTime = t.resetImpressionsCapTime), null != t.resetCapType && t.hasOwnProperty('resetCapType') && (e.resetCapType = i.enums === String ? c.ProtoResetCapTypeEnum[t.resetCapType] : t.resetCapType), null != t.creativeHlsFileName && t.hasOwnProperty('creativeHlsFileName') && (e.creativeHlsFileName = t.creativeHlsFileName), null != t.timeBetweenRequests && t.hasOwnProperty('timeBetweenRequests') && (e.timeBetweenRequests = t.timeBetweenRequests), null != t.skipMode && t.hasOwnProperty('skipMode') && (e.skipMode = i.enums === String ? c.ProtoAdSkipMode[t.skipMode] : t.skipMode), null != t.mediaIdTargeting && t.hasOwnProperty('mediaIdTargeting') && (e.mediaIdTargeting = c.ProtoTargetingChoiceModel.toObject(t.mediaIdTargeting, i)), null != t.mediaKeywordsTargeting && t.hasOwnProperty('mediaKeywordsTargeting') && (e.mediaKeywordsTargeting = c.ProtoTargetingChoiceModel.toObject(t.mediaKeywordsTargeting, i)), null != t.mediaLanguageTargeting && t.hasOwnProperty('mediaLanguageTargeting') && (e.mediaLanguageTargeting = c.ProtoTargetingChoiceModel.toObject(t.mediaLanguageTargeting, i)), null != t.adType && t.hasOwnProperty('adType') && (e.adType = i.enums === String ? c.ProtoAdType[t.adType] : t.adType), null != t.overlayTime && t.hasOwnProperty('overlayTime') && (e.overlayTime = t.overlayTime), null != t.floorPrice && t.hasOwnProperty('floorPrice') && (e.floorPrice = i.json && !isFinite(t.floorPrice) ? String(t.floorPrice) : t.floorPrice), null != t.adBreakSettings && t.hasOwnProperty('adBreakSettings') && (e.adBreakSettings = c.ProtoLineItemAdBreakSettings.toObject(t.adBreakSettings, i)), t.floorPrices && t.floorPrices.length) {
                            e.floorPrices = [];
                            for (s = 0; s < t.floorPrices.length; ++s)
                                e.floorPrices[s] = i.json && !isFinite(t.floorPrices[s]) ? String(t.floorPrices[s]) : t.floorPrices[s];
                        }
                        if (null != t.bidRate && t.hasOwnProperty('bidRate') && (e.bidRate = i.json && !isFinite(t.bidRate) ? String(t.bidRate) : t.bidRate), null != t.pauseAdOutOfView && t.hasOwnProperty('pauseAdOutOfView') && (e.pauseAdOutOfView = i.enums === String ? c.ProtoLineItemPauseAdOutOfViewEnum[t.pauseAdOutOfView] : t.pauseAdOutOfView), null != t.moatTrackingEnabled && t.hasOwnProperty('moatTrackingEnabled') && (e.moatTrackingEnabled = t.moatTrackingEnabled), null != t.cnxCreativeId && t.hasOwnProperty('cnxCreativeId') && (e.cnxCreativeId = t.cnxCreativeId), null != t.blockedDomainsRevisionNumber && t.hasOwnProperty('blockedDomainsRevisionNumber') && (e.blockedDomainsRevisionNumber = t.blockedDomainsRevisionNumber), t.advertiserContextualTargeting && t.advertiserContextualTargeting.length) {
                            e.advertiserContextualTargeting = [];
                            for (s = 0; s < t.advertiserContextualTargeting.length; ++s)
                                e.advertiserContextualTargeting[s] = c.ProtoContextualTargetingCaseModel.toObject(t.advertiserContextualTargeting[s], i);
                        }
                        if (t.publisherContextualTargeting && t.publisherContextualTargeting.length) {
                            e.publisherContextualTargeting = [];
                            for (s = 0; s < t.publisherContextualTargeting.length; ++s)
                                e.publisherContextualTargeting[s] = c.ProtoContextualTargetingCaseModel.toObject(t.publisherContextualTargeting[s], i);
                        }
                        return null != t.playerSizeTargetings && t.hasOwnProperty('playerSizeTargetings') && (e.playerSizeTargetings = c.ProtoPlayerSizeTargetings.toObject(t.playerSizeTargetings, i)), null != t.amazonDealId && t.hasOwnProperty('amazonDealId') && (e.amazonDealId = t.amazonDealId), null != t.playerSize && t.hasOwnProperty('playerSize') && (e.playerSize = t.playerSize), e;
                    }, t;
                }(), c.ProtoTargetingChoiceModel = function () {
                    function t(t) {
                        if (this.items = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.choiceCriteria = 0, t.prototype.items = o.emptyArray, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoTargetingChoiceModel(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.choiceCriteria = t.int32();
                                break;
                            case 2:
                                s.items && s.items.length || (s.items = []), s.items.push(t.string());
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.items = []), i.defaults && (e.choiceCriteria = i.enums === String ? 'Only' : 0), null != t.choiceCriteria && t.hasOwnProperty('choiceCriteria') && (e.choiceCriteria = i.enums === String ? c.ProtoChoiceCriteriaEnum[t.choiceCriteria] : t.choiceCriteria), t.items && t.items.length) {
                            e.items = [];
                            for (var s = 0; s < t.items.length; ++s)
                                e.items[s] = t.items[s];
                        }
                        return e;
                    }, t;
                }(), c.ProtoContextualTargetingCaseModel = function () {
                    function t(t) {
                        if (this.filters = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.filters = o.emptyArray, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoContextualTargetingCaseModel(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.filters && s.filters.length || (s.filters = []), s.filters.push(c.ProtoContextualTargetingFilterModel.decode(t, t.uint32()));
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.filters = []), t.filters && t.filters.length) {
                            e.filters = [];
                            for (var s = 0; s < t.filters.length; ++s)
                                e.filters[s] = c.ProtoContextualTargetingFilterModel.toObject(t.filters[s], i);
                        }
                        return e;
                    }, t;
                }(), c.ProtoContextualTargetingFilterModel = function () {
                    function t(t) {
                        if (this.items = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.type = 0, t.prototype.items = o.emptyArray, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoContextualTargetingFilterModel(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.type = t.int32();
                                break;
                            case 2:
                                s.items && s.items.length || (s.items = []), s.items.push(t.string());
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.items = []), i.defaults && (e.type = i.enums === String ? 'IncludeAny' : 0), null != t.type && t.hasOwnProperty('type') && (e.type = i.enums === String ? c.ProtoLineItemContextualTargetingEnum[t.type] : t.type), t.items && t.items.length) {
                            e.items = [];
                            for (var s = 0; s < t.items.length; ++s)
                                e.items[s] = t.items[s];
                        }
                        return e;
                    }, t;
                }(), c.ProtoPlayerSizeTargetings = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.sizeChoiceCriteria = 0, t.prototype.minWidth = 0, t.prototype.maxWidth = 0, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoPlayerSizeTargetings(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.sizeChoiceCriteria = t.int32();
                                break;
                            case 2:
                                s.minWidth = t.int32();
                                break;
                            case 3:
                                s.maxWidth = t.int32();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.sizeChoiceCriteria = i.enums === String ? 'GreaterThan' : 0, e.minWidth = 0, e.maxWidth = 0), null != t.sizeChoiceCriteria && t.hasOwnProperty('sizeChoiceCriteria') && (e.sizeChoiceCriteria = i.enums === String ? c.ProtoSizeChoiceCriteriaEnum[t.sizeChoiceCriteria] : t.sizeChoiceCriteria), null != t.minWidth && t.hasOwnProperty('minWidth') && (e.minWidth = t.minWidth), null != t.maxWidth && t.hasOwnProperty('maxWidth') && (e.maxWidth = t.maxWidth), e;
                    }, t;
                }(), c.ProtoRendition = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.height = 0, t.prototype.codec = '', t.prototype.file = '', t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoRendition(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.height = t.int32();
                                break;
                            case 2:
                                s.codec = t.string();
                                break;
                            case 3:
                                s.file = t.string();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.height = 0, e.codec = '', e.file = ''), null != t.height && t.hasOwnProperty('height') && (e.height = t.height), null != t.codec && t.hasOwnProperty('codec') && (e.codec = t.codec), null != t.file && t.hasOwnProperty('file') && (e.file = t.file), e;
                    }, t;
                }(), c.ProtoLiveMediaMetadataResponse = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.startDate = '', t.prototype.outputUrl = '', t.prototype.thumbnailUrl = '', t.prototype.altText = '', t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoLiveMediaMetadataResponse(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.startDate = t.string();
                                break;
                            case 2:
                                s.outputUrl = t.string();
                                break;
                            case 3:
                                s.thumbnailUrl = t.string();
                                break;
                            case 4:
                                s.altText = t.string();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.startDate = '', e.outputUrl = '', e.thumbnailUrl = '', e.altText = ''), null != t.startDate && t.hasOwnProperty('startDate') && (e.startDate = t.startDate), null != t.outputUrl && t.hasOwnProperty('outputUrl') && (e.outputUrl = t.outputUrl), null != t.thumbnailUrl && t.hasOwnProperty('thumbnailUrl') && (e.thumbnailUrl = t.thumbnailUrl), null != t.altText && t.hasOwnProperty('altText') && (e.altText = t.altText), e;
                    }, t;
                }(), c.ProtoLoggingRequest = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.message = '', t.prototype.version = 0, t.prototype.level = 0, t.prototype.callStack = '', t.prototype.pageUrl = '', t.prototype.exception = '', t.prototype.sessionId = '', t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.message && Object.hasOwnProperty.call(t, 'message') && i.uint32(10).string(t.message), null != t.version && Object.hasOwnProperty.call(t, 'version') && i.uint32(16).int32(t.version), null != t.level && Object.hasOwnProperty.call(t, 'level') && i.uint32(24).int32(t.level), null != t.callStack && Object.hasOwnProperty.call(t, 'callStack') && i.uint32(34).string(t.callStack), null != t.pageUrl && Object.hasOwnProperty.call(t, 'pageUrl') && i.uint32(42).string(t.pageUrl), null != t.exception && Object.hasOwnProperty.call(t, 'exception') && i.uint32(50).string(t.exception), null != t.sessionId && Object.hasOwnProperty.call(t, 'sessionId') && i.uint32(58).string(t.sessionId), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoLoggingRequest)
                            return t;
                        var i = new c.ProtoLoggingRequest();
                        switch (null != t.message && (i.message = String(t.message)), null != t.version && (i.version = 0 | t.version), t.level) {
                        case 'FATAL':
                        case 0:
                            i.level = 0;
                            break;
                        case 'WARNING':
                        case 1:
                            i.level = 1;
                            break;
                        case 'INFO':
                        case 2:
                            i.level = 2;
                        }
                        return null != t.callStack && (i.callStack = String(t.callStack)), null != t.pageUrl && (i.pageUrl = String(t.pageUrl)), null != t.exception && (i.exception = String(t.exception)), null != t.sessionId && (i.sessionId = String(t.sessionId)), i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoSpriteSheet = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.file = '', t.prototype.height = 0, t.prototype.count = 0, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoSpriteSheet(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.file = t.string();
                                break;
                            case 2:
                                s.height = t.int32();
                                break;
                            case 3:
                                s.count = t.int32();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.file = '', e.height = 0, e.count = 0), null != t.file && t.hasOwnProperty('file') && (e.file = t.file), null != t.height && t.hasOwnProperty('height') && (e.height = t.height), null != t.count && t.hasOwnProperty('count') && (e.count = t.count), e;
                    }, t;
                }(), c.ProtoTrack = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.file = '', t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoTrack(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.file = t.string();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.file = ''), null != t.file && t.hasOwnProperty('file') && (e.file = t.file), e;
                    }, t;
                }(), c.ProtoCustomField = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.name = '', t.prototype.value = '', t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoCustomField(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.name = t.string();
                                break;
                            case 2:
                                s.value = t.string();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.name = '', e.value = ''), null != t.name && t.hasOwnProperty('name') && (e.name = t.name), null != t.value && t.hasOwnProperty('value') && (e.value = t.value), e;
                    }, t;
                }(), c.ProtoMediaMetadataResponse = function () {
                    function t(t) {
                        if (this.keywordList = [], this.trackList = [], this.renditionList = [], this.customFields = [], this.videoIndexes = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.title = '', t.prototype.description = '', t.prototype.duration = 0, t.prototype.clickUrl = '', t.prototype.keywordList = o.emptyArray, t.prototype.trackList = o.emptyArray, t.prototype.spriteSheet = null, t.prototype.thumbnail = '', t.prototype.renditionList = o.emptyArray, t.prototype.customFields = o.emptyArray, t.prototype.hlsFilePath = '', t.prototype.languageId = '', t.prototype.sourceItemId = '', t.prototype.altText = '', t.prototype.videoIndexes = o.emptyArray, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoMediaMetadataResponse(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.title = t.string();
                                break;
                            case 2:
                                s.description = t.string();
                                break;
                            case 3:
                                s.duration = t.int32();
                                break;
                            case 4:
                                s.clickUrl = t.string();
                                break;
                            case 5:
                                s.keywordList && s.keywordList.length || (s.keywordList = []), s.keywordList.push(t.string());
                                break;
                            case 6:
                                s.trackList && s.trackList.length || (s.trackList = []), s.trackList.push(c.ProtoTrack.decode(t, t.uint32()));
                                break;
                            case 7:
                                s.spriteSheet = c.ProtoSpriteSheet.decode(t, t.uint32());
                                break;
                            case 8:
                                s.thumbnail = t.string();
                                break;
                            case 9:
                                s.renditionList && s.renditionList.length || (s.renditionList = []), s.renditionList.push(c.ProtoRendition.decode(t, t.uint32()));
                                break;
                            case 10:
                                s.customFields && s.customFields.length || (s.customFields = []), s.customFields.push(c.ProtoCustomField.decode(t, t.uint32()));
                                break;
                            case 11:
                                s.hlsFilePath = t.string();
                                break;
                            case 12:
                                s.languageId = t.string();
                                break;
                            case 13:
                                s.sourceItemId = t.string();
                                break;
                            case 14:
                                s.altText = t.string();
                                break;
                            case 15:
                                s.videoIndexes && s.videoIndexes.length || (s.videoIndexes = []), s.videoIndexes.push(t.string());
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.keywordList = [], e.trackList = [], e.renditionList = [], e.customFields = [], e.videoIndexes = []), i.defaults && (e.title = '', e.description = '', e.duration = 0, e.clickUrl = '', e.spriteSheet = null, e.thumbnail = '', e.hlsFilePath = '', e.languageId = '', e.sourceItemId = '', e.altText = ''), null != t.title && t.hasOwnProperty('title') && (e.title = t.title), null != t.description && t.hasOwnProperty('description') && (e.description = t.description), null != t.duration && t.hasOwnProperty('duration') && (e.duration = t.duration), null != t.clickUrl && t.hasOwnProperty('clickUrl') && (e.clickUrl = t.clickUrl), t.keywordList && t.keywordList.length) {
                            e.keywordList = [];
                            for (var s = 0; s < t.keywordList.length; ++s)
                                e.keywordList[s] = t.keywordList[s];
                        }
                        if (t.trackList && t.trackList.length) {
                            e.trackList = [];
                            for (s = 0; s < t.trackList.length; ++s)
                                e.trackList[s] = c.ProtoTrack.toObject(t.trackList[s], i);
                        }
                        if (null != t.spriteSheet && t.hasOwnProperty('spriteSheet') && (e.spriteSheet = c.ProtoSpriteSheet.toObject(t.spriteSheet, i)), null != t.thumbnail && t.hasOwnProperty('thumbnail') && (e.thumbnail = t.thumbnail), t.renditionList && t.renditionList.length) {
                            e.renditionList = [];
                            for (s = 0; s < t.renditionList.length; ++s)
                                e.renditionList[s] = c.ProtoRendition.toObject(t.renditionList[s], i);
                        }
                        if (t.customFields && t.customFields.length) {
                            e.customFields = [];
                            for (s = 0; s < t.customFields.length; ++s)
                                e.customFields[s] = c.ProtoCustomField.toObject(t.customFields[s], i);
                        }
                        if (null != t.hlsFilePath && t.hasOwnProperty('hlsFilePath') && (e.hlsFilePath = t.hlsFilePath), null != t.languageId && t.hasOwnProperty('languageId') && (e.languageId = t.languageId), null != t.sourceItemId && t.hasOwnProperty('sourceItemId') && (e.sourceItemId = t.sourceItemId), null != t.altText && t.hasOwnProperty('altText') && (e.altText = t.altText), t.videoIndexes && t.videoIndexes.length) {
                            e.videoIndexes = [];
                            for (s = 0; s < t.videoIndexes.length; ++s)
                                e.videoIndexes[s] = t.videoIndexes[s];
                        }
                        return e;
                    }, t;
                }(), c.ProtoRtbRequest = function () {
                    function t(t) {
                        if (this.lineItems = {}, this.customMacros = {}, t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.metadata = null, t.prototype.coppa = !1, t.prototype.refererUrl = '', t.prototype.testMode = !1, t.prototype.videoWidth = 0, t.prototype.videoHeight = 0, t.prototype.gdprCompliant = !1, t.prototype.soundOn = !1, t.prototype.gdprConsentData = '', t.prototype.explorationMode = !1, t.prototype.viewability = !1, t.prototype.outstream = !1, t.prototype.domainURL = '', t.prototype.isClickToPlay = !1, t.prototype.appVersion = '', t.prototype.deviceID = '', t.prototype.lineItems = o.emptyObject, t.prototype.isCcpaBlockingUserInfo = !1, t.prototype.usPrivacyString = '', t.prototype.adSkippability = 0, t.prototype.skipAdAfter = 5, t.prototype.gdprConsentMode = 0, t.prototype.maxAdDuration = 180, t.prototype.customMacros = o.emptyObject, t.prototype.maxBidPrice = 0, t.prototype.adsMustBeSkippableIfLongerThan = 31, t.encode = function (t, i) {
                        if (i || (i = a.create()), null != t.metadata && Object.hasOwnProperty.call(t, 'metadata') && c.MetadataModel.encode(t.metadata, i.uint32(10).fork()).ldelim(), null != t.coppa && Object.hasOwnProperty.call(t, 'coppa') && i.uint32(32).bool(t.coppa), null != t.refererUrl && Object.hasOwnProperty.call(t, 'refererUrl') && i.uint32(42).string(t.refererUrl), null != t.testMode && Object.hasOwnProperty.call(t, 'testMode') && i.uint32(48).bool(t.testMode), null != t.videoWidth && Object.hasOwnProperty.call(t, 'videoWidth') && i.uint32(56).int32(t.videoWidth), null != t.videoHeight && Object.hasOwnProperty.call(t, 'videoHeight') && i.uint32(64).int32(t.videoHeight), null != t.gdprCompliant && Object.hasOwnProperty.call(t, 'gdprCompliant') && i.uint32(72).bool(t.gdprCompliant), null != t.soundOn && Object.hasOwnProperty.call(t, 'soundOn') && i.uint32(80).bool(t.soundOn), null != t.gdprConsentData && Object.hasOwnProperty.call(t, 'gdprConsentData') && i.uint32(90).string(t.gdprConsentData), null != t.explorationMode && Object.hasOwnProperty.call(t, 'explorationMode') && i.uint32(96).bool(t.explorationMode), null != t.viewability && Object.hasOwnProperty.call(t, 'viewability') && i.uint32(104).bool(t.viewability), null != t.outstream && Object.hasOwnProperty.call(t, 'outstream') && i.uint32(112).bool(t.outstream), null != t.domainURL && Object.hasOwnProperty.call(t, 'domainURL') && i.uint32(130).string(t.domainURL), null != t.isClickToPlay && Object.hasOwnProperty.call(t, 'isClickToPlay') && i.uint32(144).bool(t.isClickToPlay), null != t.appVersion && Object.hasOwnProperty.call(t, 'appVersion') && i.uint32(170).string(t.appVersion), null != t.deviceID && Object.hasOwnProperty.call(t, 'deviceID') && i.uint32(194).string(t.deviceID), null != t.lineItems && Object.hasOwnProperty.call(t, 'lineItems'))
                            for (var e = Object.keys(t.lineItems), s = 0; s < e.length; ++s)
                                i.uint32(202).fork().uint32(10).string(e[s]), c.ProtoRtbRequestLineItemEntry.encode(t.lineItems[e[s]], i.uint32(18).fork()).ldelim().ldelim();
                        if (null != t.isCcpaBlockingUserInfo && Object.hasOwnProperty.call(t, 'isCcpaBlockingUserInfo') && i.uint32(208).bool(t.isCcpaBlockingUserInfo), null != t.usPrivacyString && Object.hasOwnProperty.call(t, 'usPrivacyString') && i.uint32(218).string(t.usPrivacyString), null != t.adSkippability && Object.hasOwnProperty.call(t, 'adSkippability') && i.uint32(256).int32(t.adSkippability), null != t.skipAdAfter && Object.hasOwnProperty.call(t, 'skipAdAfter') && i.uint32(264).int32(t.skipAdAfter), null != t.gdprConsentMode && Object.hasOwnProperty.call(t, 'gdprConsentMode') && i.uint32(288).int32(t.gdprConsentMode), null != t.maxAdDuration && Object.hasOwnProperty.call(t, 'maxAdDuration') && i.uint32(296).int32(t.maxAdDuration), null != t.customMacros && Object.hasOwnProperty.call(t, 'customMacros'))
                            for (e = Object.keys(t.customMacros), s = 0; s < e.length; ++s)
                                i.uint32(306).fork().uint32(10).string(e[s]).uint32(18).string(t.customMacros[e[s]]).ldelim();
                        return null != t.maxBidPrice && Object.hasOwnProperty.call(t, 'maxBidPrice') && i.uint32(313).double(t.maxBidPrice), null != t.adsMustBeSkippableIfLongerThan && Object.hasOwnProperty.call(t, 'adsMustBeSkippableIfLongerThan') && i.uint32(320).int32(t.adsMustBeSkippableIfLongerThan), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoRtbRequest)
                            return t;
                        var i = new c.ProtoRtbRequest();
                        if (null != t.metadata) {
                            if ('object' != typeof t.metadata)
                                throw TypeError('.ProtoRtbRequest.metadata: object expected');
                            i.metadata = c.MetadataModel.fromObject(t.metadata);
                        }
                        if (null != t.coppa && (i.coppa = Boolean(t.coppa)), null != t.refererUrl && (i.refererUrl = String(t.refererUrl)), null != t.testMode && (i.testMode = Boolean(t.testMode)), null != t.videoWidth && (i.videoWidth = 0 | t.videoWidth), null != t.videoHeight && (i.videoHeight = 0 | t.videoHeight), null != t.gdprCompliant && (i.gdprCompliant = Boolean(t.gdprCompliant)), null != t.soundOn && (i.soundOn = Boolean(t.soundOn)), null != t.gdprConsentData && (i.gdprConsentData = String(t.gdprConsentData)), null != t.explorationMode && (i.explorationMode = Boolean(t.explorationMode)), null != t.viewability && (i.viewability = Boolean(t.viewability)), null != t.outstream && (i.outstream = Boolean(t.outstream)), null != t.domainURL && (i.domainURL = String(t.domainURL)), null != t.isClickToPlay && (i.isClickToPlay = Boolean(t.isClickToPlay)), null != t.appVersion && (i.appVersion = String(t.appVersion)), null != t.deviceID && (i.deviceID = String(t.deviceID)), t.lineItems) {
                            if ('object' != typeof t.lineItems)
                                throw TypeError('.ProtoRtbRequest.lineItems: object expected');
                            i.lineItems = {};
                            for (var e = Object.keys(t.lineItems), s = 0; s < e.length; ++s) {
                                if ('object' != typeof t.lineItems[e[s]])
                                    throw TypeError('.ProtoRtbRequest.lineItems: object expected');
                                i.lineItems[e[s]] = c.ProtoRtbRequestLineItemEntry.fromObject(t.lineItems[e[s]]);
                            }
                        }
                        switch (null != t.isCcpaBlockingUserInfo && (i.isCcpaBlockingUserInfo = Boolean(t.isCcpaBlockingUserInfo)), null != t.usPrivacyString && (i.usPrivacyString = String(t.usPrivacyString)), t.adSkippability) {
                        case 'IfLongerThan':
                        case 0:
                            i.adSkippability = 0;
                            break;
                        case 'Always':
                        case 1:
                            i.adSkippability = 1;
                            break;
                        case 'NoRestrictions':
                        case 2:
                            i.adSkippability = 2;
                        }
                        switch (null != t.skipAdAfter && (i.skipAdAfter = 0 | t.skipAdAfter), t.gdprConsentMode) {
                        case 'Unknown':
                        case 0:
                            i.gdprConsentMode = 0;
                            break;
                        case 'NoCmp':
                        case 1:
                            i.gdprConsentMode = 1;
                            break;
                        case 'NoConsent':
                        case 2:
                            i.gdprConsentMode = 2;
                            break;
                        case 'NoConnatixConsent':
                        case 3:
                            i.gdprConsentMode = 3;
                            break;
                        case 'NotAllDemandConsent':
                        case 4:
                            i.gdprConsentMode = 4;
                            break;
                        case 'AllGood':
                        case 5:
                            i.gdprConsentMode = 5;
                        }
                        if (null != t.maxAdDuration && (i.maxAdDuration = 0 | t.maxAdDuration), t.customMacros) {
                            if ('object' != typeof t.customMacros)
                                throw TypeError('.ProtoRtbRequest.customMacros: object expected');
                            i.customMacros = {};
                            for (e = Object.keys(t.customMacros), s = 0; s < e.length; ++s)
                                i.customMacros[e[s]] = String(t.customMacros[e[s]]);
                        }
                        return null != t.maxBidPrice && (i.maxBidPrice = Number(t.maxBidPrice)), null != t.adsMustBeSkippableIfLongerThan && (i.adsMustBeSkippableIfLongerThan = 0 | t.adsMustBeSkippableIfLongerThan), i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoRtbRequestLineItemEntry = function () {
                    function t(t) {
                        if (this.ignoredFloorPriceFactorIndexes = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    var i;
                    return t.prototype.cachedFloorPrice = null, t.prototype.availableRequests = 0, t.prototype.ignoredFloorPriceFactorIndexes = o.emptyArray, t.prototype.gdprConsent = !1, t.prototype.publisherLineItemId = '', t.prototype.slotWidth = 0, t.prototype.slotHeight = 0, Object.defineProperty(t.prototype, 'T', {
                        get: o.oneOfGetter(i = ['cachedFloorPrice']),
                        set: o.oneOfSetter(i)
                    }), t.encode = function (t, i) {
                        if (i || (i = a.create()), null != t.availableRequests && Object.hasOwnProperty.call(t, 'availableRequests') && i.uint32(8).int32(t.availableRequests), null != t.cachedFloorPrice && Object.hasOwnProperty.call(t, 'cachedFloorPrice') && i.uint32(17).double(t.cachedFloorPrice), null != t.ignoredFloorPriceFactorIndexes && t.ignoredFloorPriceFactorIndexes.length)
                            for (var e = 0; e < t.ignoredFloorPriceFactorIndexes.length; ++e)
                                i.uint32(24).int32(t.ignoredFloorPriceFactorIndexes[e]);
                        return null != t.gdprConsent && Object.hasOwnProperty.call(t, 'gdprConsent') && i.uint32(32).bool(t.gdprConsent), null != t.publisherLineItemId && Object.hasOwnProperty.call(t, 'publisherLineItemId') && i.uint32(42).string(t.publisherLineItemId), null != t.slotWidth && Object.hasOwnProperty.call(t, 'slotWidth') && i.uint32(48).int32(t.slotWidth), null != t.slotHeight && Object.hasOwnProperty.call(t, 'slotHeight') && i.uint32(56).int32(t.slotHeight), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoRtbRequestLineItemEntry)
                            return t;
                        var i = new c.ProtoRtbRequestLineItemEntry();
                        if (null != t.cachedFloorPrice && (i.cachedFloorPrice = Number(t.cachedFloorPrice)), null != t.availableRequests && (i.availableRequests = 0 | t.availableRequests), t.ignoredFloorPriceFactorIndexes) {
                            if (!Array.isArray(t.ignoredFloorPriceFactorIndexes))
                                throw TypeError('.ProtoRtbRequestLineItemEntry.ignoredFloorPriceFactorIndexes: array expected');
                            i.ignoredFloorPriceFactorIndexes = [];
                            for (var e = 0; e < t.ignoredFloorPriceFactorIndexes.length; ++e)
                                i.ignoredFloorPriceFactorIndexes[e] = 0 | t.ignoredFloorPriceFactorIndexes[e];
                        }
                        return null != t.gdprConsent && (i.gdprConsent = Boolean(t.gdprConsent)), null != t.publisherLineItemId && (i.publisherLineItemId = String(t.publisherLineItemId)), null != t.slotWidth && (i.slotWidth = 0 | t.slotWidth), null != t.slotHeight && (i.slotHeight = 0 | t.slotHeight), i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoRtbResponse = function () {
                    function t(t) {
                        if (this.lineItemResponses = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.lineItemResponses = o.emptyArray, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoRtbResponse(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 3:
                                s.lineItemResponses && s.lineItemResponses.length || (s.lineItemResponses = []), s.lineItemResponses.push(c.ProtoRtbLineItem.decode(t, t.uint32()));
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.lineItemResponses = []), t.lineItemResponses && t.lineItemResponses.length) {
                            e.lineItemResponses = [];
                            for (var s = 0; s < t.lineItemResponses.length; ++s)
                                e.lineItemResponses[s] = c.ProtoRtbLineItem.toObject(t.lineItemResponses[s], i);
                        }
                        return e;
                    }, t;
                }(), c.ProtoRtbBid = function () {
                    function t(t) {
                        if (this.billingNoticeUrlList = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.winNoticeUrl = '', t.prototype.adQualityCheckUrl = '', t.prototype.vastTag = '', t.prototype.encryptedPrice = '', t.prototype.creativeId = '', t.prototype.seatId = '', t.prototype.adomain = '', t.prototype.syncedUser = !1, t.prototype.requestedFloorPrice = 0, t.prototype.floorPriceFactorIndex = 0, t.prototype.campaignId = '', t.prototype.width = 0, t.prototype.height = 0, t.prototype.billingNoticeUrlList = o.emptyArray, t.prototype.mime = 'text/html', t.prototype.gtkpbp = 0, t.prototype.successRate = 0, t.prototype.impressionTimeSpent = 0, t.prototype.bidRate = 0, t.prototype.dspId = '', t.prototype.cnxBidId = '', t.prototype.logAuctionInformation = !1, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoRtbBid(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 2:
                                s.winNoticeUrl = t.string();
                                break;
                            case 3:
                                s.adQualityCheckUrl = t.string();
                                break;
                            case 4:
                                s.vastTag = t.string();
                                break;
                            case 6:
                                s.encryptedPrice = t.string();
                                break;
                            case 7:
                                s.creativeId = t.string();
                                break;
                            case 8:
                                s.seatId = t.string();
                                break;
                            case 9:
                                s.adomain = t.string();
                                break;
                            case 10:
                                s.syncedUser = t.bool();
                                break;
                            case 11:
                                s.requestedFloorPrice = t.double();
                                break;
                            case 12:
                                s.floorPriceFactorIndex = t.int32();
                                break;
                            case 13:
                                s.campaignId = t.string();
                                break;
                            case 14:
                                s.width = t.int32();
                                break;
                            case 15:
                                s.height = t.int32();
                                break;
                            case 16:
                                s.billingNoticeUrlList && s.billingNoticeUrlList.length || (s.billingNoticeUrlList = []), s.billingNoticeUrlList.push(t.string());
                                break;
                            case 17:
                                s.mime = t.string();
                                break;
                            case 18:
                                s.gtkpbp = t.double();
                                break;
                            case 19:
                                s.successRate = t.double();
                                break;
                            case 20:
                                s.impressionTimeSpent = t.int32();
                                break;
                            case 21:
                                s.bidRate = t.double();
                                break;
                            case 22:
                                s.dspId = t.string();
                                break;
                            case 23:
                                s.cnxBidId = t.string();
                                break;
                            case 24:
                                s.logAuctionInformation = t.bool();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.billingNoticeUrlList = []), i.defaults && (e.winNoticeUrl = '', e.adQualityCheckUrl = '', e.vastTag = '', e.encryptedPrice = '', e.creativeId = '', e.seatId = '', e.adomain = '', e.syncedUser = !1, e.requestedFloorPrice = 0, e.floorPriceFactorIndex = 0, e.campaignId = '', e.width = 0, e.height = 0, e.mime = 'text/html', e.gtkpbp = 0, e.successRate = 0, e.impressionTimeSpent = 0, e.bidRate = 0, e.dspId = '', e.cnxBidId = '', e.logAuctionInformation = !1), null != t.winNoticeUrl && t.hasOwnProperty('winNoticeUrl') && (e.winNoticeUrl = t.winNoticeUrl), null != t.adQualityCheckUrl && t.hasOwnProperty('adQualityCheckUrl') && (e.adQualityCheckUrl = t.adQualityCheckUrl), null != t.vastTag && t.hasOwnProperty('vastTag') && (e.vastTag = t.vastTag), null != t.encryptedPrice && t.hasOwnProperty('encryptedPrice') && (e.encryptedPrice = t.encryptedPrice), null != t.creativeId && t.hasOwnProperty('creativeId') && (e.creativeId = t.creativeId), null != t.seatId && t.hasOwnProperty('seatId') && (e.seatId = t.seatId), null != t.adomain && t.hasOwnProperty('adomain') && (e.adomain = t.adomain), null != t.syncedUser && t.hasOwnProperty('syncedUser') && (e.syncedUser = t.syncedUser), null != t.requestedFloorPrice && t.hasOwnProperty('requestedFloorPrice') && (e.requestedFloorPrice = i.json && !isFinite(t.requestedFloorPrice) ? String(t.requestedFloorPrice) : t.requestedFloorPrice), null != t.floorPriceFactorIndex && t.hasOwnProperty('floorPriceFactorIndex') && (e.floorPriceFactorIndex = t.floorPriceFactorIndex), null != t.campaignId && t.hasOwnProperty('campaignId') && (e.campaignId = t.campaignId), null != t.width && t.hasOwnProperty('width') && (e.width = t.width), null != t.height && t.hasOwnProperty('height') && (e.height = t.height), t.billingNoticeUrlList && t.billingNoticeUrlList.length) {
                            e.billingNoticeUrlList = [];
                            for (var s = 0; s < t.billingNoticeUrlList.length; ++s)
                                e.billingNoticeUrlList[s] = t.billingNoticeUrlList[s];
                        }
                        return null != t.mime && t.hasOwnProperty('mime') && (e.mime = t.mime), null != t.gtkpbp && t.hasOwnProperty('gtkpbp') && (e.gtkpbp = i.json && !isFinite(t.gtkpbp) ? String(t.gtkpbp) : t.gtkpbp), null != t.successRate && t.hasOwnProperty('successRate') && (e.successRate = i.json && !isFinite(t.successRate) ? String(t.successRate) : t.successRate), null != t.impressionTimeSpent && t.hasOwnProperty('impressionTimeSpent') && (e.impressionTimeSpent = t.impressionTimeSpent), null != t.bidRate && t.hasOwnProperty('bidRate') && (e.bidRate = i.json && !isFinite(t.bidRate) ? String(t.bidRate) : t.bidRate), null != t.dspId && t.hasOwnProperty('dspId') && (e.dspId = t.dspId), null != t.cnxBidId && t.hasOwnProperty('cnxBidId') && (e.cnxBidId = t.cnxBidId), null != t.logAuctionInformation && t.hasOwnProperty('logAuctionInformation') && (e.logAuctionInformation = t.logAuctionInformation), e;
                    }, t;
                }(), c.ProtoRtbNoBid = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.connatixReason = 0, t.prototype.partnerReason = 0, t.prototype.syncedUser = !1, t.prototype.requestedFloorPrice = 0, t.prototype.floorPriceFactorIndex = 0, t.prototype.partnerCustomHeaders = '', t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoRtbNoBid(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.connatixReason = t.int32();
                                break;
                            case 2:
                                s.partnerReason = t.int32();
                                break;
                            case 3:
                                s.syncedUser = t.bool();
                                break;
                            case 4:
                                s.requestedFloorPrice = t.double();
                                break;
                            case 5:
                                s.floorPriceFactorIndex = t.int32();
                                break;
                            case 6:
                                s.partnerCustomHeaders = t.string();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.connatixReason = i.enums === String ? 'RequestException' : 0, e.partnerReason = i.enums === String ? 'Unknown' : 0, e.syncedUser = !1, e.requestedFloorPrice = 0, e.floorPriceFactorIndex = 0, e.partnerCustomHeaders = ''), null != t.connatixReason && t.hasOwnProperty('connatixReason') && (e.connatixReason = i.enums === String ? c.ConnatixNoBidReasonEnum[t.connatixReason] : t.connatixReason), null != t.partnerReason && t.hasOwnProperty('partnerReason') && (e.partnerReason = i.enums === String ? c.PartnerNoBidReasonEnum[t.partnerReason] : t.partnerReason), null != t.syncedUser && t.hasOwnProperty('syncedUser') && (e.syncedUser = t.syncedUser), null != t.requestedFloorPrice && t.hasOwnProperty('requestedFloorPrice') && (e.requestedFloorPrice = i.json && !isFinite(t.requestedFloorPrice) ? String(t.requestedFloorPrice) : t.requestedFloorPrice), null != t.floorPriceFactorIndex && t.hasOwnProperty('floorPriceFactorIndex') && (e.floorPriceFactorIndex = t.floorPriceFactorIndex), null != t.partnerCustomHeaders && t.hasOwnProperty('partnerCustomHeaders') && (e.partnerCustomHeaders = t.partnerCustomHeaders), e;
                    }, t;
                }(), c.ProtoRtbLineItem = function () {
                    function t(t) {
                        if (this.bids = [], this.noBids = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.id = '', t.prototype.cachedFloorPrice = 0, t.prototype.bids = o.emptyArray, t.prototype.noBids = o.emptyArray, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoRtbLineItem(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.id = t.string();
                                break;
                            case 2:
                                s.cachedFloorPrice = t.double();
                                break;
                            case 3:
                                s.bids && s.bids.length || (s.bids = []), s.bids.push(c.ProtoRtbBid.decode(t, t.uint32()));
                                break;
                            case 4:
                                s.noBids && s.noBids.length || (s.noBids = []), s.noBids.push(c.ProtoRtbNoBid.decode(t, t.uint32()));
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.bids = [], e.noBids = []), i.defaults && (e.id = '', e.cachedFloorPrice = 0), null != t.id && t.hasOwnProperty('id') && (e.id = t.id), null != t.cachedFloorPrice && t.hasOwnProperty('cachedFloorPrice') && (e.cachedFloorPrice = i.json && !isFinite(t.cachedFloorPrice) ? String(t.cachedFloorPrice) : t.cachedFloorPrice), t.bids && t.bids.length) {
                            e.bids = [];
                            for (var s = 0; s < t.bids.length; ++s)
                                e.bids[s] = c.ProtoRtbBid.toObject(t.bids[s], i);
                        }
                        if (t.noBids && t.noBids.length) {
                            e.noBids = [];
                            for (s = 0; s < t.noBids.length; ++s)
                                e.noBids[s] = c.ProtoRtbNoBid.toObject(t.noBids[s], i);
                        }
                        return e;
                    }, t;
                }(), c.ProtoSupplyChain = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.businessDomain = '', t.prototype.supplyChainId = '', t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoSupplyChain(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.businessDomain = t.string();
                                break;
                            case 3:
                                s.supplyChainId = t.string();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.businessDomain = '', e.supplyChainId = ''), null != t.businessDomain && t.hasOwnProperty('businessDomain') && (e.businessDomain = t.businessDomain), null != t.supplyChainId && t.hasOwnProperty('supplyChainId') && (e.supplyChainId = t.supplyChainId), e;
                    }, t;
                }(), c.ProtoAdClickTrackingRequest = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.trackingRequestMeta = null, t.prototype.mediaGuid = '', t.prototype.publisherLineItemId = '', t.prototype.advertiserLineItemId = '', t.prototype.type = 1, t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.trackingRequestMeta && Object.hasOwnProperty.call(t, 'trackingRequestMeta') && c.MetadataModel.encode(t.trackingRequestMeta, i.uint32(10).fork()).ldelim(), null != t.mediaGuid && Object.hasOwnProperty.call(t, 'mediaGuid') && i.uint32(18).string(t.mediaGuid), null != t.publisherLineItemId && Object.hasOwnProperty.call(t, 'publisherLineItemId') && i.uint32(26).string(t.publisherLineItemId), null != t.advertiserLineItemId && Object.hasOwnProperty.call(t, 'advertiserLineItemId') && i.uint32(34).string(t.advertiserLineItemId), null != t.type && Object.hasOwnProperty.call(t, 'type') && i.uint32(40).int32(t.type), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoAdClickTrackingRequest)
                            return t;
                        var i = new c.ProtoAdClickTrackingRequest();
                        if (null != t.trackingRequestMeta) {
                            if ('object' != typeof t.trackingRequestMeta)
                                throw TypeError('.ProtoAdClickTrackingRequest.trackingRequestMeta: object expected');
                            i.trackingRequestMeta = c.MetadataModel.fromObject(t.trackingRequestMeta);
                        }
                        switch (null != t.mediaGuid && (i.mediaGuid = String(t.mediaGuid)), null != t.publisherLineItemId && (i.publisherLineItemId = String(t.publisherLineItemId)), null != t.advertiserLineItemId && (i.advertiserLineItemId = String(t.advertiserLineItemId)), t.type) {
                        case 'AdClick':
                        case 1:
                            i.type = 1;
                            break;
                        case 'AdClickThrough':
                        case 2:
                            i.type = 2;
                            break;
                        case 'AdSkipClick':
                        case 3:
                            i.type = 3;
                            break;
                        case 'VolumeClick':
                        case 4:
                            i.type = 4;
                            break;
                        case 'PauseClick':
                        case 5:
                            i.type = 5;
                            break;
                        case 'PlayClick':
                        case 6:
                            i.type = 6;
                            break;
                        case 'FullScreenClick':
                        case 7:
                            i.type = 7;
                            break;
                        case 'MuteClick':
                        case 8:
                            i.type = 8;
                            break;
                        case 'UnmuteClick':
                        case 9:
                            i.type = 9;
                        }
                        return i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoAdOpportunityRequest = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.sessionId = '', t.prototype.trackingRequestMeta = null, t.prototype.adBreak = 0, t.prototype.playerWidth = 0, t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.sessionId && Object.hasOwnProperty.call(t, 'sessionId') && i.uint32(10).string(t.sessionId), null != t.trackingRequestMeta && Object.hasOwnProperty.call(t, 'trackingRequestMeta') && c.MetadataModel.encode(t.trackingRequestMeta, i.uint32(18).fork()).ldelim(), null != t.adBreak && Object.hasOwnProperty.call(t, 'adBreak') && i.uint32(24).int32(t.adBreak), null != t.playerWidth && Object.hasOwnProperty.call(t, 'playerWidth') && i.uint32(32).int32(t.playerWidth), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoAdOpportunityRequest)
                            return t;
                        var i = new c.ProtoAdOpportunityRequest();
                        if (null != t.sessionId && (i.sessionId = String(t.sessionId)), null != t.trackingRequestMeta) {
                            if ('object' != typeof t.trackingRequestMeta)
                                throw TypeError('.ProtoAdOpportunityRequest.trackingRequestMeta: object expected');
                            i.trackingRequestMeta = c.MetadataModel.fromObject(t.trackingRequestMeta);
                        }
                        switch (t.adBreak) {
                        case 'None':
                        case 0:
                            i.adBreak = 0;
                            break;
                        case 'PreRoll':
                        case 1:
                            i.adBreak = 1;
                            break;
                        case 'MidRoll':
                        case 2:
                            i.adBreak = 2;
                            break;
                        case 'PostRoll':
                        case 3:
                            i.adBreak = 3;
                        }
                        return null != t.playerWidth && (i.playerWidth = 0 | t.playerWidth), i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoAuctionInfoRequest = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.cnxBidId = '', t.prototype.auctionInformation = null, t.prototype.auctionLossReason = 0, t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.cnxBidId && Object.hasOwnProperty.call(t, 'cnxBidId') && i.uint32(10).string(t.cnxBidId), null != t.auctionInformation && Object.hasOwnProperty.call(t, 'auctionInformation') && c.ProtoAuctionInformation.encode(t.auctionInformation, i.uint32(18).fork()).ldelim(), null != t.auctionLossReason && Object.hasOwnProperty.call(t, 'auctionLossReason') && i.uint32(24).int32(t.auctionLossReason), i;
                    }, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoAuctionInfoRequest(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.cnxBidId = t.string();
                                break;
                            case 2:
                                s.auctionInformation = c.ProtoAuctionInformation.decode(t, t.uint32());
                                break;
                            case 3:
                                s.auctionLossReason = t.int32();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoAuctionInfoRequest)
                            return t;
                        var i = new c.ProtoAuctionInfoRequest();
                        if (null != t.cnxBidId && (i.cnxBidId = String(t.cnxBidId)), null != t.auctionInformation) {
                            if ('object' != typeof t.auctionInformation)
                                throw TypeError('.ProtoAuctionInfoRequest.auctionInformation: object expected');
                            i.auctionInformation = c.ProtoAuctionInformation.fromObject(t.auctionInformation);
                        }
                        switch (t.auctionLossReason) {
                        case 'TargetingMismatch':
                        case 0:
                            i.auctionLossReason = 0;
                            break;
                        case 'CompetitorPriority':
                        case 1:
                            i.auctionLossReason = 1;
                            break;
                        case 'AdOpportunityEnd':
                        case 2:
                            i.auctionLossReason = 2;
                        }
                        return i;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.cnxBidId = '', e.auctionInformation = null, e.auctionLossReason = i.enums === String ? 'TargetingMismatch' : 0), null != t.cnxBidId && t.hasOwnProperty('cnxBidId') && (e.cnxBidId = t.cnxBidId), null != t.auctionInformation && t.hasOwnProperty('auctionInformation') && (e.auctionInformation = c.ProtoAuctionInformation.toObject(t.auctionInformation, i)), null != t.auctionLossReason && t.hasOwnProperty('auctionLossReason') && (e.auctionLossReason = i.enums === String ? c.ProtoAuctionLossReasonEnum[t.auctionLossReason] : t.auctionLossReason), e;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoAuctionInformation = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.highestObfuscatedBidPrice = 0, t.prototype.secondHighestObfuscatedBidPrice = 0, t.prototype.bidDensity = 0, t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.highestObfuscatedBidPrice && Object.hasOwnProperty.call(t, 'highestObfuscatedBidPrice') && i.uint32(9).double(t.highestObfuscatedBidPrice), null != t.secondHighestObfuscatedBidPrice && Object.hasOwnProperty.call(t, 'secondHighestObfuscatedBidPrice') && i.uint32(17).double(t.secondHighestObfuscatedBidPrice), null != t.bidDensity && Object.hasOwnProperty.call(t, 'bidDensity') && i.uint32(24).int32(t.bidDensity), i;
                    }, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoAuctionInformation(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.highestObfuscatedBidPrice = t.double();
                                break;
                            case 2:
                                s.secondHighestObfuscatedBidPrice = t.double();
                                break;
                            case 3:
                                s.bidDensity = t.int32();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoAuctionInformation)
                            return t;
                        var i = new c.ProtoAuctionInformation();
                        return null != t.highestObfuscatedBidPrice && (i.highestObfuscatedBidPrice = Number(t.highestObfuscatedBidPrice)), null != t.secondHighestObfuscatedBidPrice && (i.secondHighestObfuscatedBidPrice = Number(t.secondHighestObfuscatedBidPrice)), null != t.bidDensity && (i.bidDensity = 0 | t.bidDensity), i;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.highestObfuscatedBidPrice = 0, e.secondHighestObfuscatedBidPrice = 0, e.bidDensity = 0), null != t.highestObfuscatedBidPrice && t.hasOwnProperty('highestObfuscatedBidPrice') && (e.highestObfuscatedBidPrice = i.json && !isFinite(t.highestObfuscatedBidPrice) ? String(t.highestObfuscatedBidPrice) : t.highestObfuscatedBidPrice), null != t.secondHighestObfuscatedBidPrice && t.hasOwnProperty('secondHighestObfuscatedBidPrice') && (e.secondHighestObfuscatedBidPrice = i.json && !isFinite(t.secondHighestObfuscatedBidPrice) ? String(t.secondHighestObfuscatedBidPrice) : t.secondHighestObfuscatedBidPrice), null != t.bidDensity && t.hasOwnProperty('bidDensity') && (e.bidDensity = t.bidDensity), e;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoPrebid = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.publisherLineItemId = '', t.prototype.advertiserLineItemId = '', t.prototype.syncedUser = !1, t.prototype.timeSpent = 0, t.prototype.reason = 0, t.prototype.rtbRequestNumber = 0, t.prototype.partnerReason = 0, t.prototype.requestedFloorPrice = 0, t.prototype.partnerCustomHeaders = '', t.prototype.prebidJsBidderName = '', t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.publisherLineItemId && Object.hasOwnProperty.call(t, 'publisherLineItemId') && i.uint32(10).string(t.publisherLineItemId), null != t.advertiserLineItemId && Object.hasOwnProperty.call(t, 'advertiserLineItemId') && i.uint32(18).string(t.advertiserLineItemId), null != t.syncedUser && Object.hasOwnProperty.call(t, 'syncedUser') && i.uint32(24).bool(t.syncedUser), null != t.timeSpent && Object.hasOwnProperty.call(t, 'timeSpent') && i.uint32(32).int32(t.timeSpent), null != t.reason && Object.hasOwnProperty.call(t, 'reason') && i.uint32(40).int32(t.reason), null != t.rtbRequestNumber && Object.hasOwnProperty.call(t, 'rtbRequestNumber') && i.uint32(48).int32(t.rtbRequestNumber), null != t.partnerReason && Object.hasOwnProperty.call(t, 'partnerReason') && i.uint32(56).int32(t.partnerReason), null != t.requestedFloorPrice && Object.hasOwnProperty.call(t, 'requestedFloorPrice') && i.uint32(65).double(t.requestedFloorPrice), null != t.partnerCustomHeaders && Object.hasOwnProperty.call(t, 'partnerCustomHeaders') && i.uint32(74).string(t.partnerCustomHeaders), null != t.prebidJsBidderName && Object.hasOwnProperty.call(t, 'prebidJsBidderName') && i.uint32(98).string(t.prebidJsBidderName), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoPrebid)
                            return t;
                        var i = new c.ProtoPrebid();
                        switch (null != t.publisherLineItemId && (i.publisherLineItemId = String(t.publisherLineItemId)), null != t.advertiserLineItemId && (i.advertiserLineItemId = String(t.advertiserLineItemId)), null != t.syncedUser && (i.syncedUser = Boolean(t.syncedUser)), null != t.timeSpent && (i.timeSpent = 0 | t.timeSpent), t.reason) {
                        case 'RequestException':
                        case 0:
                            i.reason = 0;
                            break;
                        case 'Timeout':
                        case 1:
                            i.reason = 1;
                            break;
                        case 'EmptyResponse':
                        case 2:
                            i.reason = 2;
                            break;
                        case 'InvalidResponse':
                        case 3:
                            i.reason = 3;
                            break;
                        case 'NoBid':
                        case 4:
                            i.reason = 4;
                            break;
                        case 'BidBelowFloor':
                        case 5:
                            i.reason = 5;
                            break;
                        case 'DealIdMismatch':
                        case 6:
                            i.reason = 6;
                            break;
                        case 'CsInvalidResponse':
                        case 7:
                            i.reason = 7;
                            break;
                        case 'CsRequestException':
                        case 8:
                            i.reason = 8;
                            break;
                        case 'CsEmptyResponse':
                        case 9:
                            i.reason = 9;
                            break;
                        case 'NoLibInPage':
                        case 11:
                            i.reason = 11;
                        }
                        switch (null != t.rtbRequestNumber && (i.rtbRequestNumber = 0 | t.rtbRequestNumber), t.partnerReason) {
                        case 'Unknown':
                        case 0:
                            i.partnerReason = 0;
                            break;
                        case 'TechnicalError':
                        case 1:
                            i.partnerReason = 1;
                            break;
                        case 'InvalidRequest':
                        case 2:
                            i.partnerReason = 2;
                            break;
                        case 'KnownWebSpider':
                        case 3:
                            i.partnerReason = 3;
                            break;
                        case 'SuspectedNonHumanTraffic':
                        case 4:
                            i.partnerReason = 4;
                            break;
                        case 'CloudIP':
                        case 5:
                            i.partnerReason = 5;
                            break;
                        case 'UnsupportedDevice':
                        case 6:
                            i.partnerReason = 6;
                            break;
                        case 'BlockedPublisher':
                        case 7:
                            i.partnerReason = 7;
                            break;
                        case 'UnmatchedUser':
                        case 8:
                            i.partnerReason = 8;
                            break;
                        case 'DailyReaderCapMet':
                        case 9:
                            i.partnerReason = 9;
                            break;
                        case 'DailyDomainCapMet':
                        case 10:
                            i.partnerReason = 10;
                        }
                        return null != t.requestedFloorPrice && (i.requestedFloorPrice = Number(t.requestedFloorPrice)), null != t.partnerCustomHeaders && (i.partnerCustomHeaders = String(t.partnerCustomHeaders)), null != t.prebidJsBidderName && (i.prebidJsBidderName = String(t.prebidJsBidderName)), i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoBid = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.publisherLineItemId = '', t.prototype.advertiserLineItemId = '', t.prototype.syncedUser = !1, t.prototype.timeSpent = 0, t.prototype.rtbRequestNumber = 0, t.prototype.creativeId = '', t.prototype.rtbSeatId = '', t.prototype.rtbAdomain = '', t.prototype.encryptedPrice = '', t.prototype.requestedFloorPrice = 0, t.prototype.prebidJsBidderName = '', t.prototype.customClientPrice = 0, t.prototype.dspId = '', t.prototype.cnxBidId = '', t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.publisherLineItemId && Object.hasOwnProperty.call(t, 'publisherLineItemId') && i.uint32(10).string(t.publisherLineItemId), null != t.advertiserLineItemId && Object.hasOwnProperty.call(t, 'advertiserLineItemId') && i.uint32(18).string(t.advertiserLineItemId), null != t.syncedUser && Object.hasOwnProperty.call(t, 'syncedUser') && i.uint32(24).bool(t.syncedUser), null != t.timeSpent && Object.hasOwnProperty.call(t, 'timeSpent') && i.uint32(32).int32(t.timeSpent), null != t.rtbRequestNumber && Object.hasOwnProperty.call(t, 'rtbRequestNumber') && i.uint32(40).int32(t.rtbRequestNumber), null != t.creativeId && Object.hasOwnProperty.call(t, 'creativeId') && i.uint32(50).string(t.creativeId), null != t.rtbSeatId && Object.hasOwnProperty.call(t, 'rtbSeatId') && i.uint32(58).string(t.rtbSeatId), null != t.rtbAdomain && Object.hasOwnProperty.call(t, 'rtbAdomain') && i.uint32(66).string(t.rtbAdomain), null != t.encryptedPrice && Object.hasOwnProperty.call(t, 'encryptedPrice') && i.uint32(74).string(t.encryptedPrice), null != t.requestedFloorPrice && Object.hasOwnProperty.call(t, 'requestedFloorPrice') && i.uint32(81).double(t.requestedFloorPrice), null != t.prebidJsBidderName && Object.hasOwnProperty.call(t, 'prebidJsBidderName') && i.uint32(106).string(t.prebidJsBidderName), null != t.customClientPrice && Object.hasOwnProperty.call(t, 'customClientPrice') && i.uint32(113).double(t.customClientPrice), null != t.dspId && Object.hasOwnProperty.call(t, 'dspId') && i.uint32(122).string(t.dspId), null != t.cnxBidId && Object.hasOwnProperty.call(t, 'cnxBidId') && i.uint32(130).string(t.cnxBidId), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoBid)
                            return t;
                        var i = new c.ProtoBid();
                        return null != t.publisherLineItemId && (i.publisherLineItemId = String(t.publisherLineItemId)), null != t.advertiserLineItemId && (i.advertiserLineItemId = String(t.advertiserLineItemId)), null != t.syncedUser && (i.syncedUser = Boolean(t.syncedUser)), null != t.timeSpent && (i.timeSpent = 0 | t.timeSpent), null != t.rtbRequestNumber && (i.rtbRequestNumber = 0 | t.rtbRequestNumber), null != t.creativeId && (i.creativeId = String(t.creativeId)), null != t.rtbSeatId && (i.rtbSeatId = String(t.rtbSeatId)), null != t.rtbAdomain && (i.rtbAdomain = String(t.rtbAdomain)), null != t.encryptedPrice && (i.encryptedPrice = String(t.encryptedPrice)), null != t.requestedFloorPrice && (i.requestedFloorPrice = Number(t.requestedFloorPrice)), null != t.prebidJsBidderName && (i.prebidJsBidderName = String(t.prebidJsBidderName)), null != t.customClientPrice && (i.customClientPrice = Number(t.customClientPrice)), null != t.dspId && (i.dspId = String(t.dspId)), null != t.cnxBidId && (i.cnxBidId = String(t.cnxBidId)), i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoPostBid = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.publisherLineItemId = '', t.prototype.advertiserLineItemId = '', t.prototype.syncedUser = !1, t.prototype.timeSpent = 0, t.prototype.error = '', t.prototype.loaded = !1, t.prototype.creativeId = '', t.prototype.rtbSeatId = '', t.prototype.rtbAdomain = '', t.prototype.adsourceType = 0, t.prototype.vastMediaType = '', t.prototype.adPodSlotPosition = 0, t.prototype.prebidJsBidderName = '', t.prototype.dspId = '', t.prototype.cnxBidId = '', t.prototype.winToAdLoadedTime = 0, t.prototype.auctionInformation = null, t.prototype.auctionPostbidReason = 0, t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.publisherLineItemId && Object.hasOwnProperty.call(t, 'publisherLineItemId') && i.uint32(10).string(t.publisherLineItemId), null != t.advertiserLineItemId && Object.hasOwnProperty.call(t, 'advertiserLineItemId') && i.uint32(18).string(t.advertiserLineItemId), null != t.syncedUser && Object.hasOwnProperty.call(t, 'syncedUser') && i.uint32(24).bool(t.syncedUser), null != t.timeSpent && Object.hasOwnProperty.call(t, 'timeSpent') && i.uint32(32).int32(t.timeSpent), null != t.error && Object.hasOwnProperty.call(t, 'error') && i.uint32(42).string(t.error), null != t.loaded && Object.hasOwnProperty.call(t, 'loaded') && i.uint32(48).bool(t.loaded), null != t.creativeId && Object.hasOwnProperty.call(t, 'creativeId') && i.uint32(58).string(t.creativeId), null != t.rtbSeatId && Object.hasOwnProperty.call(t, 'rtbSeatId') && i.uint32(66).string(t.rtbSeatId), null != t.rtbAdomain && Object.hasOwnProperty.call(t, 'rtbAdomain') && i.uint32(74).string(t.rtbAdomain), null != t.adsourceType && Object.hasOwnProperty.call(t, 'adsourceType') && i.uint32(80).int32(t.adsourceType), null != t.vastMediaType && Object.hasOwnProperty.call(t, 'vastMediaType') && i.uint32(90).string(t.vastMediaType), null != t.adPodSlotPosition && Object.hasOwnProperty.call(t, 'adPodSlotPosition') && i.uint32(96).int32(t.adPodSlotPosition), null != t.prebidJsBidderName && Object.hasOwnProperty.call(t, 'prebidJsBidderName') && i.uint32(106).string(t.prebidJsBidderName), null != t.dspId && Object.hasOwnProperty.call(t, 'dspId') && i.uint32(114).string(t.dspId), null != t.cnxBidId && Object.hasOwnProperty.call(t, 'cnxBidId') && i.uint32(122).string(t.cnxBidId), null != t.winToAdLoadedTime && Object.hasOwnProperty.call(t, 'winToAdLoadedTime') && i.uint32(128).int32(t.winToAdLoadedTime), null != t.auctionInformation && Object.hasOwnProperty.call(t, 'auctionInformation') && c.ProtoAuctionInformation.encode(t.auctionInformation, i.uint32(146).fork()).ldelim(), null != t.auctionPostbidReason && Object.hasOwnProperty.call(t, 'auctionPostbidReason') && i.uint32(152).int32(t.auctionPostbidReason), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoPostBid)
                            return t;
                        var i = new c.ProtoPostBid();
                        switch (null != t.publisherLineItemId && (i.publisherLineItemId = String(t.publisherLineItemId)), null != t.advertiserLineItemId && (i.advertiserLineItemId = String(t.advertiserLineItemId)), null != t.syncedUser && (i.syncedUser = Boolean(t.syncedUser)), null != t.timeSpent && (i.timeSpent = 0 | t.timeSpent), null != t.error && (i.error = String(t.error)), null != t.loaded && (i.loaded = Boolean(t.loaded)), null != t.creativeId && (i.creativeId = String(t.creativeId)), null != t.rtbSeatId && (i.rtbSeatId = String(t.rtbSeatId)), null != t.rtbAdomain && (i.rtbAdomain = String(t.rtbAdomain)), t.adsourceType) {
                        case 'Unknown':
                        case 0:
                            i.adsourceType = 0;
                            break;
                        case 'Vpaid':
                        case 1:
                            i.adsourceType = 1;
                            break;
                        case 'VastMedia':
                        case 2:
                            i.adsourceType = 2;
                            break;
                        case 'CnxMedia':
                        case 3:
                            i.adsourceType = 3;
                            break;
                        case 'Jw':
                        case 4:
                            i.adsourceType = 4;
                            break;
                        case 'Ima':
                        case 5:
                            i.adsourceType = 5;
                            break;
                        case 'AOL':
                        case 6:
                            i.adsourceType = 6;
                        }
                        if (null != t.vastMediaType && (i.vastMediaType = String(t.vastMediaType)), null != t.adPodSlotPosition && (i.adPodSlotPosition = 0 | t.adPodSlotPosition), null != t.prebidJsBidderName && (i.prebidJsBidderName = String(t.prebidJsBidderName)), null != t.dspId && (i.dspId = String(t.dspId)), null != t.cnxBidId && (i.cnxBidId = String(t.cnxBidId)), null != t.winToAdLoadedTime && (i.winToAdLoadedTime = 0 | t.winToAdLoadedTime), null != t.auctionInformation) {
                            if ('object' != typeof t.auctionInformation)
                                throw TypeError('.ProtoPostBid.auctionInformation: object expected');
                            i.auctionInformation = c.ProtoAuctionInformation.fromObject(t.auctionInformation);
                        }
                        switch (t.auctionPostbidReason) {
                        case 'CreativeError':
                        case 0:
                            i.auctionPostbidReason = 0;
                            break;
                        case 'SDKFailure':
                        case 1:
                            i.auctionPostbidReason = 1;
                            break;
                        case 'UnsupportedMedia':
                        case 2:
                            i.auctionPostbidReason = 2;
                            break;
                        case 'TargetingMismatch':
                        case 3:
                            i.auctionPostbidReason = 3;
                            break;
                        case 'PlayerError':
                        case 4:
                            i.auctionPostbidReason = 4;
                        }
                        return i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoBidTrackingsRequest = function () {
                    function t(t) {
                        if (this.prebids = [], this.bids = [], this.postBids = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.trackingRequestMeta = null, t.prototype.mediaGuid = '', t.prototype.prebids = o.emptyArray, t.prototype.bids = o.emptyArray, t.prototype.postBids = o.emptyArray, t.prototype.logEveryting = !1, t.prototype.hasGdprConsentPayload = !1, t.prototype.gdprConsentMode = 0, t.prototype.useExploration = !1, t.encode = function (t, i) {
                        if (i || (i = a.create()), null != t.trackingRequestMeta && Object.hasOwnProperty.call(t, 'trackingRequestMeta') && c.MetadataModel.encode(t.trackingRequestMeta, i.uint32(10).fork()).ldelim(), null != t.mediaGuid && Object.hasOwnProperty.call(t, 'mediaGuid') && i.uint32(18).string(t.mediaGuid), null != t.prebids && t.prebids.length)
                            for (var e = 0; e < t.prebids.length; ++e)
                                c.ProtoPrebid.encode(t.prebids[e], i.uint32(34).fork()).ldelim();
                        if (null != t.bids && t.bids.length)
                            for (e = 0; e < t.bids.length; ++e)
                                c.ProtoBid.encode(t.bids[e], i.uint32(42).fork()).ldelim();
                        if (null != t.postBids && t.postBids.length)
                            for (e = 0; e < t.postBids.length; ++e)
                                c.ProtoPostBid.encode(t.postBids[e], i.uint32(50).fork()).ldelim();
                        return null != t.logEveryting && Object.hasOwnProperty.call(t, 'logEveryting') && i.uint32(56).bool(t.logEveryting), null != t.hasGdprConsentPayload && Object.hasOwnProperty.call(t, 'hasGdprConsentPayload') && i.uint32(80).bool(t.hasGdprConsentPayload), null != t.gdprConsentMode && Object.hasOwnProperty.call(t, 'gdprConsentMode') && i.uint32(88).int32(t.gdprConsentMode), null != t.useExploration && Object.hasOwnProperty.call(t, 'useExploration') && i.uint32(96).bool(t.useExploration), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoBidTrackingsRequest)
                            return t;
                        var i = new c.ProtoBidTrackingsRequest();
                        if (null != t.trackingRequestMeta) {
                            if ('object' != typeof t.trackingRequestMeta)
                                throw TypeError('.ProtoBidTrackingsRequest.trackingRequestMeta: object expected');
                            i.trackingRequestMeta = c.MetadataModel.fromObject(t.trackingRequestMeta);
                        }
                        if (null != t.mediaGuid && (i.mediaGuid = String(t.mediaGuid)), t.prebids) {
                            if (!Array.isArray(t.prebids))
                                throw TypeError('.ProtoBidTrackingsRequest.prebids: array expected');
                            i.prebids = [];
                            for (var e = 0; e < t.prebids.length; ++e) {
                                if ('object' != typeof t.prebids[e])
                                    throw TypeError('.ProtoBidTrackingsRequest.prebids: object expected');
                                i.prebids[e] = c.ProtoPrebid.fromObject(t.prebids[e]);
                            }
                        }
                        if (t.bids) {
                            if (!Array.isArray(t.bids))
                                throw TypeError('.ProtoBidTrackingsRequest.bids: array expected');
                            i.bids = [];
                            for (e = 0; e < t.bids.length; ++e) {
                                if ('object' != typeof t.bids[e])
                                    throw TypeError('.ProtoBidTrackingsRequest.bids: object expected');
                                i.bids[e] = c.ProtoBid.fromObject(t.bids[e]);
                            }
                        }
                        if (t.postBids) {
                            if (!Array.isArray(t.postBids))
                                throw TypeError('.ProtoBidTrackingsRequest.postBids: array expected');
                            i.postBids = [];
                            for (e = 0; e < t.postBids.length; ++e) {
                                if ('object' != typeof t.postBids[e])
                                    throw TypeError('.ProtoBidTrackingsRequest.postBids: object expected');
                                i.postBids[e] = c.ProtoPostBid.fromObject(t.postBids[e]);
                            }
                        }
                        switch (null != t.logEveryting && (i.logEveryting = Boolean(t.logEveryting)), null != t.hasGdprConsentPayload && (i.hasGdprConsentPayload = Boolean(t.hasGdprConsentPayload)), t.gdprConsentMode) {
                        case 'Unknown':
                        case 0:
                            i.gdprConsentMode = 0;
                            break;
                        case 'NoCmp':
                        case 1:
                            i.gdprConsentMode = 1;
                            break;
                        case 'NoConsent':
                        case 2:
                            i.gdprConsentMode = 2;
                            break;
                        case 'NoConnatixConsent':
                        case 3:
                            i.gdprConsentMode = 3;
                            break;
                        case 'NotAllDemandConsent':
                        case 4:
                            i.gdprConsentMode = 4;
                            break;
                        case 'AllGood':
                        case 5:
                            i.gdprConsentMode = 5;
                        }
                        return null != t.useExploration && (i.useExploration = Boolean(t.useExploration)), i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoHeavyAdTrackingRequest = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.trackingRequestMeta = null, t.prototype.advertiserLineItemId = '', t.prototype.heavyAdBlockTypeEnum = 0, t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.trackingRequestMeta && Object.hasOwnProperty.call(t, 'trackingRequestMeta') && c.MetadataModel.encode(t.trackingRequestMeta, i.uint32(10).fork()).ldelim(), null != t.advertiserLineItemId && Object.hasOwnProperty.call(t, 'advertiserLineItemId') && i.uint32(18).string(t.advertiserLineItemId), null != t.heavyAdBlockTypeEnum && Object.hasOwnProperty.call(t, 'heavyAdBlockTypeEnum') && i.uint32(24).int32(t.heavyAdBlockTypeEnum), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoHeavyAdTrackingRequest)
                            return t;
                        var i = new c.ProtoHeavyAdTrackingRequest();
                        if (null != t.trackingRequestMeta) {
                            if ('object' != typeof t.trackingRequestMeta)
                                throw TypeError('.ProtoHeavyAdTrackingRequest.trackingRequestMeta: object expected');
                            i.trackingRequestMeta = c.MetadataModel.fromObject(t.trackingRequestMeta);
                        }
                        switch (null != t.advertiserLineItemId && (i.advertiserLineItemId = String(t.advertiserLineItemId)), t.heavyAdBlockTypeEnum) {
                        case 'Global':
                        case 0:
                            i.heavyAdBlockTypeEnum = 0;
                            break;
                        case 'Script':
                        case 1:
                            i.heavyAdBlockTypeEnum = 1;
                            break;
                        case 'VpaidIframe':
                        case 2:
                            i.heavyAdBlockTypeEnum = 2;
                            break;
                        case 'OverlayIframe':
                        case 3:
                            i.heavyAdBlockTypeEnum = 3;
                        }
                        return i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoMediaClickTrackingRequest = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.trackingRequestMeta = null, t.prototype.mediaGuid = '', t.prototype.type = 0, t.prototype.clickUrl = '', t.prototype.slideTitle = '', t.prototype.slideNumber = 0, t.prototype.slideMediaType = 0, t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.trackingRequestMeta && Object.hasOwnProperty.call(t, 'trackingRequestMeta') && c.MetadataModel.encode(t.trackingRequestMeta, i.uint32(10).fork()).ldelim(), null != t.mediaGuid && Object.hasOwnProperty.call(t, 'mediaGuid') && i.uint32(18).string(t.mediaGuid), null != t.type && Object.hasOwnProperty.call(t, 'type') && i.uint32(24).int32(t.type), null != t.clickUrl && Object.hasOwnProperty.call(t, 'clickUrl') && i.uint32(34).string(t.clickUrl), null != t.slideTitle && Object.hasOwnProperty.call(t, 'slideTitle') && i.uint32(42).string(t.slideTitle), null != t.slideNumber && Object.hasOwnProperty.call(t, 'slideNumber') && i.uint32(48).int32(t.slideNumber), null != t.slideMediaType && Object.hasOwnProperty.call(t, 'slideMediaType') && i.uint32(56).int32(t.slideMediaType), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoMediaClickTrackingRequest)
                            return t;
                        var i = new c.ProtoMediaClickTrackingRequest();
                        if (null != t.trackingRequestMeta) {
                            if ('object' != typeof t.trackingRequestMeta)
                                throw TypeError('.ProtoMediaClickTrackingRequest.trackingRequestMeta: object expected');
                            i.trackingRequestMeta = c.MetadataModel.fromObject(t.trackingRequestMeta);
                        }
                        switch (null != t.mediaGuid && (i.mediaGuid = String(t.mediaGuid)), t.type) {
                        case 'Click':
                        case 0:
                            i.type = 0;
                            break;
                        case 'UrlClick':
                        case 1:
                            i.type = 1;
                            break;
                        case 'VolumeClick':
                        case 2:
                            i.type = 2;
                            break;
                        case 'PlayClick':
                        case 3:
                            i.type = 3;
                            break;
                        case 'PauseClick':
                        case 4:
                            i.type = 4;
                            break;
                        case 'NextClick':
                        case 5:
                            i.type = 5;
                            break;
                        case 'PreviousClick':
                        case 6:
                            i.type = 6;
                            break;
                        case 'MuteClick':
                        case 7:
                            i.type = 7;
                            break;
                        case 'UnmuteClick':
                        case 8:
                            i.type = 8;
                            break;
                        case 'CloseClick':
                        case 9:
                            i.type = 9;
                            break;
                        case 'ScrollClick':
                        case 10:
                            i.type = 10;
                            break;
                        case 'GalleryClick':
                        case 11:
                            i.type = 11;
                            break;
                        case 'SubtitleClick':
                        case 12:
                            i.type = 12;
                            break;
                        case 'FullScreenClick':
                        case 13:
                            i.type = 13;
                            break;
                        case 'ExitFullScreenClick':
                        case 14:
                            i.type = 14;
                        }
                        switch (null != t.clickUrl && (i.clickUrl = String(t.clickUrl)), null != t.slideTitle && (i.slideTitle = String(t.slideTitle)), null != t.slideNumber && (i.slideNumber = 0 | t.slideNumber), t.slideMediaType) {
                        case 'Image':
                        case 0:
                            i.slideMediaType = 0;
                            break;
                        case 'Video':
                        case 1:
                            i.slideMediaType = 1;
                        }
                        return i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoMediaTrackingRequest = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.trackingRequestMeta = null, t.prototype.mediaGuid = '', t.prototype.quartile = 0, t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.trackingRequestMeta && Object.hasOwnProperty.call(t, 'trackingRequestMeta') && c.MetadataModel.encode(t.trackingRequestMeta, i.uint32(10).fork()).ldelim(), null != t.mediaGuid && Object.hasOwnProperty.call(t, 'mediaGuid') && i.uint32(18).string(t.mediaGuid), null != t.quartile && Object.hasOwnProperty.call(t, 'quartile') && i.uint32(32).int32(t.quartile), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoMediaTrackingRequest)
                            return t;
                        var i = new c.ProtoMediaTrackingRequest();
                        if (null != t.trackingRequestMeta) {
                            if ('object' != typeof t.trackingRequestMeta)
                                throw TypeError('.ProtoMediaTrackingRequest.trackingRequestMeta: object expected');
                            i.trackingRequestMeta = c.MetadataModel.fromObject(t.trackingRequestMeta);
                        }
                        switch (null != t.mediaGuid && (i.mediaGuid = String(t.mediaGuid)), t.quartile) {
                        case 'Start':
                        case 0:
                            i.quartile = 0;
                            break;
                        case 'First':
                        case 1:
                            i.quartile = 1;
                            break;
                        case 'Second':
                        case 2:
                            i.quartile = 2;
                            break;
                        case 'Third':
                        case 3:
                            i.quartile = 3;
                            break;
                        case 'Fourth':
                        case 4:
                            i.quartile = 4;
                        }
                        return i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoSessionAdBlockerRequest = function () {
                    function t(t) {
                        if (this.dynamicElkFieldsValues = {}, t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.trackingRequestMeta = null, t.prototype.adBlockDetectionType = 0, t.prototype.dynamicElkFieldsValues = o.emptyObject, t.encode = function (t, i) {
                        if (i || (i = a.create()), null != t.trackingRequestMeta && Object.hasOwnProperty.call(t, 'trackingRequestMeta') && c.MetadataModel.encode(t.trackingRequestMeta, i.uint32(10).fork()).ldelim(), null != t.adBlockDetectionType && Object.hasOwnProperty.call(t, 'adBlockDetectionType') && i.uint32(16).int32(t.adBlockDetectionType), null != t.dynamicElkFieldsValues && Object.hasOwnProperty.call(t, 'dynamicElkFieldsValues'))
                            for (var e = Object.keys(t.dynamicElkFieldsValues), s = 0; s < e.length; ++s)
                                i.uint32(802).fork().uint32(10).string(e[s]).uint32(18).string(t.dynamicElkFieldsValues[e[s]]).ldelim();
                        return i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoSessionAdBlockerRequest)
                            return t;
                        var i = new c.ProtoSessionAdBlockerRequest();
                        if (null != t.trackingRequestMeta) {
                            if ('object' != typeof t.trackingRequestMeta)
                                throw TypeError('.ProtoSessionAdBlockerRequest.trackingRequestMeta: object expected');
                            i.trackingRequestMeta = c.MetadataModel.fromObject(t.trackingRequestMeta);
                        }
                        switch (t.adBlockDetectionType) {
                        case 'Banner':
                        case 0:
                            i.adBlockDetectionType = 0;
                            break;
                        case 'Network':
                        case 1:
                            i.adBlockDetectionType = 1;
                        }
                        if (t.dynamicElkFieldsValues) {
                            if ('object' != typeof t.dynamicElkFieldsValues)
                                throw TypeError('.ProtoSessionAdBlockerRequest.dynamicElkFieldsValues: object expected');
                            i.dynamicElkFieldsValues = {};
                            for (var e = Object.keys(t.dynamicElkFieldsValues), s = 0; s < e.length; ++s)
                                i.dynamicElkFieldsValues[e[s]] = String(t.dynamicElkFieldsValues[e[s]]);
                        }
                        return i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoSessionTimeTrackingRequest = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.trackingRequestMeta = null, t.prototype.timePlayed = 0, t.prototype.timePlayedInView = 0, t.prototype.sessionTime = 0, t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.trackingRequestMeta && Object.hasOwnProperty.call(t, 'trackingRequestMeta') && c.MetadataModel.encode(t.trackingRequestMeta, i.uint32(10).fork()).ldelim(), null != t.timePlayed && Object.hasOwnProperty.call(t, 'timePlayed') && i.uint32(16).int32(t.timePlayed), null != t.timePlayedInView && Object.hasOwnProperty.call(t, 'timePlayedInView') && i.uint32(24).int32(t.timePlayedInView), null != t.sessionTime && Object.hasOwnProperty.call(t, 'sessionTime') && i.uint32(32).int32(t.sessionTime), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoSessionTimeTrackingRequest)
                            return t;
                        var i = new c.ProtoSessionTimeTrackingRequest();
                        if (null != t.trackingRequestMeta) {
                            if ('object' != typeof t.trackingRequestMeta)
                                throw TypeError('.ProtoSessionTimeTrackingRequest.trackingRequestMeta: object expected');
                            i.trackingRequestMeta = c.MetadataModel.fromObject(t.trackingRequestMeta);
                        }
                        return null != t.timePlayed && (i.timePlayed = 0 | t.timePlayed), null != t.timePlayedInView && (i.timePlayedInView = 0 | t.timePlayedInView), null != t.sessionTime && (i.sessionTime = 0 | t.sessionTime), i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoTrackingRequest = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.trackingRequestMeta = null, t.prototype.hasAdBlocker = !1, t.prototype.bundleName = '', t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.trackingRequestMeta && Object.hasOwnProperty.call(t, 'trackingRequestMeta') && c.MetadataModel.encode(t.trackingRequestMeta, i.uint32(10).fork()).ldelim(), null != t.hasAdBlocker && Object.hasOwnProperty.call(t, 'hasAdBlocker') && i.uint32(32).bool(t.hasAdBlocker), null != t.bundleName && Object.hasOwnProperty.call(t, 'bundleName') && i.uint32(42).string(t.bundleName), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoTrackingRequest)
                            return t;
                        var i = new c.ProtoTrackingRequest();
                        if (null != t.trackingRequestMeta) {
                            if ('object' != typeof t.trackingRequestMeta)
                                throw TypeError('.ProtoTrackingRequest.trackingRequestMeta: object expected');
                            i.trackingRequestMeta = c.MetadataModel.fromObject(t.trackingRequestMeta);
                        }
                        return null != t.hasAdBlocker && (i.hasAdBlocker = Boolean(t.hasAdBlocker)), null != t.bundleName && (i.bundleName = String(t.bundleName)), i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoTrackingResponse = function () {
                    function t(t) {
                        if (this.platformCappedLineItemIdList = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.errorMessage = '', t.prototype.platformCappedLineItemIdList = o.emptyArray, t.prototype.impressionRevenue = 0, t.prototype.adServerLineItemName = '', t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoTrackingResponse(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.errorMessage = t.string();
                                break;
                            case 2:
                                s.platformCappedLineItemIdList && s.platformCappedLineItemIdList.length || (s.platformCappedLineItemIdList = []), s.platformCappedLineItemIdList.push(t.string());
                                break;
                            case 3:
                                s.impressionRevenue = t.double();
                                break;
                            case 4:
                                s.adServerLineItemName = t.string();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.platformCappedLineItemIdList = []), i.defaults && (e.errorMessage = '', e.impressionRevenue = 0, e.adServerLineItemName = ''), null != t.errorMessage && t.hasOwnProperty('errorMessage') && (e.errorMessage = t.errorMessage), t.platformCappedLineItemIdList && t.platformCappedLineItemIdList.length) {
                            e.platformCappedLineItemIdList = [];
                            for (var s = 0; s < t.platformCappedLineItemIdList.length; ++s)
                                e.platformCappedLineItemIdList[s] = t.platformCappedLineItemIdList[s];
                        }
                        return null != t.impressionRevenue && t.hasOwnProperty('impressionRevenue') && (e.impressionRevenue = i.json && !isFinite(t.impressionRevenue) ? String(t.impressionRevenue) : t.impressionRevenue), null != t.adServerLineItemName && t.hasOwnProperty('adServerLineItemName') && (e.adServerLineItemName = t.adServerLineItemName), e;
                    }, t;
                }(), c.ProtoVideoAdImpressionRequest = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.trackingRequestMeta = null, t.prototype.mediaGuid = '', t.prototype.publisherLineItemId = '', t.prototype.advertiserLineItemId = '', t.prototype.syncedUser = !1, t.prototype.timeSpent = 0, t.prototype.encryptedPrice = '', t.prototype.creativeId = '', t.prototype.rtbSeatId = '', t.prototype.rtbAdomain = '', t.prototype.customClientPrice = 0, t.prototype.adsourceType = 0, t.prototype.vastMediaType = '', t.prototype.adPodSlotPosition = 0, t.prototype.prebidJsBidderName = '', t.prototype.dspId = '', t.prototype.cnxBidId = '', t.prototype.winToAdLoadedTime = 0, t.prototype.startAdToImpressionTime = 0, t.prototype.declaredDuration = 0, t.prototype.impressionDuration = 0, t.prototype.useExploration = !1, t.prototype.auctionInformation = null, t.prototype.playerWidth = 0, t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.trackingRequestMeta && Object.hasOwnProperty.call(t, 'trackingRequestMeta') && c.MetadataModel.encode(t.trackingRequestMeta, i.uint32(10).fork()).ldelim(), null != t.mediaGuid && Object.hasOwnProperty.call(t, 'mediaGuid') && i.uint32(26).string(t.mediaGuid), null != t.publisherLineItemId && Object.hasOwnProperty.call(t, 'publisherLineItemId') && i.uint32(42).string(t.publisherLineItemId), null != t.advertiserLineItemId && Object.hasOwnProperty.call(t, 'advertiserLineItemId') && i.uint32(50).string(t.advertiserLineItemId), null != t.syncedUser && Object.hasOwnProperty.call(t, 'syncedUser') && i.uint32(56).bool(t.syncedUser), null != t.timeSpent && Object.hasOwnProperty.call(t, 'timeSpent') && i.uint32(64).int32(t.timeSpent), null != t.encryptedPrice && Object.hasOwnProperty.call(t, 'encryptedPrice') && i.uint32(74).string(t.encryptedPrice), null != t.creativeId && Object.hasOwnProperty.call(t, 'creativeId') && i.uint32(82).string(t.creativeId), null != t.rtbSeatId && Object.hasOwnProperty.call(t, 'rtbSeatId') && i.uint32(90).string(t.rtbSeatId), null != t.rtbAdomain && Object.hasOwnProperty.call(t, 'rtbAdomain') && i.uint32(98).string(t.rtbAdomain), null != t.customClientPrice && Object.hasOwnProperty.call(t, 'customClientPrice') && i.uint32(105).double(t.customClientPrice), null != t.adsourceType && Object.hasOwnProperty.call(t, 'adsourceType') && i.uint32(112).int32(t.adsourceType), null != t.vastMediaType && Object.hasOwnProperty.call(t, 'vastMediaType') && i.uint32(122).string(t.vastMediaType), null != t.adPodSlotPosition && Object.hasOwnProperty.call(t, 'adPodSlotPosition') && i.uint32(144).int32(t.adPodSlotPosition), null != t.prebidJsBidderName && Object.hasOwnProperty.call(t, 'prebidJsBidderName') && i.uint32(154).string(t.prebidJsBidderName), null != t.dspId && Object.hasOwnProperty.call(t, 'dspId') && i.uint32(162).string(t.dspId), null != t.cnxBidId && Object.hasOwnProperty.call(t, 'cnxBidId') && i.uint32(170).string(t.cnxBidId), null != t.winToAdLoadedTime && Object.hasOwnProperty.call(t, 'winToAdLoadedTime') && i.uint32(176).int32(t.winToAdLoadedTime), null != t.startAdToImpressionTime && Object.hasOwnProperty.call(t, 'startAdToImpressionTime') && i.uint32(184).int32(t.startAdToImpressionTime), null != t.declaredDuration && Object.hasOwnProperty.call(t, 'declaredDuration') && i.uint32(193).double(t.declaredDuration), null != t.impressionDuration && Object.hasOwnProperty.call(t, 'impressionDuration') && i.uint32(201).double(t.impressionDuration), null != t.useExploration && Object.hasOwnProperty.call(t, 'useExploration') && i.uint32(208).bool(t.useExploration), null != t.auctionInformation && Object.hasOwnProperty.call(t, 'auctionInformation') && c.ProtoAuctionInformation.encode(t.auctionInformation, i.uint32(218).fork()).ldelim(), null != t.playerWidth && Object.hasOwnProperty.call(t, 'playerWidth') && i.uint32(224).int32(t.playerWidth), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoVideoAdImpressionRequest)
                            return t;
                        var i = new c.ProtoVideoAdImpressionRequest();
                        if (null != t.trackingRequestMeta) {
                            if ('object' != typeof t.trackingRequestMeta)
                                throw TypeError('.ProtoVideoAdImpressionRequest.trackingRequestMeta: object expected');
                            i.trackingRequestMeta = c.MetadataModel.fromObject(t.trackingRequestMeta);
                        }
                        switch (null != t.mediaGuid && (i.mediaGuid = String(t.mediaGuid)), null != t.publisherLineItemId && (i.publisherLineItemId = String(t.publisherLineItemId)), null != t.advertiserLineItemId && (i.advertiserLineItemId = String(t.advertiserLineItemId)), null != t.syncedUser && (i.syncedUser = Boolean(t.syncedUser)), null != t.timeSpent && (i.timeSpent = 0 | t.timeSpent), null != t.encryptedPrice && (i.encryptedPrice = String(t.encryptedPrice)), null != t.creativeId && (i.creativeId = String(t.creativeId)), null != t.rtbSeatId && (i.rtbSeatId = String(t.rtbSeatId)), null != t.rtbAdomain && (i.rtbAdomain = String(t.rtbAdomain)), null != t.customClientPrice && (i.customClientPrice = Number(t.customClientPrice)), t.adsourceType) {
                        case 'Unknown':
                        case 0:
                            i.adsourceType = 0;
                            break;
                        case 'Vpaid':
                        case 1:
                            i.adsourceType = 1;
                            break;
                        case 'VastMedia':
                        case 2:
                            i.adsourceType = 2;
                            break;
                        case 'CnxMedia':
                        case 3:
                            i.adsourceType = 3;
                            break;
                        case 'Jw':
                        case 4:
                            i.adsourceType = 4;
                            break;
                        case 'Ima':
                        case 5:
                            i.adsourceType = 5;
                            break;
                        case 'AOL':
                        case 6:
                            i.adsourceType = 6;
                        }
                        if (null != t.vastMediaType && (i.vastMediaType = String(t.vastMediaType)), null != t.adPodSlotPosition && (i.adPodSlotPosition = 0 | t.adPodSlotPosition), null != t.prebidJsBidderName && (i.prebidJsBidderName = String(t.prebidJsBidderName)), null != t.dspId && (i.dspId = String(t.dspId)), null != t.cnxBidId && (i.cnxBidId = String(t.cnxBidId)), null != t.winToAdLoadedTime && (i.winToAdLoadedTime = 0 | t.winToAdLoadedTime), null != t.startAdToImpressionTime && (i.startAdToImpressionTime = 0 | t.startAdToImpressionTime), null != t.declaredDuration && (i.declaredDuration = Number(t.declaredDuration)), null != t.impressionDuration && (i.impressionDuration = Number(t.impressionDuration)), null != t.useExploration && (i.useExploration = Boolean(t.useExploration)), null != t.auctionInformation) {
                            if ('object' != typeof t.auctionInformation)
                                throw TypeError('.ProtoVideoAdImpressionRequest.auctionInformation: object expected');
                            i.auctionInformation = c.ProtoAuctionInformation.fromObject(t.auctionInformation);
                        }
                        return null != t.playerWidth && (i.playerWidth = 0 | t.playerWidth), i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoVideoAdImpressionViewableRequest = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.trackingRequestMeta = null, t.prototype.mediaGuid = '', t.prototype.publisherLineItemId = '', t.prototype.advertiserLineItemId = '', t.prototype.rtbSeatId = '', t.prototype.dspId = '', t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.trackingRequestMeta && Object.hasOwnProperty.call(t, 'trackingRequestMeta') && c.MetadataModel.encode(t.trackingRequestMeta, i.uint32(10).fork()).ldelim(), null != t.mediaGuid && Object.hasOwnProperty.call(t, 'mediaGuid') && i.uint32(26).string(t.mediaGuid), null != t.publisherLineItemId && Object.hasOwnProperty.call(t, 'publisherLineItemId') && i.uint32(42).string(t.publisherLineItemId), null != t.advertiserLineItemId && Object.hasOwnProperty.call(t, 'advertiserLineItemId') && i.uint32(50).string(t.advertiserLineItemId), null != t.rtbSeatId && Object.hasOwnProperty.call(t, 'rtbSeatId') && i.uint32(58).string(t.rtbSeatId), null != t.dspId && Object.hasOwnProperty.call(t, 'dspId') && i.uint32(66).string(t.dspId), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoVideoAdImpressionViewableRequest)
                            return t;
                        var i = new c.ProtoVideoAdImpressionViewableRequest();
                        if (null != t.trackingRequestMeta) {
                            if ('object' != typeof t.trackingRequestMeta)
                                throw TypeError('.ProtoVideoAdImpressionViewableRequest.trackingRequestMeta: object expected');
                            i.trackingRequestMeta = c.MetadataModel.fromObject(t.trackingRequestMeta);
                        }
                        return null != t.mediaGuid && (i.mediaGuid = String(t.mediaGuid)), null != t.publisherLineItemId && (i.publisherLineItemId = String(t.publisherLineItemId)), null != t.advertiserLineItemId && (i.advertiserLineItemId = String(t.advertiserLineItemId)), null != t.rtbSeatId && (i.rtbSeatId = String(t.rtbSeatId)), null != t.dspId && (i.dspId = String(t.dspId)), i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoVideoAdQuartilesRequest = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.trackingRequestMeta = null, t.prototype.mediaGuid = '', t.prototype.publisherLineItemId = '', t.prototype.advertiserLineItemId = '', t.prototype.quartile = 0, t.prototype.rtbSeatId = '', t.prototype.dspId = '', t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.trackingRequestMeta && Object.hasOwnProperty.call(t, 'trackingRequestMeta') && c.MetadataModel.encode(t.trackingRequestMeta, i.uint32(10).fork()).ldelim(), null != t.mediaGuid && Object.hasOwnProperty.call(t, 'mediaGuid') && i.uint32(26).string(t.mediaGuid), null != t.publisherLineItemId && Object.hasOwnProperty.call(t, 'publisherLineItemId') && i.uint32(42).string(t.publisherLineItemId), null != t.advertiserLineItemId && Object.hasOwnProperty.call(t, 'advertiserLineItemId') && i.uint32(50).string(t.advertiserLineItemId), null != t.quartile && Object.hasOwnProperty.call(t, 'quartile') && i.uint32(56).int32(t.quartile), null != t.rtbSeatId && Object.hasOwnProperty.call(t, 'rtbSeatId') && i.uint32(66).string(t.rtbSeatId), null != t.dspId && Object.hasOwnProperty.call(t, 'dspId') && i.uint32(74).string(t.dspId), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoVideoAdQuartilesRequest)
                            return t;
                        var i = new c.ProtoVideoAdQuartilesRequest();
                        if (null != t.trackingRequestMeta) {
                            if ('object' != typeof t.trackingRequestMeta)
                                throw TypeError('.ProtoVideoAdQuartilesRequest.trackingRequestMeta: object expected');
                            i.trackingRequestMeta = c.MetadataModel.fromObject(t.trackingRequestMeta);
                        }
                        switch (null != t.mediaGuid && (i.mediaGuid = String(t.mediaGuid)), null != t.publisherLineItemId && (i.publisherLineItemId = String(t.publisherLineItemId)), null != t.advertiserLineItemId && (i.advertiserLineItemId = String(t.advertiserLineItemId)), t.quartile) {
                        case 'Start':
                        case 0:
                            i.quartile = 0;
                            break;
                        case 'First':
                        case 1:
                            i.quartile = 1;
                            break;
                        case 'Second':
                        case 2:
                            i.quartile = 2;
                            break;
                        case 'Third':
                        case 3:
                            i.quartile = 3;
                            break;
                        case 'Fourth':
                        case 4:
                            i.quartile = 4;
                        }
                        return null != t.rtbSeatId && (i.rtbSeatId = String(t.rtbSeatId)), null != t.dspId && (i.dspId = String(t.dspId)), i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoUserSyncRequest = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.userId = '', t.prototype.demandPartner = 0, t.prototype.demandPartnerUserId = '', t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.userId && Object.hasOwnProperty.call(t, 'userId') && i.uint32(10).string(t.userId), null != t.demandPartner && Object.hasOwnProperty.call(t, 'demandPartner') && i.uint32(16).int32(t.demandPartner), null != t.demandPartnerUserId && Object.hasOwnProperty.call(t, 'demandPartnerUserId') && i.uint32(26).string(t.demandPartnerUserId), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoUserSyncRequest)
                            return t;
                        var i = new c.ProtoUserSyncRequest();
                        return null != t.userId && (i.userId = String(t.userId)), null != t.demandPartner && (i.demandPartner = 0 | t.demandPartner), null != t.demandPartnerUserId && (i.demandPartnerUserId = String(t.demandPartnerUserId)), i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoPlayerPlaybackModeEnum = (s = {}, (n = Object.create(s))[s[0] = 'Autoplay'] = 0, n[s[1] = 'ScrollToPlay'] = 1, n[s[2] = 'ClickToPlay'] = 2, n), c.ProtoPlayerCloseButtonMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Off'] = 0, i[t[1] = 'OnHover'] = 1, i[t[2] = 'OnHoverAfterFirstAd'] = 2, i[t[3] = 'AlwaysOn'] = 3, i;
                }(), c.ProtoPlayerFloatingMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Off'] = 0, i[t[1] = 'OnPageLoad'] = 1, i[t[2] = 'AfterInView'] = 2, i[t[3] = 'Always'] = 3, i;
                }(), c.ProtoPlayerSoundMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Mute'] = 0, i[t[1] = 'On'] = 1, i[t[2] = 'Hover'] = 2, i;
                }(), c.ProtoPlayerInsertMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'WithinContainer'] = 0, i[t[1] = 'BeforeContainer'] = 1, i[t[2] = 'AfterContainer'] = 2, i[t[3] = 'ReplaceContainer'] = 3, i[t[4] = 'HideContainer'] = 4, i;
                }(), c.ProtoAdViewabilityPolicy = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Default'] = 0, i[t[1] = 'Strict'] = 1, i;
                }(), c.ProtoSharingDestination = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Facebook'] = 0, i[t[1] = 'Twitter'] = 1, i[t[2] = 'LinkedIn'] = 2, i;
                }(), c.ProtoFloatingFixedPositionMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Page'] = 0, i[t[1] = 'Element'] = 1, i;
                }(), c.ProtoPositionMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'BottomRight'] = 0, i[t[1] = 'BottomLeft'] = 1, i[t[2] = 'TopRight'] = 2, i[t[3] = 'TopLeft'] = 3, i;
                }(), c.ProtoAdPlaybackMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Autoplay'] = 0, i[t[1] = 'ScrollToPlay'] = 1, i;
                }(), c.ProtoFloatingAppendLocationEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Above'] = 0, i[t[1] = 'Below'] = 1, i[t[2] = 'Within'] = 2, i;
                }(), c.ProtoPlayerAdSkippability = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'IfLongerThan'] = 0, i[t[1] = 'Always'] = 1, i[t[2] = 'NoRestrictions'] = 2, i;
                }(), c.ProtoVideoQuality = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Auto'] = 0, i[t[1] = 'High1080p'] = 1, i[t[2] = 'High720p'] = 2, i[t[3] = 'Medium360p'] = 3, i;
                }(), c.ProtoImplementationType = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Web'] = 0, i[t[1] = 'Amp'] = 1, i;
                }(), c.ProtoAdBreakTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'None'] = 0, i[t[1] = 'PreRoll'] = 1, i[t[2] = 'MidRoll'] = 2, i[t[3] = 'PostRoll'] = 3, i;
                }(), c.ProtoAdSlotAdTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'SingleAd'] = 0, i[t[1] = 'AdPod'] = 1, i;
                }(), c.ProtoDeviceType = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Desktop'] = 0, i[t[1] = 'Smartphone'] = 1, i[t[2] = 'Tablet'] = 2, i[t[3] = 'GameConsole'] = 3, i[t[4] = 'SmartTV'] = 4, i[t[5] = 'WearableComputer'] = 5, i[t[6] = 'PDA'] = 6, i[t[7] = 'Unrecognized'] = 7, i;
                }(), c.ProtoCookieSecureModeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Secure'] = 0, i[t[1] = 'Unsecure'] = 1, i[t[2] = 'Auto'] = 2, i;
                }(), c.ProtoTrackerType = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Image'] = 0, i[t[1] = 'Javascript'] = 1, i;
                }(), c.ProtoTrackerTriggerType = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Impression'] = 0, i[t[1] = 'Complete25Pc'] = 1, i[t[2] = 'Complete50Pc'] = 2, i[t[3] = 'Complete75Pc'] = 3, i[t[4] = 'ViewCompletion'] = 4, i[t[5] = 'VideoClick'] = 5, i[t[6] = 'Pause'] = 6, i[t[7] = 'Resume'] = 7, i[t[8] = 'Mute'] = 8, i[t[9] = 'Unmute'] = 9, i;
                }(), c.ProtoCreativeTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'ThirdParty'] = 0, i[t[1] = 'MediaFile'] = 1, i[t[2] = 'Rtb'] = 2, i[t[3] = 'External'] = 3, i[t[4] = 'HeaderBidder'] = 4, i[t[7] = 'Tam'] = 7, i[t[8] = 'TamDeal'] = 8, i;
                }(), c.ProtoResetCapTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'TimeCapping'] = 0, i[t[1] = 'ContentCapping'] = 1, i[t[2] = 'OpportunityCapping'] = 2, i;
                }(), c.ProtoAdSlotsEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'PreRoll'] = 0, i[t[1] = 'MidRoll'] = 1, i[t[2] = 'PostRoll'] = 2, i;
                }(), c.ProtoLineItemPriority = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'House'] = 0, i[t[1] = 'Default'] = 1, i[t[2] = 'Preferred'] = 2, i[t[3] = 'Top'] = 3, i;
                }(), c.ProtoAdSkipMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'IfLongerThan31Sec'] = 0, i[t[1] = 'Always'] = 1, i[t[2] = 'Never'] = 2, i[t[3] = 'NotAplicable'] = 3, i;
                }(), c.ProtoAdType = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Video'] = 0, i[t[1] = 'Overlay'] = 1, i;
                }(), c.ProtoChoiceCriteriaEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Only'] = 0, i[t[1] = 'Except'] = 1, i;
                }(), c.ProtoLineItemAdBreakTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[1] = 'All'] = 1, i[t[2] = 'SingleAd'] = 2, i[t[3] = 'AdPod'] = 3, i;
                }(), c.ProtoLineItemTargetingTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Only'] = 0, i[t[1] = 'Except'] = 1, i;
                }(), c.ProtoLineItemAdSlotTargetingTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[1] = 'SpecificSlots'] = 1, i[t[2] = 'Interval'] = 2, i;
                }(), c.ProtoLineItemPauseAdOutOfViewEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Default'] = 0, i[t[1] = 'Strict'] = 1, i;
                }(), c.ProtoLineItemContextualTargetingEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'IncludeAny'] = 0, i[t[1] = 'IncludeAll'] = 1, i[t[2] = 'ExcludeAny'] = 2, i[t[3] = 'ExcludeAll'] = 3, i;
                }(), c.ProtoSizeChoiceCriteriaEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'GreaterThan'] = 0, i[t[1] = 'SmallerThan'] = 1, i[t[2] = 'Between'] = 2, i;
                }(), c.ProtoLoggingLevelEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'FATAL'] = 0, i[t[1] = 'WARNING'] = 1, i[t[2] = 'INFO'] = 2, i;
                }(), c.ProtoMediaTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Image'] = 0, i[t[1] = 'Video'] = 1, i;
                }(), c.ConnatixNoBidReasonEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'RequestException'] = 0, i[t[1] = 'Timeout'] = 1, i[t[2] = 'EmptyResponse'] = 2, i[t[3] = 'InvalidResponse'] = 3, i[t[4] = 'NoBid'] = 4, i[t[5] = 'BidBelowFloor'] = 5, i[t[6] = 'DealIdMismatch'] = 6, i[t[7] = 'CsInvalidResponse'] = 7, i[t[8] = 'CsRequestException'] = 8, i[t[9] = 'CsEmptyResponse'] = 9, i[t[11] = 'NoLibInPage'] = 11, i;
                }(), c.PartnerNoBidReasonEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Unknown'] = 0, i[t[1] = 'TechnicalError'] = 1, i[t[2] = 'InvalidRequest'] = 2, i[t[3] = 'KnownWebSpider'] = 3, i[t[4] = 'SuspectedNonHumanTraffic'] = 4, i[t[5] = 'CloudIP'] = 5, i[t[6] = 'UnsupportedDevice'] = 6, i[t[7] = 'BlockedPublisher'] = 7, i[t[8] = 'UnmatchedUser'] = 8, i[t[9] = 'DailyReaderCapMet'] = 9, i[t[10] = 'DailyDomainCapMet'] = 10, i;
                }(), c.ProtoAdBlockDetectionTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Banner'] = 0, i[t[1] = 'Network'] = 1, i;
                }(), c.ProtoAdClickTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[1] = 'AdClick'] = 1, i[t[2] = 'AdClickThrough'] = 2, i[t[3] = 'AdSkipClick'] = 3, i[t[4] = 'VolumeClick'] = 4, i[t[5] = 'PauseClick'] = 5, i[t[6] = 'PlayClick'] = 6, i[t[7] = 'FullScreenClick'] = 7, i[t[8] = 'MuteClick'] = 8, i[t[9] = 'UnmuteClick'] = 9, i;
                }(), c.ProtoAdsourceTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Unknown'] = 0, i[t[1] = 'Vpaid'] = 1, i[t[2] = 'VastMedia'] = 2, i[t[3] = 'CnxMedia'] = 3, i[t[4] = 'Jw'] = 4, i[t[5] = 'Ima'] = 5, i[t[6] = 'AOL'] = 6, i;
                }(), c.ProtoAuctionLossReasonEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'TargetingMismatch'] = 0, i[t[1] = 'CompetitorPriority'] = 1, i[t[2] = 'AdOpportunityEnd'] = 2, i;
                }(), c.ProtoGdprConsentModeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Unknown'] = 0, i[t[1] = 'NoCmp'] = 1, i[t[2] = 'NoConsent'] = 2, i[t[3] = 'NoConnatixConsent'] = 3, i[t[4] = 'NotAllDemandConsent'] = 4, i[t[5] = 'AllGood'] = 5, i;
                }(), c.ProtoAuctionPostbidReasonEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'CreativeError'] = 0, i[t[1] = 'SDKFailure'] = 1, i[t[2] = 'UnsupportedMedia'] = 2, i[t[3] = 'TargetingMismatch'] = 3, i[t[4] = 'PlayerError'] = 4, i;
                }(), c.ProtoHeavyAdBlockTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Global'] = 0, i[t[1] = 'Script'] = 1, i[t[2] = 'VpaidIframe'] = 2, i[t[3] = 'OverlayIframe'] = 3, i;
                }(), c.ProtoMediaClickTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Click'] = 0, i[t[1] = 'UrlClick'] = 1, i[t[2] = 'VolumeClick'] = 2, i[t[3] = 'PlayClick'] = 3, i[t[4] = 'PauseClick'] = 4, i[t[5] = 'NextClick'] = 5, i[t[6] = 'PreviousClick'] = 6, i[t[7] = 'MuteClick'] = 7, i[t[8] = 'UnmuteClick'] = 8, i[t[9] = 'CloseClick'] = 9, i[t[10] = 'ScrollClick'] = 10, i[t[11] = 'GalleryClick'] = 11, i[t[12] = 'SubtitleClick'] = 12, i[t[13] = 'FullScreenClick'] = 13, i[t[14] = 'ExitFullScreenClick'] = 14, i;
                }(), c.ProtoQuartilesEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Start'] = 0, i[t[1] = 'First'] = 1, i[t[2] = 'Second'] = 2, i[t[3] = 'Third'] = 3, i[t[4] = 'Fourth'] = 4, i;
                }(), t.exports = c;
            },
            function (t, i, e) {
                'use strict';
                function s(t) {
                    return 'string' == typeof t;
                }
                function n(t) {
                    return !isNaN(parseFloat(t)) && isFinite(t);
                }
                function r(t) {
                    return n(t) && t > 0;
                }
                function h(t) {
                    return s(t) && t.length > 0;
                }
                function a(t) {
                    return void 0 !== t;
                }
                function o(t) {
                    return 'function' == typeof t;
                }
                function c(t) {
                    return 'object' == typeof t && null !== t && !Array.isArray(t);
                }
                function u(t) {
                    try {
                        if (t.contentWindow || t.contentDocument)
                            return !0;
                    } catch (t) {
                    }
                    return !1;
                }
                e.d(i, 'g', function () {
                    return s;
                }), e.d(i, 'd', function () {
                    return n;
                }), e.d(i, 'e', function () {
                    return r;
                }), e.d(i, 'h', function () {
                    return h;
                }), e.d(i, 'a', function () {
                    return a;
                }), e.d(i, 'b', function () {
                    return o;
                }), e.d(i, 'f', function () {
                    return c;
                }), e.d(i, 'c', function () {
                    return u;
                });
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'u', function () {
                    return f;
                }), e.d(i, 'O', function () {
                    return p;
                }), e.d(i, 'N', function () {
                    return b;
                }), e.d(i, 'K', function () {
                    return v;
                }), e.d(i, 'J', function () {
                    return m;
                }), e.d(i, 'y', function () {
                    return g;
                }), e.d(i, 'x', function () {
                    return y;
                }), e.d(i, 'w', function () {
                    return w;
                }), e.d(i, 'a', function () {
                    return O;
                }), e.d(i, 'I', function () {
                    return x;
                }), e.d(i, 't', function () {
                    return S;
                }), e.d(i, 'Q', function () {
                    return j;
                }), e.d(i, 'L', function () {
                    return k;
                }), e.d(i, 'l', function () {
                    return _;
                }), e.d(i, 'k', function () {
                    return A;
                }), e.d(i, 'm', function () {
                    return I;
                }), e.d(i, 'b', function () {
                    return C;
                }), e.d(i, 'c', function () {
                    return T;
                }), e.d(i, 'f', function () {
                    return P;
                }), e.d(i, 'R', function () {
                    return M;
                }), e.d(i, 'n', function () {
                    return E;
                }), e.d(i, 'i', function () {
                    return L;
                }), e.d(i, 'M', function () {
                    return R;
                }), e.d(i, 'e', function () {
                    return B;
                }), e.d(i, 'p', function () {
                    return F;
                }), e.d(i, 'j', function () {
                    return V;
                }), e.d(i, 's', function () {
                    return U;
                }), e.d(i, 'd', function () {
                    return $;
                }), e.d(i, 'v', function () {
                    return N;
                }), e.d(i, 'h', function () {
                    return z;
                }), e.d(i, 'g', function () {
                    return W;
                }), e.d(i, 'B', function () {
                    return G;
                }), e.d(i, 'E', function () {
                    return J;
                }), e.d(i, 'P', function () {
                    return Q;
                }), e.d(i, 'A', function () {
                    return X;
                }), e.d(i, 'r', function () {
                    return Y;
                }), e.d(i, 'q', function () {
                    return K;
                }), e.d(i, 'H', function () {
                    return Z;
                }), e.d(i, 'C', function () {
                    return tt;
                }), e.d(i, 'S', function () {
                    return it;
                }), e.d(i, 'o', function () {
                    return et;
                }), e.d(i, 'D', function () {
                    return st;
                }), e.d(i, 'F', function () {
                    return nt;
                }), e.d(i, 'z', function () {
                    return rt;
                }), e.d(i, 'G', function () {
                    return ht;
                });
                var s = e(24), n = e(1), r = e(6), h = e(4), a = e(8), o = e(0), c = e(5);
                function u(t, i) {
                    t && (t.style.display = i ? '' : 'none');
                }
                function l(t, i) {
                    if (Object(n.a)(t.classList))
                        return void t.classList.add(i);
                    const e = `${ t.getAttribute('class') } ${ i }`;
                    t.setAttribute('class', e);
                }
                function d(t, i) {
                    if (Object(n.a)(t.classList))
                        return void t.classList.remove(i);
                    const e = t.getAttribute('class').replace(i, '');
                    t.setAttribute('class', e);
                }
                function f(t) {
                    u(t, !1);
                }
                function p(t) {
                    u(t, !0);
                }
                function b(t, i) {
                    for (const e in i)
                        i.hasOwnProperty(e) && (t.style[e] = i[e]);
                }
                function v(t, ...i) {
                    i.forEach(i => {
                        t.style[i] = '';
                    });
                }
                function m(t) {
                    t && t.parentNode && t.parentNode.removeChild(t);
                }
                function g(t, i, e, s, r) {
                    if (i)
                        try {
                            const h = e.document.createElement('link');
                            return h.id = t.id, h.type = 'text/css', h.rel = 'stylesheet', h.href = t.src, Object(n.b)(s) && (h.onload = () => {
                                s();
                            }), Object(n.b)(r) && (h.onerror = t => {
                                i.removeChild(h), Object(n.g)(t) ? r(`link_stylesheet_load_error_${ t }`) : r(`link_stylesheet_load_error_${ function (t, i) {
                                    const e = t.document.createElement('div');
                                    return e.appendChild(i), e.innerHTML;
                                }(e, h) }`);
                            }), i.appendChild(h), h;
                        } catch (t) {
                            return null;
                        }
                }
                function y(t, i, e, s, r, h = (() => {
                    return !0;
                })(), a) {
                    try {
                        const u = e.document.createElement('script');
                        return u.src = t.src, u.async = !0, u.type = 'text/javascript', t.id && (u.id = t.id), Object(n.b)(s) && (u.onload = () => {
                            s();
                        }), u.onerror = e => {
                            i.removeChild(u), h && Object(c.a)({
                                message: a,
                                exception: 'script_load_error',
                                callStack: t.src,
                                level: o.ProtoLoggingLevelEnum.INFO,
                                throttle: 2,
                                sendMaxLog: !1
                            }), Object(n.b)(r) && r();
                        }, i.appendChild(u), u;
                    } catch (i) {
                        return h && Object(c.a)({
                            message: a,
                            exception: `script_insert_error_${ i.message }_${ i.stack }`,
                            callStack: t.src,
                            level: o.ProtoLoggingLevelEnum.FATAL,
                            throttle: 2,
                            sendMaxLog: !1
                        }), Object(n.b)(r) && r(), null;
                    }
                }
                function w(t, i, e) {
                    if (t)
                        try {
                            const s = i.document.createElement('script'), n = i.document.createTextNode(e);
                            return s.appendChild(n), t.appendChild(s), s;
                        } catch (t) {
                            return null;
                        }
                }
                function O(t, ...i) {
                    t && i.forEach(i => {
                        Object(n.h)(i) && l(t, i);
                    });
                }
                function x(t, ...i) {
                    t && i.forEach(i => {
                        Object(n.h)(i) && d(t, i);
                    });
                }
                function S(t, i) {
                    return t && t.classList.contains(i);
                }
                function j(t, i, e) {
                    return !!t && (Object(n.a)(e) ? e ? (O(t, i), !0) : (x(t, i), !1) : t.classList.toggle(i));
                }
                function k(t, i, e, s = (() => {
                    return !1;
                })()) {
                    t && (d(t, i), s && L(t), l(t, e));
                }
                const _ = (t, i) => {
                        return i.document.getElementById(t);
                    }, A = (t, i, e) => {
                        return i.getComputedStyle(t, e);
                    }, I = (t, i) => {
                        return i.document.getElementsByClassName(t);
                    };
                function C(t, i = (() => {
                    return '';
                })(), e) {
                    const s = e.document.getElementsByTagName('head')[0], n = e.document.createElement('style');
                    n.setAttribute('type', 'text/css'), n.id = i, n.styleSheet ? n.styleSheet.cssText = t : n.appendChild(e.document.createTextNode(t)), s.appendChild(n);
                }
                function T(t, i) {
                    const e = i.document.getElementsByTagName('head')[0], s = i.document.createElement('link');
                    s.setAttribute('rel', 'preconnect'), s.setAttribute('link', t), e.appendChild(s);
                }
                function P(t, i) {
                    const e = i.document.createElement('div');
                    return e.innerHTML = t, e.firstElementChild;
                }
                function M(t, i) {
                    i > 0 ? (t.removeAttribute('muted'), t.muted = !1) : (t.setAttribute('muted', ''), t.muted = !0);
                }
                function E(t) {
                    return s.b.find(i => {
                        if (i.keys.fullscreenEnabled in t)
                            return !0;
                    });
                }
                function L(t) {
                    t.getBoundingClientRect();
                }
                function R(t, i) {
                    return (t.requestAnimationFrame || t.webkitRequestAnimationFrame || function (t) {
                        return setTimeout(t, 20);
                    })(i);
                }
                function B(t, i) {
                    return (t.cancelAnimationFrame || t.webkitCancelAnimationFrame || function (t) {
                        return clearTimeout(t);
                    })(i);
                }
                function D(t, i, e) {
                    const s = function (t, i) {
                        const e = function (t, i) {
                            let e = i;
                            for (; e;) {
                                const i = e.parentNode;
                                if (i) {
                                    const e = t.reduce((t, e) => {
                                        return t || i.querySelector(e);
                                    }, null);
                                    if (e)
                                        return e;
                                }
                                e = i;
                            }
                            return null;
                        }(t, i);
                        return e ? A(e, U(e)) : null;
                    }(t, i);
                    return s ? function (t, i) {
                        return t.getPropertyValue(i);
                    }(s, e) : null;
                }
                function F(t) {
                    const i = D([
                        'h1',
                        'h2'
                    ], t, 'font-family');
                    return i || 'inherit';
                }
                function V(t) {
                    const i = D(['p'], t, 'font-family');
                    return i || 'inherit';
                }
                function U(t) {
                    try {
                        return t.ownerDocument.defaultView;
                    } catch (t) {
                        return null;
                    }
                }
                function $(t, i) {
                    t && i && (Array.isArray(t) ? t.forEach(t => {
                        return i.appendChild(t);
                    }) : i.appendChild(t));
                }
                function N(t, i, e) {
                    let s = !1;
                    const n = Object(r.c)(i.children);
                    for (let i = 0; i < n.length; i++)
                        if (e - 1 === i || 0 === e) {
                            s = !0, Array.isArray(t) ? H(n[i], ...t) : H(n[i], t);
                            break;
                        }
                    s || $(t, i);
                }
                function H(t, ...i) {
                    if (t && t.parentElement)
                        for (let e = i.length; e--;)
                            t.parentElement.insertBefore(i[e], t);
                }
                function q(t) {
                    const i = U(t);
                    if (!i)
                        return;
                    const {display: e} = A(t, i);
                    'none' === e && (t.style.display = 'block');
                }
                function z(t, i = (() => {
                    return () => {
                    };
                })()) {
                    const e = function (s) {
                        'opacity' === s.propertyName && (x(t, h.m.FadeOutBase, h.m.FadeOut), i(), t.removeEventListener('transitionend', e));
                    };
                    O(t, h.m.FadeOutBase), q(t), L(t), t.addEventListener('transitionend', e), O(t, h.m.FadeOut);
                }
                function W(t, i = (() => {
                    return () => {
                    };
                })()) {
                    const e = function (s) {
                        'opacity' === s.propertyName && (x(t, h.m.FadeInBase, h.m.FadeIn), i(), t.removeEventListener('transitionend', e));
                    };
                    O(t, h.m.FadeInBase), q(t), L(t), t.addEventListener('transitionend', e), O(t, h.m.FadeIn);
                }
                function G(t) {
                    const i = U(t);
                    if (!i)
                        return !0;
                    const {
                        display: e,
                        opacity: s
                    } = A(t, i);
                    return 'none' === e || '0' === s;
                }
                function J(t, i, e) {
                    const s = e.document.createElement('script');
                    s.src = 'https://cdn.connatix.com/min/connatix.renderer.infeed.min.js', s.setAttribute('data-connatix-token', t), e.document.getElementById(i).parentElement.appendChild(s);
                }
                function Q(t, i) {
                    const e = i.document.createElement('div');
                    return e.innerHTML = t || '', e.innerText;
                }
                function X() {
                    const t = window.navigator && window.navigator.doNotTrack || window.doNotTrack;
                    return '1' === t || 'yes' === t;
                }
                function Y(t, i) {
                    const e = Object(a.f)(t).topFrame;
                    return e[i] ? e : null;
                }
                function K(t, i) {
                    let e = t, s = null;
                    try {
                        for (; !s;) {
                            try {
                                e.frames[i] && (s = e);
                            } catch (t) {
                            }
                            if (!t.top || t.top === e)
                                break;
                            e = e.parent;
                        }
                    } catch (t) {
                    }
                    return s;
                }
                function Z(t, i) {
                    let e = [];
                    try {
                        e = e.slice.call(i.document.querySelectorAll(t), 0);
                    } catch (t) {
                    }
                    return e;
                }
                function tt(t) {
                    return -1 !== Object(a.f)(t).topFrame.location.protocol.indexOf('https');
                }
                function it(t) {
                    if (!tt(t))
                        return;
                    [
                        window,
                        t
                    ].forEach(t => {
                        if (null === t.document.querySelector('meta[content=upgrade-insecure-requests]')) {
                            const i = t.document.createElement('meta');
                            i.setAttribute('http-equiv', 'Content-Security-Policy'), i.content = 'upgrade-insecure-requests', t.document.head.appendChild(i);
                        }
                    });
                }
                function et(t) {
                    return Object(a.f)(t).topFrame.document.referrer;
                }
                function st(t, i) {
                    const e = Object(a.f)(i).topFrame.location.hostname, s = Object(a.g)(t);
                    return s && s.hostname === e;
                }
                function nt(t, i) {
                    try {
                        t.onclick = t => {
                            const {
                                tagName: e,
                                className: s
                            } = t.target;
                            Object(c.a)({
                                message: `${ i } - click on tag:${ e } class:${ s }`,
                                level: o.ProtoLoggingLevelEnum.INFO
                            });
                        };
                    } catch (t) {
                        Object(c.a)({
                            message: `${ i }_Error - iframe click`,
                            level: o.ProtoLoggingLevelEnum.WARNING,
                            callStack: t.stack
                        });
                    }
                }
                function rt(t) {
                    t.currentTime = t.currentTime + 0.01;
                }
                function ht(t, i) {
                    !function (t, i, e) {
                        const s = t.document.createElement('link');
                        s.rel = 'preload', s.href = i, s.as = e, t.document.head.appendChild(s);
                    }(i, t, 'script');
                }
            },
            function (t, i, e) {
                'use strict';
                var s, n;
                e.d(i, 'a', function () {
                    return s;
                }), e.d(i, 'b', function () {
                    return n;
                }), function (t) {
                    t.Fullscreen = 'fullscreen', t.Normal = 'normal', t.Thumbnail = 'thumbnail';
                }(s || (s = {})), function (t) {
                    t.AdLoaded = 'AdLoaded', t.AdStarted = 'AdStarted', t.AdStopped = 'AdStopped', t.AdSkipped = 'AdSkipped', t.AdSkippableStateChange = 'AdSkippableStateChange', t.AdSizeChange = 'AdSizeChange', t.AdLinearChange = 'AdLinearChange', t.AdDurationChange = 'AdDurationChange', t.AdExpandedChange = 'AdExpandedChange', t.AdRemainingTimeChange = 'AdRemainingTimeChange', t.AdVolumeChange = 'AdVolumeChange', t.AdImpression = 'AdImpression', t.AdVideoStart = 'AdVideoStart', t.AdVideoFirstQuartile = 'AdVideoFirstQuartile', t.AdVideoMidpoint = 'AdVideoMidpoint', t.AdVideoThirdQuartile = 'AdVideoThirdQuartile', t.AdVideoComplete = 'AdVideoComplete', t.AdClickThru = 'AdClickThru', t.AdInteraction = 'AdInteraction', t.AdUserAcceptInvitation = 'AdUserAcceptInvitation', t.AdUserMinimize = 'AdUserMinimize', t.AdUserClose = 'AdUserClose', t.AdPaused = 'AdPaused', t.AdPlaying = 'AdPlaying', t.AdLog = 'AdLog', t.AdError = 'AdError';
                }(n || (n = {}));
            },
            function (t, i, e) {
                'use strict';
                var s, n, r;
                e.d(i, 'h', function () {
                    return s;
                }), e.d(i, 'g', function () {
                    return n;
                }), e.d(i, 'j', function () {
                    return r;
                }), e.d(i, 'r', function () {
                    return h;
                }), e.d(i, 'i', function () {
                    return a;
                }), e.d(i, 'k', function () {
                    return o;
                }), e.d(i, 'f', function () {
                    return c;
                }), e.d(i, 'l', function () {
                    return l;
                }), e.d(i, 'e', function () {
                    return d;
                }), e.d(i, 'n', function () {
                    return f;
                }), e.d(i, 'm', function () {
                    return p;
                }), e.d(i, 'q', function () {
                    return v;
                }), e.d(i, 'o', function () {
                    return m;
                }), e.d(i, 'b', function () {
                    return g;
                }), e.d(i, 'c', function () {
                    return y;
                }), e.d(i, 'd', function () {
                    return w;
                }), e.d(i, 'p', function () {
                    return O;
                }), e.d(i, 'a', function () {
                    return x;
                }), function (t) {
                    t.Invisible = 'cnx-mod-invisible', t.HoverStart = 'cnx-mod-hover-s', t.HoverEnd = 'cnx-mod-hover', t.HoverBoom = 'cnx-mod-boom', t.DisplayNone = 'cnx-mod-display-none', t.Active = 'cnx-mod-active', t.HideOnVolumeHover = 'cnx-hide-on-volume-hover', t.HideOnSingleVideo = 'cnx-hide-on-single-video', t.NoTransition = 'cnx-mod-no-transition', t.Collapsable = 'cnx-mod-collapsable', t.HasCustomScrollbar = 'cnx-mod-scrollbar', t.Show = 'cnx-mod-show', t.Hide = 'cnx-mod-hide', t.OnHold = 'cnx-mod-onhold', t.ForceLineBreak = 'cnx-mod-force-line-break', t.HideOnAdOverlay = 'cnx-mod-ad-overlay-none', t.HideOnPodLoadingScreen = 'cnx-mod-pod-loading-none';
                }(s || (s = {})), function (t) {
                    t.Fullscreen = 'cnx-in-fullscreen', t.Ad = 'cnx-in-ad', t.AdOverlayType = 'cnx-in-ad-overlay', t.AdFullSize = 'cnx-in-ad-full', t.AdShowCard = 'cnx-ad-show-card', t.ShowControls = 'cnx-in-show-controls', t.Mobile = 'cnx-in-mobile', t.Desktop = 'cnx-in-desktop', t.Muted = 'cnx-in-mute', t.Collapsed = 'cnx-in-collapse', t.GalleryPortrait = 'cnx-in-g-portrait', t.GalleryLandscape = 'cnx-in-g-landscape', t.ContextController = 'cnx-context-controller', t.HideUI = 'cnx-in-hide-ui', t.PodLoadingScreen = 'cnx-in-pod-loading', t.CloseOn = 'cnx-close-on', t.CloseOff = 'cnx-close-off', t.CloseHover = 'cnx-close-hover', t.CloseFloatOn = 'cnx-close-float-on', t.CloseFloatOff = 'cnx-close-float-off', t.CloseFloatHover = 'cnx-close-float-hover', t.UiInView = 'cnx-ui-in-view';
                }(n || (n = {})), function (t) {
                    t.Playing = 'cnx-is-playing', t.Paused = 'cnx-is-paused', t.Stopped = 'cnx-is-stopped', t.Preroll = 'cnx-is-preroll', t.Postroll = 'cnx-is-postroll', t.Loading = 'cnx-is-loading', t.LiveEnded = 'cnx-live-ended';
                }(r || (r = {}));
                const h = {
                    Xxl: 'cnx-bp-xxl-v',
                    Xl: 'cnx-bp-xl-v',
                    Lg: 'cnx-bp-lg-v',
                    Md: 'cnx-bp-md-v',
                    Sm: 'cnx-bp-sm-v',
                    Xs: 'cnx-bp-xs-v',
                    Xxs: 'cnx-bp-xxs-v'
                };
                var a, o, c, u, l, d, f;
                !function (t) {
                    t.Responsive = 'cnx-size-responsive', t.Fixed = 'cnx-size-fixed';
                }(a || (a = {})), function (t) {
                    t.ClickOption = 'cnx-cm-item--click', t.ToggleOption = 'cnx-cm-item--toggle', t.SubmenuOption = 'cnx-cm-item--submenu', t.ItemIcon = 'cnx-cm-item__icon', t.ItemTitle = 'cnx-cm-item__title', t.ItemExtra = 'cnx-cm-item__extra', t.Items = 'cnx-cm-items', t.Container = 'cnx-cm-container';
                }(o || (o = {})), function (t) {
                    t.Icons = 'cnx-color-icon', t.TooltipText = 'cnx-color-tt-text', t.TooltipBackground = 'cnx-color-tt-bg', t.AccentColor = 'cnx-color-accent', t.PrimaryColor = 'cnx-color-primary', t.SecondaryColor = 'cnx-color-secondary', t.TitleComponent = 'cnx-title-component', t.TitleLink = 'cnx-color-title-link', t.SlideProgressBar = 'cnx-slides-progress-bar', t.ProgressFill = 'cnx-progress-fill';
                }(c || (c = {})), function (t) {
                    t.InheritTitleFontFamily = 'cnx-inherit-title-font-family', t.InheritBodyFontFamily = 'cnx-inherit-body-font-family';
                }(u || (u = {})), function (t) {
                    t.Connatix = '#0099FF', t.Icons = '#FFFFFF', t.PrimaryBackground = '#F1F1F1', t.PrimaryForeground = '#000000', t.SecondaryBackground = '#000000', t.SecondaryForeground = '#F1F1F1', t.AccentForeground = '#FFFFFF';
                }(l || (l = {})), function (t) {
                    t.CaptionContainer = 'cnx-captions-text-holder';
                }(d || (d = {})), function (t) {
                    t.MainClass = 'cnx-float', t.TransitionClass = 'cnx-float-transition';
                }(f || (f = {}));
                const p = {
                    FadeOutBase: 'cnx-fade-out-base',
                    FadeOut: 'cnx-fade-out',
                    FadeInBase: 'cnx-fade-in-base',
                    FadeIn: 'cnx-fade-in'
                };
                var b, v, m;
                !function (t) {
                    t.CurrentSlide = 'cnx-slide-current', t.NextSlide = 'cnx-slide-next', t.SlideLeft = 'cnx-slide-left', t.SlideRight = 'cnx-slide-right';
                }(b || (b = {})), function (t) {
                    t.OpacityInTransition = 'cnx-tooltip-animation-in';
                }(v || (v = {})), function (t) {
                    t.Card = 'cnx-g-card', t.CardSlot = 'cnx-g-card-slot', t.CardImage = 'cnx-g-card-image', t.CardText = 'cnx-g-card-text', t.CardTextContainer = 'cnx-g-card-text-container', t.CardPlaceholder = 'cnx-g-card-placeholder', t.CardRail = 'cnx-g-rail', t.StyleDetailed = 'cnx-g-style-detailed', t.StyleVisual = 'cnx-g-style-visual', t.ExploreMore = 'cnx-g-explore-more', t.FadeOut = 'cnx-g-fade-out';
                }(m || (m = {}));
                const g = {
                        MainContainer: 'cnx-main-container',
                        MainContainerFlex: 'cnx-main-container-flex',
                        PlayerWrapper: 'cnx-player-wrapper',
                        ImagePlaceholder: 'cnx-image-placeholder'
                    }, y = 'cnx-ratio', w = 'cnx-hide-video', O = {
                        Text: 'cnx-skip-ad-text',
                        Timer: 'cnx-timer-loader',
                        Icon: 'cnx-skip-ad-icon',
                        SkipAdButton: 'cnx-skip-ad-button',
                        InTimer: 'cnx-skip-ad-in-timer'
                    }, x = {
                        Icon: 'cnx-pod-open-new-icon',
                        Button: 'cnx-pod-read-more-btn',
                        ButtonContainer: 'cnx-pod-read-more-container',
                        Wrapper: 'cnx-pod-read-more-wrapper',
                        BackgroundImg: 'cnx-pod-loading-background',
                        InfoContainer: 'cnx-pod-loading-info',
                        FallbackContainer: 'cnx-pod-loading-fallback',
                        SlotCountText: 'cnx-pod-slot-count-text'
                    };
            },
            function (t, i, e) {
                'use strict';
                var s = e(21), n = e(23), r = e(0), h = e(14), a = e(30);
                const o = !0, c = 30;
                var u = e(36);
                e.d(i, 'a', function () {
                    return b;
                });
                var l = function (t, i) {
                    var e = {};
                    for (var s in t)
                        Object.prototype.hasOwnProperty.call(t, s) && i.indexOf(s) < 0 && (e[s] = t[s]);
                    if (null != t && 'function' == typeof Object.getOwnPropertySymbols) {
                        var n = 0;
                        for (s = Object.getOwnPropertySymbols(t); n < s.length; n++)
                            i.indexOf(s[n]) < 0 && Object.prototype.propertyIsEnumerable.call(t, s[n]) && (e[s[n]] = t[s[n]]);
                    }
                    return e;
                };
                const d = 500;
                let f = window.location && window.location.href, p = !1;
                try {
                    f = window.top.location.href;
                } catch (t) {
                }
                function b(t) {
                    var {
                            throttle: i = c,
                            sendMaxLog: e = !0,
                            logJsonState: v = !1
                        } = t, m = l(t, [
                            'throttle',
                            'sendMaxLog',
                            'logJsonState'
                        ]);
                    if (!p)
                        if (m.playerDestroyed && (p = !0), m.sessionId = a.a.sessionId, o && (a.a.incrementLogCount(m.message), a.a.isMaxLogOverflow(m.message) && b({
                                message: 'Logging_max_log_overflow_1000',
                                exception: m.message,
                                callStack: m.callStack,
                                level: r.ProtoLoggingLevelEnum.FATAL,
                                sendMaxLog: !1,
                                throttle: 100,
                                sessionId: a.a.sessionId
                            }), a.a.isMaxLog(m.message, i)))
                            e && !a.a.isMaxLogSent(m.message) && (a.a.setMaxLogSent(m.message), b({
                                message: 'Logging_max_log_sent',
                                exception: m.message,
                                callStack: m.callStack,
                                level: r.ProtoLoggingLevelEnum.FATAL,
                                sessionId: a.a.sessionId
                            }));
                        else {
                            if (v && (m.callStack = u.a.getJsonString()), void 0 === m.callStack) {
                                const t = new Error(m.message);
                                m.callStack = t.stack;
                            }
                            if (m.callStack = m.callStack.substring(0, d), s.a.logToServer) {
                                m.pageUrl = f, m.version = s.a.version;
                                const t = {
                                    requestData: m,
                                    endpoint: h.a.endPoints.tracking.logging,
                                    ProtoRequest: r.ProtoLoggingRequest,
                                    logError: !0
                                };
                                m.sendBeacon ? n.a.sendProtoBeaconRequest(t) : n.a.sendProtoRequest(t).catch(t => {
                                });
                            }
                            s.a.logToConsole && function (t) {
                                let i;
                                switch (t.level) {
                                case r.ProtoLoggingLevelEnum.FATAL:
                                    i = '#8B0000';
                                    break;
                                case r.ProtoLoggingLevelEnum.WARNING:
                                    i = '#FF8C00';
                                    break;
                                case r.ProtoLoggingLevelEnum.INFO:
                                    i = '#000000';
                                }
                                console.log(`%cConnatix Logging:\n   message: ${ t.message }\n   exception: ${ t.exception }\n   level: ${ t.level }\n   version: ${ t.version }\n   sessionId: ${ t.sessionId }\n   callStack: ${ t.callStack }`, `color:${ i }`);
                            }(m);
                        }
                }
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'g', function () {
                    return o;
                }), e.d(i, 'm', function () {
                    return c;
                }), e.d(i, 'e', function () {
                    return u;
                }), e.d(i, 'c', function () {
                    return l;
                }), e.d(i, 'f', function () {
                    return d;
                }), e.d(i, 'h', function () {
                    return f;
                }), e.d(i, 'i', function () {
                    return p;
                }), e.d(i, 'l', function () {
                    return b;
                }), e.d(i, 'j', function () {
                    return v;
                }), e.d(i, 'a', function () {
                    return m;
                }), e.d(i, 'b', function () {
                    return g;
                }), e.d(i, 'n', function () {
                    return y;
                }), e.d(i, 'k', function () {
                    return w;
                }), e.d(i, 'd', function () {
                    return O;
                });
                var s = e(31), n = e(8), r = e(1), h = e(5), a = e(0);
                function o(t, i) {
                    return i.indexOf(t) > -1;
                }
                function c(t) {
                    return Array.isArray(t) ? t : [t];
                }
                function u(t, i) {
                    const e = [], s = new Map();
                    return i.forEach(i => {
                        s.has(i[t]) || (s.set(i[t], !0), e.push(i));
                    }), e;
                }
                function l(t) {
                    return [].slice.call(t);
                }
                function d(t) {
                    const i = [];
                    for (const e in t)
                        e && parseInt(e, 10) >= 0 && i.push(t[e]);
                    return i;
                }
                function f(t) {
                    return t && t.length > 0;
                }
                function p(t) {
                    return t.every(t => {
                        return Object(r.d)(t);
                    });
                }
                function b(t) {
                    let i = '[';
                    for (let e = 0; e < t.length; e++)
                        i += Object(s.c)(t[e]) + (e === t.length - 1 ? '' : ',');
                    return i += ']';
                }
                function v(t, i) {
                    return !(!t || !i) && (t.length === i.length && (t === i || 0 === t.length && 0 === i.length || t.every((t, e) => {
                        return Object(n.i)(t, i[e]);
                    })));
                }
                function m(t, i) {
                    return t.filter(t => {
                        return !i.includes(t);
                    });
                }
                function g(t, i) {
                    return t.filter(t => {
                        return i.includes(t);
                    });
                }
                function y(t) {
                    return t.filter((i, e) => {
                        return t.indexOf(i) === e;
                    });
                }
                function w(t, i) {
                    const e = t.indexOf(i);
                    -1 !== e ? t.splice(e, 1) : Object(h.a)({
                        message: 'removeItemFromArray_error_item_not_found',
                        exception: JSON.stringify(i),
                        level: a.ProtoLoggingLevelEnum.WARNING
                    });
                }
                function O(t) {
                    const i = [];
                    return t.forEach(t => {
                        return i.push(t);
                    }), i;
                }
            },
            function (t, i, e) {
                'use strict';
                var s, n, r = e(60), h = r.Reader, a = r.Writer, o = r.util, c = r.roots.default || (r.roots.default = {});
                c.ProtoElementsRequest = function () {
                    function t(t) {
                        if (this.tokens = [], this.forceLineItemIds = [], this.queryJsTargeting = {}, this.reloadedPlayers = {}, t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.tokens = o.emptyArray, t.prototype.pageUrl = '', t.prototype.userId = '', t.prototype.forcePlayerId = '', t.prototype.forceMediaId = '', t.prototype.forcePlaylistId = '', t.prototype.version = 0, t.prototype.forceLineItemIds = o.emptyArray, t.prototype.clientAb0 = 0, t.prototype.clientAb1 = 0, t.prototype.customParam1 = '', t.prototype.customParam2 = '', t.prototype.customParam3 = '', t.prototype.forceExploration = !1, t.prototype.es6 = !1, t.prototype.bundleId = '', t.prototype.forceSourceItemId = '', t.prototype.parseDomain = !1, t.prototype.implementationType = 0, t.prototype.queryJsTargeting = o.emptyObject, t.prototype.isConsentConnatix = !0, t.prototype.reloadedPlayers = o.emptyObject, t.prototype.disableTracking = !1, t.prototype.referrer = '', t.prototype.localTimestamp = o.Long ? o.Long.fromBits(0, 0, !1) : 0, t.prototype.customParam4 = '', t.prototype.customParam5 = '', t.encode = function (t, i) {
                        if (i || (i = a.create()), null != t.tokens && t.tokens.length)
                            for (var e = 0; e < t.tokens.length; ++e)
                                i.uint32(10).string(t.tokens[e]);
                        if (null != t.pageUrl && Object.hasOwnProperty.call(t, 'pageUrl') && i.uint32(26).string(t.pageUrl), null != t.userId && Object.hasOwnProperty.call(t, 'userId') && i.uint32(42).string(t.userId), null != t.forcePlayerId && Object.hasOwnProperty.call(t, 'forcePlayerId') && i.uint32(58).string(t.forcePlayerId), null != t.forceMediaId && Object.hasOwnProperty.call(t, 'forceMediaId') && i.uint32(66).string(t.forceMediaId), null != t.forcePlaylistId && Object.hasOwnProperty.call(t, 'forcePlaylistId') && i.uint32(74).string(t.forcePlaylistId), null != t.version && Object.hasOwnProperty.call(t, 'version') && i.uint32(80).int32(t.version), null != t.forceLineItemIds && t.forceLineItemIds.length)
                            for (e = 0; e < t.forceLineItemIds.length; ++e)
                                i.uint32(90).string(t.forceLineItemIds[e]);
                        if (null != t.clientAb0 && Object.hasOwnProperty.call(t, 'clientAb0') && i.uint32(96).int32(t.clientAb0), null != t.clientAb1 && Object.hasOwnProperty.call(t, 'clientAb1') && i.uint32(104).int32(t.clientAb1), null != t.customParam1 && Object.hasOwnProperty.call(t, 'customParam1') && i.uint32(130).string(t.customParam1), null != t.customParam2 && Object.hasOwnProperty.call(t, 'customParam2') && i.uint32(138).string(t.customParam2), null != t.customParam3 && Object.hasOwnProperty.call(t, 'customParam3') && i.uint32(146).string(t.customParam3), null != t.forceExploration && Object.hasOwnProperty.call(t, 'forceExploration') && i.uint32(160).bool(t.forceExploration), null != t.es6 && Object.hasOwnProperty.call(t, 'es6') && i.uint32(168).bool(t.es6), null != t.bundleId && Object.hasOwnProperty.call(t, 'bundleId') && i.uint32(178).string(t.bundleId), null != t.forceSourceItemId && Object.hasOwnProperty.call(t, 'forceSourceItemId') && i.uint32(186).string(t.forceSourceItemId), null != t.parseDomain && Object.hasOwnProperty.call(t, 'parseDomain') && i.uint32(192).bool(t.parseDomain), null != t.implementationType && Object.hasOwnProperty.call(t, 'implementationType') && i.uint32(200).int32(t.implementationType), null != t.queryJsTargeting && Object.hasOwnProperty.call(t, 'queryJsTargeting')) {
                            var s = Object.keys(t.queryJsTargeting);
                            for (e = 0; e < s.length; ++e)
                                i.uint32(210).fork().uint32(10).string(s[e]).uint32(18).string(t.queryJsTargeting[s[e]]).ldelim();
                        }
                        if (null != t.isConsentConnatix && Object.hasOwnProperty.call(t, 'isConsentConnatix') && i.uint32(216).bool(t.isConsentConnatix), null != t.reloadedPlayers && Object.hasOwnProperty.call(t, 'reloadedPlayers'))
                            for (s = Object.keys(t.reloadedPlayers), e = 0; e < s.length; ++e)
                                i.uint32(234).fork().uint32(10).string(s[e]).uint32(18).string(t.reloadedPlayers[s[e]]).ldelim();
                        return null != t.disableTracking && Object.hasOwnProperty.call(t, 'disableTracking') && i.uint32(248).bool(t.disableTracking), null != t.referrer && Object.hasOwnProperty.call(t, 'referrer') && i.uint32(258).string(t.referrer), null != t.localTimestamp && Object.hasOwnProperty.call(t, 'localTimestamp') && i.uint32(264).int64(t.localTimestamp), null != t.customParam4 && Object.hasOwnProperty.call(t, 'customParam4') && i.uint32(274).string(t.customParam4), null != t.customParam5 && Object.hasOwnProperty.call(t, 'customParam5') && i.uint32(282).string(t.customParam5), i;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.ProtoElementsRequest)
                            return t;
                        var i = new c.ProtoElementsRequest();
                        if (t.tokens) {
                            if (!Array.isArray(t.tokens))
                                throw TypeError('.ProtoElementsRequest.tokens: array expected');
                            i.tokens = [];
                            for (var e = 0; e < t.tokens.length; ++e)
                                i.tokens[e] = String(t.tokens[e]);
                        }
                        if (null != t.pageUrl && (i.pageUrl = String(t.pageUrl)), null != t.userId && (i.userId = String(t.userId)), null != t.forcePlayerId && (i.forcePlayerId = String(t.forcePlayerId)), null != t.forceMediaId && (i.forceMediaId = String(t.forceMediaId)), null != t.forcePlaylistId && (i.forcePlaylistId = String(t.forcePlaylistId)), null != t.version && (i.version = 0 | t.version), t.forceLineItemIds) {
                            if (!Array.isArray(t.forceLineItemIds))
                                throw TypeError('.ProtoElementsRequest.forceLineItemIds: array expected');
                            i.forceLineItemIds = [];
                            for (e = 0; e < t.forceLineItemIds.length; ++e)
                                i.forceLineItemIds[e] = String(t.forceLineItemIds[e]);
                        }
                        switch (null != t.clientAb0 && (i.clientAb0 = 0 | t.clientAb0), null != t.clientAb1 && (i.clientAb1 = 0 | t.clientAb1), null != t.customParam1 && (i.customParam1 = String(t.customParam1)), null != t.customParam2 && (i.customParam2 = String(t.customParam2)), null != t.customParam3 && (i.customParam3 = String(t.customParam3)), null != t.forceExploration && (i.forceExploration = Boolean(t.forceExploration)), null != t.es6 && (i.es6 = Boolean(t.es6)), null != t.bundleId && (i.bundleId = String(t.bundleId)), null != t.forceSourceItemId && (i.forceSourceItemId = String(t.forceSourceItemId)), null != t.parseDomain && (i.parseDomain = Boolean(t.parseDomain)), t.implementationType) {
                        case 'Web':
                        case 0:
                            i.implementationType = 0;
                            break;
                        case 'Amp':
                        case 1:
                            i.implementationType = 1;
                        }
                        if (t.queryJsTargeting) {
                            if ('object' != typeof t.queryJsTargeting)
                                throw TypeError('.ProtoElementsRequest.queryJsTargeting: object expected');
                            i.queryJsTargeting = {};
                            var s = Object.keys(t.queryJsTargeting);
                            for (e = 0; e < s.length; ++e)
                                i.queryJsTargeting[s[e]] = String(t.queryJsTargeting[s[e]]);
                        }
                        if (null != t.isConsentConnatix && (i.isConsentConnatix = Boolean(t.isConsentConnatix)), t.reloadedPlayers) {
                            if ('object' != typeof t.reloadedPlayers)
                                throw TypeError('.ProtoElementsRequest.reloadedPlayers: object expected');
                            i.reloadedPlayers = {};
                            for (s = Object.keys(t.reloadedPlayers), e = 0; e < s.length; ++e)
                                i.reloadedPlayers[s[e]] = String(t.reloadedPlayers[s[e]]);
                        }
                        return null != t.disableTracking && (i.disableTracking = Boolean(t.disableTracking)), null != t.referrer && (i.referrer = String(t.referrer)), null != t.localTimestamp && (o.Long ? (i.localTimestamp = o.Long.fromValue(t.localTimestamp)).unsigned = !1 : 'string' == typeof t.localTimestamp ? i.localTimestamp = parseInt(t.localTimestamp, 10) : 'number' == typeof t.localTimestamp ? i.localTimestamp = t.localTimestamp : 'object' == typeof t.localTimestamp && (i.localTimestamp = new o.LongBits(t.localTimestamp.low >>> 0, t.localTimestamp.high >>> 0).toNumber())), null != t.customParam4 && (i.customParam4 = String(t.customParam4)), null != t.customParam5 && (i.customParam5 = String(t.customParam5)), i;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoPlaylistItem = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.mediaId = '', t.prototype.revisionNumber = 0, t.prototype.mediaContentVersionId = '', t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoPlaylistItem(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.mediaId = t.string();
                                break;
                            case 2:
                                s.revisionNumber = t.int32();
                                break;
                            case 3:
                                s.mediaContentVersionId = t.string();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.mediaId = '', e.revisionNumber = 0, e.mediaContentVersionId = ''), null != t.mediaId && t.hasOwnProperty('mediaId') && (e.mediaId = t.mediaId), null != t.revisionNumber && t.hasOwnProperty('revisionNumber') && (e.revisionNumber = t.revisionNumber), null != t.mediaContentVersionId && t.hasOwnProperty('mediaContentVersionId') && (e.mediaContentVersionId = t.mediaContentVersionId), e;
                    }, t;
                }(), c.ProtoElements = function () {
                    function t(t) {
                        if (this.sharingDestinations = [], this.floatingDeviceMode = [], this.lineItems = [], this.playlist = [], this.adBreaks = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.playerId = '', t.prototype.playbackMode = 0, t.prototype.soundMode = 0, t.prototype.upNextMode = 1, t.prototype.containerSelector = '', t.prototype.position = 0, t.prototype.insertPosition = 0, t.prototype.forceInsertPath = !1, t.prototype.renderInFrame = !1, t.prototype.scrollHijackingProtection = !1, t.prototype.preRollBreak = 0, t.prototype.postRollBreak = 0, t.prototype.midRollNumber = -1, t.prototype.timeBetweenAds = 0, t.prototype.minTimeBeforeFirstAd = 0, t.prototype.adViewabilityPolicy = 0, t.prototype.responsive = !1, t.prototype.ratioWidth = 0, t.prototype.ratioHeight = 0, t.prototype.fixedWidth = 0, t.prototype.fixedHeight = 0, t.prototype.casting = !1, t.prototype.sharingDestinations = o.emptyArray, t.prototype.closedCaption = !1, t.prototype.muteWatermark = !1, t.prototype.expandButton = !1, t.prototype.closeButtonMode = 0, t.prototype.floatingMode = 0, t.prototype.floatingDeviceMode = o.emptyArray, t.prototype.floatingCloseButtonMode = 0, t.prototype.floatingFixedPosition = 0, t.prototype.floatingPageElement = '', t.prototype.floatingUseElementWidth = !1, t.prototype.floatingScrollPosition = 0, t.prototype.floatingGutterX = 0, t.prototype.floatingGutterY = 0, t.prototype.floatingWidth = 0, t.prototype.iconsColor = '', t.prototype.accentColor = '', t.prototype.tooltipTextColor = '', t.prototype.tooltipBackgroundColor = '', t.prototype.html = '', t.prototype.galleryStyle = 0, t.prototype.logoPosition = 0, t.prototype.logoUrl = '', t.prototype.lineItems = o.emptyArray, t.prototype.adPlaybackMode = 0, t.prototype.css = '', t.prototype.sessionId = '', t.prototype.playlistId = '', t.prototype.playerType = 0, t.prototype.outstreamInitialRendering = 0, t.prototype.outstreamHouseBackgroundColor = '', t.prototype.outstreamTotalAdBreakLength = 0, t.prototype.outstreamEndAdBreakPolicy = 0, t.prototype.galleryOrientation = 0, t.prototype.playlist = o.emptyArray, t.prototype.floatingAppendLocation = 0, t.prototype.floatingYAxisPadding = 0, t.prototype.customJsCode = '', t.prototype.videoQuality = 0, t.prototype.initializationSettingsJson = '', t.prototype.adSkippability = 0, t.prototype.skipAdAfter = 5, t.prototype.adBreaks = o.emptyArray, t.prototype.amazonTamSlotId = '', t.prototype.midRollOnlyOnLongContent = !0, t.prototype.limitClientSideApiUse = !1, t.prototype.abTestId = '', t.prototype.adsMustBeSkippableIfLongerThan = 31, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoElements(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.playerId = t.string();
                                break;
                            case 2:
                                s.playbackMode = t.int32();
                                break;
                            case 3:
                                s.soundMode = t.int32();
                                break;
                            case 4:
                                s.upNextMode = t.int32();
                                break;
                            case 5:
                                s.containerSelector = t.string();
                                break;
                            case 6:
                                s.position = t.int32();
                                break;
                            case 7:
                                s.insertPosition = t.int32();
                                break;
                            case 8:
                                s.forceInsertPath = t.bool();
                                break;
                            case 9:
                                s.renderInFrame = t.bool();
                                break;
                            case 10:
                                s.scrollHijackingProtection = t.bool();
                                break;
                            case 11:
                                s.preRollBreak = t.int32();
                                break;
                            case 12:
                                s.postRollBreak = t.int32();
                                break;
                            case 13:
                                s.midRollNumber = t.int32();
                                break;
                            case 14:
                                s.timeBetweenAds = t.int32();
                                break;
                            case 15:
                                s.minTimeBeforeFirstAd = t.int32();
                                break;
                            case 16:
                                s.adViewabilityPolicy = t.int32();
                                break;
                            case 18:
                                s.responsive = t.bool();
                                break;
                            case 19:
                                s.ratioWidth = t.int32();
                                break;
                            case 20:
                                s.ratioHeight = t.int32();
                                break;
                            case 21:
                                s.fixedWidth = t.int32();
                                break;
                            case 22:
                                s.fixedHeight = t.int32();
                                break;
                            case 23:
                                s.casting = t.bool();
                                break;
                            case 24:
                                if (s.sharingDestinations && s.sharingDestinations.length || (s.sharingDestinations = []), 2 == (7 & n))
                                    for (var r = t.uint32() + t.pos; t.pos < r;)
                                        s.sharingDestinations.push(t.int32());
                                else
                                    s.sharingDestinations.push(t.int32());
                                break;
                            case 25:
                                s.closedCaption = t.bool();
                                break;
                            case 26:
                                s.muteWatermark = t.bool();
                                break;
                            case 27:
                                s.expandButton = t.bool();
                                break;
                            case 28:
                                s.closeButtonMode = t.int32();
                                break;
                            case 29:
                                s.floatingMode = t.int32();
                                break;
                            case 30:
                                if (s.floatingDeviceMode && s.floatingDeviceMode.length || (s.floatingDeviceMode = []), 2 == (7 & n))
                                    for (r = t.uint32() + t.pos; t.pos < r;)
                                        s.floatingDeviceMode.push(t.int32());
                                else
                                    s.floatingDeviceMode.push(t.int32());
                                break;
                            case 31:
                                s.floatingCloseButtonMode = t.int32();
                                break;
                            case 32:
                                s.floatingFixedPosition = t.int32();
                                break;
                            case 33:
                                s.floatingPageElement = t.string();
                                break;
                            case 34:
                                s.floatingUseElementWidth = t.bool();
                                break;
                            case 35:
                                s.floatingScrollPosition = t.int32();
                                break;
                            case 36:
                                s.floatingGutterX = t.int32();
                                break;
                            case 37:
                                s.floatingGutterY = t.int32();
                                break;
                            case 38:
                                s.floatingWidth = t.int32();
                                break;
                            case 39:
                                s.iconsColor = t.string();
                                break;
                            case 40:
                                s.accentColor = t.string();
                                break;
                            case 41:
                                s.tooltipTextColor = t.string();
                                break;
                            case 42:
                                s.tooltipBackgroundColor = t.string();
                                break;
                            case 43:
                                s.html = t.string();
                                break;
                            case 45:
                                s.galleryStyle = t.int32();
                                break;
                            case 46:
                                s.logoPosition = t.int32();
                                break;
                            case 47:
                                s.logoUrl = t.string();
                                break;
                            case 49:
                                s.lineItems && s.lineItems.length || (s.lineItems = []), s.lineItems.push(c.ProtoLineItem.decode(t, t.uint32()));
                                break;
                            case 50:
                                s.adPlaybackMode = t.int32();
                                break;
                            case 51:
                                s.css = t.string();
                                break;
                            case 52:
                                s.sessionId = t.string();
                                break;
                            case 53:
                                s.playlistId = t.string();
                                break;
                            case 54:
                                s.playerType = t.int32();
                                break;
                            case 55:
                                s.outstreamInitialRendering = t.int32();
                                break;
                            case 56:
                                s.outstreamHouseBackgroundColor = t.string();
                                break;
                            case 57:
                                s.outstreamTotalAdBreakLength = t.int32();
                                break;
                            case 58:
                                s.outstreamEndAdBreakPolicy = t.int32();
                                break;
                            case 59:
                                s.galleryOrientation = t.int32();
                                break;
                            case 60:
                                s.playlist && s.playlist.length || (s.playlist = []), s.playlist.push(c.ProtoPlaylistItem.decode(t, t.uint32()));
                                break;
                            case 61:
                                s.floatingAppendLocation = t.int32();
                                break;
                            case 62:
                                s.floatingYAxisPadding = t.int32();
                                break;
                            case 63:
                                s.customJsCode = t.string();
                                break;
                            case 64:
                                s.videoQuality = t.int32();
                                break;
                            case 65:
                                s.initializationSettingsJson = t.string();
                                break;
                            case 66:
                                s.adSkippability = t.int32();
                                break;
                            case 67:
                                s.skipAdAfter = t.int32();
                                break;
                            case 68:
                                s.adBreaks && s.adBreaks.length || (s.adBreaks = []), s.adBreaks.push(c.ProtoAdBreak.decode(t, t.uint32()));
                                break;
                            case 69:
                                s.amazonTamSlotId = t.string();
                                break;
                            case 70:
                                s.midRollOnlyOnLongContent = t.bool();
                                break;
                            case 71:
                                s.limitClientSideApiUse = t.bool();
                                break;
                            case 72:
                                s.abTestId = t.string();
                                break;
                            case 73:
                                s.adsMustBeSkippableIfLongerThan = t.int32();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.sharingDestinations = [], e.floatingDeviceMode = [], e.lineItems = [], e.playlist = [], e.adBreaks = []), i.defaults && (e.playerId = '', e.playbackMode = i.enums === String ? 'Autoplay' : 0, e.soundMode = i.enums === String ? 'Mute' : 0, e.upNextMode = i.enums === String ? 'Next' : 1, e.containerSelector = '', e.position = 0, e.insertPosition = i.enums === String ? 'WithinContainer' : 0, e.forceInsertPath = !1, e.renderInFrame = !1, e.scrollHijackingProtection = !1, e.preRollBreak = 0, e.postRollBreak = 0, e.midRollNumber = -1, e.timeBetweenAds = 0, e.minTimeBeforeFirstAd = 0, e.adViewabilityPolicy = i.enums === String ? 'Default' : 0, e.responsive = !1, e.ratioWidth = 0, e.ratioHeight = 0, e.fixedWidth = 0, e.fixedHeight = 0, e.casting = !1, e.closedCaption = !1, e.muteWatermark = !1, e.expandButton = !1, e.closeButtonMode = i.enums === String ? 'Off' : 0, e.floatingMode = i.enums === String ? 'Off' : 0, e.floatingCloseButtonMode = i.enums === String ? 'Off' : 0, e.floatingFixedPosition = i.enums === String ? 'Page' : 0, e.floatingPageElement = '', e.floatingUseElementWidth = !1, e.floatingScrollPosition = i.enums === String ? 'BottomRight' : 0, e.floatingGutterX = 0, e.floatingGutterY = 0, e.floatingWidth = 0, e.iconsColor = '', e.accentColor = '', e.tooltipTextColor = '', e.tooltipBackgroundColor = '', e.html = '', e.galleryStyle = i.enums === String ? 'None' : 0, e.logoPosition = i.enums === String ? 'None' : 0, e.logoUrl = '', e.adPlaybackMode = i.enums === String ? 'Autoplay' : 0, e.css = '', e.sessionId = '', e.playlistId = '', e.playerType = i.enums === String ? 'InStream' : 0, e.outstreamInitialRendering = i.enums === String ? 'ExpandWithAd' : 0, e.outstreamHouseBackgroundColor = '', e.outstreamTotalAdBreakLength = 0, e.outstreamEndAdBreakPolicy = i.enums === String ? 'Hide' : 0, e.galleryOrientation = i.enums === String ? 'Landscape' : 0, e.floatingAppendLocation = i.enums === String ? 'Above' : 0, e.floatingYAxisPadding = 0, e.customJsCode = '', e.videoQuality = i.enums === String ? 'Auto' : 0, e.initializationSettingsJson = '', e.adSkippability = i.enums === String ? 'IfLongerThan' : 0, e.skipAdAfter = 5, e.amazonTamSlotId = '', e.midRollOnlyOnLongContent = !0, e.limitClientSideApiUse = !1, e.abTestId = '', e.adsMustBeSkippableIfLongerThan = 31), null != t.playerId && t.hasOwnProperty('playerId') && (e.playerId = t.playerId), null != t.playbackMode && t.hasOwnProperty('playbackMode') && (e.playbackMode = i.enums === String ? c.ProtoPlayerPlaybackModeEnum[t.playbackMode] : t.playbackMode), null != t.soundMode && t.hasOwnProperty('soundMode') && (e.soundMode = i.enums === String ? c.ProtoPlayerSoundMode[t.soundMode] : t.soundMode), null != t.upNextMode && t.hasOwnProperty('upNextMode') && (e.upNextMode = i.enums === String ? c.ProtoPlayerUpNextMode[t.upNextMode] : t.upNextMode), null != t.containerSelector && t.hasOwnProperty('containerSelector') && (e.containerSelector = t.containerSelector), null != t.position && t.hasOwnProperty('position') && (e.position = t.position), null != t.insertPosition && t.hasOwnProperty('insertPosition') && (e.insertPosition = i.enums === String ? c.ProtoPlayerInsertMode[t.insertPosition] : t.insertPosition), null != t.forceInsertPath && t.hasOwnProperty('forceInsertPath') && (e.forceInsertPath = t.forceInsertPath), null != t.renderInFrame && t.hasOwnProperty('renderInFrame') && (e.renderInFrame = t.renderInFrame), null != t.scrollHijackingProtection && t.hasOwnProperty('scrollHijackingProtection') && (e.scrollHijackingProtection = t.scrollHijackingProtection), null != t.preRollBreak && t.hasOwnProperty('preRollBreak') && (e.preRollBreak = t.preRollBreak), null != t.postRollBreak && t.hasOwnProperty('postRollBreak') && (e.postRollBreak = t.postRollBreak), null != t.midRollNumber && t.hasOwnProperty('midRollNumber') && (e.midRollNumber = t.midRollNumber), null != t.timeBetweenAds && t.hasOwnProperty('timeBetweenAds') && (e.timeBetweenAds = t.timeBetweenAds), null != t.minTimeBeforeFirstAd && t.hasOwnProperty('minTimeBeforeFirstAd') && (e.minTimeBeforeFirstAd = t.minTimeBeforeFirstAd), null != t.adViewabilityPolicy && t.hasOwnProperty('adViewabilityPolicy') && (e.adViewabilityPolicy = i.enums === String ? c.ProtoAdViewabilityPolicy[t.adViewabilityPolicy] : t.adViewabilityPolicy), null != t.responsive && t.hasOwnProperty('responsive') && (e.responsive = t.responsive), null != t.ratioWidth && t.hasOwnProperty('ratioWidth') && (e.ratioWidth = t.ratioWidth), null != t.ratioHeight && t.hasOwnProperty('ratioHeight') && (e.ratioHeight = t.ratioHeight), null != t.fixedWidth && t.hasOwnProperty('fixedWidth') && (e.fixedWidth = t.fixedWidth), null != t.fixedHeight && t.hasOwnProperty('fixedHeight') && (e.fixedHeight = t.fixedHeight), null != t.casting && t.hasOwnProperty('casting') && (e.casting = t.casting), t.sharingDestinations && t.sharingDestinations.length) {
                            e.sharingDestinations = [];
                            for (var s = 0; s < t.sharingDestinations.length; ++s)
                                e.sharingDestinations[s] = i.enums === String ? c.ProtoSharingDestination[t.sharingDestinations[s]] : t.sharingDestinations[s];
                        }
                        if (null != t.closedCaption && t.hasOwnProperty('closedCaption') && (e.closedCaption = t.closedCaption), null != t.muteWatermark && t.hasOwnProperty('muteWatermark') && (e.muteWatermark = t.muteWatermark), null != t.expandButton && t.hasOwnProperty('expandButton') && (e.expandButton = t.expandButton), null != t.closeButtonMode && t.hasOwnProperty('closeButtonMode') && (e.closeButtonMode = i.enums === String ? c.ProtoPlayerCloseButtonMode[t.closeButtonMode] : t.closeButtonMode), null != t.floatingMode && t.hasOwnProperty('floatingMode') && (e.floatingMode = i.enums === String ? c.ProtoPlayerFloatingMode[t.floatingMode] : t.floatingMode), t.floatingDeviceMode && t.floatingDeviceMode.length) {
                            e.floatingDeviceMode = [];
                            for (s = 0; s < t.floatingDeviceMode.length; ++s)
                                e.floatingDeviceMode[s] = i.enums === String ? c.ProtoDeviceType[t.floatingDeviceMode[s]] : t.floatingDeviceMode[s];
                        }
                        if (null != t.floatingCloseButtonMode && t.hasOwnProperty('floatingCloseButtonMode') && (e.floatingCloseButtonMode = i.enums === String ? c.ProtoPlayerCloseButtonMode[t.floatingCloseButtonMode] : t.floatingCloseButtonMode), null != t.floatingFixedPosition && t.hasOwnProperty('floatingFixedPosition') && (e.floatingFixedPosition = i.enums === String ? c.ProtoFloatingFixedPositionMode[t.floatingFixedPosition] : t.floatingFixedPosition), null != t.floatingPageElement && t.hasOwnProperty('floatingPageElement') && (e.floatingPageElement = t.floatingPageElement), null != t.floatingUseElementWidth && t.hasOwnProperty('floatingUseElementWidth') && (e.floatingUseElementWidth = t.floatingUseElementWidth), null != t.floatingScrollPosition && t.hasOwnProperty('floatingScrollPosition') && (e.floatingScrollPosition = i.enums === String ? c.ProtoPositionMode[t.floatingScrollPosition] : t.floatingScrollPosition), null != t.floatingGutterX && t.hasOwnProperty('floatingGutterX') && (e.floatingGutterX = t.floatingGutterX), null != t.floatingGutterY && t.hasOwnProperty('floatingGutterY') && (e.floatingGutterY = t.floatingGutterY), null != t.floatingWidth && t.hasOwnProperty('floatingWidth') && (e.floatingWidth = t.floatingWidth), null != t.iconsColor && t.hasOwnProperty('iconsColor') && (e.iconsColor = t.iconsColor), null != t.accentColor && t.hasOwnProperty('accentColor') && (e.accentColor = t.accentColor), null != t.tooltipTextColor && t.hasOwnProperty('tooltipTextColor') && (e.tooltipTextColor = t.tooltipTextColor), null != t.tooltipBackgroundColor && t.hasOwnProperty('tooltipBackgroundColor') && (e.tooltipBackgroundColor = t.tooltipBackgroundColor), null != t.html && t.hasOwnProperty('html') && (e.html = t.html), null != t.galleryStyle && t.hasOwnProperty('galleryStyle') && (e.galleryStyle = i.enums === String ? c.ProtoGalleryStyleMode[t.galleryStyle] : t.galleryStyle), null != t.logoPosition && t.hasOwnProperty('logoPosition') && (e.logoPosition = i.enums === String ? c.ProtoLogoPositionMode[t.logoPosition] : t.logoPosition), null != t.logoUrl && t.hasOwnProperty('logoUrl') && (e.logoUrl = t.logoUrl), t.lineItems && t.lineItems.length) {
                            e.lineItems = [];
                            for (s = 0; s < t.lineItems.length; ++s)
                                e.lineItems[s] = c.ProtoLineItem.toObject(t.lineItems[s], i);
                        }
                        if (null != t.adPlaybackMode && t.hasOwnProperty('adPlaybackMode') && (e.adPlaybackMode = i.enums === String ? c.ProtoAdPlaybackMode[t.adPlaybackMode] : t.adPlaybackMode), null != t.css && t.hasOwnProperty('css') && (e.css = t.css), null != t.sessionId && t.hasOwnProperty('sessionId') && (e.sessionId = t.sessionId), null != t.playlistId && t.hasOwnProperty('playlistId') && (e.playlistId = t.playlistId), null != t.playerType && t.hasOwnProperty('playerType') && (e.playerType = i.enums === String ? c.ProtoElementsTypeEnum[t.playerType] : t.playerType), null != t.outstreamInitialRendering && t.hasOwnProperty('outstreamInitialRendering') && (e.outstreamInitialRendering = i.enums === String ? c.ProtoOutstreamInitialRenderingEnum[t.outstreamInitialRendering] : t.outstreamInitialRendering), null != t.outstreamHouseBackgroundColor && t.hasOwnProperty('outstreamHouseBackgroundColor') && (e.outstreamHouseBackgroundColor = t.outstreamHouseBackgroundColor), null != t.outstreamTotalAdBreakLength && t.hasOwnProperty('outstreamTotalAdBreakLength') && (e.outstreamTotalAdBreakLength = t.outstreamTotalAdBreakLength), null != t.outstreamEndAdBreakPolicy && t.hasOwnProperty('outstreamEndAdBreakPolicy') && (e.outstreamEndAdBreakPolicy = i.enums === String ? c.ProtoOutstreamEndAdBreakPolicyEnum[t.outstreamEndAdBreakPolicy] : t.outstreamEndAdBreakPolicy), null != t.galleryOrientation && t.hasOwnProperty('galleryOrientation') && (e.galleryOrientation = i.enums === String ? c.ProtoGalleryOrientationEnum[t.galleryOrientation] : t.galleryOrientation), t.playlist && t.playlist.length) {
                            e.playlist = [];
                            for (s = 0; s < t.playlist.length; ++s)
                                e.playlist[s] = c.ProtoPlaylistItem.toObject(t.playlist[s], i);
                        }
                        if (null != t.floatingAppendLocation && t.hasOwnProperty('floatingAppendLocation') && (e.floatingAppendLocation = i.enums === String ? c.ProtoFloatingAppendLocationEnum[t.floatingAppendLocation] : t.floatingAppendLocation), null != t.floatingYAxisPadding && t.hasOwnProperty('floatingYAxisPadding') && (e.floatingYAxisPadding = t.floatingYAxisPadding), null != t.customJsCode && t.hasOwnProperty('customJsCode') && (e.customJsCode = t.customJsCode), null != t.videoQuality && t.hasOwnProperty('videoQuality') && (e.videoQuality = i.enums === String ? c.ProtoVideoQuality[t.videoQuality] : t.videoQuality), null != t.initializationSettingsJson && t.hasOwnProperty('initializationSettingsJson') && (e.initializationSettingsJson = t.initializationSettingsJson), null != t.adSkippability && t.hasOwnProperty('adSkippability') && (e.adSkippability = i.enums === String ? c.ProtoPlayerAdSkippability[t.adSkippability] : t.adSkippability), null != t.skipAdAfter && t.hasOwnProperty('skipAdAfter') && (e.skipAdAfter = t.skipAdAfter), t.adBreaks && t.adBreaks.length) {
                            e.adBreaks = [];
                            for (s = 0; s < t.adBreaks.length; ++s)
                                e.adBreaks[s] = c.ProtoAdBreak.toObject(t.adBreaks[s], i);
                        }
                        return null != t.amazonTamSlotId && t.hasOwnProperty('amazonTamSlotId') && (e.amazonTamSlotId = t.amazonTamSlotId), null != t.midRollOnlyOnLongContent && t.hasOwnProperty('midRollOnlyOnLongContent') && (e.midRollOnlyOnLongContent = t.midRollOnlyOnLongContent), null != t.limitClientSideApiUse && t.hasOwnProperty('limitClientSideApiUse') && (e.limitClientSideApiUse = t.limitClientSideApiUse), null != t.abTestId && t.hasOwnProperty('abTestId') && (e.abTestId = t.abTestId), null != t.adsMustBeSkippableIfLongerThan && t.hasOwnProperty('adsMustBeSkippableIfLongerThan') && (e.adsMustBeSkippableIfLongerThan = t.adsMustBeSkippableIfLongerThan), e;
                    }, t;
                }(), c.ProtoElementsResponse = function () {
                    function t(t) {
                        if (this.players = [], this.lineItems = [], this.cookieSyncUrls = {}, t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.errorMessage = '', t.prototype.players = o.emptyArray, t.prototype.browser = null, t.prototype.geoLocation = null, t.prototype.lineItems = o.emptyArray, t.prototype.cookieSyncUrls = o.emptyObject, t.prototype.explorationMode = !1, t.prototype.supplyChain = null, t.prototype.secondLevelDomain = '', t.prototype.userInformation = null, t.prototype.serverAb0 = 0, t.prototype.serverAb1 = 0, t.prototype.isSeoTraffic = !1, t.prototype.bandwidthLoggingEnabled = !1, t.prototype.publisherNetworkCode = 0, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e, s, n = void 0 === i ? t.len : t.pos + i, r = new c.ProtoElementsResponse(); t.pos < n;) {
                            var a = t.uint32();
                            switch (a >>> 3) {
                            case 1:
                                r.errorMessage = t.string();
                                break;
                            case 10:
                                r.players && r.players.length || (r.players = []), r.players.push(c.ProtoElements.decode(t, t.uint32()));
                                break;
                            case 11:
                                r.browser = c.Browser.decode(t, t.uint32());
                                break;
                            case 12:
                                r.geoLocation = c.GeoLocation.decode(t, t.uint32());
                                break;
                            case 13:
                                r.lineItems && r.lineItems.length || (r.lineItems = []), r.lineItems.push(c.ProtoLineItem.decode(t, t.uint32()));
                                break;
                            case 14:
                                r.cookieSyncUrls === o.emptyObject && (r.cookieSyncUrls = {});
                                var u = t.uint32() + t.pos;
                                for (e = 0, s = ''; t.pos < u;) {
                                    var l = t.uint32();
                                    switch (l >>> 3) {
                                    case 1:
                                        e = t.int32();
                                        break;
                                    case 2:
                                        s = t.string();
                                        break;
                                    default:
                                        t.skipType(7 & l);
                                    }
                                }
                                r.cookieSyncUrls[e] = s;
                                break;
                            case 15:
                                r.explorationMode = t.bool();
                                break;
                            case 17:
                                r.supplyChain = c.ProtoSupplyChain.decode(t, t.uint32());
                                break;
                            case 18:
                                r.secondLevelDomain = t.string();
                                break;
                            case 20:
                                r.userInformation = c.ProtoUserInformation.decode(t, t.uint32());
                                break;
                            case 21:
                                r.serverAb0 = t.int32();
                                break;
                            case 22:
                                r.serverAb1 = t.int32();
                                break;
                            case 23:
                                r.isSeoTraffic = t.bool();
                                break;
                            case 24:
                                r.bandwidthLoggingEnabled = t.bool();
                                break;
                            case 25:
                                r.publisherNetworkCode = t.int32();
                                break;
                            default:
                                t.skipType(7 & a);
                            }
                        }
                        return r;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e, s = {};
                        if ((i.arrays || i.defaults) && (s.players = [], s.lineItems = []), (i.objects || i.defaults) && (s.cookieSyncUrls = {}), i.defaults && (s.errorMessage = '', s.browser = null, s.geoLocation = null, s.explorationMode = !1, s.supplyChain = null, s.secondLevelDomain = '', s.userInformation = null, s.serverAb0 = 0, s.serverAb1 = 0, s.isSeoTraffic = !1, s.bandwidthLoggingEnabled = !1, s.publisherNetworkCode = 0), null != t.errorMessage && t.hasOwnProperty('errorMessage') && (s.errorMessage = t.errorMessage), t.players && t.players.length) {
                            s.players = [];
                            for (var n = 0; n < t.players.length; ++n)
                                s.players[n] = c.ProtoElements.toObject(t.players[n], i);
                        }
                        if (null != t.browser && t.hasOwnProperty('browser') && (s.browser = c.Browser.toObject(t.browser, i)), null != t.geoLocation && t.hasOwnProperty('geoLocation') && (s.geoLocation = c.GeoLocation.toObject(t.geoLocation, i)), t.lineItems && t.lineItems.length) {
                            s.lineItems = [];
                            for (n = 0; n < t.lineItems.length; ++n)
                                s.lineItems[n] = c.ProtoLineItem.toObject(t.lineItems[n], i);
                        }
                        if (t.cookieSyncUrls && (e = Object.keys(t.cookieSyncUrls)).length) {
                            s.cookieSyncUrls = {};
                            for (n = 0; n < e.length; ++n)
                                s.cookieSyncUrls[e[n]] = t.cookieSyncUrls[e[n]];
                        }
                        return null != t.explorationMode && t.hasOwnProperty('explorationMode') && (s.explorationMode = t.explorationMode), null != t.supplyChain && t.hasOwnProperty('supplyChain') && (s.supplyChain = c.ProtoSupplyChain.toObject(t.supplyChain, i)), null != t.secondLevelDomain && t.hasOwnProperty('secondLevelDomain') && (s.secondLevelDomain = t.secondLevelDomain), null != t.userInformation && t.hasOwnProperty('userInformation') && (s.userInformation = c.ProtoUserInformation.toObject(t.userInformation, i)), null != t.serverAb0 && t.hasOwnProperty('serverAb0') && (s.serverAb0 = t.serverAb0), null != t.serverAb1 && t.hasOwnProperty('serverAb1') && (s.serverAb1 = t.serverAb1), null != t.isSeoTraffic && t.hasOwnProperty('isSeoTraffic') && (s.isSeoTraffic = t.isSeoTraffic), null != t.bandwidthLoggingEnabled && t.hasOwnProperty('bandwidthLoggingEnabled') && (s.bandwidthLoggingEnabled = t.bandwidthLoggingEnabled), null != t.publisherNetworkCode && t.hasOwnProperty('publisherNetworkCode') && (s.publisherNetworkCode = t.publisherNetworkCode), s;
                    }, t;
                }(), c.ProtoLineItemAdBreakTargeting = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.adRollType = 0, t.prototype.adBreakTypeEnum = 1, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoLineItemAdBreakTargeting(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.adRollType = t.int32();
                                break;
                            case 2:
                                s.adBreakTypeEnum = t.int32();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.adRollType = i.enums === String ? 'None' : 0, e.adBreakTypeEnum = i.enums === String ? 'All' : 1), null != t.adRollType && t.hasOwnProperty('adRollType') && (e.adRollType = i.enums === String ? c.ProtoAdBreakTypeEnum[t.adRollType] : t.adRollType), null != t.adBreakTypeEnum && t.hasOwnProperty('adBreakTypeEnum') && (e.adBreakTypeEnum = i.enums === String ? c.ProtoLineItemAdBreakTypeEnum[t.adBreakTypeEnum] : t.adBreakTypeEnum), e;
                    }, t;
                }(), c.ProtoLineItemAdPodTargeting = function () {
                    function t(t) {
                        if (this.adSlotPositions = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.targetingType = 0, t.prototype.adSlotTargetingType = 1, t.prototype.adSlotPositions = o.emptyArray, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoLineItemAdPodTargeting(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.targetingType = t.int32();
                                break;
                            case 2:
                                s.adSlotTargetingType = t.int32();
                                break;
                            case 3:
                                if (s.adSlotPositions && s.adSlotPositions.length || (s.adSlotPositions = []), 2 == (7 & n))
                                    for (var r = t.uint32() + t.pos; t.pos < r;)
                                        s.adSlotPositions.push(t.int32());
                                else
                                    s.adSlotPositions.push(t.int32());
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.adSlotPositions = []), i.defaults && (e.targetingType = i.enums === String ? 'Only' : 0, e.adSlotTargetingType = i.enums === String ? 'SpecificSlots' : 1), null != t.targetingType && t.hasOwnProperty('targetingType') && (e.targetingType = i.enums === String ? c.ProtoLineItemTargetingTypeEnum[t.targetingType] : t.targetingType), null != t.adSlotTargetingType && t.hasOwnProperty('adSlotTargetingType') && (e.adSlotTargetingType = i.enums === String ? c.ProtoLineItemAdSlotTargetingTypeEnum[t.adSlotTargetingType] : t.adSlotTargetingType), t.adSlotPositions && t.adSlotPositions.length) {
                            e.adSlotPositions = [];
                            for (var s = 0; s < t.adSlotPositions.length; ++s)
                                e.adSlotPositions[s] = t.adSlotPositions[s];
                        }
                        return e;
                    }, t;
                }(), c.ProtoLineItemAdBreakSettings = function () {
                    function t(t) {
                        if (this.adBreakTargeting = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.adBreakTargeting = o.emptyArray, t.prototype.adPodTargeting = null, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoLineItemAdBreakSettings(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.adBreakTargeting && s.adBreakTargeting.length || (s.adBreakTargeting = []), s.adBreakTargeting.push(c.ProtoLineItemAdBreakTargeting.decode(t, t.uint32()));
                                break;
                            case 2:
                                s.adPodTargeting = c.ProtoLineItemAdPodTargeting.decode(t, t.uint32());
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.adBreakTargeting = []), i.defaults && (e.adPodTargeting = null), t.adBreakTargeting && t.adBreakTargeting.length) {
                            e.adBreakTargeting = [];
                            for (var s = 0; s < t.adBreakTargeting.length; ++s)
                                e.adBreakTargeting[s] = c.ProtoLineItemAdBreakTargeting.toObject(t.adBreakTargeting[s], i);
                        }
                        return null != t.adPodTargeting && t.hasOwnProperty('adPodTargeting') && (e.adPodTargeting = c.ProtoLineItemAdPodTargeting.toObject(t.adPodTargeting, i)), e;
                    }, t;
                }(), c.ProtoLineItem = function () {
                    function t(t) {
                        if (this.trackers = [], this.renditions = [], this.floorPrices = [], this.advertiserContextualTargeting = [], this.publisherContextualTargeting = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.publisherLineItemId = '', t.prototype.advertiserLineItemId = '', t.prototype.adTag = '', t.prototype.creativeType = 0, t.prototype.sound = !1, t.prototype.viewability = !1, t.prototype.impressionTimeSpent = 0, t.prototype.vendorId = '', t.prototype.trackers = o.emptyArray, t.prototype.duration = 0, t.prototype.renditions = o.emptyArray, t.prototype.mediaCreativeId = '', t.prototype.ignoreFilledRequests = !1, t.prototype.requestCap = 3, t.prototype.impressionCap = 0, t.prototype.successRate = 0, t.prototype.lineItemPriority = 0, t.prototype.headerBidderBids = '', t.prototype.headerBidderTimeout = 0, t.prototype.mediaCreativeClickUrl = '', t.prototype.resetRequestsCapTime = 60, t.prototype.resetImpressionsCapTime = 60, t.prototype.resetCapType = 0, t.prototype.creativeHlsFileName = '', t.prototype.timeBetweenRequests = 0, t.prototype.skipMode = 0, t.prototype.mediaIdTargeting = null, t.prototype.mediaKeywordsTargeting = null, t.prototype.mediaLanguageTargeting = null, t.prototype.adType = 0, t.prototype.overlayTime = 30, t.prototype.floorPrice = 0, t.prototype.adBreakSettings = null, t.prototype.floorPrices = o.emptyArray, t.prototype.bidRate = 0, t.prototype.pauseAdOutOfView = 0, t.prototype.moatTrackingEnabled = !1, t.prototype.cnxCreativeId = '', t.prototype.blockedDomainsRevisionNumber = 0, t.prototype.advertiserContextualTargeting = o.emptyArray, t.prototype.publisherContextualTargeting = o.emptyArray, t.prototype.amazonDealId = '', t.prototype.playerSizeTargetings = null, t.prototype.playerSize = '', t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoLineItem(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.publisherLineItemId = t.string();
                                break;
                            case 2:
                                s.advertiserLineItemId = t.string();
                                break;
                            case 3:
                                s.adTag = t.string();
                                break;
                            case 4:
                                s.creativeType = t.int32();
                                break;
                            case 6:
                                s.sound = t.bool();
                                break;
                            case 7:
                                s.viewability = t.bool();
                                break;
                            case 9:
                                s.impressionTimeSpent = t.int32();
                                break;
                            case 10:
                                s.vendorId = t.string();
                                break;
                            case 12:
                                s.trackers && s.trackers.length || (s.trackers = []), s.trackers.push(c.CreativeTrackerViewModel.decode(t, t.uint32()));
                                break;
                            case 13:
                                s.duration = t.int32();
                                break;
                            case 14:
                                s.renditions && s.renditions.length || (s.renditions = []), s.renditions.push(c.ProtoRendition.decode(t, t.uint32()));
                                break;
                            case 15:
                                s.mediaCreativeId = t.string();
                                break;
                            case 16:
                                s.ignoreFilledRequests = t.bool();
                                break;
                            case 17:
                                s.requestCap = t.int32();
                                break;
                            case 18:
                                s.impressionCap = t.int32();
                                break;
                            case 19:
                                s.successRate = t.double();
                                break;
                            case 20:
                                s.lineItemPriority = t.int32();
                                break;
                            case 21:
                                s.headerBidderBids = t.string();
                                break;
                            case 22:
                                s.headerBidderTimeout = t.int32();
                                break;
                            case 23:
                                s.mediaCreativeClickUrl = t.string();
                                break;
                            case 24:
                                s.resetRequestsCapTime = t.int32();
                                break;
                            case 25:
                                s.resetImpressionsCapTime = t.int32();
                                break;
                            case 26:
                                s.resetCapType = t.int32();
                                break;
                            case 27:
                                s.creativeHlsFileName = t.string();
                                break;
                            case 28:
                                s.timeBetweenRequests = t.int32();
                                break;
                            case 29:
                                s.skipMode = t.int32();
                                break;
                            case 30:
                                s.mediaIdTargeting = c.ProtoTargetingChoiceModel.decode(t, t.uint32());
                                break;
                            case 31:
                                s.mediaKeywordsTargeting = c.ProtoTargetingChoiceModel.decode(t, t.uint32());
                                break;
                            case 32:
                                s.mediaLanguageTargeting = c.ProtoTargetingChoiceModel.decode(t, t.uint32());
                                break;
                            case 33:
                                s.adType = t.int32();
                                break;
                            case 34:
                                s.overlayTime = t.int32();
                                break;
                            case 35:
                                s.floorPrice = t.double();
                                break;
                            case 36:
                                s.adBreakSettings = c.ProtoLineItemAdBreakSettings.decode(t, t.uint32());
                                break;
                            case 38:
                                if (s.floorPrices && s.floorPrices.length || (s.floorPrices = []), 2 == (7 & n))
                                    for (var r = t.uint32() + t.pos; t.pos < r;)
                                        s.floorPrices.push(t.double());
                                else
                                    s.floorPrices.push(t.double());
                                break;
                            case 39:
                                s.bidRate = t.double();
                                break;
                            case 40:
                                s.pauseAdOutOfView = t.int32();
                                break;
                            case 41:
                                s.moatTrackingEnabled = t.bool();
                                break;
                            case 42:
                                s.cnxCreativeId = t.string();
                                break;
                            case 44:
                                s.blockedDomainsRevisionNumber = t.int32();
                                break;
                            case 45:
                                s.advertiserContextualTargeting && s.advertiserContextualTargeting.length || (s.advertiserContextualTargeting = []), s.advertiserContextualTargeting.push(c.ProtoContextualTargetingCaseModel.decode(t, t.uint32()));
                                break;
                            case 46:
                                s.publisherContextualTargeting && s.publisherContextualTargeting.length || (s.publisherContextualTargeting = []), s.publisherContextualTargeting.push(c.ProtoContextualTargetingCaseModel.decode(t, t.uint32()));
                                break;
                            case 48:
                                s.amazonDealId = t.string();
                                break;
                            case 47:
                                s.playerSizeTargetings = c.ProtoPlayerSizeTargetings.decode(t, t.uint32());
                                break;
                            case 101:
                                s.playerSize = t.string();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.trackers = [], e.renditions = [], e.floorPrices = [], e.advertiserContextualTargeting = [], e.publisherContextualTargeting = []), i.defaults && (e.publisherLineItemId = '', e.advertiserLineItemId = '', e.adTag = '', e.creativeType = i.enums === String ? 'ThirdParty' : 0, e.sound = !1, e.viewability = !1, e.impressionTimeSpent = 0, e.vendorId = '', e.duration = 0, e.mediaCreativeId = '', e.ignoreFilledRequests = !1, e.requestCap = 3, e.impressionCap = 0, e.successRate = 0, e.lineItemPriority = i.enums === String ? 'House' : 0, e.headerBidderBids = '', e.headerBidderTimeout = 0, e.mediaCreativeClickUrl = '', e.resetRequestsCapTime = 60, e.resetImpressionsCapTime = 60, e.resetCapType = i.enums === String ? 'TimeCapping' : 0, e.creativeHlsFileName = '', e.timeBetweenRequests = 0, e.skipMode = i.enums === String ? 'IfLongerThan31Sec' : 0, e.mediaIdTargeting = null, e.mediaKeywordsTargeting = null, e.mediaLanguageTargeting = null, e.adType = i.enums === String ? 'Video' : 0, e.overlayTime = 30, e.floorPrice = 0, e.adBreakSettings = null, e.bidRate = 0, e.pauseAdOutOfView = i.enums === String ? 'Default' : 0, e.moatTrackingEnabled = !1, e.cnxCreativeId = '', e.blockedDomainsRevisionNumber = 0, e.playerSizeTargetings = null, e.amazonDealId = '', e.playerSize = ''), null != t.publisherLineItemId && t.hasOwnProperty('publisherLineItemId') && (e.publisherLineItemId = t.publisherLineItemId), null != t.advertiserLineItemId && t.hasOwnProperty('advertiserLineItemId') && (e.advertiserLineItemId = t.advertiserLineItemId), null != t.adTag && t.hasOwnProperty('adTag') && (e.adTag = t.adTag), null != t.creativeType && t.hasOwnProperty('creativeType') && (e.creativeType = i.enums === String ? c.ProtoCreativeTypeEnum[t.creativeType] : t.creativeType), null != t.sound && t.hasOwnProperty('sound') && (e.sound = t.sound), null != t.viewability && t.hasOwnProperty('viewability') && (e.viewability = t.viewability), null != t.impressionTimeSpent && t.hasOwnProperty('impressionTimeSpent') && (e.impressionTimeSpent = t.impressionTimeSpent), null != t.vendorId && t.hasOwnProperty('vendorId') && (e.vendorId = t.vendorId), t.trackers && t.trackers.length) {
                            e.trackers = [];
                            for (var s = 0; s < t.trackers.length; ++s)
                                e.trackers[s] = c.CreativeTrackerViewModel.toObject(t.trackers[s], i);
                        }
                        if (null != t.duration && t.hasOwnProperty('duration') && (e.duration = t.duration), t.renditions && t.renditions.length) {
                            e.renditions = [];
                            for (s = 0; s < t.renditions.length; ++s)
                                e.renditions[s] = c.ProtoRendition.toObject(t.renditions[s], i);
                        }
                        if (null != t.mediaCreativeId && t.hasOwnProperty('mediaCreativeId') && (e.mediaCreativeId = t.mediaCreativeId), null != t.ignoreFilledRequests && t.hasOwnProperty('ignoreFilledRequests') && (e.ignoreFilledRequests = t.ignoreFilledRequests), null != t.requestCap && t.hasOwnProperty('requestCap') && (e.requestCap = t.requestCap), null != t.impressionCap && t.hasOwnProperty('impressionCap') && (e.impressionCap = t.impressionCap), null != t.successRate && t.hasOwnProperty('successRate') && (e.successRate = i.json && !isFinite(t.successRate) ? String(t.successRate) : t.successRate), null != t.lineItemPriority && t.hasOwnProperty('lineItemPriority') && (e.lineItemPriority = i.enums === String ? c.ProtoLineItemPriority[t.lineItemPriority] : t.lineItemPriority), null != t.headerBidderBids && t.hasOwnProperty('headerBidderBids') && (e.headerBidderBids = t.headerBidderBids), null != t.headerBidderTimeout && t.hasOwnProperty('headerBidderTimeout') && (e.headerBidderTimeout = t.headerBidderTimeout), null != t.mediaCreativeClickUrl && t.hasOwnProperty('mediaCreativeClickUrl') && (e.mediaCreativeClickUrl = t.mediaCreativeClickUrl), null != t.resetRequestsCapTime && t.hasOwnProperty('resetRequestsCapTime') && (e.resetRequestsCapTime = t.resetRequestsCapTime), null != t.resetImpressionsCapTime && t.hasOwnProperty('resetImpressionsCapTime') && (e.resetImpressionsCapTime = t.resetImpressionsCapTime), null != t.resetCapType && t.hasOwnProperty('resetCapType') && (e.resetCapType = i.enums === String ? c.ProtoResetCapTypeEnum[t.resetCapType] : t.resetCapType), null != t.creativeHlsFileName && t.hasOwnProperty('creativeHlsFileName') && (e.creativeHlsFileName = t.creativeHlsFileName), null != t.timeBetweenRequests && t.hasOwnProperty('timeBetweenRequests') && (e.timeBetweenRequests = t.timeBetweenRequests), null != t.skipMode && t.hasOwnProperty('skipMode') && (e.skipMode = i.enums === String ? c.ProtoAdSkipMode[t.skipMode] : t.skipMode), null != t.mediaIdTargeting && t.hasOwnProperty('mediaIdTargeting') && (e.mediaIdTargeting = c.ProtoTargetingChoiceModel.toObject(t.mediaIdTargeting, i)), null != t.mediaKeywordsTargeting && t.hasOwnProperty('mediaKeywordsTargeting') && (e.mediaKeywordsTargeting = c.ProtoTargetingChoiceModel.toObject(t.mediaKeywordsTargeting, i)), null != t.mediaLanguageTargeting && t.hasOwnProperty('mediaLanguageTargeting') && (e.mediaLanguageTargeting = c.ProtoTargetingChoiceModel.toObject(t.mediaLanguageTargeting, i)), null != t.adType && t.hasOwnProperty('adType') && (e.adType = i.enums === String ? c.ProtoAdType[t.adType] : t.adType), null != t.overlayTime && t.hasOwnProperty('overlayTime') && (e.overlayTime = t.overlayTime), null != t.floorPrice && t.hasOwnProperty('floorPrice') && (e.floorPrice = i.json && !isFinite(t.floorPrice) ? String(t.floorPrice) : t.floorPrice), null != t.adBreakSettings && t.hasOwnProperty('adBreakSettings') && (e.adBreakSettings = c.ProtoLineItemAdBreakSettings.toObject(t.adBreakSettings, i)), t.floorPrices && t.floorPrices.length) {
                            e.floorPrices = [];
                            for (s = 0; s < t.floorPrices.length; ++s)
                                e.floorPrices[s] = i.json && !isFinite(t.floorPrices[s]) ? String(t.floorPrices[s]) : t.floorPrices[s];
                        }
                        if (null != t.bidRate && t.hasOwnProperty('bidRate') && (e.bidRate = i.json && !isFinite(t.bidRate) ? String(t.bidRate) : t.bidRate), null != t.pauseAdOutOfView && t.hasOwnProperty('pauseAdOutOfView') && (e.pauseAdOutOfView = i.enums === String ? c.ProtoLineItemPauseAdOutOfViewEnum[t.pauseAdOutOfView] : t.pauseAdOutOfView), null != t.moatTrackingEnabled && t.hasOwnProperty('moatTrackingEnabled') && (e.moatTrackingEnabled = t.moatTrackingEnabled), null != t.cnxCreativeId && t.hasOwnProperty('cnxCreativeId') && (e.cnxCreativeId = t.cnxCreativeId), null != t.blockedDomainsRevisionNumber && t.hasOwnProperty('blockedDomainsRevisionNumber') && (e.blockedDomainsRevisionNumber = t.blockedDomainsRevisionNumber), t.advertiserContextualTargeting && t.advertiserContextualTargeting.length) {
                            e.advertiserContextualTargeting = [];
                            for (s = 0; s < t.advertiserContextualTargeting.length; ++s)
                                e.advertiserContextualTargeting[s] = c.ProtoContextualTargetingCaseModel.toObject(t.advertiserContextualTargeting[s], i);
                        }
                        if (t.publisherContextualTargeting && t.publisherContextualTargeting.length) {
                            e.publisherContextualTargeting = [];
                            for (s = 0; s < t.publisherContextualTargeting.length; ++s)
                                e.publisherContextualTargeting[s] = c.ProtoContextualTargetingCaseModel.toObject(t.publisherContextualTargeting[s], i);
                        }
                        return null != t.playerSizeTargetings && t.hasOwnProperty('playerSizeTargetings') && (e.playerSizeTargetings = c.ProtoPlayerSizeTargetings.toObject(t.playerSizeTargetings, i)), null != t.amazonDealId && t.hasOwnProperty('amazonDealId') && (e.amazonDealId = t.amazonDealId), null != t.playerSize && t.hasOwnProperty('playerSize') && (e.playerSize = t.playerSize), e;
                    }, t;
                }(), c.ProtoTargetingChoiceModel = function () {
                    function t(t) {
                        if (this.items = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.choiceCriteria = 0, t.prototype.items = o.emptyArray, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoTargetingChoiceModel(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.choiceCriteria = t.int32();
                                break;
                            case 2:
                                s.items && s.items.length || (s.items = []), s.items.push(t.string());
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.items = []), i.defaults && (e.choiceCriteria = i.enums === String ? 'Only' : 0), null != t.choiceCriteria && t.hasOwnProperty('choiceCriteria') && (e.choiceCriteria = i.enums === String ? c.ProtoChoiceCriteriaEnum[t.choiceCriteria] : t.choiceCriteria), t.items && t.items.length) {
                            e.items = [];
                            for (var s = 0; s < t.items.length; ++s)
                                e.items[s] = t.items[s];
                        }
                        return e;
                    }, t;
                }(), c.ProtoContextualTargetingCaseModel = function () {
                    function t(t) {
                        if (this.filters = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.filters = o.emptyArray, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoContextualTargetingCaseModel(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.filters && s.filters.length || (s.filters = []), s.filters.push(c.ProtoContextualTargetingFilterModel.decode(t, t.uint32()));
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.filters = []), t.filters && t.filters.length) {
                            e.filters = [];
                            for (var s = 0; s < t.filters.length; ++s)
                                e.filters[s] = c.ProtoContextualTargetingFilterModel.toObject(t.filters[s], i);
                        }
                        return e;
                    }, t;
                }(), c.ProtoContextualTargetingFilterModel = function () {
                    function t(t) {
                        if (this.items = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.type = 0, t.prototype.items = o.emptyArray, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoContextualTargetingFilterModel(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.type = t.int32();
                                break;
                            case 2:
                                s.items && s.items.length || (s.items = []), s.items.push(t.string());
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.items = []), i.defaults && (e.type = i.enums === String ? 'IncludeAny' : 0), null != t.type && t.hasOwnProperty('type') && (e.type = i.enums === String ? c.ProtoLineItemContextualTargetingEnum[t.type] : t.type), t.items && t.items.length) {
                            e.items = [];
                            for (var s = 0; s < t.items.length; ++s)
                                e.items[s] = t.items[s];
                        }
                        return e;
                    }, t;
                }(), c.ProtoPlayerSizeTargetings = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.sizeChoiceCriteria = 0, t.prototype.minWidth = 0, t.prototype.maxWidth = 0, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoPlayerSizeTargetings(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.sizeChoiceCriteria = t.int32();
                                break;
                            case 2:
                                s.minWidth = t.int32();
                                break;
                            case 3:
                                s.maxWidth = t.int32();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.sizeChoiceCriteria = i.enums === String ? 'GreaterThan' : 0, e.minWidth = 0, e.maxWidth = 0), null != t.sizeChoiceCriteria && t.hasOwnProperty('sizeChoiceCriteria') && (e.sizeChoiceCriteria = i.enums === String ? c.ProtoSizeChoiceCriteriaEnum[t.sizeChoiceCriteria] : t.sizeChoiceCriteria), null != t.minWidth && t.hasOwnProperty('minWidth') && (e.minWidth = t.minWidth), null != t.maxWidth && t.hasOwnProperty('maxWidth') && (e.maxWidth = t.maxWidth), e;
                    }, t;
                }(), c.CreativeTrackerViewModel = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.type = 0, t.prototype.trigger = 0, t.prototype.url = '', t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.CreativeTrackerViewModel(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.type = t.int32();
                                break;
                            case 2:
                                s.trigger = t.int32();
                                break;
                            case 3:
                                s.url = t.string();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.type = i.enums === String ? 'Image' : 0, e.trigger = i.enums === String ? 'Impression' : 0, e.url = ''), null != t.type && t.hasOwnProperty('type') && (e.type = i.enums === String ? c.ProtoTrackerType[t.type] : t.type), null != t.trigger && t.hasOwnProperty('trigger') && (e.trigger = i.enums === String ? c.ProtoTrackerTriggerType[t.trigger] : t.trigger), null != t.url && t.hasOwnProperty('url') && (e.url = t.url), e;
                    }, t;
                }(), c.ProtoRendition = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.height = 0, t.prototype.codec = '', t.prototype.file = '', t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoRendition(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.height = t.int32();
                                break;
                            case 2:
                                s.codec = t.string();
                                break;
                            case 3:
                                s.file = t.string();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.height = 0, e.codec = '', e.file = ''), null != t.height && t.hasOwnProperty('height') && (e.height = t.height), null != t.codec && t.hasOwnProperty('codec') && (e.codec = t.codec), null != t.file && t.hasOwnProperty('file') && (e.file = t.file), e;
                    }, t;
                }(), c.Browser = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.browserVersion = '', t.prototype.browserType = '', t.prototype.osCode = '', t.prototype.device = 0, t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.browserVersion && Object.hasOwnProperty.call(t, 'browserVersion') && i.uint32(10).string(t.browserVersion), null != t.browserType && Object.hasOwnProperty.call(t, 'browserType') && i.uint32(18).string(t.browserType), null != t.osCode && Object.hasOwnProperty.call(t, 'osCode') && i.uint32(26).string(t.osCode), null != t.device && Object.hasOwnProperty.call(t, 'device') && i.uint32(32).int32(t.device), i;
                    }, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.Browser(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.browserVersion = t.string();
                                break;
                            case 2:
                                s.browserType = t.string();
                                break;
                            case 3:
                                s.osCode = t.string();
                                break;
                            case 4:
                                s.device = t.int32();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.Browser)
                            return t;
                        var i = new c.Browser();
                        switch (null != t.browserVersion && (i.browserVersion = String(t.browserVersion)), null != t.browserType && (i.browserType = String(t.browserType)), null != t.osCode && (i.osCode = String(t.osCode)), t.device) {
                        case 'Desktop':
                        case 0:
                            i.device = 0;
                            break;
                        case 'Smartphone':
                        case 1:
                            i.device = 1;
                            break;
                        case 'Tablet':
                        case 2:
                            i.device = 2;
                            break;
                        case 'GameConsole':
                        case 3:
                            i.device = 3;
                            break;
                        case 'SmartTV':
                        case 4:
                            i.device = 4;
                            break;
                        case 'WearableComputer':
                        case 5:
                            i.device = 5;
                            break;
                        case 'PDA':
                        case 6:
                            i.device = 6;
                            break;
                        case 'Unrecognized':
                        case 7:
                            i.device = 7;
                        }
                        return i;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.browserVersion = '', e.browserType = '', e.osCode = '', e.device = i.enums === String ? 'Desktop' : 0), null != t.browserVersion && t.hasOwnProperty('browserVersion') && (e.browserVersion = t.browserVersion), null != t.browserType && t.hasOwnProperty('browserType') && (e.browserType = t.browserType), null != t.osCode && t.hasOwnProperty('osCode') && (e.osCode = t.osCode), null != t.device && t.hasOwnProperty('device') && (e.device = i.enums === String ? c.ProtoDeviceType[t.device] : t.device), e;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.GeoLocation = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.countryGeoId = 0, t.prototype.cityId = 0, t.prototype.subdivisionId = 0, t.prototype.dmaId = 0, t.prototype.ip = '', t.prototype.lat = 0, t.prototype.lon = 0, t.encode = function (t, i) {
                        return i || (i = a.create()), null != t.countryGeoId && Object.hasOwnProperty.call(t, 'countryGeoId') && i.uint32(8).int32(t.countryGeoId), null != t.cityId && Object.hasOwnProperty.call(t, 'cityId') && i.uint32(16).int32(t.cityId), null != t.subdivisionId && Object.hasOwnProperty.call(t, 'subdivisionId') && i.uint32(24).int32(t.subdivisionId), null != t.dmaId && Object.hasOwnProperty.call(t, 'dmaId') && i.uint32(32).int32(t.dmaId), null != t.ip && Object.hasOwnProperty.call(t, 'ip') && i.uint32(42).string(t.ip), null != t.lat && Object.hasOwnProperty.call(t, 'lat') && i.uint32(49).double(t.lat), null != t.lon && Object.hasOwnProperty.call(t, 'lon') && i.uint32(57).double(t.lon), i;
                    }, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.GeoLocation(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.countryGeoId = t.int32();
                                break;
                            case 2:
                                s.cityId = t.int32();
                                break;
                            case 3:
                                s.subdivisionId = t.int32();
                                break;
                            case 4:
                                s.dmaId = t.int32();
                                break;
                            case 5:
                                s.ip = t.string();
                                break;
                            case 6:
                                s.lat = t.double();
                                break;
                            case 7:
                                s.lon = t.double();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.fromObject = function (t) {
                        if (t instanceof c.GeoLocation)
                            return t;
                        var i = new c.GeoLocation();
                        return null != t.countryGeoId && (i.countryGeoId = 0 | t.countryGeoId), null != t.cityId && (i.cityId = 0 | t.cityId), null != t.subdivisionId && (i.subdivisionId = 0 | t.subdivisionId), null != t.dmaId && (i.dmaId = 0 | t.dmaId), null != t.ip && (i.ip = String(t.ip)), null != t.lat && (i.lat = Number(t.lat)), null != t.lon && (i.lon = Number(t.lon)), i;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.countryGeoId = 0, e.cityId = 0, e.subdivisionId = 0, e.dmaId = 0, e.ip = '', e.lat = 0, e.lon = 0), null != t.countryGeoId && t.hasOwnProperty('countryGeoId') && (e.countryGeoId = t.countryGeoId), null != t.cityId && t.hasOwnProperty('cityId') && (e.cityId = t.cityId), null != t.subdivisionId && t.hasOwnProperty('subdivisionId') && (e.subdivisionId = t.subdivisionId), null != t.dmaId && t.hasOwnProperty('dmaId') && (e.dmaId = t.dmaId), null != t.ip && t.hasOwnProperty('ip') && (e.ip = t.ip), null != t.lat && t.hasOwnProperty('lat') && (e.lat = i.json && !isFinite(t.lat) ? String(t.lat) : t.lat), null != t.lon && t.hasOwnProperty('lon') && (e.lon = i.json && !isFinite(t.lon) ? String(t.lon) : t.lon), e;
                    }, t.prototype.toJSON = function () {
                        return this.constructor.toObject(this, r.util.toJSONOptions);
                    }, t;
                }(), c.ProtoSupplyChain = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.businessDomain = '', t.prototype.supplyChainId = '', t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoSupplyChain(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.businessDomain = t.string();
                                break;
                            case 3:
                                s.supplyChainId = t.string();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.businessDomain = '', e.supplyChainId = ''), null != t.businessDomain && t.hasOwnProperty('businessDomain') && (e.businessDomain = t.businessDomain), null != t.supplyChainId && t.hasOwnProperty('supplyChainId') && (e.supplyChainId = t.supplyChainId), e;
                    }, t;
                }(), c.ProtoUserInformation = function () {
                    function t(t) {
                        if (t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.userId = '', t.prototype.lookupId = '', t.prototype.lookupResponseCode = 0, t.prototype.callFraudSensor = !1, t.prototype.publisherAdsTxt = '', t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoUserInformation(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                s.userId = t.string();
                                break;
                            case 3:
                                s.lookupId = t.string();
                                break;
                            case 4:
                                s.lookupResponseCode = t.int32();
                                break;
                            case 5:
                                s.callFraudSensor = t.bool();
                                break;
                            case 6:
                                s.publisherAdsTxt = t.string();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        return i.defaults && (e.userId = '', e.lookupId = '', e.lookupResponseCode = 0, e.callFraudSensor = !1, e.publisherAdsTxt = ''), null != t.userId && t.hasOwnProperty('userId') && (e.userId = t.userId), null != t.lookupId && t.hasOwnProperty('lookupId') && (e.lookupId = t.lookupId), null != t.lookupResponseCode && t.hasOwnProperty('lookupResponseCode') && (e.lookupResponseCode = t.lookupResponseCode), null != t.callFraudSensor && t.hasOwnProperty('callFraudSensor') && (e.callFraudSensor = t.callFraudSensor), null != t.publisherAdsTxt && t.hasOwnProperty('publisherAdsTxt') && (e.publisherAdsTxt = t.publisherAdsTxt), e;
                    }, t;
                }(), c.ProtoAdBreak = function () {
                    function t(t) {
                        if (this.types = [], t)
                            for (var i = Object.keys(t), e = 0; e < i.length; ++e)
                                null != t[i[e]] && (this[i[e]] = t[i[e]]);
                    }
                    return t.prototype.types = o.emptyArray, t.prototype.maxAdPodDuration = 0, t.prototype.maxAdSlotDuration = 180, t.prototype.numberOfAdSlots = 1, t.decode = function (t, i) {
                        t instanceof h || (t = h.create(t));
                        for (var e = void 0 === i ? t.len : t.pos + i, s = new c.ProtoAdBreak(); t.pos < e;) {
                            var n = t.uint32();
                            switch (n >>> 3) {
                            case 1:
                                if (s.types && s.types.length || (s.types = []), 2 == (7 & n))
                                    for (var r = t.uint32() + t.pos; t.pos < r;)
                                        s.types.push(t.int32());
                                else
                                    s.types.push(t.int32());
                                break;
                            case 2:
                                s.maxAdPodDuration = t.int32();
                                break;
                            case 3:
                                s.maxAdSlotDuration = t.int32();
                                break;
                            case 4:
                                s.numberOfAdSlots = t.int32();
                                break;
                            default:
                                t.skipType(7 & n);
                            }
                        }
                        return s;
                    }, t.toObject = function (t, i) {
                        i || (i = {});
                        var e = {};
                        if ((i.arrays || i.defaults) && (e.types = []), i.defaults && (e.maxAdPodDuration = 0, e.maxAdSlotDuration = 180, e.numberOfAdSlots = 1), t.types && t.types.length) {
                            e.types = [];
                            for (var s = 0; s < t.types.length; ++s)
                                e.types[s] = i.enums === String ? c.ProtoAdBreakTypeEnum[t.types[s]] : t.types[s];
                        }
                        return null != t.maxAdPodDuration && t.hasOwnProperty('maxAdPodDuration') && (e.maxAdPodDuration = t.maxAdPodDuration), null != t.maxAdSlotDuration && t.hasOwnProperty('maxAdSlotDuration') && (e.maxAdSlotDuration = t.maxAdSlotDuration), null != t.numberOfAdSlots && t.hasOwnProperty('numberOfAdSlots') && (e.numberOfAdSlots = t.numberOfAdSlots), e;
                    }, t;
                }(), c.ProtoOutstreamInitialRenderingEnum = (s = {}, (n = Object.create(s))[s[0] = 'ExpandWithAd'] = 0, n[s[1] = 'FullyRendered'] = 1, n), c.ProtoOutstreamEndAdBreakPolicyEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Hide'] = 0, i[t[1] = 'HouseScreen'] = 1, i[t[2] = 'Loop'] = 2, i;
                }(), c.ProtoGalleryStyleMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'None'] = 0, i[t[1] = 'Detailed'] = 1, i[t[2] = 'Visual'] = 2, i;
                }(), c.ProtoLogoPositionMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'None'] = 0, i[t[1] = 'ControlBar'] = 1, i[t[2] = 'BottomRight'] = 2, i[t[3] = 'BottomLeft'] = 3, i[t[4] = 'TopRight'] = 4, i[t[5] = 'TopLeft'] = 5, i[t[6] = 'Center'] = 6, i;
                }(), c.ProtoGalleryOrientationEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Landscape'] = 0, i[t[1] = 'Portrait'] = 1, i;
                }(), c.ProtoElementsTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'InStream'] = 0, i[t[1] = 'OutStream'] = 1, i[t[2] = 'InStreamInApp'] = 2, i[t[3] = 'Live'] = 3, i;
                }(), c.ProtoPlayerUpNextMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Loop'] = 0, i[t[1] = 'Next'] = 1, i[t[2] = 'Stop'] = 2, i;
                }(), c.ProtoCreativeTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'ThirdParty'] = 0, i[t[1] = 'MediaFile'] = 1, i[t[2] = 'Rtb'] = 2, i[t[3] = 'External'] = 3, i[t[4] = 'HeaderBidder'] = 4, i[t[7] = 'Tam'] = 7, i[t[8] = 'TamDeal'] = 8, i;
                }(), c.ProtoResetCapTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'TimeCapping'] = 0, i[t[1] = 'ContentCapping'] = 1, i[t[2] = 'OpportunityCapping'] = 2, i;
                }(), c.ProtoAdSlotsEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'PreRoll'] = 0, i[t[1] = 'MidRoll'] = 1, i[t[2] = 'PostRoll'] = 2, i;
                }(), c.ProtoLineItemPriority = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'House'] = 0, i[t[1] = 'Default'] = 1, i[t[2] = 'Preferred'] = 2, i[t[3] = 'Top'] = 3, i;
                }(), c.ProtoAdSkipMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'IfLongerThan31Sec'] = 0, i[t[1] = 'Always'] = 1, i[t[2] = 'Never'] = 2, i[t[3] = 'NotAplicable'] = 3, i;
                }(), c.ProtoAdType = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Video'] = 0, i[t[1] = 'Overlay'] = 1, i;
                }(), c.ProtoChoiceCriteriaEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Only'] = 0, i[t[1] = 'Except'] = 1, i;
                }(), c.ProtoLineItemAdBreakTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[1] = 'All'] = 1, i[t[2] = 'SingleAd'] = 2, i[t[3] = 'AdPod'] = 3, i;
                }(), c.ProtoLineItemTargetingTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Only'] = 0, i[t[1] = 'Except'] = 1, i;
                }(), c.ProtoLineItemAdSlotTargetingTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[1] = 'SpecificSlots'] = 1, i[t[2] = 'Interval'] = 2, i;
                }(), c.ProtoLineItemPauseAdOutOfViewEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Default'] = 0, i[t[1] = 'Strict'] = 1, i;
                }(), c.ProtoLineItemContextualTargetingEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'IncludeAny'] = 0, i[t[1] = 'IncludeAll'] = 1, i[t[2] = 'ExcludeAny'] = 2, i[t[3] = 'ExcludeAll'] = 3, i;
                }(), c.ProtoSizeChoiceCriteriaEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'GreaterThan'] = 0, i[t[1] = 'SmallerThan'] = 1, i[t[2] = 'Between'] = 2, i;
                }(), c.ProtoTrackerType = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Image'] = 0, i[t[1] = 'Javascript'] = 1, i;
                }(), c.ProtoTrackerTriggerType = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Impression'] = 0, i[t[1] = 'Complete25Pc'] = 1, i[t[2] = 'Complete50Pc'] = 2, i[t[3] = 'Complete75Pc'] = 3, i[t[4] = 'ViewCompletion'] = 4, i[t[5] = 'VideoClick'] = 5, i[t[6] = 'Pause'] = 6, i[t[7] = 'Resume'] = 7, i[t[8] = 'Mute'] = 8, i[t[9] = 'Unmute'] = 9, i;
                }(), c.ProtoPlayerPlaybackModeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Autoplay'] = 0, i[t[1] = 'ScrollToPlay'] = 1, i[t[2] = 'ClickToPlay'] = 2, i;
                }(), c.ProtoPlayerCloseButtonMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Off'] = 0, i[t[1] = 'OnHover'] = 1, i[t[2] = 'OnHoverAfterFirstAd'] = 2, i[t[3] = 'AlwaysOn'] = 3, i;
                }(), c.ProtoPlayerFloatingMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Off'] = 0, i[t[1] = 'OnPageLoad'] = 1, i[t[2] = 'AfterInView'] = 2, i[t[3] = 'Always'] = 3, i;
                }(), c.ProtoPlayerSoundMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Mute'] = 0, i[t[1] = 'On'] = 1, i[t[2] = 'Hover'] = 2, i;
                }(), c.ProtoPlayerInsertMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'WithinContainer'] = 0, i[t[1] = 'BeforeContainer'] = 1, i[t[2] = 'AfterContainer'] = 2, i[t[3] = 'ReplaceContainer'] = 3, i[t[4] = 'HideContainer'] = 4, i;
                }(), c.ProtoAdViewabilityPolicy = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Default'] = 0, i[t[1] = 'Strict'] = 1, i;
                }(), c.ProtoSharingDestination = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Facebook'] = 0, i[t[1] = 'Twitter'] = 1, i[t[2] = 'LinkedIn'] = 2, i;
                }(), c.ProtoFloatingFixedPositionMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Page'] = 0, i[t[1] = 'Element'] = 1, i;
                }(), c.ProtoPositionMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'BottomRight'] = 0, i[t[1] = 'BottomLeft'] = 1, i[t[2] = 'TopRight'] = 2, i[t[3] = 'TopLeft'] = 3, i;
                }(), c.ProtoAdPlaybackMode = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Autoplay'] = 0, i[t[1] = 'ScrollToPlay'] = 1, i;
                }(), c.ProtoFloatingAppendLocationEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Above'] = 0, i[t[1] = 'Below'] = 1, i[t[2] = 'Within'] = 2, i;
                }(), c.ProtoPlayerAdSkippability = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'IfLongerThan'] = 0, i[t[1] = 'Always'] = 1, i[t[2] = 'NoRestrictions'] = 2, i;
                }(), c.ProtoVideoQuality = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Auto'] = 0, i[t[1] = 'High1080p'] = 1, i[t[2] = 'High720p'] = 2, i[t[3] = 'Medium360p'] = 3, i;
                }(), c.ProtoImplementationType = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Web'] = 0, i[t[1] = 'Amp'] = 1, i;
                }(), c.ProtoAdBreakTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'None'] = 0, i[t[1] = 'PreRoll'] = 1, i[t[2] = 'MidRoll'] = 2, i[t[3] = 'PostRoll'] = 3, i;
                }(), c.ProtoAdSlotAdTypeEnum = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'SingleAd'] = 0, i[t[1] = 'AdPod'] = 1, i;
                }(), c.ProtoDeviceType = function () {
                    var t = {}, i = Object.create(t);
                    return i[t[0] = 'Desktop'] = 0, i[t[1] = 'Smartphone'] = 1, i[t[2] = 'Tablet'] = 2, i[t[3] = 'GameConsole'] = 3, i[t[4] = 'SmartTV'] = 4, i[t[5] = 'WearableComputer'] = 5, i[t[6] = 'PDA'] = 6, i[t[7] = 'Unrecognized'] = 7, i;
                }(), t.exports = c;
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'c', function () {
                    return a;
                }), e.d(i, 'd', function () {
                    return o;
                }), e.d(i, 'e', function () {
                    return c;
                }), e.d(i, 'g', function () {
                    return u;
                }), e.d(i, 'f', function () {
                    return l;
                }), e.d(i, 'l', function () {
                    return d;
                }), e.d(i, 'k', function () {
                    return f;
                }), e.d(i, 'b', function () {
                    return p;
                }), e.d(i, 'a', function () {
                    return b;
                }), e.d(i, 'i', function () {
                    return v;
                }), e.d(i, 'h', function () {
                    return m;
                }), e.d(i, 'j', function () {
                    return g;
                });
                var s = e(19), n = e(1), r = e(31), h = e(6);
                function a() {
                    let t = Date.now();
                    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (i) {
                        const e = (t + 16 * Math.random()) % 16 | 0;
                        return t = Math.floor(t / 16), ('x' === i ? e : 3 & e | 8).toString(16);
                    });
                }
                function o() {
                    return a().replace(/-/g, '');
                }
                function c(t, i) {
                    let e = '';
                    if (!t.err)
                        try {
                            e = t.topFrame.location.href;
                        } catch (t) {
                        }
                    if (!e || 0 === e.length)
                        try {
                            e = i.top.location.href;
                        } catch (t) {
                        }
                    if (!e || 0 === e.length)
                        try {
                            e = t.topFrame.document.referrer;
                        } catch (t) {
                        }
                    return e;
                }
                function u(t) {
                    try {
                        const i = t.match(/^(https?:)\/\/(([^:\/?#]*)(?::([0-9]+))?)([\/]{0,1}[^?#]*)(\?[^#]*|)(#.*|)$/);
                        return {
                            href: t,
                            protocol: i[1],
                            host: i[2],
                            hostname: i[3],
                            port: i[4],
                            pathname: i[5],
                            search: i[6],
                            hash: i[7]
                        };
                    } catch (t) {
                        return null;
                    }
                }
                function l(t) {
                    let i = t, e = null, s = !1;
                    try {
                        for (; i.parent.document !== i.document;) {
                            if (!i.parent.document) {
                                s = !0;
                                break;
                            }
                            e = i, i = i.parent;
                        }
                    } catch (t) {
                        s = !0;
                    }
                    return {
                        topFrame: i,
                        topChildFrame: e,
                        err: s
                    };
                }
                function d(t = (() => {
                    return [];
                })(), i, e = (() => {
                    return {};
                })()) {
                    t.forEach(t => {
                        Object(n.g)(t) && (new i.Image().src = `${ t }${ Object(s.c)(t) }${ function (t, i) {
                            const e = [];
                            return Object.keys(t).forEach(s => {
                                const a = i ? `${ i }[${ s }]` : s, o = t[s];
                                if (Object(n.f)(o))
                                    e.push(`${ encodeURIComponent(a) }=${ Object(r.c)(o) }`);
                                else if (Array.isArray(o))
                                    e.push(`${ encodeURIComponent(a) }=${ Object(h.l)(o) }`);
                                else if (null != o) {
                                    const t = encodeURIComponent(o), i = encodeURIComponent(a);
                                    t && i && e.push(`${ i }=${ t }`);
                                }
                            }), e.join('&');
                        }(e) }`);
                    });
                }
                function f(t) {
                    const i = Math.floor(100 * Math.random());
                    let e = 0, s = 0;
                    for (let n = 0; n < t.length; n++)
                        if (i < (s += t[n])) {
                            e = n;
                            break;
                        }
                    return e;
                }
                function p() {
                    let t = !1;
                    try {
                        const i = document.createElement('audio');
                        i.volume = 1, i.muted = !1;
                        const e = i.play();
                        void 0 !== e && e.catch(() => {
                        }), t = !i.paused, i.pause();
                    } catch (t) {
                    }
                    return t;
                }
                function b(t, i = (() => {
                    return 0;
                })(), ...e) {
                    return setTimeout(() => {
                        t.apply(this, e);
                    }, i);
                }
                function v(t, i) {
                    return Object(n.f)(t) ? Object(r.b)(t, i) : Array.isArray(t) ? Object(h.j)(t, i) : t === i;
                }
                function m(t, i, e) {
                    let s = 0, n = t;
                    for (; s <= e;) {
                        if (s++, n.classList.contains(i))
                            return !0;
                        if (!(n = n.parentElement))
                            return !1;
                    }
                    return !1;
                }
                function g(t, i = (() => {
                    return 5;
                })()) {
                    return new Promise((e, s) => {
                        t().then(e).catch(n => {
                            1 !== i ? g(t, i - 1).then(e, s) : s(n);
                        });
                    });
                }
            },
            function (t, i, e) {
                'use strict';
                var s, n, r, h;
                e.d(i, 'a', function () {
                    return s;
                }), e.d(i, 'd', function () {
                    return n;
                }), e.d(i, 'c', function () {
                    return r;
                }), e.d(i, 'b', function () {
                    return h;
                }), function (t) {
                    t[t.Idle = 0] = 'Idle', t[t.Loading = 1] = 'Loading', t[t.Ready = 2] = 'Ready', t[t.Error = 3] = 'Error', t[t.Capped = 4] = 'Capped', t[t.InWin = 5] = 'InWin', t[t.Consumed = 6] = 'Consumed', t[t.InImpression = 7] = 'InImpression';
                }(s || (s = {})), function (t) {
                    t[t.Javascript = 0] = 'Javascript', t[t.Video = 1] = 'Video';
                }(n || (n = {})), function (t) {
                    t.Timeout = 'timeout', t.TimeoutLoaded = 'timeout_loaded', t.ImaError = 'imaError', t.ImaScriptFailure = 'imaScriptFailure', t.ImaObjectNotFound = 'imaObjectNotFound', t.ImaManagerInit = 'imaManagerInit', t.ImaInitSdkError = 'initImasdkError', t.VastVideoTagEventError = 'vastVideoTagEventError', t.VastUnsupportedMedia = 'vastUnsupportedMedia', t.VastPlayPromiseReject = 'playPromiseReject', t.AdStopped = 'adStopped', t.MuteEnforce = 'muteEnforce', t.VpaidOnLoad = 'vpaidOnLoad', t.VpaidInvalid = 'vpaidInvalid', t.VpaidGetVpaidAdError = 'vpaidGetVpaidAdError', t.CnxMediaNoRenditions = 'noRenditions', t.CnxMediaSrcNotSupported = 'srcNotSupported', t.InvalidVpaidEvent = 'invalidVpaidEvent', t.AdxOverlayNoFill = 'adxOverlayNoFill', t.AdxOverlayGptScriptLoad = 'adxOverlayGptScriptLoad', t.DisplayIntegratorIframeLoad = 'displayIntegratorIframeLoad', t.EnforcementMalware = 'malwareDetected', t.EnforcementVolume = 'volumeDetected', t.Cancelled = 'adManagerRemoved', t.DomainBlocked = 'domainBlocked', t.AdaptorStartAdError = 'adaptorStartAdError', t.AdaptorInitAdError = 'adaptorInitAdError', t.WrapperStartAdError = 'wrapperStartAdError', t.WrapperInitAdError = 'wrapperInitAdError';
                }(r || (r = {})), function (t) {
                    t.Html = 'text/html', t.Javascript = 'application/javascript';
                }(h || (h = {}));
            },
            function (t, i, e) {
                'use strict';
                var s;
                !function (t) {
                    t[t.HoldStart = 0] = 'HoldStart', t[t.HoldEnd = 1] = 'HoldEnd', t[t.TapLeft = 2] = 'TapLeft', t[t.TapRight = 3] = 'TapRight', t[t.SwipeEnd = 4] = 'SwipeEnd', t[t.SwipeMove = 5] = 'SwipeMove', t[t.Scroll = 6] = 'Scroll', t[t.Click = 7] = 'Click';
                }(s || (s = {})), i.a = s;
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'b', function () {
                    return s;
                }), e.d(i, 'd', function () {
                    return n;
                }), e.d(i, 'e', function () {
                    return r;
                }), e.d(i, 'f', function () {
                    return h;
                }), e.d(i, 'g', function () {
                    return a;
                }), e.d(i, 'a', function () {
                    return o;
                }), e.d(i, 'c', function () {
                    return c;
                });
                const s = /(\d\d):(\d\d):(\d\d)(\.(\d\d\d))?/, n = 3600000, r = 60000, h = 1000, a = 60, o = 86400000, c = 60;
            },
            function (t, i, e) {
                'use strict';
                const s = e(3).b, n = Object.assign(Object.assign({}, s), {
                        AdBreakStart: 'adBreakStart',
                        AdComplete: 'adComplete',
                        AdBreakComplete: 'adBreakComplete',
                        Pause: 'pause',
                        AdPause: 'adPause',
                        Play: 'play',
                        AdPlay: 'adPlay',
                        ContentComplete: 'contentComplete',
                        SessionStart: 'sessionStart',
                        SessionEnd: 'sessionEnd',
                        PlayerResized: 'playerStateResize',
                        OnEnterFullscreen: 'onEnterFullscreen',
                        OnExitFullscreen: 'onExitFullscreen',
                        PlayerCollapsed: 'playerCollapsed',
                        PlayerExpanded: 'playerExpanded',
                        PlayError: 'playError',
                        RenderError: 'renderError',
                        AdStateChange: 'adStateChange',
                        VolumeChange: 'volumeChange',
                        Destroy: 'destroy'
                    });
                i.a = n;
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'd', function () {
                    return s;
                }), e.d(i, 'c', function () {
                    return n;
                }), e.d(i, 'e', function () {
                    return r;
                }), e.d(i, 'b', function () {
                    return h;
                }), e.d(i, 'a', function () {
                    return a;
                });
                const s = {
                        Play: 'play',
                        Pause: 'pause',
                        QualityChanged: 'qualityChanged',
                        PlayError: 'playError',
                        VolumeChanged: 'volumeChanged'
                    }, n = {
                        FullscreenChanged: 'fullscreenChanged',
                        PlayerFloatChanged: 'playerFloatChanged'
                    }, r = { OmidViewabilityThreshold: 'OmidViewabilityThreshold' }, h = Object.assign(Object.assign(Object.assign(Object.assign({
                        Ready: 'ready',
                        Removed: 'removed',
                        SetupError: 'setupError',
                        IsViewable: 'isViewable',
                        SizeChanged: 'sizeChanged',
                        BrandingClicked: 'brandingClicked',
                        ImpressionPrice: 'impressionPrice',
                        ImpressionRevenue: 'impressionRevenue'
                    }, s), n), r), {
                        AdClick: 'adClick',
                        AdPlay: 'adPlay',
                        AdPause: 'adPause',
                        AdImpression: 'adImpression',
                        AdCompleted25: 'adCompleted25',
                        AdCompleted50: 'adCompleted50',
                        AdCompleted75: 'adCompleted75',
                        AdCompleted100: 'adCompleted100',
                        AdSkipped: 'adSkipped',
                        AdError: 'adError',
                        AdStopped: 'adStopped',
                        AdCompanion: 'adCompanion'
                    });
                var a;
                !function (t) {
                    t.SetupError = 'SetupError', t.NoPlayer = 'NoPlayer', t.RenderError = 'RenderError';
                }(a || (a = {}));
            },
            function (t, i, e) {
                'use strict';
                var s = e(21);
                class n {
                    constructor(t) {
                        this.base = t, this.api = {
                            pls: t.core + 'core/pls',
                            story: t.core + 'core/story',
                            rtb: t.core + 'rtb/g',
                            vpaid: t.core + 'vpaid',
                            syncUrls: t.core + 'core/us',
                            fallbackstory: t.core + 'core/fallbackstory',
                            cookie: t.core + 'core/ck',
                            tam: t.core + 'core/atam'
                        }, this.tracking = {
                            session_rendered: t.tracking + 'sr',
                            session_view: t.tracking + 'sv',
                            session_time: t.tracking + 'st',
                            session_client_error: t.tracking + 'e',
                            media_quartile: t.tracking + 'mq',
                            media_click: t.tracking + 'mc',
                            ad_impression: t.tracking + 'ai',
                            bids: t.tracking + 'abt',
                            ad_impression_viewable: t.tracking + 'av',
                            ad_quartile: t.tracking + 'aq',
                            ad_click: t.tracking + 'ac',
                            contentLoad: t.tracking + 'clr',
                            noContent: t.tracking + 'nc',
                            eventService: t.tracking + 'et',
                            tracking: t.tracking + 'tr',
                            vastWin: t.tracking + 'vw',
                            rtb: t.tracking + 'g',
                            logging: t.tracking + 'e',
                            galleryCardClick: t.tracking + 'cc',
                            playerStart: t.tracking + 'ps',
                            adOpportunity: t.tracking + 'ao',
                            sessionAdBlocker: t.tracking + 'sab',
                            heavy_ad_intervention: t.tracking + 'ha',
                            auctionInformation: t.tracking + 'aucinfo'
                        }, this.assets = {
                            css: {
                                elements: `${ this.V(t.assets) }player.css`,
                                playspace: `${ this.V(t.assets) }connatix.playspace.css`
                            },
                            plugins: {
                                adobeAnalytics: `${ t.assets }p/plugins/adobe.plugin.js`,
                                moatAnalytics: `${ t.assets }p/plugins/moat.plugin.js`
                            }
                        };
                    }
                    V(t) {
                        return 'development' === s.a.env ? '//cd.connatix.com/' : `${ t }p/${ s.a.version }/`;
                    }
                }
                var r = e(19), h = e(8);
                e.d(i, 'a', function () {
                    return a;
                });
                class a {
                    static U() {
                        const t = Object(r.b)('cnxEnv', Object(h.f)(window).topFrame.location.href);
                        return t && (s.a.domainPrefix = `-${ t }`), Object.keys(this.$).forEach(t => {
                            this.$[t] = this.$[t].replace('{{env}}', s.a.domainPrefix);
                        }), new n(a.$);
                    }
                    static get endPoints() {
                        return null === a.W && (a.W = a.U()), a.W;
                    }
                }
                a.$ = {
                    a: '//a{{env}}.connatix.com/',
                    video: '//vid.connatix.com/',
                    image: '//img.connatix.com/',
                    core: 'https://capi{{env}}.connatix.com/',
                    tracking: '//capi{{env}}.connatix.com/tr/',
                    metadata: '//vid.connatix.com/',
                    assets: '//cds{{env}}.connatix.com/',
                    lineItems: '//lit.connatix.com/'
                }, a.W = null;
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'e', function () {
                    return n;
                }), e.d(i, 'b', function () {
                    return r;
                }), e.d(i, 'c', function () {
                    return h;
                }), e.d(i, 'f', function () {
                    return a;
                }), e.d(i, 'd', function () {
                    return o;
                }), e.d(i, 'a', function () {
                    return c;
                });
                var s = e(1);
                function n(t, i, e, s, n) {
                    return e + (s - e) * function (t, i, e) {
                        return (e - t) / (i - t);
                    }(t, i, n);
                }
                function r(t, i) {
                    return i.reduce((i, e) => {
                        return Math.abs(e - t) <= Math.abs(i - t) ? e : i;
                    });
                }
                function h(t, i) {
                    return i / 100 * t;
                }
                function a(t, i) {
                    const e = Math.pow(10, i);
                    return Math.round(t * e) / e;
                }
                function o(t) {
                    return !Object(s.e)(t.width) || !Object(s.e)(t.height);
                }
                function c(t, i) {
                    for (let e = i; e > 1; e--)
                        t % e == 0 && i % e == 0 && (t /= e, i /= e);
                    return {
                        widthRatio: t,
                        heightRatio: i
                    };
                }
            },
            function (t, i, e) {
                'use strict';
                var s;
                e.d(i, 'c', function () {
                    return s;
                }), e.d(i, 'b', function () {
                    return n;
                }), e.d(i, 'a', function () {
                    return r;
                }), function (t) {
                    t.SessionRendered = 'rendered', t.SessionView = 'enter_view';
                }(s || (s = {}));
                const n = {
                        UserInteraction: 'userInteraction',
                        GeneralUserInteraction: 'generalUserInteraction',
                        CanStart: 'canStart',
                        Destroy: 'destroy'
                    }, r = { StateChanged: 'stateChanged' };
            },
            function (t, i, e) {
                'undefined' != typeof window && (t.exports = function (t) {
                    var i = {};
                    function e(s) {
                        if (i[s])
                            return i[s].exports;
                        var n = i[s] = {
                            i: s,
                            l: !1,
                            exports: {}
                        };
                        return t[s].call(n.exports, n, n.exports, e), n.l = !0, n.exports;
                    }
                    return e.m = t, e.c = i, e.d = function (t, i, s) {
                        e.o(t, i) || Object.defineProperty(t, i, {
                            enumerable: !0,
                            get: s
                        });
                    }, e.r = function (t) {
                        'undefined' != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: 'Module' }), Object.defineProperty(t, '_', { value: !0 });
                    }, e.t = function (t, i) {
                        if (1 & i && (t = e(t)), 8 & i)
                            return t;
                        if (4 & i && 'object' == typeof t && t && t._)
                            return t;
                        var s = Object.create(null);
                        if (e.r(s), Object.defineProperty(s, 'default', {
                                enumerable: !0,
                                value: t
                            }), 2 & i && 'string' != typeof t)
                            for (var n in t)
                                e.d(s, n, function (i) {
                                    return t[i];
                                }.bind(null, n));
                        return s;
                    }, e.n = function (t) {
                        var i = t && t._ ? function () {
                            return t.default;
                        } : function () {
                            return t;
                        };
                        return e.d(i, 'a', i), i;
                    }, e.o = function (t, i) {
                        return Object.prototype.hasOwnProperty.call(t, i);
                    }, e.p = '/dist/', e(e.s = 13);
                }([
                    function (t, i, e) {
                        'use strict';
                        e.d(i, 'a', function () {
                            return o;
                        }), e.d(i, 'b', function () {
                            return c;
                        });
                        var s = e(5);
                        function n() {
                        }
                        var r = {
                                trace: n,
                                debug: n,
                                log: n,
                                warn: n,
                                info: n,
                                error: n
                            }, h = r, a = Object(s.a)(), o = function (t) {
                                if (a.console && !0 === t || 'object' == typeof t) {
                                    !function (t) {
                                        for (var i = arguments.length, e = new Array(i > 1 ? i - 1 : 0), s = 1; s < i; s++)
                                            e[s - 1] = arguments[s];
                                        e.forEach(function (i) {
                                            h[i] = t[i] ? t[i].bind(t) : function (t) {
                                                var i = a.console[t];
                                                return i ? function () {
                                                    for (var e = arguments.length, s = new Array(e), n = 0; n < e; n++)
                                                        s[n] = arguments[n];
                                                    s[0] && (s[0] = function (t, i) {
                                                        return i = '[' + t + '] > ' + i;
                                                    }(t, s[0])), i.apply(a.console, s);
                                                } : n;
                                            }(i);
                                        });
                                    }(t, 'debug', 'log', 'info', 'warn', 'error');
                                    try {
                                        h.log();
                                    } catch (t) {
                                        h = r;
                                    }
                                } else
                                    h = r;
                            }, c = h;
                    },
                    function (t, i, e) {
                        'use strict';
                        i.a = {
                            MEDIA_ATTACHING: 'hlsMediaAttaching',
                            MEDIA_ATTACHED: 'hlsMediaAttached',
                            MEDIA_DETACHING: 'hlsMediaDetaching',
                            MEDIA_DETACHED: 'hlsMediaDetached',
                            BUFFER_RESET: 'hlsBufferReset',
                            BUFFER_CODECS: 'hlsBufferCodecs',
                            BUFFER_CREATED: 'hlsBufferCreated',
                            BUFFER_APPENDING: 'hlsBufferAppending',
                            BUFFER_APPENDED: 'hlsBufferAppended',
                            BUFFER_EOS: 'hlsBufferEos',
                            BUFFER_FLUSHING: 'hlsBufferFlushing',
                            BUFFER_FLUSHED: 'hlsBufferFlushed',
                            MANIFEST_LOADING: 'hlsManifestLoading',
                            MANIFEST_LOADED: 'hlsManifestLoaded',
                            MANIFEST_PARSED: 'hlsManifestParsed',
                            LEVEL_SWITCHING: 'hlsLevelSwitching',
                            LEVEL_SWITCHED: 'hlsLevelSwitched',
                            LEVEL_LOADING: 'hlsLevelLoading',
                            LEVEL_LOADED: 'hlsLevelLoaded',
                            LEVEL_UPDATED: 'hlsLevelUpdated',
                            LEVEL_PTS_UPDATED: 'hlsLevelPtsUpdated',
                            AUDIO_TRACKS_UPDATED: 'hlsAudioTracksUpdated',
                            AUDIO_TRACK_SWITCHING: 'hlsAudioTrackSwitching',
                            AUDIO_TRACK_SWITCHED: 'hlsAudioTrackSwitched',
                            AUDIO_TRACK_LOADING: 'hlsAudioTrackLoading',
                            AUDIO_TRACK_LOADED: 'hlsAudioTrackLoaded',
                            SUBTITLE_TRACKS_UPDATED: 'hlsSubtitleTracksUpdated',
                            SUBTITLE_TRACK_SWITCH: 'hlsSubtitleTrackSwitch',
                            SUBTITLE_TRACK_LOADING: 'hlsSubtitleTrackLoading',
                            SUBTITLE_TRACK_LOADED: 'hlsSubtitleTrackLoaded',
                            SUBTITLE_FRAG_PROCESSED: 'hlsSubtitleFragProcessed',
                            INIT_PTS_FOUND: 'hlsInitPtsFound',
                            FRAG_LOADING: 'hlsFragLoading',
                            FRAG_LOAD_PROGRESS: 'hlsFragLoadProgress',
                            FRAG_LOAD_EMERGENCY_ABORTED: 'hlsFragLoadEmergencyAborted',
                            FRAG_LOADED: 'hlsFragLoaded',
                            FRAG_DECRYPTED: 'hlsFragDecrypted',
                            FRAG_PARSING_INIT_SEGMENT: 'hlsFragParsingInitSegment',
                            FRAG_PARSING_USERDATA: 'hlsFragParsingUserdata',
                            FRAG_PARSING_METADATA: 'hlsFragParsingMetadata',
                            FRAG_PARSING_DATA: 'hlsFragParsingData',
                            FRAG_PARSED: 'hlsFragParsed',
                            FRAG_BUFFERED: 'hlsFragBuffered',
                            FRAG_CHANGED: 'hlsFragChanged',
                            FPS_DROP: 'hlsFpsDrop',
                            FPS_DROP_LEVEL_CAPPING: 'hlsFpsDropLevelCapping',
                            ERROR: 'hlsError',
                            DESTROYING: 'hlsDestroying',
                            KEY_LOADING: 'hlsKeyLoading',
                            KEY_LOADED: 'hlsKeyLoaded',
                            STREAM_STATE_TRANSITION: 'hlsStreamStateTransition',
                            LIVE_BACK_BUFFER_REACHED: 'hlsLiveBackBufferReached'
                        };
                    },
                    function (t, i, e) {
                        'use strict';
                        var s, n;
                        e.d(i, 'b', function () {
                            return s;
                        }), e.d(i, 'a', function () {
                            return n;
                        }), function (t) {
                            t.NETWORK_ERROR = 'networkError', t.MEDIA_ERROR = 'mediaError', t.KEY_SYSTEM_ERROR = 'keySystemError', t.MUX_ERROR = 'muxError', t.OTHER_ERROR = 'otherError';
                        }(s || (s = {})), function (t) {
                            t.KEY_SYSTEM_NO_KEYS = 'keySystemNoKeys', t.KEY_SYSTEM_NO_ACCESS = 'keySystemNoAccess', t.KEY_SYSTEM_NO_SESSION = 'keySystemNoSession', t.KEY_SYSTEM_LICENSE_REQUEST_FAILED = 'keySystemLicenseRequestFailed', t.KEY_SYSTEM_NO_INIT_DATA = 'keySystemNoInitData', t.MANIFEST_LOAD_ERROR = 'manifestLoadError', t.MANIFEST_LOAD_TIMEOUT = 'manifestLoadTimeOut', t.MANIFEST_PARSING_ERROR = 'manifestParsingError', t.MANIFEST_INCOMPATIBLE_CODECS_ERROR = 'manifestIncompatibleCodecsError', t.LEVEL_LOAD_ERROR = 'levelLoadError', t.LEVEL_LOAD_TIMEOUT = 'levelLoadTimeOut', t.LEVEL_SWITCH_ERROR = 'levelSwitchError', t.AUDIO_TRACK_LOAD_ERROR = 'audioTrackLoadError', t.AUDIO_TRACK_LOAD_TIMEOUT = 'audioTrackLoadTimeOut', t.FRAG_LOAD_ERROR = 'fragLoadError', t.FRAG_LOAD_TIMEOUT = 'fragLoadTimeOut', t.FRAG_DECRYPT_ERROR = 'fragDecryptError', t.FRAG_PARSING_ERROR = 'fragParsingError', t.REMUX_ALLOC_ERROR = 'remuxAllocError', t.KEY_LOAD_ERROR = 'keyLoadError', t.KEY_LOAD_TIMEOUT = 'keyLoadTimeOut', t.BUFFER_ADD_CODEC_ERROR = 'bufferAddCodecError', t.BUFFER_APPEND_ERROR = 'bufferAppendError', t.BUFFER_APPENDING_ERROR = 'bufferAppendingError', t.BUFFER_STALLED_ERROR = 'bufferStalledError', t.BUFFER_FULL_ERROR = 'bufferFullError', t.BUFFER_SEEK_OVER_HOLE = 'bufferSeekOverHole', t.BUFFER_NUDGE_ON_STALL = 'bufferNudgeOnStall', t.INTERNAL_EXCEPTION = 'internalException';
                        }(n || (n = {}));
                    },
                    function (t, i, e) {
                        'use strict';
                        e.d(i, 'a', function () {
                            return s;
                        });
                        var s = Number.isFinite || function (t) {
                            return 'number' == typeof t && isFinite(t);
                        };
                    },
                    function (t, i, e) {
                        'use strict';
                        e.d(i, 'b', function () {
                            return a;
                        });
                        var s, n = e(5), r = function () {
                                function t() {
                                }
                                return t.isHeader = function (t, i) {
                                    return i + 10 <= t.length && 73 === t[i] && 68 === t[i + 1] && 51 === t[i + 2] && t[i + 3] < 255 && t[i + 4] < 255 && t[i + 6] < 128 && t[i + 7] < 128 && t[i + 8] < 128 && t[i + 9] < 128;
                                }, t.isFooter = function (t, i) {
                                    return i + 10 <= t.length && 51 === t[i] && 68 === t[i + 1] && 73 === t[i + 2] && t[i + 3] < 255 && t[i + 4] < 255 && t[i + 6] < 128 && t[i + 7] < 128 && t[i + 8] < 128 && t[i + 9] < 128;
                                }, t.getID3Data = function (i, e) {
                                    for (var s = e, n = 0; t.isHeader(i, e);)
                                        n += 10, n += t.Z(i, e + 6), t.isFooter(i, e + 10) && (n += 10), e += n;
                                    if (n > 0)
                                        return i.subarray(s, s + n);
                                }, t.Z = function (t, i) {
                                    var e = 0;
                                    return e = (127 & t[i]) << 21, e |= (127 & t[i + 1]) << 14, e |= (127 & t[i + 2]) << 7, e |= 127 & t[i + 3];
                                }, t.getTimeStamp = function (i) {
                                    for (var e = t.getID3Frames(i), s = 0; s < e.length; s++) {
                                        var n = e[s];
                                        if (t.isTimeStampFrame(n))
                                            return t.tt(n);
                                    }
                                }, t.isTimeStampFrame = function (t) {
                                    return t && 'PRIV' === t.key && 'com.apple.streaming.transportStreamTimestamp' === t.info;
                                }, t.it = function (i) {
                                    var e = String.fromCharCode(i[0], i[1], i[2], i[3]), s = t.Z(i, 4);
                                    return {
                                        type: e,
                                        size: s,
                                        data: i.subarray(10, 10 + s)
                                    };
                                }, t.getID3Frames = function (i) {
                                    for (var e = 0, s = []; t.isHeader(i, e);) {
                                        for (var n = t.Z(i, e + 6), r = (e += 10) + n; e + 8 < r;) {
                                            var h = t.it(i.subarray(e)), a = t.et(h);
                                            a && s.push(a), e += h.size + 10;
                                        }
                                        t.isFooter(i, e) && (e += 10);
                                    }
                                    return s;
                                }, t.et = function (i) {
                                    return 'PRIV' === i.type ? t.st(i) : 'T' === i.type[0] ? t.nt(i) : 'W' === i.type[0] ? t.rt(i) : void 0;
                                }, t.tt = function (t) {
                                    if (8 === t.data.byteLength) {
                                        var i = new Uint8Array(t.data), e = 1 & i[3], s = (i[4] << 23) + (i[5] << 15) + (i[6] << 7) + i[7];
                                        return s /= 45, e && (s += 47721858.84), Math.round(s);
                                    }
                                }, t.st = function (i) {
                                    if (!(i.size < 2)) {
                                        var e = t.ht(i.data, !0), s = new Uint8Array(i.data.subarray(e.length + 1));
                                        return {
                                            key: i.type,
                                            info: e,
                                            data: s.buffer
                                        };
                                    }
                                }, t.nt = function (i) {
                                    if (!(i.size < 2)) {
                                        if ('TXXX' === i.type) {
                                            var e = 1, s = t.ht(i.data.subarray(e), !0);
                                            e += s.length + 1;
                                            var n = t.ht(i.data.subarray(e));
                                            return {
                                                key: i.type,
                                                info: s,
                                                data: n
                                            };
                                        }
                                        var r = t.ht(i.data.subarray(1));
                                        return {
                                            key: i.type,
                                            data: r
                                        };
                                    }
                                }, t.rt = function (i) {
                                    if ('WXXX' === i.type) {
                                        if (i.size < 2)
                                            return;
                                        var e = 1, s = t.ht(i.data.subarray(e));
                                        e += s.length + 1;
                                        var n = t.ht(i.data.subarray(e));
                                        return {
                                            key: i.type,
                                            info: s,
                                            data: n
                                        };
                                    }
                                    var r = t.ht(i.data);
                                    return {
                                        key: i.type,
                                        data: r
                                    };
                                }, t.ht = function (t, i) {
                                    void 0 === i && (i = !1);
                                    var e = h();
                                    if (e) {
                                        var s = e.decode(t);
                                        if (i) {
                                            var n = s.indexOf('\0');
                                            return -1 !== n ? s.substring(0, n) : s;
                                        }
                                        return s.replace(/\0/g, '');
                                    }
                                    for (var r, a, o, c = t.length, u = '', l = 0; l < c;) {
                                        if (0 === (r = t[l++]) && i)
                                            return u;
                                        if (0 !== r && 3 !== r)
                                            switch (r >> 4) {
                                            case 0:
                                            case 1:
                                            case 2:
                                            case 3:
                                            case 4:
                                            case 5:
                                            case 6:
                                            case 7:
                                                u += String.fromCharCode(r);
                                                break;
                                            case 12:
                                            case 13:
                                                a = t[l++], u += String.fromCharCode((31 & r) << 6 | 63 & a);
                                                break;
                                            case 14:
                                                a = t[l++], o = t[l++], u += String.fromCharCode((15 & r) << 12 | (63 & a) << 6 | (63 & o) << 0);
                                            }
                                    }
                                    return u;
                                }, t;
                            }();
                        function h() {
                            var t = Object(n.a)();
                            return s || void 0 === t.TextDecoder || (s = new t.TextDecoder('utf-8')), s;
                        }
                        var a = r.ht;
                        i.a = r;
                    },
                    function (t, i, e) {
                        'use strict';
                        function s() {
                            return 'undefined' == typeof window ? self : window.cnxRenderWindow ? window.cnxRenderWindow : window;
                        }
                        e.d(i, 'a', function () {
                            return s;
                        });
                    },
                    function (t, i) {
                        t.exports = void 0;
                    },
                    function (t, i, e) {
                        var s, n, r, h, a;
                        s = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/?#]*)?((?:[^\/\?#]*\/)*.*?)??(;.*?)?(\?.*?)?(#.*?)?$/, n = /^([^\/?#]*)(.*)$/, r = /(?:\/|^)\.(?=\/)/g, h = /(?:\/|^)\.\.\/(?!\.\.\/).*?(?=\/)/g, a = {
                            buildAbsoluteURL: function (t, i, e) {
                                if (e = e || {}, t = t.trim(), !(i = i.trim())) {
                                    if (!e.alwaysNormalize)
                                        return t;
                                    var s = a.parseURL(t);
                                    if (!s)
                                        throw new Error('Error trying to parse base URL.');
                                    return s.path = a.normalizePath(s.path), a.buildURLFromParts(s);
                                }
                                var r = a.parseURL(i);
                                if (!r)
                                    throw new Error('Error trying to parse relative URL.');
                                if (r.scheme)
                                    return e.alwaysNormalize ? (r.path = a.normalizePath(r.path), a.buildURLFromParts(r)) : i;
                                var h = a.parseURL(t);
                                if (!h)
                                    throw new Error('Error trying to parse base URL.');
                                if (!h.netLoc && h.path && '/' !== h.path[0]) {
                                    var o = n.exec(h.path);
                                    h.netLoc = o[1], h.path = o[2];
                                }
                                h.netLoc && !h.path && (h.path = '/');
                                var c = {
                                    scheme: h.scheme,
                                    netLoc: r.netLoc,
                                    path: null,
                                    params: r.params,
                                    query: r.query,
                                    fragment: r.fragment
                                };
                                if (!r.netLoc && (c.netLoc = h.netLoc, '/' !== r.path[0]))
                                    if (r.path) {
                                        var u = h.path, l = u.substring(0, u.lastIndexOf('/') + 1) + r.path;
                                        c.path = a.normalizePath(l);
                                    } else
                                        c.path = h.path, r.params || (c.params = h.params, r.query || (c.query = h.query));
                                return null === c.path && (c.path = e.alwaysNormalize ? a.normalizePath(r.path) : r.path), a.buildURLFromParts(c);
                            },
                            parseURL: function (t) {
                                var i = s.exec(t);
                                return i ? {
                                    scheme: i[1] || '',
                                    netLoc: i[2] || '',
                                    path: i[3] || '',
                                    params: i[4] || '',
                                    query: i[5] || '',
                                    fragment: i[6] || ''
                                } : null;
                            },
                            normalizePath: function (t) {
                                for (t = t.split('').reverse().join('').replace(r, ''); t.length !== (t = t.replace(h, '')).length;);
                                return t.split('').reverse().join('');
                            },
                            buildURLFromParts: function (t) {
                                return t.scheme + t.netLoc + t.path + t.params + t.query + t.fragment;
                            }
                        }, t.exports = a;
                    },
                    function (t, i, e) {
                        'use strict';
                        var s = Object.prototype.hasOwnProperty, n = '~';
                        function r() {
                        }
                        function h(t, i, e) {
                            this.fn = t, this.context = i, this.once = e || !1;
                        }
                        function a(t, i, e, s, r) {
                            if ('function' != typeof e)
                                throw new TypeError('The listener must be a function');
                            var a = new h(e, s || t, r), o = n ? n + i : i;
                            return t.at[o] ? t.at[o].fn ? t.at[o] = [
                                t.at[o],
                                a
                            ] : t.at[o].push(a) : (t.at[o] = a, t.ot++), t;
                        }
                        function o(t, i) {
                            0 == --t.ot ? t.at = new r() : delete t.at[i];
                        }
                        function c() {
                            this.at = new r(), this.ot = 0;
                        }
                        Object.create && (r.prototype = Object.create(null), new r().__proto__ || (n = !1)), c.prototype.eventNames = function () {
                            var t, i, e = [];
                            if (0 === this.ot)
                                return e;
                            for (i in t = this.at)
                                s.call(t, i) && e.push(n ? i.slice(1) : i);
                            return Object.getOwnPropertySymbols ? e.concat(Object.getOwnPropertySymbols(t)) : e;
                        }, c.prototype.listeners = function (t) {
                            var i = n ? n + t : t, e = this.at[i];
                            if (!e)
                                return [];
                            if (e.fn)
                                return [e.fn];
                            for (var s = 0, r = e.length, h = new Array(r); s < r; s++)
                                h[s] = e[s].fn;
                            return h;
                        }, c.prototype.listenerCount = function (t) {
                            var i = n ? n + t : t, e = this.at[i];
                            return e ? e.fn ? 1 : e.length : 0;
                        }, c.prototype.emit = function (t, i, e, s, r, h) {
                            var a = n ? n + t : t;
                            if (!this.at[a])
                                return !1;
                            var o, c, u = this.at[a], l = arguments.length;
                            if (u.fn) {
                                switch (u.once && this.removeListener(t, u.fn, void 0, !0), l) {
                                case 1:
                                    return u.fn.call(u.context), !0;
                                case 2:
                                    return u.fn.call(u.context, i), !0;
                                case 3:
                                    return u.fn.call(u.context, i, e), !0;
                                case 4:
                                    return u.fn.call(u.context, i, e, s), !0;
                                case 5:
                                    return u.fn.call(u.context, i, e, s, r), !0;
                                case 6:
                                    return u.fn.call(u.context, i, e, s, r, h), !0;
                                }
                                for (c = 1, o = new Array(l - 1); c < l; c++)
                                    o[c - 1] = arguments[c];
                                u.fn.apply(u.context, o);
                            } else {
                                var d, f = u.length;
                                for (c = 0; c < f; c++)
                                    switch (u[c].once && this.removeListener(t, u[c].fn, void 0, !0), l) {
                                    case 1:
                                        u[c].fn.call(u[c].context);
                                        break;
                                    case 2:
                                        u[c].fn.call(u[c].context, i);
                                        break;
                                    case 3:
                                        u[c].fn.call(u[c].context, i, e);
                                        break;
                                    case 4:
                                        u[c].fn.call(u[c].context, i, e, s);
                                        break;
                                    default:
                                        if (!o)
                                            for (d = 1, o = new Array(l - 1); d < l; d++)
                                                o[d - 1] = arguments[d];
                                        u[c].fn.apply(u[c].context, o);
                                    }
                            }
                            return !0;
                        }, c.prototype.on = function (t, i, e) {
                            return a(this, t, i, e, !1);
                        }, c.prototype.once = function (t, i, e) {
                            return a(this, t, i, e, !0);
                        }, c.prototype.removeListener = function (t, i, e, s) {
                            var r = n ? n + t : t;
                            if (!this.at[r])
                                return this;
                            if (!i)
                                return o(this, r), this;
                            var h = this.at[r];
                            if (h.fn)
                                h.fn !== i || s && !h.once || e && h.context !== e || o(this, r);
                            else {
                                for (var a = 0, c = [], u = h.length; a < u; a++)
                                    (h[a].fn !== i || s && !h[a].once || e && h[a].context !== e) && c.push(h[a]);
                                c.length ? this.at[r] = 1 === c.length ? c[0] : c : o(this, r);
                            }
                            return this;
                        }, c.prototype.removeAllListeners = function (t) {
                            var i;
                            return t ? (i = n ? n + t : t, this.at[i] && o(this, i)) : (this.at = new r(), this.ot = 0), this;
                        }, c.prototype.off = c.prototype.removeListener, c.prototype.addListener = c.prototype.on, c.prefixed = n, c.EventEmitter = c, t.exports = c;
                    },
                    function (t, i, e) {
                        'use strict';
                        var s = e(1), n = e(2), r = function () {
                                function t(t, i) {
                                    this.subtle = t, this.aesIV = i;
                                }
                                return t.prototype.decrypt = function (t, i) {
                                    return this.subtle.decrypt({
                                        name: 'AES-CBC',
                                        iv: this.aesIV
                                    }, i, t);
                                }, t;
                            }(), h = function () {
                                function t(t, i) {
                                    this.subtle = t, this.key = i;
                                }
                                return t.prototype.expandKey = function () {
                                    return this.subtle.importKey('raw', this.key, { name: 'AES-CBC' }, !1, [
                                        'encrypt',
                                        'decrypt'
                                    ]);
                                }, t;
                            }(), a = function () {
                                function t() {
                                    this.rcon = [
                                        0,
                                        1,
                                        2,
                                        4,
                                        8,
                                        16,
                                        32,
                                        64,
                                        128,
                                        27,
                                        54
                                    ], this.subMix = [
                                        new Uint32Array(256),
                                        new Uint32Array(256),
                                        new Uint32Array(256),
                                        new Uint32Array(256)
                                    ], this.invSubMix = [
                                        new Uint32Array(256),
                                        new Uint32Array(256),
                                        new Uint32Array(256),
                                        new Uint32Array(256)
                                    ], this.sBox = new Uint32Array(256), this.invSBox = new Uint32Array(256), this.key = new Uint32Array(0), this.initTable();
                                }
                                var i = t.prototype;
                                return i.uint8ArrayToUint32Array_ = function (t) {
                                    for (var i = new DataView(t), e = new Uint32Array(4), s = 0; s < 4; s++)
                                        e[s] = i.getUint32(4 * s);
                                    return e;
                                }, i.initTable = function () {
                                    var t = this.sBox, i = this.invSBox, e = this.subMix, s = e[0], n = e[1], r = e[2], h = e[3], a = this.invSubMix, o = a[0], c = a[1], u = a[2], l = a[3], d = new Uint32Array(256), f = 0, p = 0, b = 0;
                                    for (b = 0; b < 256; b++)
                                        d[b] = b < 128 ? b << 1 : b << 1 ^ 283;
                                    for (b = 0; b < 256; b++) {
                                        var v = p ^ p << 1 ^ p << 2 ^ p << 3 ^ p << 4;
                                        v = v >>> 8 ^ 255 & v ^ 99, t[f] = v, i[v] = f;
                                        var m = d[f], g = d[m], y = d[g], w = 257 * d[v] ^ 16843008 * v;
                                        s[f] = w << 24 | w >>> 8, n[f] = w << 16 | w >>> 16, r[f] = w << 8 | w >>> 24, h[f] = w, w = 16843009 * y ^ 65537 * g ^ 257 * m ^ 16843008 * f, o[v] = w << 24 | w >>> 8, c[v] = w << 16 | w >>> 16, u[v] = w << 8 | w >>> 24, l[v] = w, f ? (f = m ^ d[d[d[y ^ m]]], p ^= d[d[p]]) : f = p = 1;
                                    }
                                }, i.expandKey = function (t) {
                                    for (var i = this.uint8ArrayToUint32Array_(t), e = !0, s = 0; s < i.length && e;)
                                        e = i[s] === this.key[s], s++;
                                    if (!e) {
                                        this.key = i;
                                        var n = this.keySize = i.length;
                                        if (4 !== n && 6 !== n && 8 !== n)
                                            throw new Error('Invalid aes key size=' + n);
                                        var r, h, a, o, c = this.ksRows = 4 * (n + 6 + 1), u = this.keySchedule = new Uint32Array(c), l = this.invKeySchedule = new Uint32Array(c), d = this.sBox, f = this.rcon, p = this.invSubMix, b = p[0], v = p[1], m = p[2], g = p[3];
                                        for (r = 0; r < c; r++)
                                            r < n ? a = u[r] = i[r] : (o = a, r % n == 0 ? (o = d[(o = o << 8 | o >>> 24) >>> 24] << 24 | d[o >>> 16 & 255] << 16 | d[o >>> 8 & 255] << 8 | d[255 & o], o ^= f[r / n | 0] << 24) : n > 6 && r % n == 4 && (o = d[o >>> 24] << 24 | d[o >>> 16 & 255] << 16 | d[o >>> 8 & 255] << 8 | d[255 & o]), u[r] = a = (u[r - n] ^ o) >>> 0);
                                        for (h = 0; h < c; h++)
                                            r = c - h, o = 3 & h ? u[r] : u[r - 4], l[h] = h < 4 || r <= 4 ? o : b[d[o >>> 24]] ^ v[d[o >>> 16 & 255]] ^ m[d[o >>> 8 & 255]] ^ g[d[255 & o]], l[h] = l[h] >>> 0;
                                    }
                                }, i.networkToHostOrderSwap = function (t) {
                                    return t << 24 | (65280 & t) << 8 | (16711680 & t) >> 8 | t >>> 24;
                                }, i.decrypt = function (t, i, e, s) {
                                    for (var n, r, h, a, o, c, u, l, d, f, p, b, v, m, g, y, w, O = this.keySize + 6, x = this.invKeySchedule, S = this.invSBox, j = this.invSubMix, k = j[0], _ = j[1], A = j[2], I = j[3], C = this.uint8ArrayToUint32Array_(e), T = C[0], P = C[1], M = C[2], E = C[3], L = new Int32Array(t), R = new Int32Array(L.length), B = this.networkToHostOrderSwap; i < L.length;) {
                                        for (d = B(L[i]), f = B(L[i + 1]), p = B(L[i + 2]), b = B(L[i + 3]), o = d ^ x[0], c = b ^ x[1], u = p ^ x[2], l = f ^ x[3], v = 4, m = 1; m < O; m++)
                                            n = k[o >>> 24] ^ _[c >> 16 & 255] ^ A[u >> 8 & 255] ^ I[255 & l] ^ x[v], r = k[c >>> 24] ^ _[u >> 16 & 255] ^ A[l >> 8 & 255] ^ I[255 & o] ^ x[v + 1], h = k[u >>> 24] ^ _[l >> 16 & 255] ^ A[o >> 8 & 255] ^ I[255 & c] ^ x[v + 2], a = k[l >>> 24] ^ _[o >> 16 & 255] ^ A[c >> 8 & 255] ^ I[255 & u] ^ x[v + 3], o = n, c = r, u = h, l = a, v += 4;
                                        n = S[o >>> 24] << 24 ^ S[c >> 16 & 255] << 16 ^ S[u >> 8 & 255] << 8 ^ S[255 & l] ^ x[v], r = S[c >>> 24] << 24 ^ S[u >> 16 & 255] << 16 ^ S[l >> 8 & 255] << 8 ^ S[255 & o] ^ x[v + 1], h = S[u >>> 24] << 24 ^ S[l >> 16 & 255] << 16 ^ S[o >> 8 & 255] << 8 ^ S[255 & c] ^ x[v + 2], a = S[l >>> 24] << 24 ^ S[o >> 16 & 255] << 16 ^ S[c >> 8 & 255] << 8 ^ S[255 & u] ^ x[v + 3], v += 3, R[i] = B(n ^ T), R[i + 1] = B(a ^ P), R[i + 2] = B(h ^ M), R[i + 3] = B(r ^ E), T = d, P = f, M = p, E = b, i += 4;
                                    }
                                    return s ? (g = R.buffer, y = g.byteLength, (w = y && new DataView(g).getUint8(y - 1)) ? g.slice(0, y - w) : g) : R.buffer;
                                }, i.destroy = function () {
                                    this.key = void 0, this.keySize = void 0, this.ksRows = void 0, this.sBox = void 0, this.invSBox = void 0, this.subMix = void 0, this.invSubMix = void 0, this.keySchedule = void 0, this.invKeySchedule = void 0, this.rcon = void 0;
                                }, t;
                            }(), o = e(0), c = e(5), u = function () {
                                function t(t, i, e) {
                                    var s = (void 0 === e ? {} : e).removePKCS7Padding, n = void 0 === s || s;
                                    if (this.logEnabled = !0, this.observer = t, this.config = i, this.removePKCS7Padding = n, n)
                                        try {
                                            var r = Object(c.a)().crypto;
                                            r && (this.subtle = r.subtle || r.webkitSubtle);
                                        } catch (t) {
                                        }
                                    this.disableWebCrypto = !this.subtle;
                                }
                                var i = t.prototype;
                                return i.isSync = function () {
                                    return this.disableWebCrypto && this.config.enableSoftwareAES;
                                }, i.decrypt = function (t, i, e, s) {
                                    var n = this;
                                    if (this.disableWebCrypto && this.config.enableSoftwareAES) {
                                        this.logEnabled && (o.b.log('JS AES decrypt'), this.logEnabled = !1);
                                        var c = this.decryptor;
                                        c || (this.decryptor = c = new a()), c.expandKey(i), s(c.decrypt(t, 0, e, this.removePKCS7Padding));
                                    } else {
                                        this.logEnabled && (o.b.log('WebCrypto AES decrypt'), this.logEnabled = !1);
                                        var u = this.subtle;
                                        this.key !== i && (this.key = i, this.fastAesKey = new h(u, i)), this.fastAesKey.expandKey().then(function (h) {
                                            new r(u, e).decrypt(t, h).catch(function (r) {
                                                n.onWebCryptoError(r, t, i, e, s);
                                            }).then(function (t) {
                                                s(t);
                                            });
                                        }).catch(function (r) {
                                            n.onWebCryptoError(r, t, i, e, s);
                                        });
                                    }
                                }, i.onWebCryptoError = function (t, i, e, r, h) {
                                    this.config.enableSoftwareAES ? (o.b.log('WebCrypto Error, disable WebCrypto API'), this.disableWebCrypto = !0, this.logEnabled = !0, this.decrypt(i, e, r, h)) : (o.b.error('decrypting error : ' + t.message), this.observer.trigger(s.a.ERROR, {
                                        type: n.b.MEDIA_ERROR,
                                        details: n.a.FRAG_DECRYPT_ERROR,
                                        fatal: !0,
                                        reason: t.message
                                    }));
                                }, i.destroy = function () {
                                    var t = this.decryptor;
                                    t && (t.destroy(), this.decryptor = void 0);
                                }, t;
                            }(), l = e(3);
                        function d(t, i) {
                            return 255 === t[i] && 240 == (246 & t[i + 1]);
                        }
                        function f(t, i) {
                            return 1 & t[i + 1] ? 7 : 9;
                        }
                        function p(t, i) {
                            return (3 & t[i + 3]) << 11 | t[i + 4] << 3 | (224 & t[i + 5]) >>> 5;
                        }
                        function b(t, i) {
                            return !!(i + 1 < t.length && d(t, i));
                        }
                        function v(t, i) {
                            if (b(t, i)) {
                                var e = f(t, i);
                                i + 5 < t.length && (e = p(t, i));
                                var s = i + e;
                                if (s === t.length || s + 1 < t.length && d(t, s))
                                    return !0;
                            }
                            return !1;
                        }
                        function m(t, i, e, r, h) {
                            if (!t.samplerate) {
                                var a = function (t, i, e, r) {
                                    var h, a, c, u, l, d = navigator.userAgent.toLowerCase(), f = r, p = [
                                            96000,
                                            88200,
                                            64000,
                                            48000,
                                            44100,
                                            32000,
                                            24000,
                                            22050,
                                            16000,
                                            12000,
                                            11025,
                                            8000,
                                            7350
                                        ];
                                    if (h = 1 + ((192 & i[e + 2]) >>> 6), !((a = (60 & i[e + 2]) >>> 2) > p.length - 1))
                                        return u = (1 & i[e + 2]) << 2, u |= (192 & i[e + 3]) >>> 6, o.b.log('manifest codec:' + r + ',ADTS data:type:' + h + ',sampleingIndex:' + a + '[' + p[a] + 'Hz],channelConfig:' + u), /firefox/i.test(d) ? a >= 6 ? (h = 5, l = new Array(4), c = a - 3) : (h = 2, l = new Array(2), c = a) : -1 !== d.indexOf('android') ? (h = 2, l = new Array(2), c = a) : (h = 5, l = new Array(4), r && (-1 !== r.indexOf('mp4a.40.29') || -1 !== r.indexOf('mp4a.40.5')) || !r && a >= 6 ? c = a - 3 : ((r && -1 !== r.indexOf('mp4a.40.2') && (a >= 6 && 1 === u || /vivaldi/i.test(d)) || !r && 1 === u) && (h = 2, l = new Array(2)), c = a)), l[0] = h << 3, l[0] |= (14 & a) >> 1, l[1] |= (1 & a) << 7, l[1] |= u << 3, 5 === h && (l[1] |= (14 & c) >> 1, l[2] = (1 & c) << 7, l[2] |= 8, l[3] = 0), {
                                            config: l,
                                            samplerate: p[a],
                                            channelCount: u,
                                            codec: 'mp4a.40.' + h,
                                            manifestCodec: f
                                        };
                                    t.trigger(s.a.ERROR, {
                                        type: n.b.MEDIA_ERROR,
                                        details: n.a.FRAG_PARSING_ERROR,
                                        fatal: !0,
                                        reason: 'invalid ADTS sampling index:' + a
                                    });
                                }(i, e, r, h);
                                t.config = a.config, t.samplerate = a.samplerate, t.channelCount = a.channelCount, t.codec = a.codec, t.manifestCodec = a.manifestCodec, o.b.log('parsed codec:' + t.codec + ',rate:' + a.samplerate + ',nb channel:' + a.channelCount);
                            }
                        }
                        function g(t) {
                            return 92160000 / t;
                        }
                        function y(t, i, e, s, n) {
                            var r = function (t, i, e, s, n) {
                                var r, h, a = t.length;
                                if (r = f(t, i), h = p(t, i), (h -= r) > 0 && i + r + h <= a)
                                    return {
                                        headerLength: r,
                                        frameLength: h,
                                        stamp: e + s * n
                                    };
                            }(i, e, s, n, g(t.samplerate));
                            if (r) {
                                var h = r.stamp, a = r.headerLength, o = r.frameLength, c = {
                                        unit: i.subarray(e + a, e + a + o),
                                        pts: h,
                                        dts: h
                                    };
                                return t.samples.push(c), {
                                    sample: c,
                                    length: o + a
                                };
                            }
                        }
                        var w = e(4), O = function () {
                                function t(t, i, e) {
                                    this.observer = t, this.config = e, this.remuxer = i;
                                }
                                var i = t.prototype;
                                return i.resetInitSegment = function (t, i, e, s) {
                                    this.ct = {
                                        container: 'audio/adts',
                                        type: 'audio',
                                        id: 0,
                                        sequenceNumber: 0,
                                        isAAC: !0,
                                        samples: [],
                                        len: 0,
                                        manifestCodec: i,
                                        duration: s,
                                        inputTimeScale: 90000
                                    };
                                }, i.resetTimeStamp = function () {
                                }, t.probe = function (t) {
                                    if (!t)
                                        return !1;
                                    for (var i = (w.a.getID3Data(t, 0) || []).length, e = t.length; i < e; i++)
                                        if (v(t, i))
                                            return o.b.log('ADTS sync word found !'), !0;
                                    return !1;
                                }, i.append = function (t, i, e, s) {
                                    for (var n = this.ct, r = w.a.getID3Data(t, 0) || [], h = w.a.getTimeStamp(r), a = Object(l.a)(h) ? 90 * h : 90000 * i, c = 0, u = a, d = t.length, f = r.length, p = [{
                                                    pts: u,
                                                    dts: u,
                                                    data: r
                                                }]; f < d - 1;)
                                        if (b(t, f) && f + 5 < d) {
                                            m(n, this.observer, t, f, n.manifestCodec);
                                            var v = y(n, t, f, a, c);
                                            if (!v) {
                                                o.b.log('Unable to parse AAC frame');
                                                break;
                                            }
                                            f += v.length, u = v.sample.pts, c++;
                                        } else
                                            w.a.isHeader(t, f) ? (r = w.a.getID3Data(t, f), p.push({
                                                pts: u,
                                                dts: u,
                                                data: r
                                            }), f += r.length) : f++;
                                    this.remuxer.remux(n, { samples: [] }, {
                                        samples: p,
                                        inputTimeScale: 90000
                                    }, { samples: [] }, i, e, s);
                                }, i.destroy = function () {
                                }, t;
                            }(), x = e(10), S = {
                                BitratesMap: [
                                    32,
                                    64,
                                    96,
                                    128,
                                    160,
                                    192,
                                    224,
                                    256,
                                    288,
                                    320,
                                    352,
                                    384,
                                    416,
                                    448,
                                    32,
                                    48,
                                    56,
                                    64,
                                    80,
                                    96,
                                    112,
                                    128,
                                    160,
                                    192,
                                    224,
                                    256,
                                    320,
                                    384,
                                    32,
                                    40,
                                    48,
                                    56,
                                    64,
                                    80,
                                    96,
                                    112,
                                    128,
                                    160,
                                    192,
                                    224,
                                    256,
                                    320,
                                    32,
                                    48,
                                    56,
                                    64,
                                    80,
                                    96,
                                    112,
                                    128,
                                    144,
                                    160,
                                    176,
                                    192,
                                    224,
                                    256,
                                    8,
                                    16,
                                    24,
                                    32,
                                    40,
                                    48,
                                    56,
                                    64,
                                    80,
                                    96,
                                    112,
                                    128,
                                    144,
                                    160
                                ],
                                SamplingRateMap: [
                                    44100,
                                    48000,
                                    32000,
                                    22050,
                                    24000,
                                    16000,
                                    11025,
                                    12000,
                                    8000
                                ],
                                SamplesCoefficients: [
                                    [
                                        0,
                                        72,
                                        144,
                                        12
                                    ],
                                    [
                                        0,
                                        0,
                                        0,
                                        0
                                    ],
                                    [
                                        0,
                                        72,
                                        144,
                                        12
                                    ],
                                    [
                                        0,
                                        144,
                                        144,
                                        12
                                    ]
                                ],
                                BytesInSlot: [
                                    0,
                                    1,
                                    1,
                                    4
                                ],
                                appendFrame: function (t, i, e, s, n) {
                                    if (!(e + 24 > i.length)) {
                                        var r = this.parseHeader(i, e);
                                        if (r && e + r.frameLength <= i.length) {
                                            var h = s + n * (90000 * r.samplesPerFrame / r.sampleRate), a = {
                                                    unit: i.subarray(e, e + r.frameLength),
                                                    pts: h,
                                                    dts: h
                                                };
                                            return t.config = [], t.channelCount = r.channelCount, t.samplerate = r.sampleRate, t.samples.push(a), {
                                                sample: a,
                                                length: r.frameLength
                                            };
                                        }
                                    }
                                },
                                parseHeader: function (t, i) {
                                    var e = t[i + 1] >> 3 & 3, s = t[i + 1] >> 1 & 3, n = t[i + 2] >> 4 & 15, r = t[i + 2] >> 2 & 3, h = t[i + 2] >> 1 & 1;
                                    if (1 !== e && 0 !== n && 15 !== n && 3 !== r) {
                                        var a = 3 === e ? 3 - s : 3 === s ? 3 : 4, o = 1000 * S.BitratesMap[14 * a + n - 1], c = 3 === e ? 0 : 2 === e ? 1 : 2, u = S.SamplingRateMap[3 * c + r], l = t[i + 3] >> 6 == 3 ? 1 : 2, d = S.SamplesCoefficients[e][s], f = S.BytesInSlot[s], p = 8 * d * f;
                                        return {
                                            sampleRate: u,
                                            channelCount: l,
                                            frameLength: parseInt(d * o / u + h, 10) * f,
                                            samplesPerFrame: p
                                        };
                                    }
                                },
                                isHeaderPattern: function (t, i) {
                                    return 255 === t[i] && 224 == (224 & t[i + 1]) && 0 != (6 & t[i + 1]);
                                },
                                isHeader: function (t, i) {
                                    return !!(i + 1 < t.length && this.isHeaderPattern(t, i));
                                },
                                probe: function (t, i) {
                                    if (i + 1 < t.length && this.isHeaderPattern(t, i)) {
                                        var e = this.parseHeader(t, i), s = 4;
                                        e && e.frameLength && (s = e.frameLength);
                                        var n = i + s;
                                        if (n === t.length || n + 1 < t.length && this.isHeaderPattern(t, n))
                                            return !0;
                                    }
                                    return !1;
                                }
                            }, j = S, k = function () {
                                function t(t) {
                                    this.data = t, this.bytesAvailable = t.byteLength, this.word = 0, this.bitsAvailable = 0;
                                }
                                var i = t.prototype;
                                return i.loadWord = function () {
                                    var t = this.data, i = this.bytesAvailable, e = t.byteLength - i, s = new Uint8Array(4), n = Math.min(4, i);
                                    if (0 === n)
                                        throw new Error('no bytes available');
                                    s.set(t.subarray(e, e + n)), this.word = new DataView(s.buffer).getUint32(0), this.bitsAvailable = 8 * n, this.bytesAvailable -= n;
                                }, i.skipBits = function (t) {
                                    var i;
                                    this.bitsAvailable > t ? (this.word <<= t, this.bitsAvailable -= t) : (t -= this.bitsAvailable, t -= (i = t >> 3) >> 3, this.bytesAvailable -= i, this.loadWord(), this.word <<= t, this.bitsAvailable -= t);
                                }, i.readBits = function (t) {
                                    var i = Math.min(this.bitsAvailable, t), e = this.word >>> 32 - i;
                                    return t > 32 && o.b.error('Cannot read more than 32 bits at a time'), this.bitsAvailable -= i, this.bitsAvailable > 0 ? this.word <<= i : this.bytesAvailable > 0 && this.loadWord(), (i = t - i) > 0 && this.bitsAvailable ? e << i | this.readBits(i) : e;
                                }, i.skipLZ = function () {
                                    var t;
                                    for (t = 0; t < this.bitsAvailable; ++t)
                                        if (0 != (this.word & 2147483648 >>> t))
                                            return this.word <<= t, this.bitsAvailable -= t, t;
                                    return this.loadWord(), t + this.skipLZ();
                                }, i.skipUEG = function () {
                                    this.skipBits(1 + this.skipLZ());
                                }, i.skipEG = function () {
                                    this.skipBits(1 + this.skipLZ());
                                }, i.readUEG = function () {
                                    var t = this.skipLZ();
                                    return this.readBits(t + 1) - 1;
                                }, i.readEG = function () {
                                    var t = this.readUEG();
                                    return 1 & t ? 1 + t >>> 1 : -1 * (t >>> 1);
                                }, i.readBoolean = function () {
                                    return 1 === this.readBits(1);
                                }, i.readUByte = function () {
                                    return this.readBits(8);
                                }, i.readUShort = function () {
                                    return this.readBits(16);
                                }, i.readUInt = function () {
                                    return this.readBits(32);
                                }, i.skipScalingList = function (t) {
                                    var i, e = 8, s = 8;
                                    for (i = 0; i < t; i++)
                                        0 !== s && (s = (e + this.readEG() + 256) % 256), e = 0 === s ? e : s;
                                }, i.readSPS = function () {
                                    var t, i, e, s, n, r, h, a = 0, o = 0, c = 0, u = 0, l = this.readUByte.bind(this), d = this.readBits.bind(this), f = this.readUEG.bind(this), p = this.readBoolean.bind(this), b = this.skipBits.bind(this), v = this.skipEG.bind(this), m = this.skipUEG.bind(this), g = this.skipScalingList.bind(this);
                                    if (l(), t = l(), d(5), b(3), l(), m(), 100 === t || 110 === t || 122 === t || 244 === t || 44 === t || 83 === t || 86 === t || 118 === t || 128 === t) {
                                        var y = f();
                                        if (3 === y && b(1), m(), m(), b(1), p())
                                            for (r = 3 !== y ? 8 : 12, h = 0; h < r; h++)
                                                p() && g(h < 6 ? 16 : 64);
                                    }
                                    m();
                                    var w = f();
                                    if (0 === w)
                                        f();
                                    else if (1 === w)
                                        for (b(1), v(), v(), i = f(), h = 0; h < i; h++)
                                            v();
                                    m(), b(1), e = f(), s = f(), 0 === (n = d(1)) && b(1), b(1), p() && (a = f(), o = f(), c = f(), u = f());
                                    var O = [
                                        1,
                                        1
                                    ];
                                    if (p() && p())
                                        switch (l()) {
                                        case 1:
                                            O = [
                                                1,
                                                1
                                            ];
                                            break;
                                        case 2:
                                            O = [
                                                12,
                                                11
                                            ];
                                            break;
                                        case 3:
                                            O = [
                                                10,
                                                11
                                            ];
                                            break;
                                        case 4:
                                            O = [
                                                16,
                                                11
                                            ];
                                            break;
                                        case 5:
                                            O = [
                                                40,
                                                33
                                            ];
                                            break;
                                        case 6:
                                            O = [
                                                24,
                                                11
                                            ];
                                            break;
                                        case 7:
                                            O = [
                                                20,
                                                11
                                            ];
                                            break;
                                        case 8:
                                            O = [
                                                32,
                                                11
                                            ];
                                            break;
                                        case 9:
                                            O = [
                                                80,
                                                33
                                            ];
                                            break;
                                        case 10:
                                            O = [
                                                18,
                                                11
                                            ];
                                            break;
                                        case 11:
                                            O = [
                                                15,
                                                11
                                            ];
                                            break;
                                        case 12:
                                            O = [
                                                64,
                                                33
                                            ];
                                            break;
                                        case 13:
                                            O = [
                                                160,
                                                99
                                            ];
                                            break;
                                        case 14:
                                            O = [
                                                4,
                                                3
                                            ];
                                            break;
                                        case 15:
                                            O = [
                                                3,
                                                2
                                            ];
                                            break;
                                        case 16:
                                            O = [
                                                2,
                                                1
                                            ];
                                            break;
                                        case 255:
                                            O = [
                                                l() << 8 | l(),
                                                l() << 8 | l()
                                            ];
                                        }
                                    return {
                                        width: Math.ceil(16 * (e + 1) - 2 * a - 2 * o),
                                        height: (2 - n) * (s + 1) * 16 - (n ? 2 : 4) * (c + u),
                                        pixelRatio: O
                                    };
                                }, i.readSliceType = function () {
                                    return this.readUByte(), this.readUEG(), this.readUEG();
                                }, t;
                            }(), _ = function () {
                                function t(t, i, e, s) {
                                    this.decryptdata = e, this.discardEPB = s, this.decrypter = new u(t, i, { removePKCS7Padding: !1 });
                                }
                                var i = t.prototype;
                                return i.decryptBuffer = function (t, i) {
                                    this.decrypter.decrypt(t, this.decryptdata.key.buffer, this.decryptdata.iv.buffer, i);
                                }, i.decryptAacSample = function (t, i, e, s) {
                                    var n = t[i].unit, r = n.subarray(16, n.length - n.length % 16), h = r.buffer.slice(r.byteOffset, r.byteOffset + r.length), a = this;
                                    this.decryptBuffer(h, function (r) {
                                        r = new Uint8Array(r), n.set(r, 16), s || a.decryptAacSamples(t, i + 1, e);
                                    });
                                }, i.decryptAacSamples = function (t, i, e) {
                                    for (;; i++) {
                                        if (i >= t.length)
                                            return void e();
                                        if (!(t[i].unit.length < 32)) {
                                            var s = this.decrypter.isSync();
                                            if (this.decryptAacSample(t, i, e, s), !s)
                                                return;
                                        }
                                    }
                                }, i.getAvcEncryptedData = function (t) {
                                    for (var i = 16 * Math.floor((t.length - 48) / 160) + 16, e = new Int8Array(i), s = 0, n = 32; n <= t.length - 16; n += 160, s += 16)
                                        e.set(t.subarray(n, n + 16), s);
                                    return e;
                                }, i.getAvcDecryptedUnit = function (t, i) {
                                    i = new Uint8Array(i);
                                    for (var e = 0, s = 32; s <= t.length - 16; s += 160, e += 16)
                                        t.set(i.subarray(e, e + 16), s);
                                    return t;
                                }, i.decryptAvcSample = function (t, i, e, s, n, r) {
                                    var h = this.discardEPB(n.data), a = this.getAvcEncryptedData(h), o = this;
                                    this.decryptBuffer(a.buffer, function (a) {
                                        n.data = o.getAvcDecryptedUnit(h, a), r || o.decryptAvcSamples(t, i, e + 1, s);
                                    });
                                }, i.decryptAvcSamples = function (t, i, e, s) {
                                    for (;; i++, e = 0) {
                                        if (i >= t.length)
                                            return void s();
                                        for (var n = t[i].units; !(e >= n.length); e++) {
                                            var r = n[e];
                                            if (!(r.length <= 48 || 1 !== r.type && 5 !== r.type)) {
                                                var h = this.decrypter.isSync();
                                                if (this.decryptAvcSample(t, i, e, s, r, h), !h)
                                                    return;
                                            }
                                        }
                                    }
                                }, t;
                            }(), A = {
                                video: 1,
                                audio: 2,
                                id3: 3,
                                text: 4
                            }, I = function () {
                                function t(t, i, e, s) {
                                    this.observer = t, this.config = e, this.typeSupported = s, this.remuxer = i, this.sampleAes = null;
                                }
                                var i = t.prototype;
                                return i.setDecryptData = function (t) {
                                    null != t && null != t.key && 'SAMPLE-AES' === t.method ? this.sampleAes = new _(this.observer, this.config, t, this.discardEPB) : this.sampleAes = null;
                                }, t.probe = function (i) {
                                    var e = t.ut(i);
                                    return !(e < 0 || (e && o.b.warn('MPEG2-TS detected but first sync word found @ offset ' + e + ', junk ahead ?'), 0));
                                }, t.ut = function (t) {
                                    for (var i = Math.min(1000, t.length - 564), e = 0; e < i;) {
                                        if (71 === t[e] && 71 === t[e + 188] && 71 === t[e + 376])
                                            return e;
                                        e++;
                                    }
                                    return -1;
                                }, t.createTrack = function (t, i) {
                                    return {
                                        container: 'video' === t || 'audio' === t ? 'video/mp2t' : void 0,
                                        type: t,
                                        id: A[t],
                                        pid: -1,
                                        inputTimeScale: 90000,
                                        sequenceNumber: 0,
                                        samples: [],
                                        dropped: 'video' === t ? 0 : void 0,
                                        isAAC: 'audio' === t || void 0,
                                        duration: 'audio' === t ? i : void 0
                                    };
                                }, i.resetInitSegment = function (i, e, s, n) {
                                    this.pmtParsed = !1, this.lt = -1, this.dt = t.createTrack('video', n), this.ct = t.createTrack('audio', n), this.ft = t.createTrack('id3', n), this.pt = t.createTrack('text', n), this.aacOverFlow = null, this.aacLastPTS = null, this.avcSample = null, this.audioCodec = e, this.videoCodec = s, this.bt = n;
                                }, i.resetTimeStamp = function () {
                                }, i.append = function (i, e, r, h) {
                                    var a, c, u, l, d, f = i.length, p = !1;
                                    this.contiguous = r;
                                    var b = this.pmtParsed, v = this.dt, m = this.ct, g = this.ft, y = v.pid, w = m.pid, O = g.pid, x = this.lt, S = v.pesData, j = m.pesData, k = g.pesData, _ = this.vt, A = this.gt, I = this.yt, C = this.wt.bind(this), T = this.Ot.bind(this), P = this.xt.bind(this), M = this.St.bind(this), E = t.ut(i);
                                    for (f -= (f + E) % 188, a = E; a < f; a += 188)
                                        if (71 === i[a]) {
                                            if (c = !!(64 & i[a + 1]), u = ((31 & i[a + 1]) << 8) + i[a + 2], (48 & i[a + 3]) >> 4 > 1) {
                                                if ((l = a + 5 + i[a + 4]) === a + 188)
                                                    continue;
                                            } else
                                                l = a + 4;
                                            switch (u) {
                                            case y:
                                                c && (S && (d = I(S)) && C(d, !1), S = {
                                                    data: [],
                                                    size: 0
                                                }), S && (S.data.push(i.subarray(l, a + 188)), S.size += a + 188 - l);
                                                break;
                                            case w:
                                                c && (j && (d = I(j)) && (m.isAAC ? T(d) : P(d)), j = {
                                                    data: [],
                                                    size: 0
                                                }), j && (j.data.push(i.subarray(l, a + 188)), j.size += a + 188 - l);
                                                break;
                                            case O:
                                                c && (k && (d = I(k)) && M(d), k = {
                                                    data: [],
                                                    size: 0
                                                }), k && (k.data.push(i.subarray(l, a + 188)), k.size += a + 188 - l);
                                                break;
                                            case 0:
                                                c && (l += i[l] + 1), x = this.lt = _(i, l);
                                                break;
                                            case x:
                                                c && (l += i[l] + 1);
                                                var L = A(i, l, !0 === this.typeSupported.mpeg || !0 === this.typeSupported.mp3, null != this.sampleAes);
                                                (y = L.avc) > 0 && (v.pid = y), (w = L.audio) > 0 && (m.pid = w, m.isAAC = L.isAAC), (O = L.id3) > 0 && (g.pid = O), p && !b && (o.b.log('reparse from beginning'), p = !1, a = E - 188), b = this.pmtParsed = !0;
                                                break;
                                            case 17:
                                            case 8191:
                                                break;
                                            default:
                                                p = !0;
                                            }
                                        } else
                                            this.observer.trigger(s.a.ERROR, {
                                                type: n.b.MEDIA_ERROR,
                                                details: n.a.FRAG_PARSING_ERROR,
                                                fatal: !1,
                                                reason: 'TS packet did not start with 0x47'
                                            });
                                    S && (d = I(S)) ? (C(d, !0), v.pesData = null) : v.pesData = S, j && (d = I(j)) ? (m.isAAC ? T(d) : P(d), m.pesData = null) : (j && j.size && o.b.log('last AAC PES packet truncated,might overlap between fragments'), m.pesData = j), k && (d = I(k)) ? (M(d), g.pesData = null) : g.pesData = k, null == this.sampleAes ? this.remuxer.remux(m, v, g, this.pt, e, r, h) : this.decryptAndRemux(m, v, g, this.pt, e, r, h);
                                }, i.decryptAndRemux = function (t, i, e, s, n, r, h) {
                                    if (t.samples && t.isAAC) {
                                        var a = this;
                                        this.sampleAes.decryptAacSamples(t.samples, 0, function () {
                                            a.decryptAndRemuxAvc(t, i, e, s, n, r, h);
                                        });
                                    } else
                                        this.decryptAndRemuxAvc(t, i, e, s, n, r, h);
                                }, i.decryptAndRemuxAvc = function (t, i, e, s, n, r, h) {
                                    if (i.samples) {
                                        var a = this;
                                        this.sampleAes.decryptAvcSamples(i.samples, 0, 0, function () {
                                            a.remuxer.remux(t, i, e, s, n, r, h);
                                        });
                                    } else
                                        this.remuxer.remux(t, i, e, s, n, r, h);
                                }, i.destroy = function () {
                                    this.jt = this.kt = void 0, this.bt = 0;
                                }, i.vt = function (t, i) {
                                    return (31 & t[i + 10]) << 8 | t[i + 11];
                                }, i.gt = function (t, i, e, s) {
                                    var n, r, h = {
                                            audio: -1,
                                            avc: -1,
                                            id3: -1,
                                            isAAC: !0
                                        };
                                    for (n = i + 3 + ((15 & t[i + 1]) << 8 | t[i + 2]) - 4, i += 12 + ((15 & t[i + 10]) << 8 | t[i + 11]); i < n;) {
                                        switch (r = (31 & t[i + 1]) << 8 | t[i + 2], t[i]) {
                                        case 207:
                                            if (!s) {
                                                o.b.log('unknown stream type:' + t[i]);
                                                break;
                                            }
                                        case 15:
                                            -1 === h.audio && (h.audio = r);
                                            break;
                                        case 21:
                                            -1 === h.id3 && (h.id3 = r);
                                            break;
                                        case 219:
                                            if (!s) {
                                                o.b.log('unknown stream type:' + t[i]);
                                                break;
                                            }
                                        case 27:
                                            -1 === h.avc && (h.avc = r);
                                            break;
                                        case 3:
                                        case 4:
                                            e ? -1 === h.audio && (h.audio = r, h.isAAC = !1) : o.b.log('MPEG audio found, not supported in this browser for now');
                                            break;
                                        case 36:
                                            o.b.warn('HEVC stream type found, not supported for now');
                                            break;
                                        default:
                                            o.b.log('unknown stream type:' + t[i]);
                                        }
                                        i += 5 + ((15 & t[i + 3]) << 8 | t[i + 4]);
                                    }
                                    return h;
                                }, i.yt = function (t) {
                                    var i, e, s, n, r, h, a, c, u = 0, l = t.data;
                                    if (!t || 0 === t.size)
                                        return null;
                                    for (; l[0].length < 19 && l.length > 1;) {
                                        var d = new Uint8Array(l[0].length + l[1].length);
                                        d.set(l[0]), d.set(l[1], l[0].length), l[0] = d, l.splice(1, 1);
                                    }
                                    if (1 === ((i = l[0])[0] << 16) + (i[1] << 8) + i[2]) {
                                        if ((s = (i[4] << 8) + i[5]) && s > t.size - 6)
                                            return null;
                                        if (192 & (e = i[7]) && ((h = 536870912 * (14 & i[9]) + 4194304 * (255 & i[10]) + 16384 * (254 & i[11]) + 128 * (255 & i[12]) + (254 & i[13]) / 2) > 4294967295 && (h -= 8589934592), 64 & e ? ((a = 536870912 * (14 & i[14]) + 4194304 * (255 & i[15]) + 16384 * (254 & i[16]) + 128 * (255 & i[17]) + (254 & i[18]) / 2) > 4294967295 && (a -= 8589934592), h - a > 5400000 && (o.b.warn(Math.round((h - a) / 90000) + 's delta between PTS and DTS, align them'), h = a)) : a = h), c = (n = i[8]) + 9, t.size <= c)
                                            return null;
                                        t.size -= c, r = new Uint8Array(t.size);
                                        for (var f = 0, p = l.length; f < p; f++) {
                                            var b = (i = l[f]).byteLength;
                                            if (c) {
                                                if (c > b) {
                                                    c -= b;
                                                    continue;
                                                }
                                                i = i.subarray(c), b -= c, c = 0;
                                            }
                                            r.set(i, u), u += b;
                                        }
                                        return s && (s -= n + 3), {
                                            data: r,
                                            pts: h,
                                            dts: a,
                                            len: s
                                        };
                                    }
                                    return null;
                                }, i.pushAccesUnit = function (t, i) {
                                    if (t.units.length && t.frame) {
                                        var e = i.samples, s = e.length;
                                        if (isNaN(t.pts)) {
                                            if (!s)
                                                return void i.dropped++;
                                            var n = e[s - 1];
                                            t.pts = n.pts, t.dts = n.dts;
                                        }
                                        !this.config.forceKeyFrameOnDiscontinuity || !0 === t.key || i.sps && (s || this.contiguous) ? (t.id = s, e.push(t)) : i.dropped++;
                                    }
                                    t.debug.length && o.b.log(t.pts + '/' + t.dts + ':' + t.debug);
                                }, i.wt = function (t, i) {
                                    var e, s, n, r = this, h = this.dt, a = this._t(t.data), o = this.avcSample, c = !1, u = this.pushAccesUnit.bind(this), l = function (t, i, e, s) {
                                            return {
                                                key: t,
                                                pts: i,
                                                dts: e,
                                                units: [],
                                                debug: s
                                            };
                                        };
                                    t.data = null, o && a.length && !h.audFound && (u(o, h), o = this.avcSample = l(!1, t.pts, t.dts, '')), a.forEach(function (i) {
                                        switch (i.type) {
                                        case 1:
                                            s = !0, o || (o = r.avcSample = l(!0, t.pts, t.dts, '')), o.frame = !0;
                                            var a = i.data;
                                            if (c && a.length > 4) {
                                                var d = new k(a).readSliceType();
                                                2 !== d && 4 !== d && 7 !== d && 9 !== d || (o.key = !0);
                                            }
                                            break;
                                        case 5:
                                            s = !0, o || (o = r.avcSample = l(!0, t.pts, t.dts, '')), o.key = !0, o.frame = !0;
                                            break;
                                        case 6:
                                            s = !0, (e = new k(r.discardEPB(i.data))).readUByte();
                                            for (var f = 0, p = 0, b = !1, v = 0; !b && e.bytesAvailable > 1;) {
                                                f = 0;
                                                do {
                                                    f += v = e.readUByte();
                                                } while (255 === v);
                                                p = 0;
                                                do {
                                                    p += v = e.readUByte();
                                                } while (255 === v);
                                                if (4 === f && 0 !== e.bytesAvailable) {
                                                    if (b = !0, 181 === e.readUByte() && 49 === e.readUShort() && 1195456820 === e.readUInt() && 3 === e.readUByte()) {
                                                        var m = e.readUByte(), g = 31 & m, y = [
                                                                m,
                                                                e.readUByte()
                                                            ];
                                                        for (n = 0; n < g; n++)
                                                            y.push(e.readUByte()), y.push(e.readUByte()), y.push(e.readUByte());
                                                        r.At(r.pt.samples, {
                                                            type: 3,
                                                            pts: t.pts,
                                                            bytes: y
                                                        });
                                                    }
                                                } else if (5 === f && 0 !== e.bytesAvailable) {
                                                    if (b = !0, p > 16) {
                                                        var O = [];
                                                        for (n = 0; n < 16; n++)
                                                            O.push(e.readUByte().toString(16)), 3 !== n && 5 !== n && 7 !== n && 9 !== n || O.push('-');
                                                        var x = p - 16, S = new Uint8Array(x);
                                                        for (n = 0; n < x; n++)
                                                            S[n] = e.readUByte();
                                                        r.At(r.pt.samples, {
                                                            pts: t.pts,
                                                            payloadType: f,
                                                            uuid: O.join(''),
                                                            userDataBytes: S,
                                                            userData: Object(w.b)(S.buffer)
                                                        });
                                                    }
                                                } else if (p < e.bytesAvailable)
                                                    for (n = 0; n < p; n++)
                                                        e.readUByte();
                                            }
                                            break;
                                        case 7:
                                            if (s = !0, c = !0, !h.sps) {
                                                var j = (e = new k(i.data)).readSPS();
                                                h.width = j.width, h.height = j.height, h.pixelRatio = j.pixelRatio, h.sps = [i.data], h.duration = r.bt;
                                                var _ = i.data.subarray(1, 4), A = 'avc1.';
                                                for (n = 0; n < 3; n++) {
                                                    var I = _[n].toString(16);
                                                    I.length < 2 && (I = '0' + I), A += I;
                                                }
                                                h.codec = A;
                                            }
                                            break;
                                        case 8:
                                            s = !0, h.pps || (h.pps = [i.data]);
                                            break;
                                        case 9:
                                            s = !1, h.audFound = !0, o && u(o, h), o = r.avcSample = l(!1, t.pts, t.dts, '');
                                            break;
                                        case 12:
                                            s = !1;
                                            break;
                                        default:
                                            s = !1, o && (o.debug += 'unknown NAL ' + i.type + ' ');
                                        }
                                        o && s && o.units.push(i);
                                    }), i && o && (u(o, h), this.avcSample = null);
                                }, i.At = function (t, i) {
                                    var e = t.length;
                                    if (e > 0) {
                                        if (i.pts >= t[e - 1].pts)
                                            t.push(i);
                                        else
                                            for (var s = e - 1; s >= 0; s--)
                                                if (i.pts < t[s].pts) {
                                                    t.splice(s, 0, i);
                                                    break;
                                                }
                                    } else
                                        t.push(i);
                                }, i.It = function () {
                                    var t, i = this.avcSample;
                                    if (!i || 0 === i.units.length) {
                                        var e = this.dt.samples;
                                        i = e[e.length - 1];
                                    }
                                    if (i) {
                                        var s = i.units;
                                        t = s[s.length - 1];
                                    }
                                    return t;
                                }, i._t = function (t) {
                                    var i, e, s, n, r = 0, h = t.byteLength, a = this.dt, o = a.naluState || 0, c = o, u = [], l = -1;
                                    for (-1 === o && (l = 0, n = 31 & t[0], o = 0, r = 1); r < h;)
                                        if (i = t[r++], o)
                                            if (1 !== o)
                                                if (i)
                                                    if (1 === i) {
                                                        if (l >= 0)
                                                            s = {
                                                                data: t.subarray(l, r - o - 1),
                                                                type: n
                                                            }, u.push(s);
                                                        else {
                                                            var d = this.It();
                                                            if (d && (c && r <= 4 - c && d.state && (d.data = d.data.subarray(0, d.data.byteLength - c)), (e = r - o - 1) > 0)) {
                                                                var f = new Uint8Array(d.data.byteLength + e);
                                                                f.set(d.data, 0), f.set(t.subarray(0, e), d.data.byteLength), d.data = f;
                                                            }
                                                        }
                                                        r < h ? (l = r, n = 31 & t[r], o = 0) : o = -1;
                                                    } else
                                                        o = 0;
                                                else
                                                    o = 3;
                                            else
                                                o = i ? 0 : 2;
                                        else
                                            o = i ? 0 : 1;
                                    if (l >= 0 && o >= 0 && (s = {
                                            data: t.subarray(l, h),
                                            type: n,
                                            state: o
                                        }, u.push(s)), 0 === u.length) {
                                        var p = this.It();
                                        if (p) {
                                            var b = new Uint8Array(p.data.byteLength + t.byteLength);
                                            b.set(p.data, 0), b.set(t, p.data.byteLength), p.data = b;
                                        }
                                    }
                                    return a.naluState = o, u;
                                }, i.discardEPB = function (t) {
                                    for (var i, e, s = t.byteLength, n = [], r = 1; r < s - 2;)
                                        0 === t[r] && 0 === t[r + 1] && 3 === t[r + 2] ? (n.push(r + 2), r += 2) : r++;
                                    if (0 === n.length)
                                        return t;
                                    i = s - n.length, e = new Uint8Array(i);
                                    var h = 0;
                                    for (r = 0; r < i; h++, r++)
                                        h === n[0] && (h++, n.shift()), e[r] = t[h];
                                    return e;
                                }, i.Ot = function (t) {
                                    var i, e, r, h, a, c, u, l = this.ct, d = t.data, f = t.pts, p = this.aacOverFlow, v = this.aacLastPTS;
                                    if (p) {
                                        var w = new Uint8Array(p.byteLength + d.byteLength);
                                        w.set(p, 0), w.set(d, p.byteLength), d = w;
                                    }
                                    for (r = 0, a = d.length; r < a - 1 && !b(d, r); r++);
                                    if (!r || (r < a - 1 ? (c = 'AAC PES did not start with ADTS header,offset:' + r, u = !1) : (c = 'no ADTS header found in AAC PES', u = !0), o.b.warn('parsing error:' + c), this.observer.trigger(s.a.ERROR, {
                                            type: n.b.MEDIA_ERROR,
                                            details: n.a.FRAG_PARSING_ERROR,
                                            fatal: u,
                                            reason: c
                                        }), !u)) {
                                        if (m(l, this.observer, d, r, this.audioCodec), e = 0, i = g(l.samplerate), p && v) {
                                            var O = v + i;
                                            Math.abs(O - f) > 1 && (o.b.log('AAC: align PTS for overlapping frames by ' + Math.round((O - f) / 90)), f = O);
                                        }
                                        for (; r < a;) {
                                            if (b(d, r)) {
                                                if (r + 5 < a) {
                                                    var x = y(l, d, r, f, e);
                                                    if (x) {
                                                        r += x.length, h = x.sample.pts, e++;
                                                        continue;
                                                    }
                                                }
                                                break;
                                            }
                                            r++;
                                        }
                                        p = r < a ? d.subarray(r, a) : null, this.aacOverFlow = p, this.aacLastPTS = h;
                                    }
                                }, i.xt = function (t) {
                                    for (var i = t.data, e = i.length, s = 0, n = 0, r = t.pts; n < e;)
                                        if (j.isHeader(i, n)) {
                                            var h = j.appendFrame(this.ct, i, n, r, s);
                                            if (!h)
                                                break;
                                            n += h.length, s++;
                                        } else
                                            n++;
                                }, i.St = function (t) {
                                    this.ft.samples.push(t);
                                }, t;
                            }(), C = function () {
                                function t(t, i, e) {
                                    this.observer = t, this.config = e, this.remuxer = i;
                                }
                                var i = t.prototype;
                                return i.resetInitSegment = function (t, i, e, s) {
                                    this.ct = {
                                        container: 'audio/mpeg',
                                        type: 'audio',
                                        id: -1,
                                        sequenceNumber: 0,
                                        isAAC: !1,
                                        samples: [],
                                        len: 0,
                                        manifestCodec: i,
                                        duration: s,
                                        inputTimeScale: 90000
                                    };
                                }, i.resetTimeStamp = function () {
                                }, t.probe = function (t) {
                                    var i, e, s = w.a.getID3Data(t, 0);
                                    if (s && void 0 !== w.a.getTimeStamp(s))
                                        for (i = s.length, e = Math.min(t.length - 1, i + 100); i < e; i++)
                                            if (j.probe(t, i))
                                                return o.b.log('MPEG Audio sync word found !'), !0;
                                    return !1;
                                }, i.append = function (t, i, e, s) {
                                    for (var n = w.a.getID3Data(t, 0), r = w.a.getTimeStamp(n), h = r ? 90 * r : 90000 * i, a = n.length, o = t.length, c = 0, u = 0, l = this.ct, d = [{
                                                    pts: h,
                                                    dts: h,
                                                    data: n
                                                }]; a < o;)
                                        if (j.isHeader(t, a)) {
                                            var f = j.appendFrame(l, t, a, h, c);
                                            if (!f)
                                                break;
                                            a += f.length, u = f.sample.pts, c++;
                                        } else
                                            w.a.isHeader(t, a) ? (n = w.a.getID3Data(t, a), d.push({
                                                pts: u,
                                                dts: u,
                                                data: n
                                            }), a += n.length) : a++;
                                    this.remuxer.remux(l, { samples: [] }, {
                                        samples: d,
                                        inputTimeScale: 90000
                                    }, { samples: [] }, i, e, s);
                                }, i.destroy = function () {
                                }, t;
                            }(), T = function () {
                                function t() {
                                }
                                return t.getSilentFrame = function (t, i) {
                                    switch (t) {
                                    case 'mp4a.40.2':
                                        if (1 === i)
                                            return new Uint8Array([
                                                0,
                                                200,
                                                0,
                                                128,
                                                35,
                                                128
                                            ]);
                                        if (2 === i)
                                            return new Uint8Array([
                                                33,
                                                0,
                                                73,
                                                144,
                                                2,
                                                25,
                                                0,
                                                35,
                                                128
                                            ]);
                                        if (3 === i)
                                            return new Uint8Array([
                                                0,
                                                200,
                                                0,
                                                128,
                                                32,
                                                132,
                                                1,
                                                38,
                                                64,
                                                8,
                                                100,
                                                0,
                                                142
                                            ]);
                                        if (4 === i)
                                            return new Uint8Array([
                                                0,
                                                200,
                                                0,
                                                128,
                                                32,
                                                132,
                                                1,
                                                38,
                                                64,
                                                8,
                                                100,
                                                0,
                                                128,
                                                44,
                                                128,
                                                8,
                                                2,
                                                56
                                            ]);
                                        if (5 === i)
                                            return new Uint8Array([
                                                0,
                                                200,
                                                0,
                                                128,
                                                32,
                                                132,
                                                1,
                                                38,
                                                64,
                                                8,
                                                100,
                                                0,
                                                130,
                                                48,
                                                4,
                                                153,
                                                0,
                                                33,
                                                144,
                                                2,
                                                56
                                            ]);
                                        if (6 === i)
                                            return new Uint8Array([
                                                0,
                                                200,
                                                0,
                                                128,
                                                32,
                                                132,
                                                1,
                                                38,
                                                64,
                                                8,
                                                100,
                                                0,
                                                130,
                                                48,
                                                4,
                                                153,
                                                0,
                                                33,
                                                144,
                                                2,
                                                0,
                                                178,
                                                0,
                                                32,
                                                8,
                                                224
                                            ]);
                                        break;
                                    default:
                                        if (1 === i)
                                            return new Uint8Array([
                                                1,
                                                64,
                                                34,
                                                128,
                                                163,
                                                78,
                                                230,
                                                128,
                                                186,
                                                8,
                                                0,
                                                0,
                                                0,
                                                28,
                                                6,
                                                241,
                                                193,
                                                10,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                94
                                            ]);
                                        if (2 === i)
                                            return new Uint8Array([
                                                1,
                                                64,
                                                34,
                                                128,
                                                163,
                                                94,
                                                230,
                                                128,
                                                186,
                                                8,
                                                0,
                                                0,
                                                0,
                                                0,
                                                149,
                                                0,
                                                6,
                                                241,
                                                161,
                                                10,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                94
                                            ]);
                                        if (3 === i)
                                            return new Uint8Array([
                                                1,
                                                64,
                                                34,
                                                128,
                                                163,
                                                94,
                                                230,
                                                128,
                                                186,
                                                8,
                                                0,
                                                0,
                                                0,
                                                0,
                                                149,
                                                0,
                                                6,
                                                241,
                                                161,
                                                10,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                90,
                                                94
                                            ]);
                                    }
                                    return null;
                                }, t;
                            }(), P = Math.pow(2, 32) - 1, M = function () {
                                function t() {
                                }
                                return t.init = function () {
                                    var i;
                                    for (i in (t.types = {
                                            avc1: [],
                                            avcC: [],
                                            btrt: [],
                                            dinf: [],
                                            dref: [],
                                            esds: [],
                                            ftyp: [],
                                            hdlr: [],
                                            mdat: [],
                                            mdhd: [],
                                            mdia: [],
                                            mfhd: [],
                                            minf: [],
                                            moof: [],
                                            moov: [],
                                            mp4a: [],
                                            '.mp3': [],
                                            mvex: [],
                                            mvhd: [],
                                            pasp: [],
                                            sdtp: [],
                                            stbl: [],
                                            stco: [],
                                            stsc: [],
                                            stsd: [],
                                            stsz: [],
                                            stts: [],
                                            tfdt: [],
                                            tfhd: [],
                                            traf: [],
                                            trak: [],
                                            trun: [],
                                            trex: [],
                                            tkhd: [],
                                            vmhd: [],
                                            smhd: []
                                        }, t.types))
                                        t.types.hasOwnProperty(i) && (t.types[i] = [
                                            i.charCodeAt(0),
                                            i.charCodeAt(1),
                                            i.charCodeAt(2),
                                            i.charCodeAt(3)
                                        ]);
                                    var e = new Uint8Array([
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            118,
                                            105,
                                            100,
                                            101,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            86,
                                            105,
                                            100,
                                            101,
                                            111,
                                            72,
                                            97,
                                            110,
                                            100,
                                            108,
                                            101,
                                            114,
                                            0
                                        ]), s = new Uint8Array([
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            115,
                                            111,
                                            117,
                                            110,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            83,
                                            111,
                                            117,
                                            110,
                                            100,
                                            72,
                                            97,
                                            110,
                                            100,
                                            108,
                                            101,
                                            114,
                                            0
                                        ]);
                                    t.HDLR_TYPES = {
                                        video: e,
                                        audio: s
                                    };
                                    var n = new Uint8Array([
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            1,
                                            0,
                                            0,
                                            0,
                                            12,
                                            117,
                                            114,
                                            108,
                                            32,
                                            0,
                                            0,
                                            0,
                                            1
                                        ]), r = new Uint8Array([
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0
                                        ]);
                                    t.STTS = t.STSC = t.STCO = r, t.STSZ = new Uint8Array([
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0
                                    ]), t.VMHD = new Uint8Array([
                                        0,
                                        0,
                                        0,
                                        1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0
                                    ]), t.SMHD = new Uint8Array([
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0
                                    ]), t.STSD = new Uint8Array([
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        1
                                    ]);
                                    var h = new Uint8Array([
                                            105,
                                            115,
                                            111,
                                            109
                                        ]), a = new Uint8Array([
                                            97,
                                            118,
                                            99,
                                            49
                                        ]), o = new Uint8Array([
                                            0,
                                            0,
                                            0,
                                            1
                                        ]);
                                    t.FTYP = t.box(t.types.ftyp, h, o, h, a), t.DINF = t.box(t.types.dinf, t.box(t.types.dref, n));
                                }, t.box = function (t) {
                                    for (var i, e = Array.prototype.slice.call(arguments, 1), s = 8, n = e.length, r = n; n--;)
                                        s += e[n].byteLength;
                                    for ((i = new Uint8Array(s))[0] = s >> 24 & 255, i[1] = s >> 16 & 255, i[2] = s >> 8 & 255, i[3] = 255 & s, i.set(t, 4), n = 0, s = 8; n < r; n++)
                                        i.set(e[n], s), s += e[n].byteLength;
                                    return i;
                                }, t.hdlr = function (i) {
                                    return t.box(t.types.hdlr, t.HDLR_TYPES[i]);
                                }, t.mdat = function (i) {
                                    return t.box(t.types.mdat, i);
                                }, t.mdhd = function (i, e) {
                                    e *= i;
                                    var s = Math.floor(e / (P + 1)), n = Math.floor(e % (P + 1));
                                    return t.box(t.types.mdhd, new Uint8Array([
                                        1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        2,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        3,
                                        i >> 24 & 255,
                                        i >> 16 & 255,
                                        i >> 8 & 255,
                                        255 & i,
                                        s >> 24,
                                        s >> 16 & 255,
                                        s >> 8 & 255,
                                        255 & s,
                                        n >> 24,
                                        n >> 16 & 255,
                                        n >> 8 & 255,
                                        255 & n,
                                        85,
                                        196,
                                        0,
                                        0
                                    ]));
                                }, t.mdia = function (i) {
                                    return t.box(t.types.mdia, t.mdhd(i.timescale, i.duration), t.hdlr(i.type), t.minf(i));
                                }, t.mfhd = function (i) {
                                    return t.box(t.types.mfhd, new Uint8Array([
                                        0,
                                        0,
                                        0,
                                        0,
                                        i >> 24,
                                        i >> 16 & 255,
                                        i >> 8 & 255,
                                        255 & i
                                    ]));
                                }, t.minf = function (i) {
                                    return 'audio' === i.type ? t.box(t.types.minf, t.box(t.types.smhd, t.SMHD), t.DINF, t.stbl(i)) : t.box(t.types.minf, t.box(t.types.vmhd, t.VMHD), t.DINF, t.stbl(i));
                                }, t.moof = function (i, e, s) {
                                    return t.box(t.types.moof, t.mfhd(i), t.traf(s, e));
                                }, t.moov = function (i) {
                                    for (var e = i.length, s = []; e--;)
                                        s[e] = t.trak(i[e]);
                                    return t.box.apply(null, [
                                        t.types.moov,
                                        t.mvhd(i[0].timescale, i[0].duration)
                                    ].concat(s).concat(t.mvex(i)));
                                }, t.mvex = function (i) {
                                    for (var e = i.length, s = []; e--;)
                                        s[e] = t.trex(i[e]);
                                    return t.box.apply(null, [t.types.mvex].concat(s));
                                }, t.mvhd = function (i, e) {
                                    e *= i;
                                    var s = Math.floor(e / (P + 1)), n = Math.floor(e % (P + 1)), r = new Uint8Array([
                                            1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            2,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            3,
                                            i >> 24 & 255,
                                            i >> 16 & 255,
                                            i >> 8 & 255,
                                            255 & i,
                                            s >> 24,
                                            s >> 16 & 255,
                                            s >> 8 & 255,
                                            255 & s,
                                            n >> 24,
                                            n >> 16 & 255,
                                            n >> 8 & 255,
                                            255 & n,
                                            0,
                                            1,
                                            0,
                                            0,
                                            1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            64,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            255,
                                            255,
                                            255,
                                            255
                                        ]);
                                    return t.box(t.types.mvhd, r);
                                }, t.sdtp = function (i) {
                                    var e, s, n = i.samples || [], r = new Uint8Array(4 + n.length);
                                    for (s = 0; s < n.length; s++)
                                        e = n[s].flags, r[s + 4] = e.dependsOn << 4 | e.isDependedOn << 2 | e.hasRedundancy;
                                    return t.box(t.types.sdtp, r);
                                }, t.stbl = function (i) {
                                    return t.box(t.types.stbl, t.stsd(i), t.box(t.types.stts, t.STTS), t.box(t.types.stsc, t.STSC), t.box(t.types.stsz, t.STSZ), t.box(t.types.stco, t.STCO));
                                }, t.avc1 = function (i) {
                                    var e, s, n, r = [], h = [];
                                    for (e = 0; e < i.sps.length; e++)
                                        n = (s = i.sps[e]).byteLength, r.push(n >>> 8 & 255), r.push(255 & n), r = r.concat(Array.prototype.slice.call(s));
                                    for (e = 0; e < i.pps.length; e++)
                                        n = (s = i.pps[e]).byteLength, h.push(n >>> 8 & 255), h.push(255 & n), h = h.concat(Array.prototype.slice.call(s));
                                    var a = t.box(t.types.avcC, new Uint8Array([
                                            1,
                                            r[3],
                                            r[4],
                                            r[5],
                                            255,
                                            224 | i.sps.length
                                        ].concat(r).concat([i.pps.length]).concat(h))), o = i.width, c = i.height, u = i.pixelRatio[0], l = i.pixelRatio[1];
                                    return t.box(t.types.avc1, new Uint8Array([
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        o >> 8 & 255,
                                        255 & o,
                                        c >> 8 & 255,
                                        255 & c,
                                        0,
                                        72,
                                        0,
                                        0,
                                        0,
                                        72,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        1,
                                        18,
                                        100,
                                        97,
                                        105,
                                        108,
                                        121,
                                        109,
                                        111,
                                        116,
                                        105,
                                        111,
                                        110,
                                        47,
                                        104,
                                        108,
                                        115,
                                        46,
                                        106,
                                        115,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        24,
                                        17,
                                        17
                                    ]), a, t.box(t.types.btrt, new Uint8Array([
                                        0,
                                        28,
                                        156,
                                        128,
                                        0,
                                        45,
                                        198,
                                        192,
                                        0,
                                        45,
                                        198,
                                        192
                                    ])), t.box(t.types.pasp, new Uint8Array([
                                        u >> 24,
                                        u >> 16 & 255,
                                        u >> 8 & 255,
                                        255 & u,
                                        l >> 24,
                                        l >> 16 & 255,
                                        l >> 8 & 255,
                                        255 & l
                                    ])));
                                }, t.esds = function (t) {
                                    var i = t.config.length;
                                    return new Uint8Array([
                                        0,
                                        0,
                                        0,
                                        0,
                                        3,
                                        23 + i,
                                        0,
                                        1,
                                        0,
                                        4,
                                        15 + i,
                                        64,
                                        21,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        5
                                    ].concat([i]).concat(t.config).concat([
                                        6,
                                        1,
                                        2
                                    ]));
                                }, t.mp4a = function (i) {
                                    var e = i.samplerate;
                                    return t.box(t.types.mp4a, new Uint8Array([
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        i.channelCount,
                                        0,
                                        16,
                                        0,
                                        0,
                                        0,
                                        0,
                                        e >> 8 & 255,
                                        255 & e,
                                        0,
                                        0
                                    ]), t.box(t.types.esds, t.esds(i)));
                                }, t.mp3 = function (i) {
                                    var e = i.samplerate;
                                    return t.box(t.types['.mp3'], new Uint8Array([
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        i.channelCount,
                                        0,
                                        16,
                                        0,
                                        0,
                                        0,
                                        0,
                                        e >> 8 & 255,
                                        255 & e,
                                        0,
                                        0
                                    ]));
                                }, t.stsd = function (i) {
                                    return 'audio' === i.type ? i.isAAC || 'mp3' !== i.codec ? t.box(t.types.stsd, t.STSD, t.mp4a(i)) : t.box(t.types.stsd, t.STSD, t.mp3(i)) : t.box(t.types.stsd, t.STSD, t.avc1(i));
                                }, t.tkhd = function (i) {
                                    var e = i.id, s = i.duration * i.timescale, n = i.width, r = i.height, h = Math.floor(s / (P + 1)), a = Math.floor(s % (P + 1));
                                    return t.box(t.types.tkhd, new Uint8Array([
                                        1,
                                        0,
                                        0,
                                        7,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        2,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        3,
                                        e >> 24 & 255,
                                        e >> 16 & 255,
                                        e >> 8 & 255,
                                        255 & e,
                                        0,
                                        0,
                                        0,
                                        0,
                                        h >> 24,
                                        h >> 16 & 255,
                                        h >> 8 & 255,
                                        255 & h,
                                        a >> 24,
                                        a >> 16 & 255,
                                        a >> 8 & 255,
                                        255 & a,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        64,
                                        0,
                                        0,
                                        0,
                                        n >> 8 & 255,
                                        255 & n,
                                        0,
                                        0,
                                        r >> 8 & 255,
                                        255 & r,
                                        0,
                                        0
                                    ]));
                                }, t.traf = function (i, e) {
                                    var s = t.sdtp(i), n = i.id, r = Math.floor(e / (P + 1)), h = Math.floor(e % (P + 1));
                                    return t.box(t.types.traf, t.box(t.types.tfhd, new Uint8Array([
                                        0,
                                        0,
                                        0,
                                        0,
                                        n >> 24,
                                        n >> 16 & 255,
                                        n >> 8 & 255,
                                        255 & n
                                    ])), t.box(t.types.tfdt, new Uint8Array([
                                        1,
                                        0,
                                        0,
                                        0,
                                        r >> 24,
                                        r >> 16 & 255,
                                        r >> 8 & 255,
                                        255 & r,
                                        h >> 24,
                                        h >> 16 & 255,
                                        h >> 8 & 255,
                                        255 & h
                                    ])), t.trun(i, s.length + 16 + 20 + 8 + 16 + 8 + 8), s);
                                }, t.trak = function (i) {
                                    return i.duration = i.duration || 4294967295, t.box(t.types.trak, t.tkhd(i), t.mdia(i));
                                }, t.trex = function (i) {
                                    var e = i.id;
                                    return t.box(t.types.trex, new Uint8Array([
                                        0,
                                        0,
                                        0,
                                        0,
                                        e >> 24,
                                        e >> 16 & 255,
                                        e >> 8 & 255,
                                        255 & e,
                                        0,
                                        0,
                                        0,
                                        1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        1,
                                        0,
                                        1
                                    ]));
                                }, t.trun = function (i, e) {
                                    var s, n, r, h, a, o, c = i.samples || [], u = c.length, l = 12 + 16 * u, d = new Uint8Array(l);
                                    for (e += 8 + l, d.set([
                                            0,
                                            0,
                                            15,
                                            1,
                                            u >>> 24 & 255,
                                            u >>> 16 & 255,
                                            u >>> 8 & 255,
                                            255 & u,
                                            e >>> 24 & 255,
                                            e >>> 16 & 255,
                                            e >>> 8 & 255,
                                            255 & e
                                        ], 0), s = 0; s < u; s++)
                                        r = (n = c[s]).duration, h = n.size, a = n.flags, o = n.cts, d.set([
                                            r >>> 24 & 255,
                                            r >>> 16 & 255,
                                            r >>> 8 & 255,
                                            255 & r,
                                            h >>> 24 & 255,
                                            h >>> 16 & 255,
                                            h >>> 8 & 255,
                                            255 & h,
                                            a.isLeading << 2 | a.dependsOn,
                                            a.isDependedOn << 6 | a.hasRedundancy << 4 | a.paddingValue << 1 | a.isNonSync,
                                            61440 & a.degradPrio,
                                            15 & a.degradPrio,
                                            o >>> 24 & 255,
                                            o >>> 16 & 255,
                                            o >>> 8 & 255,
                                            255 & o
                                        ], 12 + 16 * s);
                                    return t.box(t.types.trun, d);
                                }, t.initSegment = function (i) {
                                    t.types || t.init();
                                    var e, s = t.moov(i);
                                    return (e = new Uint8Array(t.FTYP.byteLength + s.byteLength)).set(t.FTYP), e.set(s, t.FTYP.byteLength), e;
                                }, t;
                            }();
                        function E(t, i, e, s) {
                            void 0 === e && (e = 1), void 0 === s && (s = !1);
                            var n = t * i * e;
                            return s ? Math.round(n) : n;
                        }
                        function L(t, i) {
                            return void 0 === i && (i = !1), E(t, 1000, 1 / 90000, i);
                        }
                        function R(t, i) {
                            return void 0 === i && (i = 1), E(t, 90000, 1 / i);
                        }
                        var B, D = R(10), F = R(0.2), V = function () {
                                function t(t, i, e, s) {
                                    this.observer = t, this.config = i, this.typeSupported = e;
                                    var n = navigator.userAgent;
                                    this.isSafari = s && s.indexOf('Apple') > -1 && n && !n.match('CriOS'), this.ISGenerated = !1;
                                }
                                var i = t.prototype;
                                return i.destroy = function () {
                                }, i.resetTimeStamp = function (t) {
                                    this.jt = this.kt = t;
                                }, i.resetInitSegment = function () {
                                    this.ISGenerated = !1;
                                }, i.remux = function (t, i, e, n, r, h, a) {
                                    if (this.ISGenerated || this.generateIS(t, i, r), this.ISGenerated) {
                                        var c = t.samples.length, u = i.samples.length, l = r, d = r;
                                        if (c && u) {
                                            var f = (t.samples[0].pts - i.samples[0].pts) / i.inputTimeScale;
                                            l += Math.max(0, f), d += Math.max(0, -f);
                                        }
                                        if (c) {
                                            t.timescale || (o.b.warn('regenerate InitSegment as audio detected'), this.generateIS(t, i, r));
                                            var p, b = this.remuxAudio(t, l, h, a);
                                            u && (b && (p = b.endPTS - b.startPTS), i.timescale || (o.b.warn('regenerate InitSegment as video detected'), this.generateIS(t, i, r)), this.remuxVideo(i, d, h, p, a));
                                        } else if (u) {
                                            var v = this.remuxVideo(i, d, h, 0, a);
                                            v && t.codec && this.remuxEmptyAudio(t, l, h, v);
                                        }
                                    }
                                    e.samples.length && this.remuxID3(e, r), n.samples.length && this.remuxText(n, r), this.observer.trigger(s.a.FRAG_PARSED);
                                }, i.generateIS = function (t, i, e) {
                                    var r, h, a = this.observer, c = t.samples, u = i.samples, l = this.typeSupported, d = 'audio/mp4', f = {}, p = { tracks: f }, b = void 0 === this.jt;
                                    if (b && (r = h = 1 / 0), t.config && c.length && (t.timescale = t.samplerate, o.b.log('audio sampling rate : ' + t.samplerate), t.isAAC || (l.mpeg ? (d = 'audio/mpeg', t.codec = '') : l.mp3 && (t.codec = 'mp3')), f.audio = {
                                            container: d,
                                            codec: t.codec,
                                            initSegment: !t.isAAC && l.mpeg ? new Uint8Array() : M.initSegment([t]),
                                            metadata: { channelCount: t.channelCount }
                                        }, b && (r = h = c[0].pts - t.inputTimeScale * e)), i.sps && i.pps && u.length) {
                                        var v = i.inputTimeScale;
                                        i.timescale = v, f.video = {
                                            container: 'video/mp4',
                                            codec: i.codec,
                                            initSegment: M.initSegment([i]),
                                            metadata: {
                                                width: i.width,
                                                height: i.height
                                            }
                                        }, b && (r = Math.min(r, u[0].pts - v * e), h = Math.min(h, u[0].dts - v * e), this.observer.trigger(s.a.INIT_PTS_FOUND, { initPTS: r }));
                                    }
                                    Object.keys(f).length ? (a.trigger(s.a.FRAG_PARSING_INIT_SEGMENT, p), this.ISGenerated = !0, b && (this.jt = r, this.kt = h)) : a.trigger(s.a.ERROR, {
                                        type: n.b.MEDIA_ERROR,
                                        details: n.a.FRAG_PARSING_ERROR,
                                        fatal: !1,
                                        reason: 'no audio/video samples found'
                                    });
                                }, i.remuxVideo = function (t, i, e, r, h) {
                                    var a, c, u, l, d, f, p, b = 8, v = t.timescale, m = t.samples, g = [], y = m.length, w = this.Ct, O = this.jt, x = this.nextAvcDts, S = this.isSafari;
                                    if (0 !== y) {
                                        S && (e |= m.length && x && (h && Math.abs(i - x / v) < 0.1 || Math.abs(m[0].pts - x - O) < v / 5)), e || (x = i * v), m.forEach(function (t) {
                                            t.pts = w(t.pts - O, x), t.dts = w(t.dts - O, x);
                                        }), m.sort(function (t, i) {
                                            var e = t.dts - i.dts, s = t.pts - i.pts;
                                            return e || s || t.id - i.id;
                                        });
                                        var j = m.reduce(function (t, i) {
                                            return Math.max(Math.min(t, i.pts - i.dts), -1 * F);
                                        }, 0);
                                        if (j < 0) {
                                            o.b.warn('PTS < DTS detected in video samples, shifting DTS by ' + L(j, !0) + ' ms to overcome this issue');
                                            for (var k = 0; k < m.length; k++)
                                                m[k].dts += j;
                                        }
                                        var _ = m[0];
                                        d = Math.max(_.dts, 0), l = Math.max(_.pts, 0);
                                        var A = d - x;
                                        e && A && (A > 1 ? o.b.log('AVC: ' + L(A, !0) + ' ms hole between fragments detected,filling it') : A < -1 && o.b.log('AVC: ' + L(-A, !0) + ' ms overlapping between fragments detected'), d = x, m[0].dts = d, l = Math.max(l - A, x), m[0].pts = l, o.b.log('Video: PTS/DTS adjusted: ' + L(l, !0) + '/' + L(d, !0) + ', delta: ' + L(A, !0) + ' ms')), _ = m[m.length - 1], p = Math.max(_.dts, 0), f = Math.max(_.pts, 0, p), S && (a = Math.round((p - d) / (m.length - 1)));
                                        for (var I = 0, C = 0, T = 0; T < y; T++) {
                                            for (var P = m[T], E = P.units, R = E.length, B = 0, D = 0; D < R; D++)
                                                B += E[D].data.length;
                                            C += B, I += R, P.length = B, P.dts = S ? d + T * a : Math.max(P.dts, d), P.pts = Math.max(P.pts, P.dts);
                                        }
                                        var V = C + 4 * I + 8;
                                        try {
                                            c = new Uint8Array(V);
                                        } catch (t) {
                                            return void this.observer.trigger(s.a.ERROR, {
                                                type: n.b.MUX_ERROR,
                                                details: n.a.REMUX_ALLOC_ERROR,
                                                fatal: !1,
                                                bytes: V,
                                                reason: 'fail allocating video mdat ' + V
                                            });
                                        }
                                        var U = new DataView(c.buffer);
                                        U.setUint32(0, V), c.set(M.types.mdat, 4);
                                        for (var $ = 0; $ < y; $++) {
                                            for (var N = m[$], H = N.units, q = 0, z = void 0, W = 0, G = H.length; W < G; W++) {
                                                var J = H[W], Q = J.data, X = J.data.byteLength;
                                                U.setUint32(b, X), b += 4, c.set(Q, b), b += X, q += 4 + X;
                                            }
                                            if (S)
                                                z = Math.max(0, a * Math.round((N.pts - N.dts) / a));
                                            else {
                                                if ($ < y - 1)
                                                    a = m[$ + 1].dts - N.dts;
                                                else {
                                                    var Y = this.config, K = N.dts - m[$ > 0 ? $ - 1 : $].dts;
                                                    if (Y.stretchShortVideoTrack) {
                                                        var Z = Y.maxBufferHole, tt = Math.floor(Z * v), it = (r ? l + r * v : this.nextAudioPts) - N.pts;
                                                        it > tt ? ((a = it - K) < 0 && (a = K), o.b.log('It is approximately ' + L(it, !1) + ' ms to the next segment; using duration ' + L(a, !1) + ' ms for the last video frame.')) : a = K;
                                                    } else
                                                        a = K;
                                                }
                                                z = Math.round(N.pts - N.dts);
                                            }
                                            g.push({
                                                size: q,
                                                duration: a,
                                                cts: z,
                                                flags: {
                                                    isLeading: 0,
                                                    isDependedOn: 0,
                                                    hasRedundancy: 0,
                                                    degradPrio: 0,
                                                    dependsOn: N.key ? 2 : 1,
                                                    isNonSync: N.key ? 0 : 1
                                                }
                                            });
                                        }
                                        this.nextAvcDts = p + a;
                                        var et = t.dropped;
                                        if (t.nbNalu = 0, t.dropped = 0, g.length && navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {
                                            var st = g[0].flags;
                                            st.dependsOn = 2, st.isNonSync = 0;
                                        }
                                        t.samples = g, u = M.moof(t.sequenceNumber++, d, t), t.samples = [];
                                        var nt = {
                                            data1: u,
                                            data2: c,
                                            startPTS: l / v,
                                            endPTS: (f + a) / v,
                                            startDTS: d / v,
                                            endDTS: this.nextAvcDts / v,
                                            type: 'video',
                                            hasAudio: !1,
                                            hasVideo: !0,
                                            nb: g.length,
                                            dropped: et
                                        };
                                        return this.observer.trigger(s.a.FRAG_PARSING_DATA, nt), nt;
                                    }
                                }, i.remuxAudio = function (t, i, e, r) {
                                    var h, a, c, u, l, d, f = t.inputTimeScale, p = t.timescale, b = f / p, v = (t.isAAC ? 1024 : 1152) * b, m = this.Ct, g = this.jt, y = !t.isAAC && this.typeSupported.mpeg, w = y ? 0 : 8, O = t.samples, x = [], S = this.nextAudioPts;
                                    if (e |= O.length && S && (r && Math.abs(i - S / f) < 0.1 || Math.abs(O[0].pts - S - g) < 20 * v), O.forEach(function (t) {
                                            t.pts = t.dts = m(t.pts - g, i * f);
                                        }), 0 !== (O = O.filter(function (t) {
                                            return t.pts >= 0;
                                        })).length) {
                                        if (e || (S = r ? i * f : O[0].pts), t.isAAC)
                                            for (var j = this.config.maxAudioFramesDrift, k = 0, _ = S; k < O.length;) {
                                                var A, I = O[k];
                                                if ((A = I.pts - _) <= -j * v)
                                                    o.b.warn('Dropping 1 audio frame @ ' + L(_, !0) + ' ms due to ' + L(A, !0) + ' ms overlap.'), O.splice(k, 1);
                                                else if (A >= j * v && A < D && _) {
                                                    var C = Math.round(A / v);
                                                    o.b.warn('Injecting ' + C + ' audio frames @ ' + L(_, !0) + ' ms due to ' + L(_, !0) + ' ms gap.');
                                                    for (var P = 0; P < C; P++) {
                                                        var E = Math.max(_, 0);
                                                        (a = T.getSilentFrame(t.manifestCodec || t.codec, t.channelCount)) || (o.b.log('Unable to get silent frame for given audio codec; duplicating last frame instead.'), a = I.unit.subarray()), O.splice(k, 0, {
                                                            unit: a,
                                                            pts: E,
                                                            dts: E
                                                        }), _ += v, k++;
                                                    }
                                                    I.pts = I.dts = _, _ += v, k++;
                                                } else
                                                    Math.abs(A), I.pts = I.dts = _, _ += v, k++;
                                            }
                                        for (var R = O.length, B = 0; R--;)
                                            B += O[R].unit.byteLength;
                                        for (var F = 0, V = O.length; F < V; F++) {
                                            var U = O[F], $ = U.unit, N = U.pts;
                                            if (void 0 !== d)
                                                h.duration = Math.round((N - d) / b);
                                            else {
                                                var H = N - S, q = 0;
                                                if (e && t.isAAC && H) {
                                                    if (H > 0 && H < D)
                                                        q = Math.round((N - S) / v), o.b.log(L(H, !0) + ' ms hole between AAC samples detected,filling it'), q > 0 && ((a = T.getSilentFrame(t.manifestCodec || t.codec, t.channelCount)) || (a = $.subarray()), B += q * a.length);
                                                    else if (H < -12) {
                                                        o.b.log('drop overlapping AAC sample, expected/parsed/delta: ' + L(S, !0) + ' ms / ' + L(N, !0) + ' ms / ' + L(-H, !0) + ' ms'), B -= $.byteLength;
                                                        continue;
                                                    }
                                                    N = S;
                                                }
                                                if (l = N, !(B > 0))
                                                    return;
                                                B += w;
                                                try {
                                                    c = new Uint8Array(B);
                                                } catch (t) {
                                                    return void this.observer.trigger(s.a.ERROR, {
                                                        type: n.b.MUX_ERROR,
                                                        details: n.a.REMUX_ALLOC_ERROR,
                                                        fatal: !1,
                                                        bytes: B,
                                                        reason: 'fail allocating audio mdat ' + B
                                                    });
                                                }
                                                y || (new DataView(c.buffer).setUint32(0, B), c.set(M.types.mdat, 4));
                                                for (var z = 0; z < q; z++)
                                                    (a = T.getSilentFrame(t.manifestCodec || t.codec, t.channelCount)) || (o.b.log('Unable to get silent frame for given audio codec; duplicating this frame instead.'), a = $.subarray()), c.set(a, w), w += a.byteLength, h = {
                                                        size: a.byteLength,
                                                        cts: 0,
                                                        duration: 1024,
                                                        flags: {
                                                            isLeading: 0,
                                                            isDependedOn: 0,
                                                            hasRedundancy: 0,
                                                            degradPrio: 0,
                                                            dependsOn: 1
                                                        }
                                                    }, x.push(h);
                                            }
                                            c.set($, w);
                                            var W = $.byteLength;
                                            w += W, h = {
                                                size: W,
                                                cts: 0,
                                                duration: 0,
                                                flags: {
                                                    isLeading: 0,
                                                    isDependedOn: 0,
                                                    hasRedundancy: 0,
                                                    degradPrio: 0,
                                                    dependsOn: 1
                                                }
                                            }, x.push(h), d = N;
                                        }
                                        var G = 0;
                                        if ((R = x.length) >= 2 && (G = x[R - 2].duration, h.duration = G), R) {
                                            this.nextAudioPts = S = d + b * G, t.samples = x, u = y ? new Uint8Array() : M.moof(t.sequenceNumber++, l / b, t), t.samples = [];
                                            var J = l / f, Q = S / f, X = {
                                                    data1: u,
                                                    data2: c,
                                                    startPTS: J,
                                                    endPTS: Q,
                                                    startDTS: J,
                                                    endDTS: Q,
                                                    type: 'audio',
                                                    hasAudio: !0,
                                                    hasVideo: !1,
                                                    nb: R
                                                };
                                            return this.observer.trigger(s.a.FRAG_PARSING_DATA, X), X;
                                        }
                                        return null;
                                    }
                                }, i.remuxEmptyAudio = function (t, i, e, s) {
                                    var n = t.inputTimeScale, r = n / (t.samplerate ? t.samplerate : n), h = this.nextAudioPts, a = (void 0 !== h ? h : s.startDTS * n) + this.kt, c = s.endDTS * n + this.kt, u = 1024 * r, l = Math.ceil((c - a) / u), d = T.getSilentFrame(t.manifestCodec || t.codec, t.channelCount);
                                    if (o.b.warn('remux empty Audio'), d) {
                                        for (var f = [], p = 0; p < l; p++) {
                                            var b = a + p * u;
                                            f.push({
                                                unit: d,
                                                pts: b,
                                                dts: b
                                            });
                                        }
                                        t.samples = f, this.remuxAudio(t, i, e);
                                    } else
                                        o.b.trace('Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec!');
                                }, i.remuxID3 = function (t) {
                                    var i, e = t.samples.length, n = t.inputTimeScale, r = this.jt, h = this.kt;
                                    if (e) {
                                        for (var a = 0; a < e; a++)
                                            (i = t.samples[a]).pts = (i.pts - r) / n, i.dts = (i.dts - h) / n;
                                        this.observer.trigger(s.a.FRAG_PARSING_METADATA, { samples: t.samples });
                                    }
                                    t.samples = [];
                                }, i.remuxText = function (t) {
                                    t.samples.sort(function (t, i) {
                                        return t.pts - i.pts;
                                    });
                                    var i, e = t.samples.length, n = t.inputTimeScale, r = this.jt;
                                    if (e) {
                                        for (var h = 0; h < e; h++)
                                            (i = t.samples[h]).pts = (i.pts - r) / n;
                                        this.observer.trigger(s.a.FRAG_PARSING_USERDATA, { samples: t.samples });
                                    }
                                    t.samples = [];
                                }, i.Ct = function (t, i) {
                                    var e;
                                    if (void 0 === i)
                                        return t;
                                    for (e = i < t ? -8589934592 : 8589934592; Math.abs(t - i) > 4294967296;)
                                        t += e;
                                    return t;
                                }, t;
                            }(), U = function () {
                                function t(t) {
                                    this.observer = t;
                                }
                                var i = t.prototype;
                                return i.destroy = function () {
                                }, i.resetTimeStamp = function () {
                                }, i.resetInitSegment = function () {
                                }, i.remux = function (t, i, e, n, r, h, a, o) {
                                    var c = this.observer, u = '';
                                    t && (u += 'audio'), i && (u += 'video'), c.trigger(s.a.FRAG_PARSING_DATA, {
                                        data1: o,
                                        startPTS: r,
                                        startDTS: r,
                                        type: u,
                                        hasAudio: !!t,
                                        hasVideo: !!i,
                                        nb: 1,
                                        dropped: 0
                                    }), c.trigger(s.a.FRAG_PARSED);
                                }, t;
                            }(), $ = Object(c.a)();
                        try {
                            B = $.performance.now.bind($.performance);
                        } catch (t) {
                            o.b.debug('Unable to use Performance API on this environment'), B = $.Date.now;
                        }
                        var N = function () {
                            function t(t, i, e, s) {
                                this.observer = t, this.typeSupported = i, this.config = e, this.vendor = s;
                            }
                            var i = t.prototype;
                            return i.destroy = function () {
                                var t = this.demuxer;
                                t && t.destroy();
                            }, i.push = function (t, i, e, n, r, h, a, o, c, l, d, f) {
                                var p = this;
                                if (t.byteLength > 0 && null != i && null != i.key && 'AES-128' === i.method) {
                                    var b = this.decrypter;
                                    null == b && (b = this.decrypter = new u(this.observer, this.config));
                                    var v = B();
                                    b.decrypt(t, i.key.buffer, i.iv.buffer, function (t) {
                                        var u = B();
                                        p.observer.trigger(s.a.FRAG_DECRYPTED, {
                                            stats: {
                                                tstart: v,
                                                tdecrypt: u
                                            }
                                        }), p.pushDecrypted(new Uint8Array(t), i, new Uint8Array(e), n, r, h, a, o, c, l, d, f);
                                    });
                                } else
                                    this.pushDecrypted(new Uint8Array(t), i, new Uint8Array(e), n, r, h, a, o, c, l, d, f);
                            }, i.pushDecrypted = function (t, i, e, r, h, a, o, c, u, l, d, f) {
                                var p = this.demuxer;
                                if (!p || (o || c) && !this.probe(t)) {
                                    for (var b = this.observer, v = this.typeSupported, m = this.config, g = [
                                                {
                                                    demux: I,
                                                    remux: V
                                                },
                                                {
                                                    demux: x.a,
                                                    remux: U
                                                },
                                                {
                                                    demux: O,
                                                    remux: V
                                                },
                                                {
                                                    demux: C,
                                                    remux: V
                                                }
                                            ], y = 0, w = g.length; y < w; y++) {
                                        var S = g[y], j = S.demux.probe;
                                        if (j(t)) {
                                            var k = this.remuxer = new S.remux(b, m, v, this.vendor);
                                            p = new S.demux(b, k, m, v), this.probe = j;
                                            break;
                                        }
                                    }
                                    if (!p)
                                        return void b.trigger(s.a.ERROR, {
                                            type: n.b.MEDIA_ERROR,
                                            details: n.a.FRAG_PARSING_ERROR,
                                            fatal: !0,
                                            reason: 'no demux matching with content found'
                                        });
                                    this.demuxer = p;
                                }
                                var _ = this.remuxer;
                                (o || c) && (p.resetInitSegment(e, r, h, l), _.resetInitSegment()), o && (p.resetTimeStamp(f), _.resetTimeStamp(f)), 'function' == typeof p.setDecryptData && p.setDecryptData(i), p.append(t, a, u, d);
                            }, t;
                        }();
                        i.a = N;
                    },
                    function (t, i, e) {
                        'use strict';
                        var s = e(0), n = e(1), r = Math.pow(2, 32) - 1, h = function () {
                                function t(t, i) {
                                    this.observer = t, this.remuxer = i;
                                }
                                var i = t.prototype;
                                return i.resetTimeStamp = function (t) {
                                    this.initPTS = t;
                                }, i.resetInitSegment = function (i, e, s, r) {
                                    if (i && i.byteLength) {
                                        var h = this.initData = t.parseInitSegment(i);
                                        null == e && (e = 'mp4a.40.5'), null == s && (s = 'avc1.42e01e');
                                        var a = {};
                                        h.audio && h.video ? a.audiovideo = {
                                            container: 'video/mp4',
                                            codec: e + ',' + s,
                                            initSegment: r ? i : null
                                        } : (h.audio && (a.audio = {
                                            container: 'audio/mp4',
                                            codec: e,
                                            initSegment: r ? i : null
                                        }), h.video && (a.video = {
                                            container: 'video/mp4',
                                            codec: s,
                                            initSegment: r ? i : null
                                        })), this.observer.trigger(n.a.FRAG_PARSING_INIT_SEGMENT, { tracks: a });
                                    } else
                                        e && (this.audioCodec = e), s && (this.videoCodec = s);
                                }, t.probe = function (i) {
                                    return t.findBox({
                                        data: i,
                                        start: 0,
                                        end: Math.min(i.length, 16384)
                                    }, ['moof']).length > 0;
                                }, t.bin2str = function (t) {
                                    return String.fromCharCode.apply(null, t);
                                }, t.readUint16 = function (t, i) {
                                    t.data && (i += t.start, t = t.data);
                                    var e = t[i] << 8 | t[i + 1];
                                    return e < 0 ? 65536 + e : e;
                                }, t.readUint32 = function (t, i) {
                                    t.data && (i += t.start, t = t.data);
                                    var e = t[i] << 24 | t[i + 1] << 16 | t[i + 2] << 8 | t[i + 3];
                                    return e < 0 ? 4294967296 + e : e;
                                }, t.writeUint32 = function (t, i, e) {
                                    t.data && (i += t.start, t = t.data), t[i] = e >> 24, t[i + 1] = e >> 16 & 255, t[i + 2] = e >> 8 & 255, t[i + 3] = 255 & e;
                                }, t.findBox = function (i, e) {
                                    var s, n, r, h, a, o, c = [];
                                    if (i.data ? (a = i.start, r = i.end, i = i.data) : (a = 0, r = i.byteLength), !e.length)
                                        return null;
                                    for (s = a; s < r;)
                                        o = (n = t.readUint32(i, s)) > 1 ? s + n : r, t.bin2str(i.subarray(s + 4, s + 8)) === e[0] && (1 === e.length ? c.push({
                                            data: i,
                                            start: s + 8,
                                            end: o
                                        }) : (h = t.findBox({
                                            data: i,
                                            start: s + 8,
                                            end: o
                                        }, e.slice(1))).length && (c = c.concat(h))), s = o;
                                    return c;
                                }, t.parseSegmentIndex = function (i) {
                                    var e, s = t.findBox(i, ['moov'])[0], n = s ? s.end : null, r = 0, h = t.findBox(i, ['sidx']);
                                    if (!h || !h[0])
                                        return null;
                                    e = [];
                                    var a = (h = h[0]).data[0];
                                    r = 0 === a ? 8 : 16;
                                    var o = t.readUint32(h, r);
                                    r += 4, r += 0 === a ? 8 : 16, r += 2;
                                    var c = h.end + 0, u = t.readUint16(h, r);
                                    r += 2;
                                    for (var l = 0; l < u; l++) {
                                        var d = r, f = t.readUint32(h, d);
                                        d += 4;
                                        var p = 2147483647 & f;
                                        if (1 == (2147483648 & f) >>> 31)
                                            return void console.warn('SIDX has hierarchical references (not supported)');
                                        var b = t.readUint32(h, d);
                                        d += 4, e.push({
                                            referenceSize: p,
                                            subsegmentDuration: b,
                                            info: {
                                                duration: b / o,
                                                start: c,
                                                end: c + p - 1
                                            }
                                        }), c += p, r = d += 4;
                                    }
                                    return {
                                        earliestPresentationTime: 0,
                                        timescale: o,
                                        version: a,
                                        referencesCount: u,
                                        references: e,
                                        moovEndOffset: n
                                    };
                                }, t.parseInitSegment = function (i) {
                                    var e = [];
                                    return t.findBox(i, [
                                        'moov',
                                        'trak'
                                    ]).forEach(function (i) {
                                        var n = t.findBox(i, ['tkhd'])[0];
                                        if (n) {
                                            var r = n.data[n.start], h = 0 === r ? 12 : 20, a = t.readUint32(n, h), o = t.findBox(i, [
                                                    'mdia',
                                                    'mdhd'
                                                ])[0];
                                            if (o) {
                                                h = 0 === (r = o.data[o.start]) ? 12 : 20;
                                                var c = t.readUint32(o, h), u = t.findBox(i, [
                                                        'mdia',
                                                        'hdlr'
                                                    ])[0];
                                                if (u) {
                                                    var l = {
                                                        soun: 'audio',
                                                        vide: 'video'
                                                    }[t.bin2str(u.data.subarray(u.start + 8, u.start + 12))];
                                                    if (l) {
                                                        var d = t.findBox(i, [
                                                            'mdia',
                                                            'minf',
                                                            'stbl',
                                                            'stsd'
                                                        ]);
                                                        if (d.length) {
                                                            d = d[0];
                                                            var f = t.bin2str(d.data.subarray(d.start + 12, d.start + 16));
                                                            s.b.log('MP4Demuxer:' + l + ':' + f + ' found');
                                                        }
                                                        e[a] = {
                                                            timescale: c,
                                                            type: l
                                                        }, e[l] = {
                                                            timescale: c,
                                                            id: a
                                                        };
                                                    }
                                                }
                                            }
                                        }
                                    }), e;
                                }, t.getStartDTS = function (i, e) {
                                    var s, n, r;
                                    return s = t.findBox(e, [
                                        'moof',
                                        'traf'
                                    ]), n = [].concat.apply([], s.map(function (e) {
                                        return t.findBox(e, ['tfhd']).map(function (s) {
                                            var n, r;
                                            return n = t.readUint32(s, 4), r = i[n].timescale || 90000, t.findBox(e, ['tfdt']).map(function (i) {
                                                var e, s;
                                                return e = i.data[i.start], s = t.readUint32(i, 4), 1 === e && (s *= Math.pow(2, 32), s += t.readUint32(i, 8)), s;
                                            })[0] / r;
                                        });
                                    })), r = Math.min.apply(null, n), isFinite(r) ? r : 0;
                                }, t.offsetStartDTS = function (i, e, s) {
                                    t.findBox(e, [
                                        'moof',
                                        'traf'
                                    ]).map(function (e) {
                                        return t.findBox(e, ['tfhd']).map(function (n) {
                                            var h = t.readUint32(n, 4), a = i[h].timescale || 90000;
                                            t.findBox(e, ['tfdt']).map(function (i) {
                                                var e = i.data[i.start], n = t.readUint32(i, 4);
                                                if (0 === e)
                                                    t.writeUint32(i, 4, n - s * a);
                                                else {
                                                    n *= Math.pow(2, 32), n += t.readUint32(i, 8), n -= s * a, n = Math.max(n, 0);
                                                    var h = Math.floor(n / (r + 1)), o = Math.floor(n % (r + 1));
                                                    t.writeUint32(i, 4, h), t.writeUint32(i, 8, o);
                                                }
                                            });
                                        });
                                    });
                                }, i.append = function (i, e, s, r) {
                                    var h = this.initData;
                                    h || (this.resetInitSegment(i, this.audioCodec, this.videoCodec, !1), h = this.initData);
                                    var a, o = this.initPTS;
                                    if (void 0 === o) {
                                        var c = t.getStartDTS(h, i);
                                        this.initPTS = o = c - e, this.observer.trigger(n.a.INIT_PTS_FOUND, { initPTS: o });
                                    }
                                    t.offsetStartDTS(h, i, o), a = t.getStartDTS(h, i), this.remuxer.remux(h.audio, h.video, null, null, a, s, r, i);
                                }, i.destroy = function () {
                                }, t;
                            }();
                        i.a = h;
                    },
                    function (t, i, e) {
                        function s(t) {
                            var i = {};
                            function e(s) {
                                if (i[s])
                                    return i[s].exports;
                                var n = i[s] = {
                                    i: s,
                                    l: !1,
                                    exports: {}
                                };
                                return t[s].call(n.exports, n, n.exports, e), n.l = !0, n.exports;
                            }
                            e.m = t, e.c = i, e.i = function (t) {
                                return t;
                            }, e.d = function (t, i, s) {
                                e.o(t, i) || Object.defineProperty(t, i, {
                                    configurable: !1,
                                    enumerable: !0,
                                    get: s
                                });
                            }, e.r = function (t) {
                                Object.defineProperty(t, '_', { value: !0 });
                            }, e.n = function (t) {
                                var i = t && t._ ? function () {
                                    return t.default;
                                } : function () {
                                    return t;
                                };
                                return e.d(i, 'a', i), i;
                            }, e.o = function (t, i) {
                                return Object.prototype.hasOwnProperty.call(t, i);
                            }, e.p = '/', e.oe = function (t) {
                                throw console.error(t), t;
                            };
                            var s = e(e.s = ENTRY_MODULE);
                            return s.default || s;
                        }
                        var n = '\\(\\s*(/\\*.*?\\*/)?\\s*.*?([\\.|\\-|\\+|\\w|/|@]+).*?\\)';
                        function r(t) {
                            return (t + '').replace(/[.?*+^$[\]\\(){}|-]/g, '\\$&');
                        }
                        function h(t, i, s) {
                            var h = {};
                            h[s] = [];
                            var a = i.toString(), o = a.match(/^function\s?\w*\(\w+,\s*\w+,\s*(\w+)\)/);
                            if (!o)
                                return h;
                            for (var c, u = o[1], l = new RegExp('(\\\\n|\\W)' + r(u) + n, 'g'); c = l.exec(a);)
                                'dll-reference' !== c[3] && h[s].push(c[3]);
                            for (l = new RegExp('\\(' + r(u) + '\\("(dll-reference\\s([\\.|\\-|\\+|\\w|/|@]+))"\\)\\)' + n, 'g'); c = l.exec(a);)
                                t[c[2]] || (h[s].push(c[1]), t[c[2]] = e(c[1]).m), h[c[2]] = h[c[2]] || [], h[c[2]].push(c[4]);
                            for (var d, f = Object.keys(h), p = 0; p < f.length; p++)
                                for (var b = 0; b < h[f[p]].length; b++)
                                    d = h[f[p]][b], isNaN(1 * d) || (h[f[p]][b] = 1 * h[f[p]][b]);
                            return h;
                        }
                        function a(t) {
                            return Object.keys(t).reduce(function (i, e) {
                                return i || t[e].length > 0;
                            }, !1);
                        }
                        t.exports = function (t, i) {
                            i = i || {};
                            var n = { main: e.m }, r = i.all ? { main: Object.keys(n.main) } : function (t, i) {
                                    for (var e = { main: [i] }, s = { main: [] }, n = { main: {} }; a(e);)
                                        for (var r = Object.keys(e), o = 0; o < r.length; o++) {
                                            var c = r[o], u = e[c].pop();
                                            if (n[c] = n[c] || {}, !n[c][u] && t[c][u]) {
                                                n[c][u] = !0, s[c] = s[c] || [], s[c].push(u);
                                                for (var l = h(t, t[c][u], c), d = Object.keys(l), f = 0; f < d.length; f++)
                                                    e[d[f]] = e[d[f]] || [], e[d[f]] = e[d[f]].concat(l[d[f]]);
                                            }
                                        }
                                    return s;
                                }(n, t), o = '';
                            Object.keys(r).filter(function (t) {
                                return 'main' !== t;
                            }).forEach(function (t) {
                                for (var i = 0; r[t][i];)
                                    i++;
                                r[t].push(i), n[t][i] = '(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })', o = o + 'var ' + t + ' = (' + s.toString().replace('ENTRY_MODULE', JSON.stringify(i)) + ')({' + r[t].map(function (i) {
                                    return JSON.stringify(i) + ': ' + n[t][i].toString();
                                }).join(',') + '});\n';
                            }), o = o + 'new ((' + s.toString().replace('ENTRY_MODULE', JSON.stringify(t)) + ')({' + r.main.map(function (t) {
                                return JSON.stringify(t) + ': ' + n.main[t].toString();
                            }).join(',') + '}))(self);';
                            var c = new window.Blob([o], { type: 'text/javascript' });
                            if (i.bare)
                                return c;
                            var u = (window.URL || window.webkitURL || window.mozURL || window.msURL).createObjectURL(c), l = new window.Worker(u);
                            return l.objectURL = u, l;
                        };
                    },
                    function (t, i, e) {
                        'use strict';
                        e.r(i);
                        var s = e(9), n = e(1), r = e(0), h = e(8);
                        i.default = function (t) {
                            var i = new h.EventEmitter();
                            i.trigger = function (t) {
                                for (var e = arguments.length, s = new Array(e > 1 ? e - 1 : 0), n = 1; n < e; n++)
                                    s[n - 1] = arguments[n];
                                i.emit.apply(i, [
                                    t,
                                    t
                                ].concat(s));
                            }, i.off = function (t) {
                                for (var e = arguments.length, s = new Array(e > 1 ? e - 1 : 0), n = 1; n < e; n++)
                                    s[n - 1] = arguments[n];
                                i.removeListener.apply(i, [t].concat(s));
                            };
                            var e = function (i, e) {
                                t.postMessage({
                                    event: i,
                                    data: e
                                });
                            };
                            t.addEventListener('message', function (n) {
                                var h = n.data;
                                switch (h.cmd) {
                                case 'init':
                                    var a = JSON.parse(h.config);
                                    t.demuxer = new s.a(i, h.typeSupported, a, h.vendor), Object(r.a)(a.debug), e('init', null);
                                    break;
                                case 'demux':
                                    t.demuxer.push(h.data, h.decryptdata, h.initSegment, h.audioCodec, h.videoCodec, h.timeOffset, h.discontinuity, h.trackSwitch, h.contiguous, h.duration, h.accurateTimeOffset, h.defaultInitPTS);
                                }
                            }), i.on(n.a.FRAG_DECRYPTED, e), i.on(n.a.FRAG_PARSING_INIT_SEGMENT, e), i.on(n.a.FRAG_PARSED, e), i.on(n.a.ERROR, e), i.on(n.a.FRAG_PARSING_METADATA, e), i.on(n.a.FRAG_PARSING_USERDATA, e), i.on(n.a.INIT_PTS_FOUND, e), i.on(n.a.FRAG_PARSING_DATA, function (i, e) {
                                var s = [], n = {
                                        event: i,
                                        data: e
                                    };
                                e.data1 && (n.data1 = e.data1.buffer, s.push(e.data1.buffer), delete e.data1), e.data2 && (n.data2 = e.data2.buffer, s.push(e.data2.buffer), delete e.data2), t.postMessage(n, s);
                            });
                        };
                    },
                    function (t, i, e) {
                        const $___old_f7a60a143d7416d2 = {}.constructor.getOwnPropertyDescriptor(window, 'XMLHttpRequest');
                        try {
                            if ($___old_f7a60a143d7416d2)
                                ({}.constructor.defineProperty(window, 'XMLHttpRequest', $___mock_81ba332f770640cb.XMLHttpRequest));
                            return function () {
                                'use strict';
                                e.r(i);
                                var s, n, r = e(7), h = e(2), a = e(3), o = e(1), c = e(0), u = {
                                        hlsEventGeneric: !0,
                                        hlsHandlerDestroying: !0,
                                        hlsHandlerDestroyed: !0
                                    }, l = function () {
                                        function t(t) {
                                            this.hls = void 0, this.handledEvents = void 0, this.useGenericHandler = void 0, this.hls = t, this.onEvent = this.onEvent.bind(this);
                                            for (var i = arguments.length, e = new Array(i > 1 ? i - 1 : 0), s = 1; s < i; s++)
                                                e[s - 1] = arguments[s];
                                            this.handledEvents = e, this.useGenericHandler = !0, this.registerListeners();
                                        }
                                        var i = t.prototype;
                                        return i.destroy = function () {
                                            this.onHandlerDestroying(), this.unregisterListeners(), this.onHandlerDestroyed();
                                        }, i.onHandlerDestroying = function () {
                                        }, i.onHandlerDestroyed = function () {
                                        }, i.isEventHandler = function () {
                                            return 'object' == typeof this.handledEvents && this.handledEvents.length && 'function' == typeof this.onEvent;
                                        }, i.registerListeners = function () {
                                            this.isEventHandler() && this.handledEvents.forEach(function (t) {
                                                if (u[t])
                                                    throw new Error('Forbidden event-name: ' + t);
                                                this.hls.on(t, this.onEvent);
                                            }, this);
                                        }, i.unregisterListeners = function () {
                                            this.isEventHandler() && this.handledEvents.forEach(function (t) {
                                                this.hls.off(t, this.onEvent);
                                            }, this);
                                        }, i.onEvent = function (t, i) {
                                            this.onEventGeneric(t, i);
                                        }, i.onEventGeneric = function (t, i) {
                                            try {
                                                (function (t, i) {
                                                    var e = 'on' + t.replace('hls', '');
                                                    if ('function' != typeof this[e])
                                                        throw new Error('Event ' + t + ' has no generic handler in this ' + this.constructor.name + ' class (tried ' + e + ')');
                                                    return this[e].bind(this, i);
                                                }.call(this, t, i).call());
                                            } catch (i) {
                                                c.b.error('An internal error happened while handling event ' + t + '. Error message: "' + i.message + '". Here is a stacktrace:', i), this.hls.trigger(o.a.ERROR, {
                                                    type: h.b.OTHER_ERROR,
                                                    details: h.a.INTERNAL_EXCEPTION,
                                                    fatal: !1,
                                                    event: t,
                                                    err: i
                                                });
                                            }
                                        }, t;
                                    }();
                                !function (t) {
                                    t.MANIFEST = 'manifest', t.LEVEL = 'level', t.AUDIO_TRACK = 'audioTrack', t.SUBTITLE_TRACK = 'subtitleTrack';
                                }(s || (s = {})), function (t) {
                                    t.MAIN = 'main', t.AUDIO = 'audio', t.SUBTITLE = 'subtitle';
                                }(n || (n = {}));
                                var d = e(10);
                                function f(t, i) {
                                    for (var e = 0; e < i.length; e++) {
                                        var s = i[e];
                                        s.enumerable = s.enumerable || !1, s.configurable = !0, 'value' in s && (s.writable = !0), Object.defineProperty(t, s.key, s);
                                    }
                                }
                                var p, b = function () {
                                        function t(t, i) {
                                            this.Tt = null, this.baseuri = void 0, this.reluri = void 0, this.method = null, this.key = null, this.iv = null, this.baseuri = t, this.reluri = i;
                                        }
                                        var i, e;
                                        return i = t, (e = [{
                                                key: 'uri',
                                                get: function () {
                                                    return !this.Tt && this.reluri && (this.Tt = Object(r.buildAbsoluteURL)(this.baseuri, this.reluri, { alwaysNormalize: !0 })), this.Tt;
                                                }
                                            }]) && f(i.prototype, e), t;
                                    }();
                                function v(t, i) {
                                    for (var e = 0; e < i.length; e++) {
                                        var s = i[e];
                                        s.enumerable = s.enumerable || !1, s.configurable = !0, 'value' in s && (s.writable = !0), Object.defineProperty(t, s.key, s);
                                    }
                                }
                                !function (t) {
                                    t.AUDIO = 'audio', t.VIDEO = 'video';
                                }(p || (p = {}));
                                var m = function () {
                                    function t() {
                                        var t;
                                        this.Pt = null, this.Mt = null, this.Et = null, this.Lt = ((t = {})[p.AUDIO] = !1, t[p.VIDEO] = !1, t), this.deltaPTS = 0, this.rawProgramDateTime = null, this.programDateTime = null, this.title = null, this.tagList = [], this.cc = void 0, this.type = void 0, this.relurl = void 0, this.baseurl = void 0, this.duration = void 0, this.start = void 0, this.sn = 0, this.urlId = 0, this.level = 0, this.levelkey = void 0, this.loader = void 0;
                                    }
                                    var i, e, s = t.prototype;
                                    return s.setByteRange = function (t, i) {
                                        var e = t.split('@', 2), s = [];
                                        1 === e.length ? s[0] = i ? i.byteRangeEndOffset : 0 : s[0] = parseInt(e[1]), s[1] = parseInt(e[0]) + s[0], this.Mt = s;
                                    }, s.addElementaryStream = function (t) {
                                        this.Lt[t] = !0;
                                    }, s.hasElementaryStream = function (t) {
                                        return !0 === this.Lt[t];
                                    }, s.createInitializationVector = function (t) {
                                        for (var i = new Uint8Array(16), e = 12; e < 16; e++)
                                            i[e] = t >> 8 * (15 - e) & 255;
                                        return i;
                                    }, s.setDecryptDataFromLevelKey = function (t, i) {
                                        var e = t;
                                        return t && t.method && t.uri && !t.iv && ((e = new b(t.baseuri, t.reluri)).method = t.method, e.iv = this.createInitializationVector(i)), e;
                                    }, i = t, (e = [
                                        {
                                            key: 'url',
                                            get: function () {
                                                return !this.Pt && this.relurl && (this.Pt = Object(r.buildAbsoluteURL)(this.baseurl, this.relurl, { alwaysNormalize: !0 })), this.Pt;
                                            },
                                            set: function (t) {
                                                this.Pt = t;
                                            }
                                        },
                                        {
                                            key: 'byteRange',
                                            get: function () {
                                                return this.Mt ? this.Mt : [];
                                            }
                                        },
                                        {
                                            key: 'byteRangeStartOffset',
                                            get: function () {
                                                return this.byteRange[0];
                                            }
                                        },
                                        {
                                            key: 'byteRangeEndOffset',
                                            get: function () {
                                                return this.byteRange[1];
                                            }
                                        },
                                        {
                                            key: 'decryptdata',
                                            get: function () {
                                                if (!this.levelkey && !this.Et)
                                                    return null;
                                                if (!this.Et && this.levelkey) {
                                                    var t = this.sn;
                                                    'number' != typeof t && (this.levelkey && 'AES-128' === this.levelkey.method && !this.levelkey.iv && c.b.warn('missing IV for initialization segment with method="' + this.levelkey.method + '" - compliance issue'), t = 0), this.Et = this.setDecryptDataFromLevelKey(this.levelkey, t);
                                                }
                                                return this.Et;
                                            }
                                        },
                                        {
                                            key: 'endProgramDateTime',
                                            get: function () {
                                                if (null === this.programDateTime)
                                                    return null;
                                                if (!Object(a.a)(this.programDateTime))
                                                    return null;
                                                var t = Object(a.a)(this.duration) ? this.duration : 0;
                                                return this.programDateTime + 1000 * t;
                                            }
                                        },
                                        {
                                            key: 'encrypted',
                                            get: function () {
                                                return !(!this.decryptdata || null === this.decryptdata.uri || null !== this.decryptdata.key);
                                            }
                                        }
                                    ]) && v(i.prototype, e), t;
                                }();
                                function g(t, i) {
                                    for (var e = 0; e < i.length; e++) {
                                        var s = i[e];
                                        s.enumerable = s.enumerable || !1, s.configurable = !0, 'value' in s && (s.writable = !0), Object.defineProperty(t, s.key, s);
                                    }
                                }
                                var y = function () {
                                        function t(t) {
                                            this.endCC = 0, this.endSN = 0, this.fragments = [], this.initSegment = null, this.live = !0, this.needSidxRanges = !1, this.startCC = 0, this.startSN = 0, this.startTimeOffset = null, this.targetduration = 0, this.totalduration = 0, this.type = null, this.url = t, this.version = null;
                                        }
                                        var i, e;
                                        return i = t, (e = [{
                                                key: 'hasProgramDateTime',
                                                get: function () {
                                                    return !(!this.fragments[0] || !Object(a.a)(this.fragments[0].programDateTime));
                                                }
                                            }]) && g(i.prototype, e), t;
                                    }(), w = /^(\d+)x(\d+)$/, O = /\s*(.+?)\s*=((?:\".*?\")|.*?)(?:,|$)/g, x = function () {
                                        function t(i) {
                                            for (var e in ('string' == typeof i && (i = t.parseAttrList(i)), i))
                                                i.hasOwnProperty(e) && (this[e] = i[e]);
                                        }
                                        var i = t.prototype;
                                        return i.decimalInteger = function (t) {
                                            var i = parseInt(this[t], 10);
                                            return i > Number.MAX_SAFE_INTEGER ? 1 / 0 : i;
                                        }, i.hexadecimalInteger = function (t) {
                                            if (this[t]) {
                                                var i = (this[t] || '0x').slice(2);
                                                i = (1 & i.length ? '0' : '') + i;
                                                for (var e = new Uint8Array(i.length / 2), s = 0; s < i.length / 2; s++)
                                                    e[s] = parseInt(i.slice(2 * s, 2 * s + 2), 16);
                                                return e;
                                            }
                                            return null;
                                        }, i.hexadecimalIntegerAsNumber = function (t) {
                                            var i = parseInt(this[t], 16);
                                            return i > Number.MAX_SAFE_INTEGER ? 1 / 0 : i;
                                        }, i.decimalFloatingPoint = function (t) {
                                            return parseFloat(this[t]);
                                        }, i.enumeratedString = function (t) {
                                            return this[t];
                                        }, i.decimalResolution = function (t) {
                                            var i = w.exec(this[t]);
                                            if (null !== i)
                                                return {
                                                    width: parseInt(i[1], 10),
                                                    height: parseInt(i[2], 10)
                                                };
                                        }, t.parseAttrList = function (t) {
                                            var i, e = {};
                                            for (O.lastIndex = 0; null !== (i = O.exec(t));) {
                                                var s = i[2];
                                                0 === s.indexOf('"') && s.lastIndexOf('"') === s.length - 1 && (s = s.slice(1, -1)), e[i[1]] = s;
                                            }
                                            return e;
                                        }, t;
                                    }(), S = {
                                        audio: {
                                            a3ds: !0,
                                            'ac-3': !0,
                                            'ac-4': !0,
                                            alac: !0,
                                            alaw: !0,
                                            dra1: !0,
                                            'dts+': !0,
                                            'dts-': !0,
                                            dtsc: !0,
                                            dtse: !0,
                                            dtsh: !0,
                                            'ec-3': !0,
                                            enca: !0,
                                            g719: !0,
                                            g726: !0,
                                            m4ae: !0,
                                            mha1: !0,
                                            mha2: !0,
                                            mhm1: !0,
                                            mhm2: !0,
                                            mlpa: !0,
                                            mp4a: !0,
                                            'raw ': !0,
                                            Opus: !0,
                                            samr: !0,
                                            sawb: !0,
                                            sawp: !0,
                                            sevc: !0,
                                            sqcp: !0,
                                            ssmv: !0,
                                            twos: !0,
                                            ulaw: !0
                                        },
                                        video: {
                                            avc1: !0,
                                            avc2: !0,
                                            avc3: !0,
                                            avc4: !0,
                                            avcp: !0,
                                            drac: !0,
                                            dvav: !0,
                                            dvhe: !0,
                                            encv: !0,
                                            hev1: !0,
                                            hvc1: !0,
                                            mjp2: !0,
                                            mp4v: !0,
                                            mvc1: !0,
                                            mvc2: !0,
                                            mvc3: !0,
                                            mvc4: !0,
                                            resv: !0,
                                            rv60: !0,
                                            s263: !0,
                                            svc1: !0,
                                            svc2: !0,
                                            'vc-1': !0,
                                            vp08: !0,
                                            vp09: !0
                                        }
                                    };
                                function j(t, i) {
                                    return MediaSource.isTypeSupported((i || 'video') + '/mp4;codecs="' + t + '"');
                                }
                                var k = /#EXT-X-STREAM-INF:([^\n\r]*)[\r\n]+([^\r\n]+)/g, _ = /#EXT-X-MEDIA:(.*)/g, A = new RegExp([
                                        /#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source,
                                        /|(?!#)([\S+ ?]+)/.source,
                                        /|#EXT-X-BYTERANGE:*(.+)/.source,
                                        /|#EXT-X-PROGRAM-DATE-TIME:(.+)/.source,
                                        /|#.*/.source
                                    ].join(''), 'g'), I = /(?:(?:#(EXTM3U))|(?:#EXT-X-(PLAYLIST-TYPE):(.+))|(?:#EXT-X-(MEDIA-SEQUENCE): *(\d+))|(?:#EXT-X-(TARGETDURATION): *(\d+))|(?:#EXT-X-(KEY):(.+))|(?:#EXT-X-(START):(.+))|(?:#EXT-X-(ENDLIST))|(?:#EXT-X-(DISCONTINUITY-SEQ)UENCE:(\d+))|(?:#EXT-X-(DIS)CONTINUITY))|(?:#EXT-X-(VERSION):(\d+))|(?:#EXT-X-(MAP):(.+))|(?:(#)([^:]*):(.*))|(?:(#)(.*))(?:.*)\r?\n?/, C = /\.(mp4|m4s|m4v|m4a)$/i, T = function () {
                                        function t() {
                                        }
                                        return t.findGroup = function (t, i) {
                                            for (var e = 0; e < t.length; e++) {
                                                var s = t[e];
                                                if (s.id === i)
                                                    return s;
                                            }
                                        }, t.convertAVC1ToAVCOTI = function (t) {
                                            var i, e = t.split('.');
                                            return e.length > 2 ? (i = e.shift() + '.', i += parseInt(e.shift()).toString(16), i += ('000' + parseInt(e.shift()).toString(16)).substr(-4)) : i = t, i;
                                        }, t.resolve = function (t, i) {
                                            return r.buildAbsoluteURL(i, t, { alwaysNormalize: !0 });
                                        }, t.parseMasterPlaylist = function (i, e) {
                                            var s, n = [];
                                            function r(t, i) {
                                                [
                                                    'video',
                                                    'audio'
                                                ].forEach(function (e) {
                                                    var s = t.filter(function (t) {
                                                        return function (t, i) {
                                                            var e = S[i];
                                                            return !!e && !0 === e[t.slice(0, 4)];
                                                        }(t, e);
                                                    });
                                                    if (s.length) {
                                                        var n = s.filter(function (t) {
                                                            return 0 === t.lastIndexOf('avc1', 0) || 0 === t.lastIndexOf('mp4a', 0);
                                                        });
                                                        i[e + 'Codec'] = n.length > 0 ? n[0] : s[0], t = t.filter(function (t) {
                                                            return -1 === s.indexOf(t);
                                                        });
                                                    }
                                                }), i.unknownCodecs = t;
                                            }
                                            for (k.lastIndex = 0; null != (s = k.exec(i));) {
                                                var h = {}, a = h.attrs = new x(s[1]);
                                                h.url = t.resolve(s[2], e);
                                                var o = a.decimalResolution('RESOLUTION');
                                                o && (h.width = o.width, h.height = o.height), h.bitrate = a.decimalInteger('AVERAGE-BANDWIDTH') || a.decimalInteger('BANDWIDTH'), h.name = a.NAME, r([].concat((a.CODECS || '').split(/[ ,]+/)), h), h.videoCodec && -1 !== h.videoCodec.indexOf('avc1') && (h.videoCodec = t.convertAVC1ToAVCOTI(h.videoCodec)), n.push(h);
                                            }
                                            return n;
                                        }, t.parseMasterPlaylistMedia = function (i, e, s, n) {
                                            var r;
                                            void 0 === n && (n = []);
                                            var h = [], a = 0;
                                            for (_.lastIndex = 0; null !== (r = _.exec(i));) {
                                                var o = new x(r[1]);
                                                if (o.TYPE === s) {
                                                    var c = {
                                                        id: a++,
                                                        groupId: o['GROUP-ID'],
                                                        name: o.NAME || o.LANGUAGE,
                                                        type: s,
                                                        default: 'YES' === o.DEFAULT,
                                                        autoselect: 'YES' === o.AUTOSELECT,
                                                        forced: 'YES' === o.FORCED,
                                                        lang: o.LANGUAGE
                                                    };
                                                    if (o.URI && (c.url = t.resolve(o.URI, e)), n.length) {
                                                        var u = t.findGroup(n, c.groupId);
                                                        c.audioCodec = u ? u.codec : n[0].codec;
                                                    }
                                                    h.push(c);
                                                }
                                            }
                                            return h;
                                        }, t.parseLevelPlaylist = function (t, i, e, s, n) {
                                            var r, h, o, u = 0, l = 0, d = new y(i), f = 0, p = null, v = new m(), g = null;
                                            for (A.lastIndex = 0; null !== (r = A.exec(t));) {
                                                var w = r[1];
                                                if (w) {
                                                    v.duration = parseFloat(w);
                                                    var O = (' ' + r[2]).slice(1);
                                                    v.title = O || null, v.tagList.push(O ? [
                                                        'INF',
                                                        w,
                                                        O
                                                    ] : [
                                                        'INF',
                                                        w
                                                    ]);
                                                } else if (r[3]) {
                                                    if (Object(a.a)(v.duration)) {
                                                        var S = u++;
                                                        v.type = s, v.start = l, o && (v.levelkey = o), v.sn = S, v.level = e, v.cc = f, v.urlId = n, v.baseurl = i, v.relurl = (' ' + r[3]).slice(1), P(v, p), d.fragments.push(v), p = v, l += v.duration, v = new m();
                                                    }
                                                } else if (r[4]) {
                                                    var j = (' ' + r[4]).slice(1);
                                                    p ? v.setByteRange(j, p) : v.setByteRange(j);
                                                } else if (r[5])
                                                    v.rawProgramDateTime = (' ' + r[5]).slice(1), v.tagList.push([
                                                        'PROGRAM-DATE-TIME',
                                                        v.rawProgramDateTime
                                                    ]), null === g && (g = d.fragments.length);
                                                else {
                                                    if (!(r = r[0].match(I))) {
                                                        c.b.warn('No matches on slow regex match for level playlist!');
                                                        continue;
                                                    }
                                                    for (h = 1; h < r.length && void 0 === r[h]; h++);
                                                    var k = (' ' + r[h + 1]).slice(1), _ = (' ' + r[h + 2]).slice(1);
                                                    switch (r[h]) {
                                                    case '#':
                                                        v.tagList.push(_ ? [
                                                            k,
                                                            _
                                                        ] : [k]);
                                                        break;
                                                    case 'PLAYLIST-TYPE':
                                                        d.type = k.toUpperCase();
                                                        break;
                                                    case 'MEDIA-SEQUENCE':
                                                        u = d.startSN = parseInt(k);
                                                        break;
                                                    case 'TARGETDURATION':
                                                        d.targetduration = parseFloat(k);
                                                        break;
                                                    case 'VERSION':
                                                        d.version = parseInt(k);
                                                        break;
                                                    case 'EXTM3U':
                                                        break;
                                                    case 'ENDLIST':
                                                        d.live = !1;
                                                        break;
                                                    case 'DIS':
                                                        f++, v.tagList.push(['DIS']);
                                                        break;
                                                    case 'DISCONTINUITY-SEQ':
                                                        f = parseInt(k);
                                                        break;
                                                    case 'KEY':
                                                        var T = new x(k), M = T.enumeratedString('METHOD'), E = T.URI, L = T.hexadecimalInteger('IV');
                                                        M && (o = new b(i, E), E && [
                                                            'AES-128',
                                                            'SAMPLE-AES',
                                                            'SAMPLE-AES-CENC'
                                                        ].indexOf(M) >= 0 && (o.method = M, o.key = null, o.iv = L));
                                                        break;
                                                    case 'START':
                                                        var R = new x(k).decimalFloatingPoint('TIME-OFFSET');
                                                        Object(a.a)(R) && (d.startTimeOffset = R);
                                                        break;
                                                    case 'MAP':
                                                        var B = new x(k);
                                                        v.relurl = B.URI, B.BYTERANGE && v.setByteRange(B.BYTERANGE), v.baseurl = i, v.level = e, v.type = s, v.sn = 'initSegment', d.initSegment = v, (v = new m()).rawProgramDateTime = d.initSegment.rawProgramDateTime;
                                                        break;
                                                    default:
                                                        c.b.warn('line parsed but not handled: ' + r);
                                                    }
                                                }
                                            }
                                            return (v = p) && !v.relurl && (d.fragments.pop(), l -= v.duration), d.totalduration = l, d.averagetargetduration = l / d.fragments.length, d.endSN = u - 1, d.startCC = d.fragments[0] ? d.fragments[0].cc : 0, d.endCC = f, !d.initSegment && d.fragments.length && d.fragments.every(function (t) {
                                                return C.test(t.relurl);
                                            }) && (c.b.warn('MP4 fragments found but no init segment (probably no MAP, incomplete M3U8), trying to fetch SIDX'), (v = new m()).relurl = d.fragments[0].relurl, v.baseurl = i, v.level = e, v.type = s, v.sn = 'initSegment', d.initSegment = v, d.needSidxRanges = !0), g && function (t, i) {
                                                for (var e = t[i], s = i - 1; s >= 0; s--) {
                                                    var n = t[s];
                                                    n.programDateTime = e.programDateTime - 1000 * n.duration, e = n;
                                                }
                                            }(d.fragments, g), d;
                                        }, t;
                                    }();
                                function P(t, i) {
                                    t.rawProgramDateTime ? t.programDateTime = Date.parse(t.rawProgramDateTime) : i && i.programDateTime && (t.programDateTime = i.endProgramDateTime), Object(a.a)(t.programDateTime) || (t.programDateTime = null, t.rawProgramDateTime = null);
                                }
                                var M = window.performance, E = function (t) {
                                        var i, e;
                                        function r(i) {
                                            var e;
                                            return (e = t.call(this, i, o.a.MANIFEST_LOADING, o.a.LEVEL_LOADING, o.a.AUDIO_TRACK_LOADING, o.a.SUBTITLE_TRACK_LOADING) || this).loaders = {}, e;
                                        }
                                        e = t, (i = r).prototype = Object.create(e.prototype), i.prototype.constructor = i, i.__proto__ = e, r.canHaveQualityLevels = function (t) {
                                            return t !== s.AUDIO_TRACK && t !== s.SUBTITLE_TRACK;
                                        }, r.mapContextToLevelType = function (t) {
                                            switch (t.type) {
                                            case s.AUDIO_TRACK:
                                                return n.AUDIO;
                                            case s.SUBTITLE_TRACK:
                                                return n.SUBTITLE;
                                            default:
                                                return n.MAIN;
                                            }
                                        }, r.getResponseUrl = function (t, i) {
                                            var e = t.url;
                                            return void 0 !== e && 0 !== e.indexOf('data:') || (e = i.url), e;
                                        };
                                        var u = r.prototype;
                                        return u.createInternalLoader = function (t) {
                                            var i = this.hls.config, e = i.pLoader, s = i.loader, n = new (e || s)(i);
                                            return t.loader = n, this.loaders[t.type] = n, n;
                                        }, u.getInternalLoader = function (t) {
                                            return this.loaders[t.type];
                                        }, u.resetInternalLoader = function (t) {
                                            this.loaders[t] && delete this.loaders[t];
                                        }, u.destroyInternalLoaders = function () {
                                            for (var t in this.loaders) {
                                                var i = this.loaders[t];
                                                i && i.destroy(), this.resetInternalLoader(t);
                                            }
                                        }, u.destroy = function () {
                                            this.destroyInternalLoaders(), t.prototype.destroy.call(this);
                                        }, u.onManifestLoading = function (t) {
                                            this.load({
                                                url: t.url,
                                                type: s.MANIFEST,
                                                level: 0,
                                                id: null,
                                                responseType: 'text'
                                            });
                                        }, u.onLevelLoading = function (t) {
                                            this.load({
                                                url: t.url,
                                                type: s.LEVEL,
                                                level: t.level,
                                                id: t.id,
                                                responseType: 'text'
                                            });
                                        }, u.onAudioTrackLoading = function (t) {
                                            this.load({
                                                url: t.url,
                                                type: s.AUDIO_TRACK,
                                                level: null,
                                                id: t.id,
                                                responseType: 'text'
                                            });
                                        }, u.onSubtitleTrackLoading = function (t) {
                                            this.load({
                                                url: t.url,
                                                type: s.SUBTITLE_TRACK,
                                                level: null,
                                                id: t.id,
                                                responseType: 'text'
                                            });
                                        }, u.load = function (t) {
                                            var i = this.hls.config;
                                            c.b.debug('Loading playlist of type ' + t.type + ', level: ' + t.level + ', id: ' + t.id);
                                            var e, n, r, h, a = this.getInternalLoader(t);
                                            if (a) {
                                                var o = a.context;
                                                if (o && o.url === t.url)
                                                    return c.b.trace('playlist request ongoing'), !1;
                                                c.b.warn('aborting previous loader for type: ' + t.type), a.abort();
                                            }
                                            switch (t.type) {
                                            case s.MANIFEST:
                                                e = i.manifestLoadingMaxRetry, n = i.manifestLoadingTimeOut, r = i.manifestLoadingRetryDelay, h = i.manifestLoadingMaxRetryTimeout;
                                                break;
                                            case s.LEVEL:
                                                e = 0, h = 0, r = 0, n = i.levelLoadingTimeOut;
                                                break;
                                            default:
                                                e = i.levelLoadingMaxRetry, n = i.levelLoadingTimeOut, r = i.levelLoadingRetryDelay, h = i.levelLoadingMaxRetryTimeout;
                                            }
                                            a = this.createInternalLoader(t);
                                            var u = {
                                                    timeout: n,
                                                    maxRetry: e,
                                                    retryDelay: r,
                                                    maxRetryDelay: h
                                                }, l = {
                                                    onSuccess: this.loadsuccess.bind(this),
                                                    onError: this.loaderror.bind(this),
                                                    onTimeout: this.loadtimeout.bind(this)
                                                };
                                            return c.b.debug('Calling internal loader delegate for URL: ' + t.url), a.load(t, u, l), !0;
                                        }, u.loadsuccess = function (t, i, e, s) {
                                            if (void 0 === s && (s = null), e.isSidxRequest)
                                                return this.Rt(t, e), void this.Bt(t, i, e, s);
                                            if (this.resetInternalLoader(e.type), 'string' != typeof t.data)
                                                throw new Error('expected responseType of "text" for PlaylistLoader');
                                            var n = t.data;
                                            i.tload = M.now(), 0 === n.indexOf('#EXTM3U') ? n.indexOf('#EXTINF:') > 0 || n.indexOf('#EXT-X-TARGETDURATION:') > 0 ? this.Dt(t, i, e, s) : this.Ft(t, i, e, s) : this.Vt(t, e, 'no EXTM3U delimiter', s);
                                        }, u.loaderror = function (t, i, e) {
                                            void 0 === e && (e = null), this.Ut(i, e, !1, t);
                                        }, u.loadtimeout = function (t, i, e) {
                                            void 0 === e && (e = null), this.Ut(i, e, !0);
                                        }, u.Ft = function (t, i, e, s) {
                                            var n = this.hls, h = t.data, a = r.getResponseUrl(t, e), u = T.parseMasterPlaylist(h, a);
                                            if (u.length) {
                                                var l = u.map(function (t) {
                                                        return {
                                                            id: t.attrs.AUDIO,
                                                            codec: t.audioCodec
                                                        };
                                                    }), d = T.parseMasterPlaylistMedia(h, a, 'AUDIO', l), f = T.parseMasterPlaylistMedia(h, a, 'SUBTITLES');
                                                if (d.length) {
                                                    var p = !1;
                                                    d.forEach(function (t) {
                                                        t.url || (p = !0);
                                                    }), !1 === p && u[0].audioCodec && !u[0].attrs.AUDIO && (c.b.log('audio codec signaled in quality level, but no embedded audio track signaled, create one'), d.unshift({
                                                        type: 'main',
                                                        name: 'main',
                                                        default: !1,
                                                        autoselect: !1,
                                                        forced: !1,
                                                        id: -1
                                                    }));
                                                }
                                                n.trigger(o.a.MANIFEST_LOADED, {
                                                    levels: u,
                                                    audioTracks: d,
                                                    subtitles: f,
                                                    url: a,
                                                    stats: i,
                                                    networkDetails: s
                                                });
                                            } else
                                                this.Vt(t, e, 'no level found in manifest', s);
                                        }, u.Dt = function (t, i, e, n) {
                                            var h = this.hls, c = e.id, u = e.level, l = e.type, d = r.getResponseUrl(t, e), f = Object(a.a)(c) ? c : 0, p = Object(a.a)(u) ? u : f, b = r.mapContextToLevelType(e), v = T.parseLevelPlaylist(t.data, d, p, b, f);
                                            if (v.tload = i.tload, l === s.MANIFEST) {
                                                var m = {
                                                    url: d,
                                                    details: v
                                                };
                                                h.trigger(o.a.MANIFEST_LOADED, {
                                                    levels: [m],
                                                    audioTracks: [],
                                                    url: d,
                                                    stats: i,
                                                    networkDetails: n
                                                });
                                            }
                                            if (i.tparsed = M.now(), v.needSidxRanges) {
                                                var g = v.initSegment.url;
                                                this.load({
                                                    url: g,
                                                    isSidxRequest: !0,
                                                    type: l,
                                                    level: u,
                                                    levelDetails: v,
                                                    id: c,
                                                    rangeStart: 0,
                                                    rangeEnd: 2048,
                                                    responseType: 'arraybuffer'
                                                });
                                            } else
                                                e.levelDetails = v, this.Bt(t, i, e, n);
                                        }, u.Rt = function (t, i) {
                                            if ('string' == typeof t.data)
                                                throw new Error('sidx request must be made with responseType of array buffer');
                                            var e = d.a.parseSegmentIndex(new Uint8Array(t.data));
                                            if (e) {
                                                var s = e.references, n = i.levelDetails;
                                                s.forEach(function (t, i) {
                                                    var e = t.info;
                                                    if (n) {
                                                        var s = n.fragments[i];
                                                        0 === s.byteRange.length && s.setByteRange(String(1 + e.end - e.start) + '@' + String(e.start));
                                                    }
                                                }), n && n.initSegment.setByteRange(String(e.moovEndOffset) + '@0');
                                            }
                                        }, u.Vt = function (t, i, e, s) {
                                            this.hls.trigger(o.a.ERROR, {
                                                type: h.b.NETWORK_ERROR,
                                                details: h.a.MANIFEST_PARSING_ERROR,
                                                fatal: !0,
                                                url: t.url,
                                                reason: e,
                                                networkDetails: s
                                            });
                                        }, u.Ut = function (t, i, e, n) {
                                            var r, a;
                                            void 0 === e && (e = !1), void 0 === n && (n = null), c.b.info('A network error occured while loading a ' + t.type + '-type playlist');
                                            var u = this.getInternalLoader(t);
                                            switch (t.type) {
                                            case s.MANIFEST:
                                                r = e ? h.a.MANIFEST_LOAD_TIMEOUT : h.a.MANIFEST_LOAD_ERROR, a = !0;
                                                break;
                                            case s.LEVEL:
                                                r = e ? h.a.LEVEL_LOAD_TIMEOUT : h.a.LEVEL_LOAD_ERROR, a = !1;
                                                break;
                                            case s.AUDIO_TRACK:
                                                r = e ? h.a.AUDIO_TRACK_LOAD_TIMEOUT : h.a.AUDIO_TRACK_LOAD_ERROR, a = !1;
                                                break;
                                            default:
                                                a = !1;
                                            }
                                            u && (u.abort(), this.resetInternalLoader(t.type));
                                            var l = {
                                                type: h.b.NETWORK_ERROR,
                                                details: r,
                                                fatal: a,
                                                url: t.url,
                                                loader: u,
                                                context: t,
                                                networkDetails: i
                                            };
                                            n && (l.response = n), this.hls.trigger(o.a.ERROR, l);
                                        }, u.Bt = function (t, i, e, n) {
                                            var h = e.type, a = e.level, c = e.id, u = e.levelDetails;
                                            if (u && u.targetduration)
                                                if (r.canHaveQualityLevels(e.type))
                                                    this.hls.trigger(o.a.LEVEL_LOADED, {
                                                        details: u,
                                                        level: a || 0,
                                                        id: c || 0,
                                                        stats: i,
                                                        networkDetails: n
                                                    });
                                                else
                                                    switch (h) {
                                                    case s.AUDIO_TRACK:
                                                        this.hls.trigger(o.a.AUDIO_TRACK_LOADED, {
                                                            details: u,
                                                            id: c,
                                                            stats: i,
                                                            networkDetails: n
                                                        });
                                                        break;
                                                    case s.SUBTITLE_TRACK:
                                                        this.hls.trigger(o.a.SUBTITLE_TRACK_LOADED, {
                                                            details: u,
                                                            id: c,
                                                            stats: i,
                                                            networkDetails: n
                                                        });
                                                    }
                                            else
                                                this.Vt(t, e, 'invalid target duration', n);
                                        }, r;
                                    }(l), L = function (t) {
                                        var i, e;
                                        function s(i) {
                                            var e;
                                            return (e = t.call(this, i, o.a.FRAG_LOADING) || this).loaders = {}, e;
                                        }
                                        e = t, (i = s).prototype = Object.create(e.prototype), i.prototype.constructor = i, i.__proto__ = e;
                                        var n = s.prototype;
                                        return n.destroy = function () {
                                            var i = this.loaders;
                                            for (var e in i) {
                                                var s = i[e];
                                                s && s.destroy();
                                            }
                                            this.loaders = {}, t.prototype.destroy.call(this);
                                        }, n.onFragLoading = function (t) {
                                            var i = t.frag, e = i.type, s = this.loaders, n = this.hls.config, r = n.fLoader, h = n.loader;
                                            i.loaded = 0;
                                            var o, u, l, d = s[e];
                                            d && (c.b.warn('abort previous fragment loader for type: ' + e), d.abort()), d = s[e] = i.loader = n.fLoader ? new r(n) : new h(n), o = {
                                                url: i.url,
                                                frag: i,
                                                responseType: 'arraybuffer',
                                                progressData: !1
                                            };
                                            var f = i.byteRangeStartOffset, p = i.byteRangeEndOffset;
                                            Object(a.a)(f) && Object(a.a)(p) && (o.rangeStart = f, o.rangeEnd = p), u = {
                                                timeout: n.fragLoadingTimeOut,
                                                maxRetry: 0,
                                                retryDelay: 0,
                                                maxRetryDelay: n.fragLoadingMaxRetryTimeout
                                            }, l = {
                                                onSuccess: this.loadsuccess.bind(this),
                                                onError: this.loaderror.bind(this),
                                                onTimeout: this.loadtimeout.bind(this),
                                                onProgress: this.loadprogress.bind(this)
                                            }, d.load(o, u, l);
                                        }, n.loadsuccess = function (t, i, e, s) {
                                            void 0 === s && (s = null);
                                            var n = t.data, r = e.frag;
                                            r.loader = void 0, this.loaders[r.type] = void 0, this.hls.trigger(o.a.FRAG_LOADED, {
                                                payload: n,
                                                frag: r,
                                                stats: i,
                                                networkDetails: s
                                            });
                                        }, n.loaderror = function (t, i, e) {
                                            void 0 === e && (e = null);
                                            var s = i.frag, n = s.loader;
                                            n && n.abort(), this.loaders[s.type] = void 0, this.hls.trigger(o.a.ERROR, {
                                                type: h.b.NETWORK_ERROR,
                                                details: h.a.FRAG_LOAD_ERROR,
                                                fatal: !1,
                                                frag: i.frag,
                                                response: t,
                                                networkDetails: e
                                            });
                                        }, n.loadtimeout = function (t, i, e) {
                                            void 0 === e && (e = null);
                                            var s = i.frag, n = s.loader;
                                            n && n.abort(), this.loaders[s.type] = void 0, this.hls.trigger(o.a.ERROR, {
                                                type: h.b.NETWORK_ERROR,
                                                details: h.a.FRAG_LOAD_TIMEOUT,
                                                fatal: !1,
                                                frag: i.frag,
                                                networkDetails: e
                                            });
                                        }, n.loadprogress = function (t, i, e, s) {
                                            void 0 === s && (s = null);
                                            var n = i.frag;
                                            n.loaded = t.loaded, this.hls.trigger(o.a.FRAG_LOAD_PROGRESS, {
                                                frag: n,
                                                stats: t,
                                                networkDetails: s
                                            });
                                        }, s;
                                    }(l), R = function (t) {
                                        var i, e;
                                        function s(i) {
                                            var e;
                                            return (e = t.call(this, i, o.a.KEY_LOADING) || this).loaders = {}, e.decryptkey = null, e.decrypturl = null, e;
                                        }
                                        e = t, (i = s).prototype = Object.create(e.prototype), i.prototype.constructor = i, i.__proto__ = e;
                                        var n = s.prototype;
                                        return n.destroy = function () {
                                            for (var i in this.loaders) {
                                                var e = this.loaders[i];
                                                e && e.destroy();
                                            }
                                            this.loaders = {}, t.prototype.destroy.call(this);
                                        }, n.onKeyLoading = function (t) {
                                            var i = t.frag, e = i.type, s = this.loaders[e];
                                            if (i.decryptdata) {
                                                var n = i.decryptdata.uri;
                                                if (n !== this.decrypturl || null === this.decryptkey) {
                                                    var r = this.hls.config;
                                                    if (s && (c.b.warn('abort previous key loader for type:' + e), s.abort()), !n)
                                                        return void c.b.warn('key uri is falsy');
                                                    i.loader = this.loaders[e] = new r.loader(r), this.decrypturl = n, this.decryptkey = null;
                                                    var h = {
                                                            url: n,
                                                            frag: i,
                                                            responseType: 'arraybuffer'
                                                        }, a = {
                                                            timeout: r.fragLoadingTimeOut,
                                                            maxRetry: 0,
                                                            retryDelay: r.fragLoadingRetryDelay,
                                                            maxRetryDelay: r.fragLoadingMaxRetryTimeout
                                                        }, u = {
                                                            onSuccess: this.loadsuccess.bind(this),
                                                            onError: this.loaderror.bind(this),
                                                            onTimeout: this.loadtimeout.bind(this)
                                                        };
                                                    i.loader.load(h, a, u);
                                                } else
                                                    this.decryptkey && (i.decryptdata.key = this.decryptkey, this.hls.trigger(o.a.KEY_LOADED, { frag: i }));
                                            } else
                                                c.b.warn('Missing decryption data on fragment in onKeyLoading');
                                        }, n.loadsuccess = function (t, i, e) {
                                            var s = e.frag;
                                            s.decryptdata ? (this.decryptkey = s.decryptdata.key = new Uint8Array(t.data), s.loader = void 0, delete this.loaders[s.type], this.hls.trigger(o.a.KEY_LOADED, { frag: s })) : c.b.error('after key load, decryptdata unset');
                                        }, n.loaderror = function (t, i) {
                                            var e = i.frag, s = e.loader;
                                            s && s.abort(), delete this.loaders[e.type], this.hls.trigger(o.a.ERROR, {
                                                type: h.b.NETWORK_ERROR,
                                                details: h.a.KEY_LOAD_ERROR,
                                                fatal: !1,
                                                frag: e,
                                                response: t
                                            });
                                        }, n.loadtimeout = function (t, i) {
                                            var e = i.frag, s = e.loader;
                                            s && s.abort(), delete this.loaders[e.type], this.hls.trigger(o.a.ERROR, {
                                                type: h.b.NETWORK_ERROR,
                                                details: h.a.KEY_LOAD_TIMEOUT,
                                                fatal: !1,
                                                frag: e
                                            });
                                        }, s;
                                    }(l), B = 'NOT_LOADED', D = 'APPENDING', F = 'PARTIAL', V = function (t) {
                                        var i, e;
                                        function s(i) {
                                            var e;
                                            return (e = t.call(this, i, o.a.BUFFER_APPENDED, o.a.FRAG_BUFFERED, o.a.FRAG_LOADED) || this).bufferPadding = 0.2, e.fragments = Object.create(null), e.timeRanges = Object.create(null), e.config = i.config, e;
                                        }
                                        e = t, (i = s).prototype = Object.create(e.prototype), i.prototype.constructor = i, i.__proto__ = e;
                                        var n = s.prototype;
                                        return n.destroy = function () {
                                            this.fragments = Object.create(null), this.timeRanges = Object.create(null), this.config = null, l.prototype.destroy.call(this), t.prototype.destroy.call(this);
                                        }, n.getBufferedFrag = function (t, i) {
                                            var e = this.fragments, s = Object.keys(e).filter(function (s) {
                                                    var n = e[s];
                                                    if (n.body.type !== i)
                                                        return !1;
                                                    if (!n.buffered)
                                                        return !1;
                                                    var r = n.body;
                                                    return r.startPTS <= t && t <= r.endPTS;
                                                });
                                            if (0 === s.length)
                                                return null;
                                            var n = s.pop();
                                            return e[n].body;
                                        }, n.detectEvictedFragments = function (t, i) {
                                            var e, s, n = this;
                                            Object.keys(this.fragments).forEach(function (r) {
                                                var h = n.fragments[r];
                                                if (!0 === h.buffered) {
                                                    var a = h.range[t];
                                                    if (a) {
                                                        e = a.time;
                                                        for (var o = 0; o < e.length; o++)
                                                            if (s = e[o], !1 === n.isTimeBuffered(s.startPTS, s.endPTS, i)) {
                                                                n.removeFragment(h.body);
                                                                break;
                                                            }
                                                    }
                                                }
                                            });
                                        }, n.detectPartialFragments = function (t) {
                                            var i = this, e = this.getFragmentKey(t), s = this.fragments[e];
                                            s && (s.buffered = !0, Object.keys(this.timeRanges).forEach(function (e) {
                                                if (t.hasElementaryStream(e)) {
                                                    var n = i.timeRanges[e];
                                                    s.range[e] = i.getBufferedTimes(t.startPTS, t.endPTS, n);
                                                }
                                            }));
                                        }, n.getBufferedTimes = function (t, i, e) {
                                            for (var s, n, r = [], h = !1, a = 0; a < e.length; a++) {
                                                if (s = e.start(a) - this.bufferPadding, n = e.end(a) + this.bufferPadding, t >= s && i <= n) {
                                                    r.push({
                                                        startPTS: Math.max(t, e.start(a)),
                                                        endPTS: Math.min(i, e.end(a))
                                                    });
                                                    break;
                                                }
                                                if (t < n && i > s)
                                                    r.push({
                                                        startPTS: Math.max(t, e.start(a)),
                                                        endPTS: Math.min(i, e.end(a))
                                                    }), h = !0;
                                                else if (i <= s)
                                                    break;
                                            }
                                            return {
                                                time: r,
                                                partial: h
                                            };
                                        }, n.getFragmentKey = function (t) {
                                            return t.type + '_' + t.level + '_' + t.urlId + '_' + t.sn;
                                        }, n.getPartialFragment = function (t) {
                                            var i, e, s, n = this, r = null, h = 0;
                                            return Object.keys(this.fragments).forEach(function (a) {
                                                var o = n.fragments[a];
                                                n.isPartial(o) && (e = o.body.startPTS - n.bufferPadding, s = o.body.endPTS + n.bufferPadding, t >= e && t <= s && (i = Math.min(t - e, s - t), h <= i && (r = o.body, h = i)));
                                            }), r;
                                        }, n.getState = function (t) {
                                            var i = this.getFragmentKey(t), e = this.fragments[i], s = B;
                                            return void 0 !== e && (s = e.buffered ? !0 === this.isPartial(e) ? F : 'OK' : D), s;
                                        }, n.isPartial = function (t) {
                                            return !0 === t.buffered && (void 0 !== t.range.video && !0 === t.range.video.partial || void 0 !== t.range.audio && !0 === t.range.audio.partial);
                                        }, n.isTimeBuffered = function (t, i, e) {
                                            for (var s, n, r = 0; r < e.length; r++) {
                                                if (s = e.start(r) - this.bufferPadding, n = e.end(r) + this.bufferPadding, t >= s && i <= n)
                                                    return !0;
                                                if (i <= s)
                                                    return !1;
                                            }
                                            return !1;
                                        }, n.onFragLoaded = function (t) {
                                            var i = t.frag;
                                            Object(a.a)(i.sn) && !i.bitrateTest && (this.fragments[this.getFragmentKey(i)] = {
                                                body: i,
                                                range: Object.create(null),
                                                buffered: !1
                                            });
                                        }, n.onBufferAppended = function (t) {
                                            var i = this;
                                            this.timeRanges = t.timeRanges, Object.keys(this.timeRanges).forEach(function (t) {
                                                var e = i.timeRanges[t];
                                                i.detectEvictedFragments(t, e);
                                            });
                                        }, n.onFragBuffered = function (t) {
                                            this.detectPartialFragments(t.frag);
                                        }, n.hasFragment = function (t) {
                                            var i = this.getFragmentKey(t);
                                            return void 0 !== this.fragments[i];
                                        }, n.removeFragment = function (t) {
                                            var i = this.getFragmentKey(t);
                                            delete this.fragments[i];
                                        }, n.removeAllFragments = function () {
                                            this.fragments = Object.create(null);
                                        }, s;
                                    }(l), U = {
                                        search: function (t, i) {
                                            for (var e = 0, s = t.length - 1, n = null, r = null; e <= s;) {
                                                var h = i(r = t[n = (e + s) / 2 | 0]);
                                                if (h > 0)
                                                    e = n + 1;
                                                else {
                                                    if (!(h < 0))
                                                        return r;
                                                    s = n - 1;
                                                }
                                            }
                                            return null;
                                        }
                                    }, $ = function () {
                                        function t() {
                                        }
                                        return t.isBuffered = function (t, i) {
                                            try {
                                                if (t)
                                                    for (var e = t.buffered, s = 0; s < e.length; s++)
                                                        if (i >= e.start(s) && i <= e.end(s))
                                                            return !0;
                                            } catch (t) {
                                            }
                                            return !1;
                                        }, t.bufferInfo = function (t, i, e) {
                                            try {
                                                if (t) {
                                                    var s, n = t.buffered, r = [];
                                                    for (s = 0; s < n.length; s++)
                                                        r.push({
                                                            start: n.start(s),
                                                            end: n.end(s)
                                                        });
                                                    return this.bufferedInfo(r, i, e);
                                                }
                                            } catch (t) {
                                            }
                                            return {
                                                len: 0,
                                                start: i,
                                                end: i,
                                                nextStart: void 0
                                            };
                                        }, t.bufferedInfo = function (t, i, e) {
                                            t.sort(function (t, i) {
                                                var e = t.start - i.start;
                                                return e || i.end - t.end;
                                            });
                                            var s = [];
                                            if (e)
                                                for (var n = 0; n < t.length; n++) {
                                                    var r = s.length;
                                                    if (r) {
                                                        var h = s[r - 1].end;
                                                        t[n].start - h < e ? t[n].end > h && (s[r - 1].end = t[n].end) : s.push(t[n]);
                                                    } else
                                                        s.push(t[n]);
                                                }
                                            else
                                                s = t;
                                            for (var a, o = 0, c = i, u = i, l = 0; l < s.length; l++) {
                                                var d = s[l].start, f = s[l].end;
                                                if (i + e >= d && i < f)
                                                    c = d, o = (u = f) - i;
                                                else if (i + e < d) {
                                                    a = d;
                                                    break;
                                                }
                                            }
                                            return {
                                                len: o,
                                                start: c,
                                                end: u,
                                                nextStart: a
                                            };
                                        }, t;
                                    }(), N = e(8), H = e(11), q = e(9);
                                function z() {
                                    return window.MediaSource || window.WebKitMediaSource;
                                }
                                var W = e(5), G = function (t) {
                                        var i, e;
                                        function s() {
                                            return t.apply(this, arguments) || this;
                                        }
                                        return e = t, (i = s).prototype = Object.create(e.prototype), i.prototype.constructor = i, i.__proto__ = e, s.prototype.trigger = function (t) {
                                            for (var i = arguments.length, e = new Array(i > 1 ? i - 1 : 0), s = 1; s < i; s++)
                                                e[s - 1] = arguments[s];
                                            this.emit.apply(this, [
                                                t,
                                                t
                                            ].concat(e));
                                        }, s;
                                    }(N.EventEmitter), J = z() || {
                                        isTypeSupported: function () {
                                            return !1;
                                        }
                                    }, Q = function () {
                                        function t(t, i) {
                                            var e = this;
                                            this.hls = t, this.id = i;
                                            var s = this.observer = new G(), n = t.config, r = function (i, s) {
                                                    (s = s || {}).frag = e.frag, s.id = e.id, t.trigger(i, s);
                                                };
                                            s.on(o.a.FRAG_DECRYPTED, r), s.on(o.a.FRAG_PARSING_INIT_SEGMENT, r), s.on(o.a.FRAG_PARSING_DATA, r), s.on(o.a.FRAG_PARSED, r), s.on(o.a.ERROR, r), s.on(o.a.FRAG_PARSING_METADATA, r), s.on(o.a.FRAG_PARSING_USERDATA, r), s.on(o.a.INIT_PTS_FOUND, r);
                                            var a = {
                                                    mp4: J.isTypeSupported('video/mp4'),
                                                    mpeg: J.isTypeSupported('audio/mpeg'),
                                                    mp3: J.isTypeSupported('audio/mp4; codecs="mp3"')
                                                }, u = navigator.vendor;
                                            if (n.enableWorker && 'undefined' != typeof Worker) {
                                                var l;
                                                c.b.log('demuxing in webworker');
                                                try {
                                                    l = this.w = H(12), this.onwmsg = this.onWorkerMessage.bind(this), l.addEventListener('message', this.onwmsg), l.onerror = function (i) {
                                                        t.trigger(o.a.ERROR, {
                                                            type: h.b.OTHER_ERROR,
                                                            details: h.a.INTERNAL_EXCEPTION,
                                                            fatal: !0,
                                                            event: 'demuxerWorker',
                                                            err: { message: i.message + ' (' + i.filename + ':' + i.lineno + ')' }
                                                        });
                                                    }, l.postMessage({
                                                        cmd: 'init',
                                                        typeSupported: a,
                                                        vendor: u,
                                                        id: i,
                                                        config: JSON.stringify(n)
                                                    });
                                                } catch (t) {
                                                    c.b.warn('Error in worker:', t), c.b.error('Error while initializing DemuxerWorker, fallback on DemuxerInline'), l && Object(W.a)().URL.revokeObjectURL(l.objectURL), this.demuxer = new q.a(s, a, n, u), this.w = void 0;
                                                }
                                            } else
                                                this.demuxer = new q.a(s, a, n, u);
                                        }
                                        var i = t.prototype;
                                        return i.destroy = function () {
                                            var t = this.w;
                                            if (t)
                                                t.removeEventListener('message', this.onwmsg), t.terminate(), this.w = null;
                                            else {
                                                var i = this.demuxer;
                                                i && (i.destroy(), this.demuxer = null);
                                            }
                                            var e = this.observer;
                                            e && (e.removeAllListeners(), this.observer = null);
                                        }, i.push = function (t, i, e, s, n, r, h, o) {
                                            var u = this.w, l = Object(a.a)(n.startPTS) ? n.startPTS : n.start, d = n.decryptdata, f = this.frag, p = !(f && n.cc === f.cc), b = !(f && n.level === f.level), v = f && n.sn === f.sn + 1, m = !b && v;
                                            if (p && c.b.log(this.id + ':discontinuity detected'), b && c.b.log(this.id + ':switch detected'), this.frag = n, u)
                                                u.postMessage({
                                                    cmd: 'demux',
                                                    data: t,
                                                    decryptdata: d,
                                                    initSegment: i,
                                                    audioCodec: e,
                                                    videoCodec: s,
                                                    timeOffset: l,
                                                    discontinuity: p,
                                                    trackSwitch: b,
                                                    contiguous: m,
                                                    duration: r,
                                                    accurateTimeOffset: h,
                                                    defaultInitPTS: o
                                                }, t instanceof ArrayBuffer ? [t] : []);
                                            else {
                                                var g = this.demuxer;
                                                g && g.push(t, d, i, e, s, l, p, b, m, r, h, o);
                                            }
                                        }, i.onWorkerMessage = function (t) {
                                            var i = t.data, e = this.hls;
                                            switch (i.event) {
                                            case 'init':
                                                Object(W.a)().URL.revokeObjectURL(this.w.objectURL);
                                                break;
                                            case o.a.FRAG_PARSING_DATA:
                                                i.data.data1 = new Uint8Array(i.data1), i.data2 && (i.data.data2 = new Uint8Array(i.data2));
                                            default:
                                                i.data = i.data || {}, i.data.frag = this.frag, i.data.id = this.id, e.trigger(i.event, i.data);
                                            }
                                        }, t;
                                    }();
                                function X(t, i, e) {
                                    switch (i) {
                                    case 'audio':
                                        t.audioGroupIds || (t.audioGroupIds = []), t.audioGroupIds.push(e);
                                        break;
                                    case 'text':
                                        t.textGroupIds || (t.textGroupIds = []), t.textGroupIds.push(e);
                                    }
                                }
                                function Y(t, i, e) {
                                    var s = t[i], n = t[e], r = n.startPTS;
                                    Object(a.a)(r) ? e > i ? (s.duration = r - s.start, s.duration < 0 && c.b.warn('negative duration computed for frag ' + s.sn + ',level ' + s.level + ', there should be some duration drift between playlist and fragment!')) : (n.duration = s.start - r, n.duration < 0 && c.b.warn('negative duration computed for frag ' + n.sn + ',level ' + n.level + ', there should be some duration drift between playlist and fragment!')) : n.start = e > i ? s.start + s.duration : Math.max(s.start - n.duration, 0);
                                }
                                function K(t, i, e, s, n, r) {
                                    var h = e;
                                    if (Object(a.a)(i.startPTS)) {
                                        var o = Math.abs(i.startPTS - e);
                                        Object(a.a)(i.deltaPTS) ? i.deltaPTS = Math.max(o, i.deltaPTS) : i.deltaPTS = o, h = Math.max(e, i.startPTS), e = Math.min(e, i.startPTS), s = Math.max(s, i.endPTS), n = Math.min(n, i.startDTS), r = Math.max(r, i.endDTS);
                                    }
                                    var c = e - i.start;
                                    i.start = i.startPTS = e, i.maxStartPTS = h, i.endPTS = s, i.startDTS = n, i.endDTS = r, i.duration = s - e;
                                    var u, l, d, f = i.sn;
                                    if (!t || f < t.startSN || f > t.endSN)
                                        return 0;
                                    for (u = f - t.startSN, (l = t.fragments)[u] = i, d = u; d > 0; d--)
                                        Y(l, d, d - 1);
                                    for (d = u; d < l.length - 1; d++)
                                        Y(l, d, d + 1);
                                    return t.PTSKnown = !0, c;
                                }
                                var Z = {
                                    toString: function (t) {
                                        for (var i = '', e = t.length, s = 0; s < e; s++)
                                            i += '[' + t.start(s).toFixed(3) + ',' + t.end(s).toFixed(3) + ']';
                                        return i;
                                    }
                                };
                                function tt(t, i) {
                                    i.fragments.forEach(function (i) {
                                        if (i) {
                                            var e = i.start + t;
                                            i.start = i.startPTS = e, i.endPTS = e + i.duration;
                                        }
                                    }), i.PTSKnown = !0;
                                }
                                function it(t, i, e) {
                                    !function (t, i, e) {
                                        if (function (t, i, e) {
                                                var s = !1;
                                                return i && i.details && e && (e.endCC > e.startCC || t && t.cc < e.startCC) && (s = !0), s;
                                            }(t, e, i)) {
                                            var s = function (t, i) {
                                                var e = t.fragments, s = i.fragments;
                                                if (s.length && e.length) {
                                                    var n = function (t, i) {
                                                        for (var e = null, s = 0; s < t.length; s += 1) {
                                                            var n = t[s];
                                                            if (n && n.cc === i) {
                                                                e = n;
                                                                break;
                                                            }
                                                        }
                                                        return e;
                                                    }(e, s[0].cc);
                                                    if (n && (!n || n.startPTS))
                                                        return n;
                                                    c.b.log('No frag in previous level to align on');
                                                } else
                                                    c.b.log('No fragments to align');
                                            }(e.details, i);
                                            s && (c.b.log('Adjusting PTS using last level due to CC increase within current level'), tt(s.start, i));
                                        }
                                    }(t, e, i), !e.PTSKnown && i && function (t, i) {
                                        if (i && i.fragments.length) {
                                            if (!t.hasProgramDateTime || !i.hasProgramDateTime)
                                                return;
                                            var e = i.fragments[0].programDateTime, s = (t.fragments[0].programDateTime - e) / 1000 + i.fragments[0].start;
                                            Object(a.a)(s) && (c.b.log('adjusting PTS using programDateTime delta, sliding:' + s.toFixed(3)), tt(s, t));
                                        }
                                    }(e, i.details);
                                }
                                function et(t, i, e) {
                                    void 0 === t && (t = 0), void 0 === i && (i = 0);
                                    var s = Math.min(i, e.duration + (e.deltaPTS ? e.deltaPTS : 0));
                                    return e.start + e.duration - s <= t ? 1 : e.start - s > t && e.start ? -1 : 0;
                                }
                                function st(t, i, e) {
                                    var s = 1000 * Math.min(i, e.duration + (e.deltaPTS ? e.deltaPTS : 0));
                                    return (e.endProgramDateTime || 0) - s > t;
                                }
                                var nt = function () {
                                        function t(t, i, e, s) {
                                            this.config = t, this.media = i, this.fragmentTracker = e, this.hls = s, this.nudgeRetry = 0, this.stallReported = !1, this.stalled = null, this.moved = !1, this.seeking = !1;
                                        }
                                        var i = t.prototype;
                                        return i.poll = function (t) {
                                            var i = this.config, e = this.media, s = this.stalled, n = e.currentTime, r = e.seeking, h = this.seeking && !r, a = !this.seeking && r;
                                            if (this.seeking = r, n === t) {
                                                if ((a || h) && (this.stalled = null), !e.paused && !e.ended && 0 !== e.playbackRate && e.buffered.length) {
                                                    var o = $.bufferInfo(e, n, 0), u = o.len > 0, l = o.nextStart || 0;
                                                    if (u || l) {
                                                        if (r) {
                                                            if (o.len > 2 || !l || l - n > 2)
                                                                return;
                                                            this.moved = !1;
                                                        }
                                                        if (!this.moved && this.stalled) {
                                                            var d = Math.max(l, o.start || 0) - n;
                                                            if (d > 0 && d <= 2)
                                                                return void this.$t(null);
                                                        }
                                                        var f = self.performance.now();
                                                        if (null !== s) {
                                                            var p = f - s;
                                                            !r && p >= 250 && this.Nt(o.len);
                                                            var b = $.bufferInfo(e, n, i.maxBufferHole);
                                                            this.Ht(b, p);
                                                        } else
                                                            this.stalled = f;
                                                    }
                                                }
                                            } else if (this.moved = !0, null !== s) {
                                                if (this.stallReported) {
                                                    var v = self.performance.now() - s;
                                                    c.b.warn('playback not stuck anymore @' + n + ', after ' + Math.round(v) + 'ms'), this.stallReported = !1;
                                                }
                                                this.stalled = null, this.nudgeRetry = 0;
                                            }
                                        }, i.Ht = function (t, i) {
                                            var e = this.config, s = this.fragmentTracker, n = this.media.currentTime, r = s.getPartialFragment(n);
                                            r && this.$t(r) || t.len > e.maxBufferHole && i > 1000 * e.highBufferWatchdogPeriod && (c.b.warn('Trying to nudge playhead over buffer-hole'), this.stalled = null, this.qt());
                                        }, i.Nt = function (t) {
                                            var i = this.hls, e = this.media;
                                            this.stallReported || (this.stallReported = !0, c.b.warn('Playback stalling at @' + e.currentTime + ' due to low buffer'), i.trigger(o.a.ERROR, {
                                                type: h.b.MEDIA_ERROR,
                                                details: h.a.BUFFER_STALLED_ERROR,
                                                fatal: !1,
                                                buffer: t
                                            }));
                                        }, i.$t = function (t) {
                                            for (var i = this.config, e = this.hls, s = this.media, n = s.currentTime, r = 0, a = 0; a < s.buffered.length; a++) {
                                                var u = s.buffered.start(a);
                                                if (n + i.maxBufferHole >= r && n < u) {
                                                    var l = Math.max(u + 0.05, s.currentTime + 0.1);
                                                    return c.b.warn('skipping hole, adjusting currentTime from ' + n + ' to ' + l), this.moved = !0, this.stalled = null, s.currentTime = l, t && e.trigger(o.a.ERROR, {
                                                        type: h.b.MEDIA_ERROR,
                                                        details: h.a.BUFFER_SEEK_OVER_HOLE,
                                                        fatal: !1,
                                                        reason: 'fragment loaded with buffer holes, seeking from ' + n + ' to ' + l,
                                                        frag: t
                                                    }), l;
                                                }
                                                r = s.buffered.end(a);
                                            }
                                            return 0;
                                        }, i.qt = function () {
                                            var t = this.config, i = this.hls, e = this.media, s = e.currentTime, n = (this.nudgeRetry || 0) + 1;
                                            if (this.nudgeRetry = n, n < t.nudgeMaxRetry) {
                                                var r = s + n * t.nudgeOffset;
                                                c.b.warn('Nudging \'currentTime\' from ' + s + ' to ' + r), e.currentTime = r, i.trigger(o.a.ERROR, {
                                                    type: h.b.MEDIA_ERROR,
                                                    details: h.a.BUFFER_NUDGE_ON_STALL,
                                                    fatal: !1
                                                });
                                            } else
                                                c.b.error('Playhead still not moving while enough data buffered @' + s + ' after ' + t.nudgeMaxRetry + ' nudges'), i.trigger(o.a.ERROR, {
                                                    type: h.b.MEDIA_ERROR,
                                                    details: h.a.BUFFER_STALLED_ERROR,
                                                    fatal: !0
                                                });
                                        }, t;
                                    }(), rt = 'STOPPED', ht = 'IDLE', at = 'KEY_LOADING', ot = 'FRAG_LOADING', ct = 'FRAG_LOADING_WAITING_RETRY', ut = 'PARSING', lt = 'PARSED', dt = 'BUFFER_FLUSHING', ft = 'ERROR', pt = 'WAITING_LEVEL';
                                function bt(t, i) {
                                    for (var e = 0; e < i.length; e++) {
                                        var s = i[e];
                                        s.enumerable = s.enumerable || !1, s.configurable = !0, 'value' in s && (s.writable = !0), Object.defineProperty(t, s.key, s);
                                    }
                                }
                                var vt = function (t) {
                                    var i, e;
                                    function s(i, e) {
                                        var s;
                                        return (s = t.call(this, i, o.a.MEDIA_ATTACHED, o.a.MEDIA_DETACHING, o.a.MANIFEST_LOADING, o.a.MANIFEST_PARSED, o.a.LEVEL_LOADED, o.a.KEY_LOADED, o.a.FRAG_LOADED, o.a.FRAG_LOAD_EMERGENCY_ABORTED, o.a.FRAG_PARSING_INIT_SEGMENT, o.a.FRAG_PARSING_DATA, o.a.FRAG_PARSED, o.a.ERROR, o.a.AUDIO_TRACK_SWITCHING, o.a.AUDIO_TRACK_SWITCHED, o.a.BUFFER_CREATED, o.a.BUFFER_APPENDED, o.a.BUFFER_FLUSHED) || this).fragmentTracker = e, s.config = i.config, s.audioCodecSwap = !1, s.zt = rt, s.stallReported = !1, s.gapController = null, s.altAudio = !1, s;
                                    }
                                    e = t, (i = s).prototype = Object.create(e.prototype), i.prototype.constructor = i, i.__proto__ = e;
                                    var r, u, l = s.prototype;
                                    return l.startLoad = function (t) {
                                        if (this.levels) {
                                            var i = this.lastCurrentTime, e = this.hls;
                                            if (this.stopLoad(), this.setInterval(100), this.level = -1, this.fragLoadError = 0, !this.startFragRequested) {
                                                var s = e.startLevel;
                                                -1 === s && (s = 0, this.bitrateTest = !0), this.level = e.nextLoadLevel = s, this.loadedmetadata = !1;
                                            }
                                            i > 0 && -1 === t && (c.b.log('override startPosition with lastCurrentTime @' + i.toFixed(3)), t = i), this.state = ht, this.nextLoadPosition = this.startPosition = this.lastCurrentTime = t, this.tick();
                                        } else
                                            this.forceStartLoad = !0, this.state = rt;
                                    }, l.stopLoad = function () {
                                        this.forceStartLoad = !1, t.prototype.stopLoad.call(this);
                                    }, l.doTick = function () {
                                        switch (this.state) {
                                        case dt:
                                            this.fragLoadError = 0;
                                            break;
                                        case ht:
                                            this.Wt();
                                            break;
                                        case pt:
                                            var t = this.levels[this.level];
                                            t && t.details && (this.state = ht);
                                            break;
                                        case ct:
                                            var i = window.performance.now(), e = this.retryDate;
                                            (!e || i >= e || this.media && this.media.seeking) && (c.b.log('mediaController: retryDate reached, switch back to IDLE state'), this.state = ht);
                                        }
                                        this.Gt(), this.Jt();
                                    }, l.Wt = function () {
                                        var t = this.hls, i = t.config, e = this.media;
                                        if (void 0 !== this.levelLastLoaded && (e || !this.startFragRequested && i.startFragPrefetch)) {
                                            var s;
                                            s = this.loadedmetadata ? e.currentTime : this.nextLoadPosition;
                                            var n = t.nextLoadLevel, r = this.levels[n];
                                            if (r) {
                                                var h, a = r.bitrate;
                                                h = a ? Math.max(8 * i.maxBufferSize / a, i.maxBufferLength) : i.maxBufferLength, h = Math.min(h, i.maxMaxBufferLength);
                                                var u = $.bufferInfo(this.mediaBuffer ? this.mediaBuffer : e, s, i.maxBufferHole), l = u.len;
                                                if (!(l >= h)) {
                                                    c.b.trace('buffer length of ' + l.toFixed(3) + ' is below max of ' + h.toFixed(3) + '. checking for more payload ...'), this.level = t.nextLoadLevel = n;
                                                    var d = r.details;
                                                    if (!d || d.live && this.levelLastLoaded !== n)
                                                        this.state = pt;
                                                    else {
                                                        if (this.Qt(u, d)) {
                                                            var f = {};
                                                            return this.altAudio && (f.type = 'video'), this.hls.trigger(o.a.BUFFER_EOS, f), void (this.state = 'ENDED');
                                                        }
                                                        this.Xt(s, u, d);
                                                    }
                                                }
                                            }
                                        }
                                    }, l.Xt = function (t, i, e) {
                                        var s = this.fragPrevious, n = this.level, r = e.fragments, h = r.length;
                                        if (0 !== h) {
                                            var a, o = r[0].start, u = r[h - 1].start + r[h - 1].duration, l = i.end;
                                            if (e.initSegment && !e.initSegment.data)
                                                a = e.initSegment;
                                            else if (e.live) {
                                                var d = this.config.initialLiveManifestSize;
                                                if (h < d)
                                                    return void c.b.warn('Can not start playback of a level, reason: not enough fragments ' + h + ' < ' + d);
                                                if (null === (a = this.Yt(e, l, o, u, s, r, h)))
                                                    return;
                                            } else
                                                l < o && (a = r[0]);
                                            a || (a = this.Kt(o, s, h, r, l, u, e)), a && (a.encrypted ? (c.b.log('Loading key for ' + a.sn + ' of [' + e.startSN + ' ,' + e.endSN + '],level ' + n), this.Zt(a)) : (c.b.log('Loading ' + a.sn + ' of [' + e.startSN + ' ,' + e.endSN + '],level ' + n + ', currentTime:' + t.toFixed(3) + ',bufferEnd:' + l.toFixed(3)), this.ti(a)));
                                        }
                                    }, l.Yt = function (t, i, e, s, n, r, h) {
                                        var o, u = this.hls.config, l = this.media, d = void 0 !== u.liveMaxLatencyDuration ? u.liveMaxLatencyDuration : u.liveMaxLatencyDurationCount * t.targetduration;
                                        if (i < Math.max(e - u.maxFragLookUpTolerance, s - d)) {
                                            var f = this.liveSyncPosition = this.computeLivePosition(e, t);
                                            i = f, l && !l.paused && l.readyState && l.duration > f && f > l.currentTime && (c.b.log('buffer end: ' + i.toFixed(3) + ' is located too far from the end of live sliding playlist, reset currentTime to : ' + f.toFixed(3)), l.currentTime = f), this.nextLoadPosition = f;
                                        }
                                        if (t.PTSKnown && i > s && l && l.readyState)
                                            return null;
                                        if (this.startFragRequested && !t.PTSKnown) {
                                            if (n)
                                                if (t.hasProgramDateTime)
                                                    c.b.log('live playlist, switching playlist, load frag with same PDT: ' + n.programDateTime), o = function (t, i, e) {
                                                        if (null === i || !Array.isArray(t) || !t.length || !Object(a.a)(i))
                                                            return null;
                                                        if (i < (t[0].programDateTime || 0))
                                                            return null;
                                                        if (i >= (t[t.length - 1].endProgramDateTime || 0))
                                                            return null;
                                                        e = e || 0;
                                                        for (var s = 0; s < t.length; ++s) {
                                                            var n = t[s];
                                                            if (st(i, e, n))
                                                                return n;
                                                        }
                                                        return null;
                                                    }(r, n.endProgramDateTime, u.maxFragLookUpTolerance);
                                                else {
                                                    var p = n.sn + 1;
                                                    if (p >= t.startSN && p <= t.endSN) {
                                                        var b = r[p - t.startSN];
                                                        n.cc === b.cc && (o = b, c.b.log('live playlist, switching playlist, load frag with next SN: ' + o.sn));
                                                    }
                                                    o || (o = U.search(r, function (t) {
                                                        return n.cc - t.cc;
                                                    })) && c.b.log('live playlist, switching playlist, load frag with same CC: ' + o.sn);
                                                }
                                            o || (o = r[Math.min(h - 1, Math.round(h / 2))], c.b.log('live playlist, switching playlist, unknown, load middle frag : ' + o.sn));
                                        }
                                        return o;
                                    }, l.Kt = function (t, i, e, s, n, r, h) {
                                        var a, o = this.hls.config;
                                        if (a = n < r ? function (t, i, e, s) {
                                                void 0 === e && (e = 0), void 0 === s && (s = 0);
                                                var n = t ? i[t.sn - i[0].sn + 1] : null;
                                                return n && !et(e, s, n) ? n : U.search(i, et.bind(null, e, s));
                                            }(i, s, n, n > r - o.maxFragLookUpTolerance ? 0 : o.maxFragLookUpTolerance) : s[e - 1]) {
                                            var u = a.sn - h.startSN, l = i && a.level === i.level, d = s[u - 1], f = s[u + 1];
                                            if (i && a.sn === i.sn)
                                                if (l && !a.backtracked)
                                                    if (a.sn < h.endSN) {
                                                        var p = i.deltaPTS;
                                                        p && p > o.maxBufferHole && i.dropped && u ? (a = d, c.b.warn('Previous fragment was dropped with large PTS gap between audio and video. Maybe fragment is not starting with a keyframe? Loading previous one to try to overcome this')) : (a = f, c.b.log('Re-loading fragment with SN: ' + a.sn));
                                                    } else
                                                        a = null;
                                                else
                                                    a.backtracked && (f && f.backtracked ? (c.b.warn('Already backtracked from fragment ' + f.sn + ', will not backtrack to fragment ' + a.sn + '. Loading fragment ' + f.sn), a = f) : (c.b.warn('Loaded fragment with dropped frames, backtracking 1 segment to find a keyframe'), a.dropped = 0, d ? (a = d).backtracked = !0 : u && (a = null)));
                                        }
                                        return a;
                                    }, l.Zt = function (t) {
                                        this.state = at, this.hls.trigger(o.a.KEY_LOADING, { frag: t });
                                    }, l.ti = function (t) {
                                        var i = this.fragmentTracker.getState(t);
                                        this.fragCurrent = t, 'initSegment' !== t.sn && (this.startFragRequested = !0), Object(a.a)(t.sn) && !t.bitrateTest && (this.nextLoadPosition = t.start + t.duration), t.backtracked || i === B || i === F ? (t.autoLevel = this.hls.autoLevelEnabled, t.bitrateTest = this.bitrateTest, this.hls.trigger(o.a.FRAG_LOADING, { frag: t }), this.demuxer || (this.demuxer = new Q(this.hls, 'main')), this.state = ot) : i === D && this.ii(t.duration) && this.fragmentTracker.removeFragment(t);
                                    }, l.getBufferedFrag = function (t) {
                                        return this.fragmentTracker.getBufferedFrag(t, n.MAIN);
                                    }, l.followingBufferedFrag = function (t) {
                                        return t ? this.getBufferedFrag(t.endPTS + 0.5) : null;
                                    }, l.Jt = function () {
                                        var t, i, e = this.media;
                                        if (e && e.readyState && !1 === e.seeking && ((i = e.currentTime) > this.lastCurrentTime && (this.lastCurrentTime = i), $.isBuffered(e, i) ? t = this.getBufferedFrag(i) : $.isBuffered(e, i + 0.1) && (t = this.getBufferedFrag(i + 0.1)), t)) {
                                            var s = t;
                                            if (s !== this.fragPlaying) {
                                                this.hls.trigger(o.a.FRAG_CHANGED, { frag: s });
                                                var n = s.level;
                                                this.fragPlaying && this.fragPlaying.level === n || this.hls.trigger(o.a.LEVEL_SWITCHED, { level: n }), this.fragPlaying = s;
                                            }
                                        }
                                    }, l.immediateLevelSwitch = function () {
                                        if (c.b.log('immediateLevelSwitch'), !this.immediateSwitch) {
                                            this.immediateSwitch = !0;
                                            var t, i = this.media;
                                            i ? (t = i.paused, i.pause()) : t = !0, this.previouslyPaused = t;
                                        }
                                        var e = this.fragCurrent;
                                        e && e.loader && e.loader.abort(), this.fragCurrent = null, this.flushMainBuffer(0, Number.POSITIVE_INFINITY);
                                    }, l.immediateLevelSwitchEnd = function () {
                                        var t = this.media;
                                        t && t.buffered.length && (this.immediateSwitch = !1, $.isBuffered(t, t.currentTime) && (t.currentTime -= 0.0001), this.previouslyPaused || t.play());
                                    }, l.nextLevelSwitch = function () {
                                        var t = this.media;
                                        if (t && t.readyState) {
                                            var i, e, s;
                                            if ((e = this.getBufferedFrag(t.currentTime)) && e.startPTS > 1 && this.flushMainBuffer(0, e.startPTS - 1), t.paused)
                                                i = 0;
                                            else {
                                                var n = this.hls.nextLoadLevel, r = this.levels[n], h = this.fragLastKbps;
                                                i = h && this.fragCurrent ? this.fragCurrent.duration * r.bitrate / (1000 * h) + 1 : 0;
                                            }
                                            if ((s = this.getBufferedFrag(t.currentTime + i)) && (s = this.followingBufferedFrag(s))) {
                                                var a = this.fragCurrent;
                                                a && a.loader && a.loader.abort(), this.fragCurrent = null, this.flushMainBuffer(s.maxStartPTS, Number.POSITIVE_INFINITY);
                                            }
                                        }
                                    }, l.flushMainBuffer = function (t, i) {
                                        this.state = dt;
                                        var e = {
                                            startOffset: t,
                                            endOffset: i
                                        };
                                        this.altAudio && (e.type = 'video'), this.hls.trigger(o.a.BUFFER_FLUSHING, e);
                                    }, l.onMediaAttached = function (t) {
                                        var i = this.media = this.mediaBuffer = t.media;
                                        this.onvseeking = this.onMediaSeeking.bind(this), this.onvseeked = this.onMediaSeeked.bind(this), this.onvended = this.onMediaEnded.bind(this), i.addEventListener('seeking', this.onvseeking), i.addEventListener('seeked', this.onvseeked), i.addEventListener('ended', this.onvended);
                                        var e = this.config;
                                        this.levels && e.autoStartLoad && this.hls.startLoad(e.startPosition), this.gapController = new nt(e, i, this.fragmentTracker, this.hls);
                                    }, l.onMediaDetaching = function () {
                                        var t = this.media;
                                        t && t.ended && (c.b.log('MSE detaching and video ended, reset startPosition'), this.startPosition = this.lastCurrentTime = 0);
                                        var i = this.levels;
                                        i && i.forEach(function (t) {
                                            t.details && t.details.fragments.forEach(function (t) {
                                                t.backtracked = void 0;
                                            });
                                        }), t && (t.removeEventListener('seeking', this.onvseeking), t.removeEventListener('seeked', this.onvseeked), t.removeEventListener('ended', this.onvended), this.onvseeking = this.onvseeked = this.onvended = null), this.fragmentTracker.removeAllFragments(), this.media = this.mediaBuffer = null, this.loadedmetadata = !1, this.stopLoad();
                                    }, l.onMediaSeeked = function () {
                                        var t = this.media, i = t ? t.currentTime : void 0;
                                        Object(a.a)(i) && c.b.log('media seeked to ' + i.toFixed(3)), this.tick();
                                    }, l.onManifestLoading = function () {
                                        c.b.log('trigger BUFFER_RESET'), this.hls.trigger(o.a.BUFFER_RESET), this.fragmentTracker.removeAllFragments(), this.stalled = !1, this.startPosition = this.lastCurrentTime = 0;
                                    }, l.onManifestParsed = function (t) {
                                        var i, e = !1, s = !1;
                                        t.levels.forEach(function (t) {
                                            (i = t.audioCodec) && (-1 !== i.indexOf('mp4a.40.2') && (e = !0), -1 !== i.indexOf('mp4a.40.5') && (s = !0));
                                        }), this.audioCodecSwitch = e && s, this.audioCodecSwitch && c.b.log('both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC'), this.altAudio = t.altAudio, this.levels = t.levels, this.startFragRequested = !1;
                                        var n = this.config;
                                        (n.autoStartLoad || this.forceStartLoad) && this.hls.startLoad(n.startPosition);
                                    }, l.onLevelLoaded = function (t) {
                                        var i = t.details, e = t.level, s = this.levels[this.levelLastLoaded], n = this.levels[e], r = i.totalduration, h = 0;
                                        if (c.b.log('level ' + e + ' loaded [' + i.startSN + ',' + i.endSN + '],duration:' + r), i.live) {
                                            var u = n.details;
                                            u && i.fragments.length > 0 ? (function (t, i) {
                                                i.initSegment && t.initSegment && (i.initSegment = t.initSegment);
                                                var e, s = 0;
                                                if (function (t, i, e) {
                                                        if (t && i)
                                                            for (var s = Math.max(t.startSN, i.startSN) - i.startSN, n = Math.min(t.endSN, i.endSN) - i.startSN, r = i.startSN - t.startSN, h = s; h <= n; h++) {
                                                                var a = t.fragments[r + h], o = i.fragments[h];
                                                                if (!a || !o)
                                                                    break;
                                                                e(a, o, h);
                                                            }
                                                    }(t, i, function (t, n) {
                                                        s = t.cc - n.cc, Object(a.a)(t.startPTS) && (n.start = n.startPTS = t.startPTS, n.endPTS = t.endPTS, n.duration = t.duration, n.backtracked = t.backtracked, n.dropped = t.dropped, e = n), i.PTSKnown = !0;
                                                    }), i.PTSKnown) {
                                                    if (s) {
                                                        c.b.log('discontinuity sliding from playlist, take drift into account');
                                                        for (var n = i.fragments, r = 0; r < n.length; r++)
                                                            n[r].cc += s;
                                                    }
                                                    e ? K(i, e, e.startPTS, e.endPTS, e.startDTS, e.endDTS) : function (t, i) {
                                                        var e = i.startSN - t.startSN, s = t.fragments, n = i.fragments;
                                                        if (!(e < 0 || e > s.length))
                                                            for (var r = 0; r < n.length; r++)
                                                                n[r].start += s[e].start;
                                                    }(t, i), i.PTSKnown = t.PTSKnown;
                                                }
                                            }(u, i), h = i.fragments[0].start, this.liveSyncPosition = this.computeLivePosition(h, u), i.PTSKnown && Object(a.a)(h) ? c.b.log('live playlist sliding:' + h.toFixed(3)) : (c.b.log('live playlist - outdated PTS, unknown sliding'), it(this.fragPrevious, s, i))) : (c.b.log('live playlist - first load, unknown sliding'), i.PTSKnown = !1, it(this.fragPrevious, s, i));
                                        } else
                                            i.PTSKnown = !1;
                                        if (n.details = i, this.levelLastLoaded = e, this.hls.trigger(o.a.LEVEL_UPDATED, {
                                                details: i,
                                                level: e
                                            }), !1 === this.startFragRequested) {
                                            if (-1 === this.startPosition || -1 === this.lastCurrentTime) {
                                                var l = i.startTimeOffset;
                                                Object(a.a)(l) ? (l < 0 && (c.b.log('negative start time offset ' + l + ', count from end of last fragment'), l = h + r + l), c.b.log('start time offset found in playlist, adjust startPosition to ' + l), this.startPosition = l) : i.live ? (this.startPosition = this.computeLivePosition(h, i), c.b.log('configure startPosition to ' + this.startPosition)) : this.startPosition = 0, this.lastCurrentTime = this.startPosition;
                                            }
                                            this.nextLoadPosition = this.startPosition;
                                        }
                                        this.state === pt && (this.state = ht), this.tick();
                                    }, l.onKeyLoaded = function () {
                                        this.state === at && (this.state = ht, this.tick());
                                    }, l.onFragLoaded = function (t) {
                                        var i = this.fragCurrent, e = this.hls, s = this.levels, n = this.media, r = t.frag;
                                        if (this.state === ot && i && 'main' === r.type && r.level === i.level && r.sn === i.sn) {
                                            var h = t.stats, a = s[i.level], u = a.details;
                                            if (this.bitrateTest = !1, this.stats = h, c.b.log('Loaded ' + i.sn + ' of [' + u.startSN + ' ,' + u.endSN + '],level ' + i.level), r.bitrateTest && e.nextLoadLevel)
                                                this.state = ht, this.startFragRequested = !1, h.tparsed = h.tbuffered = window.performance.now(), e.trigger(o.a.FRAG_BUFFERED, {
                                                    stats: h,
                                                    frag: i,
                                                    id: 'main'
                                                }), this.tick();
                                            else if ('initSegment' === r.sn)
                                                this.state = ht, h.tparsed = h.tbuffered = window.performance.now(), u.initSegment.data = t.payload, e.trigger(o.a.FRAG_BUFFERED, {
                                                    stats: h,
                                                    frag: i,
                                                    id: 'main'
                                                }), this.tick();
                                            else {
                                                c.b.log('Parsing ' + i.sn + ' of [' + u.startSN + ' ,' + u.endSN + '],level ' + i.level + ', cc ' + i.cc), this.state = ut, this.pendingBuffering = !0, this.appended = !1, r.bitrateTest && (r.bitrateTest = !1, this.fragmentTracker.onFragLoaded({ frag: r }));
                                                var l = !(n && n.seeking) && (u.PTSKnown || !u.live), d = u.initSegment ? u.initSegment.data : [], f = this.ei(a);
                                                (this.demuxer = this.demuxer || new Q(this.hls, 'main')).push(t.payload, d, f, a.videoCodec, i, u.totalduration, l);
                                            }
                                        }
                                        this.fragLoadError = 0;
                                    }, l.onFragParsingInitSegment = function (t) {
                                        var i = this.fragCurrent, e = t.frag;
                                        if (i && 'main' === t.id && e.sn === i.sn && e.level === i.level && this.state === ut) {
                                            var s, n, r = t.tracks;
                                            if (r.audio && this.altAudio && delete r.audio, n = r.audio) {
                                                var h = this.levels[this.level].audioCodec, a = navigator.userAgent.toLowerCase();
                                                h && this.audioCodecSwap && (c.b.log('swapping playlist audio codec'), h = -1 !== h.indexOf('mp4a.40.5') ? 'mp4a.40.2' : 'mp4a.40.5'), this.audioCodecSwitch && 1 !== n.metadata.channelCount && -1 === a.indexOf('firefox') && (h = 'mp4a.40.5'), -1 !== a.indexOf('android') && 'audio/mpeg' !== n.container && (h = 'mp4a.40.2', c.b.log('Android: force audio codec to ' + h)), n.levelCodec = h, n.id = t.id;
                                            }
                                            for (s in ((n = r.video) && (n.levelCodec = this.levels[this.level].videoCodec, n.id = t.id), this.hls.trigger(o.a.BUFFER_CODECS, r), r)) {
                                                n = r[s], c.b.log('main track:' + s + ',container:' + n.container + ',codecs[level/parsed]=[' + n.levelCodec + '/' + n.codec + ']');
                                                var u = n.initSegment;
                                                u && (this.appended = !0, this.pendingBuffering = !0, this.hls.trigger(o.a.BUFFER_APPENDING, {
                                                    type: s,
                                                    data: u,
                                                    parent: 'main',
                                                    content: 'initSegment'
                                                }));
                                            }
                                            this.tick();
                                        }
                                    }, l.onFragParsingData = function (t) {
                                        var i = this, e = this.fragCurrent, s = t.frag;
                                        if (e && 'main' === t.id && s.sn === e.sn && s.level === e.level && ('audio' !== t.type || !this.altAudio) && this.state === ut) {
                                            var n = this.levels[this.level], r = e;
                                            if (Object(a.a)(t.endPTS) || (t.endPTS = t.startPTS + e.duration, t.endDTS = t.startDTS + e.duration), !0 === t.hasAudio && r.addElementaryStream(p.AUDIO), !0 === t.hasVideo && r.addElementaryStream(p.VIDEO), c.b.log('Parsed ' + t.type + ',PTS:[' + t.startPTS.toFixed(3) + ',' + t.endPTS.toFixed(3) + '],DTS:[' + t.startDTS.toFixed(3) + '/' + t.endDTS.toFixed(3) + '],nb:' + t.nb + ',dropped:' + (t.dropped || 0)), 'video' === t.type)
                                                if (r.dropped = t.dropped, r.dropped)
                                                    if (r.backtracked)
                                                        c.b.warn('Already backtracked on this fragment, appending with the gap', r.sn);
                                                    else {
                                                        var h = n.details;
                                                        if (!h || r.sn !== h.startSN)
                                                            return c.b.warn('missing video frame(s), backtracking fragment', r.sn), this.fragmentTracker.removeFragment(r), r.backtracked = !0, this.nextLoadPosition = t.startPTS, this.state = ht, this.fragPrevious = r, void this.tick();
                                                        c.b.warn('missing video frame(s) on first frag, appending with gap', r.sn);
                                                    }
                                                else
                                                    r.backtracked = !1;
                                            var u = K(n.details, r, t.startPTS, t.endPTS, t.startDTS, t.endDTS), l = this.hls;
                                            l.trigger(o.a.LEVEL_PTS_UPDATED, {
                                                details: n.details,
                                                level: this.level,
                                                drift: u,
                                                type: t.type,
                                                start: t.startPTS,
                                                end: t.endPTS
                                            }), [
                                                t.data1,
                                                t.data2
                                            ].forEach(function (e) {
                                                e && e.length && i.state === ut && (i.appended = !0, i.pendingBuffering = !0, l.trigger(o.a.BUFFER_APPENDING, {
                                                    type: t.type,
                                                    data: e,
                                                    parent: 'main',
                                                    content: 'data'
                                                }));
                                            }), this.tick();
                                        }
                                    }, l.onFragParsed = function (t) {
                                        var i = this.fragCurrent, e = t.frag;
                                        i && 'main' === t.id && e.sn === i.sn && e.level === i.level && this.state === ut && (this.stats.tparsed = window.performance.now(), this.state = lt, this.si());
                                    }, l.onAudioTrackSwitching = function (t) {
                                        var i = !!t.url, e = t.id;
                                        if (!i) {
                                            if (this.mediaBuffer !== this.media) {
                                                c.b.log('switching on main audio, use media.buffered to schedule main fragment loading'), this.mediaBuffer = this.media;
                                                var s = this.fragCurrent;
                                                s.loader && (c.b.log('switching to main audio track, cancel main fragment load'), s.loader.abort()), this.fragCurrent = null, this.fragPrevious = null, this.demuxer && (this.demuxer.destroy(), this.demuxer = null), this.state = ht;
                                            }
                                            var n = this.hls;
                                            n.trigger(o.a.BUFFER_FLUSHING, {
                                                startOffset: 0,
                                                endOffset: Number.POSITIVE_INFINITY,
                                                type: 'audio'
                                            }), n.trigger(o.a.AUDIO_TRACK_SWITCHED, { id: e }), this.altAudio = !1;
                                        }
                                    }, l.onAudioTrackSwitched = function (t) {
                                        var i = t.id, e = !!this.hls.audioTracks[i].url;
                                        if (e) {
                                            var s = this.videoBuffer;
                                            s && this.mediaBuffer !== s && (c.b.log('switching on alternate audio, use video.buffered to schedule main fragment loading'), this.mediaBuffer = s);
                                        }
                                        this.altAudio = e, this.tick();
                                    }, l.onBufferCreated = function (t) {
                                        var i, e, s = t.tracks, n = !1;
                                        for (var r in s) {
                                            var h = s[r];
                                            'main' === h.id ? (e = r, i = h, 'video' === r && (this.videoBuffer = s[r].buffer)) : n = !0;
                                        }
                                        n && i ? (c.b.log('alternate track found, use ' + e + '.buffered to schedule main fragment loading'), this.mediaBuffer = i.buffer) : this.mediaBuffer = this.media;
                                    }, l.onBufferAppended = function (t) {
                                        if ('main' === t.parent) {
                                            var i = this.state;
                                            i !== ut && i !== lt || (this.pendingBuffering = t.pending > 0, this.si());
                                        }
                                    }, l.si = function () {
                                        if (!(this.state !== lt || this.appended && this.pendingBuffering)) {
                                            var t = this.fragCurrent;
                                            if (t) {
                                                var i = this.mediaBuffer ? this.mediaBuffer : this.media;
                                                c.b.log('main buffered : ' + Z.toString(i.buffered)), this.fragPrevious = t;
                                                var e = this.stats;
                                                e.tbuffered = window.performance.now(), this.fragLastKbps = Math.round(8 * e.total / (e.tbuffered - e.tfirst)), this.hls.trigger(o.a.FRAG_BUFFERED, {
                                                    stats: e,
                                                    frag: t,
                                                    id: 'main'
                                                }), this.state = ht;
                                            }
                                            this.tick();
                                        }
                                    }, l.onError = function (t) {
                                        var i = t.frag || this.fragCurrent;
                                        if (!i || 'main' === i.type) {
                                            var e = !!this.media && $.isBuffered(this.media, this.media.currentTime) && $.isBuffered(this.media, this.media.currentTime + 0.5);
                                            switch (t.details) {
                                            case h.a.FRAG_LOAD_ERROR:
                                            case h.a.FRAG_LOAD_TIMEOUT:
                                            case h.a.KEY_LOAD_ERROR:
                                            case h.a.KEY_LOAD_TIMEOUT:
                                                if (!t.fatal)
                                                    if (this.fragLoadError + 1 <= this.config.fragLoadingMaxRetry) {
                                                        var s = Math.min(Math.pow(2, this.fragLoadError) * this.config.fragLoadingRetryDelay, this.config.fragLoadingMaxRetryTimeout);
                                                        c.b.warn('mediaController: frag loading failed, retry in ' + s + ' ms'), this.retryDate = window.performance.now() + s, this.loadedmetadata || (this.startFragRequested = !1, this.nextLoadPosition = this.startPosition), this.fragLoadError++, this.state = ct;
                                                    } else
                                                        c.b.error('mediaController: ' + t.details + ' reaches max retry, redispatch as fatal ...'), t.fatal = !0, this.state = ft;
                                                break;
                                            case h.a.LEVEL_LOAD_ERROR:
                                            case h.a.LEVEL_LOAD_TIMEOUT:
                                                this.state !== ft && (t.fatal ? (this.state = ft, c.b.warn('streamController: ' + t.details + ',switch to ' + this.state + ' state ...')) : t.levelRetry || this.state !== pt || (this.state = ht));
                                                break;
                                            case h.a.BUFFER_FULL_ERROR:
                                                'main' !== t.parent || this.state !== ut && this.state !== lt || (e ? (this.ii(this.config.maxBufferLength), this.state = ht) : (c.b.warn('buffer full error also media.currentTime is not buffered, flush everything'), this.fragCurrent = null, this.flushMainBuffer(0, Number.POSITIVE_INFINITY)));
                                            }
                                        }
                                    }, l.ii = function (t) {
                                        var i = this.config;
                                        return i.maxMaxBufferLength >= t && (i.maxMaxBufferLength /= 2, c.b.warn('main:reduce max buffer length to ' + i.maxMaxBufferLength + 's'), !0);
                                    }, l.Gt = function () {
                                        var t = this.media;
                                        if (t && 0 !== t.readyState) {
                                            var i = (this.mediaBuffer ? this.mediaBuffer : t).buffered;
                                            !this.loadedmetadata && i.length ? (this.loadedmetadata = !0, this.ni()) : this.immediateSwitch ? this.immediateLevelSwitchEnd() : this.gapController.poll(this.lastCurrentTime, i);
                                        }
                                    }, l.onFragLoadEmergencyAborted = function () {
                                        this.state = ht, this.loadedmetadata || (this.startFragRequested = !1, this.nextLoadPosition = this.startPosition), this.tick();
                                    }, l.onBufferFlushed = function () {
                                        var t = this.mediaBuffer ? this.mediaBuffer : this.media;
                                        t && this.fragmentTracker.detectEvictedFragments(p.VIDEO, t.buffered), this.state = ht, this.fragPrevious = null;
                                    }, l.swapAudioCodec = function () {
                                        this.audioCodecSwap = !this.audioCodecSwap;
                                    }, l.ni = function () {
                                        var t = this.media, i = t.currentTime, e = t.seeking ? i : this.startPosition;
                                        i !== e && e >= 0 && (c.b.log('target start position not buffered, seek to buffered.start(0) ' + e + ' from current time ' + i + ' '), t.currentTime = e);
                                    }, l.ei = function (t) {
                                        var i = this.config.defaultAudioCodec || t.audioCodec;
                                        return this.audioCodecSwap && (c.b.log('swapping playlist audio codec'), i && (i = -1 !== i.indexOf('mp4a.40.5') ? 'mp4a.40.2' : 'mp4a.40.5')), i;
                                    }, r = s, (u = [
                                        {
                                            key: 'state',
                                            set: function (t) {
                                                if (this.state !== t) {
                                                    var i = this.state;
                                                    this.zt = t, c.b.log('main stream-controller: ' + i + '->' + t), this.hls.trigger(o.a.STREAM_STATE_TRANSITION, {
                                                        previousState: i,
                                                        nextState: t
                                                    });
                                                }
                                            },
                                            get: function () {
                                                return this.zt;
                                            }
                                        },
                                        {
                                            key: 'currentLevel',
                                            get: function () {
                                                var t = this.media;
                                                if (t) {
                                                    var i = this.getBufferedFrag(t.currentTime);
                                                    if (i)
                                                        return i.level;
                                                }
                                                return -1;
                                            }
                                        },
                                        {
                                            key: 'nextBufferedFrag',
                                            get: function () {
                                                var t = this.media;
                                                return t ? this.followingBufferedFrag(this.getBufferedFrag(t.currentTime)) : null;
                                            }
                                        },
                                        {
                                            key: 'nextLevel',
                                            get: function () {
                                                var t = this.nextBufferedFrag;
                                                return t ? t.level : -1;
                                            }
                                        },
                                        {
                                            key: 'liveSyncPosition',
                                            get: function () {
                                                return this.ri;
                                            },
                                            set: function (t) {
                                                this.ri = t;
                                            }
                                        }
                                    ]) && bt(r.prototype, u), s;
                                }(function (t) {
                                    var i, e;
                                    function s() {
                                        return t.apply(this, arguments) || this;
                                    }
                                    e = t, (i = s).prototype = Object.create(e.prototype), i.prototype.constructor = i, i.__proto__ = e;
                                    var n = s.prototype;
                                    return n.doTick = function () {
                                    }, n.startLoad = function () {
                                    }, n.stopLoad = function () {
                                        var t = this.fragCurrent;
                                        t && (t.loader && t.loader.abort(), this.fragmentTracker.removeFragment(t)), this.demuxer && (this.demuxer.destroy(), this.demuxer = null), this.fragCurrent = null, this.fragPrevious = null, this.clearInterval(), this.clearNextTick(), this.state = rt;
                                    }, n.Qt = function (t, i) {
                                        var e = this.fragCurrent, s = this.fragmentTracker;
                                        if (!i.live && e && !e.backtracked && e.sn === i.endSN && !t.nextStart) {
                                            var n = s.getState(e);
                                            return n === F || 'OK' === n;
                                        }
                                        return !1;
                                    }, n.onMediaSeeking = function () {
                                        var t = this.config, i = this.media, e = this.mediaBuffer, s = this.state, n = i ? i.currentTime : null, r = $.bufferInfo(e || i, n, this.config.maxBufferHole);
                                        if (Object(a.a)(n) && c.b.log('media seeking to ' + n.toFixed(3)), s === ot) {
                                            var h = this.fragCurrent;
                                            if (0 === r.len && h) {
                                                var o = t.maxFragLookUpTolerance, u = h.start - o, l = h.start + h.duration + o;
                                                n < u || n > l ? (h.loader && (c.b.log('seeking outside of buffer while fragment load in progress, cancel fragment load'), h.loader.abort()), this.fragCurrent = null, this.fragPrevious = null, this.state = ht) : c.b.log('seeking outside of buffer but within currently loaded fragment range');
                                            }
                                        } else
                                            'ENDED' === s && (0 === r.len && (this.fragPrevious = null, this.fragCurrent = null), this.state = ht);
                                        i && (this.lastCurrentTime = n), this.loadedmetadata || (this.nextLoadPosition = this.startPosition = n), this.tick();
                                    }, n.onMediaEnded = function () {
                                        this.startPosition = this.lastCurrentTime = 0;
                                    }, n.onHandlerDestroying = function () {
                                        this.stopLoad(), t.prototype.onHandlerDestroying.call(this);
                                    }, n.onHandlerDestroyed = function () {
                                        this.state = rt, this.fragmentTracker = null;
                                    }, n.computeLivePosition = function (t, i) {
                                        var e = void 0 !== this.config.liveSyncDuration ? this.config.liveSyncDuration : this.config.liveSyncDurationCount * i.targetduration;
                                        return t + Math.max(0, i.totalduration - e);
                                    }, s;
                                }(function (t) {
                                    var i, e;
                                    function s(i) {
                                        for (var e, s = arguments.length, n = new Array(s > 1 ? s - 1 : 0), r = 1; r < s; r++)
                                            n[r - 1] = arguments[r];
                                        return (e = t.call.apply(t, [
                                            this,
                                            i
                                        ].concat(n)) || this).ai = void 0, e.oi = null, e.ci = null, e.ui = 0, e.ai = e.tick.bind(function (t) {
                                            if (void 0 === t)
                                                throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
                                            return t;
                                        }(e)), e;
                                    }
                                    e = t, (i = s).prototype = Object.create(e.prototype), i.prototype.constructor = i, i.__proto__ = e;
                                    var n = s.prototype;
                                    return n.onHandlerDestroying = function () {
                                        this.clearNextTick(), this.clearInterval();
                                    }, n.hasInterval = function () {
                                        return !!this.ci;
                                    }, n.hasNextTick = function () {
                                        return !!this.oi;
                                    }, n.setInterval = function (t) {
                                        return !this.ci && (this.ci = self.setInterval(this.ai, t), !0);
                                    }, n.clearInterval = function () {
                                        return !!this.ci && (self.clearInterval(this.ci), this.ci = null, !0);
                                    }, n.clearNextTick = function () {
                                        return !!this.oi && (self.clearTimeout(this.oi), this.oi = null, !0);
                                    }, n.tick = function () {
                                        this.ui++, 1 === this.ui && (this.doTick(), this.ui > 1 && (this.clearNextTick(), this.oi = self.setTimeout(this.ai, 0)), this.ui = 0);
                                    }, n.doTick = function () {
                                    }, s;
                                }(l)));
                                function mt(t, i) {
                                    for (var e = 0; e < i.length; e++) {
                                        var s = i[e];
                                        s.enumerable = s.enumerable || !1, s.configurable = !0, 'value' in s && (s.writable = !0), Object.defineProperty(t, s.key, s);
                                    }
                                }
                                window.performance;
                                var gt, yt = function (t) {
                                        var i, e;
                                        function s(i) {
                                            var e;
                                            return (e = t.call(this, i, o.a.MANIFEST_LOADED, o.a.LEVEL_LOADED, o.a.AUDIO_TRACK_SWITCHED, o.a.FRAG_LOADED, o.a.ERROR) || this).canload = !1, e.currentLevelIndex = null, e.manualLevelIndex = -1, e.timer = null, gt = /chrome|firefox/.test(navigator.userAgent.toLowerCase()), e;
                                        }
                                        e = t, (i = s).prototype = Object.create(e.prototype), i.prototype.constructor = i, i.__proto__ = e;
                                        var n, r, a = s.prototype;
                                        return a.onHandlerDestroying = function () {
                                            this.clearTimer(), this.manualLevelIndex = -1;
                                        }, a.clearTimer = function () {
                                            null !== this.timer && (clearTimeout(this.timer), this.timer = null);
                                        }, a.startLoad = function () {
                                            var t = this.li;
                                            this.canload = !0, this.levelRetryCount = 0, t && t.forEach(function (t) {
                                                t.loadError = 0;
                                                var i = t.details;
                                                i && i.live && (t.details = void 0);
                                            }), null !== this.timer && this.loadLevel();
                                        }, a.stopLoad = function () {
                                            this.canload = !1;
                                        }, a.onManifestLoaded = function (t) {
                                            var i, e = [], s = [], n = {}, r = null, a = !1, u = !1;
                                            if (t.levels.forEach(function (t) {
                                                    var i = t.attrs;
                                                    t.loadError = 0, t.fragmentError = !1, a = a || !!t.videoCodec, u = u || !!t.audioCodec, gt && t.audioCodec && -1 !== t.audioCodec.indexOf('mp4a.40.34') && (t.audioCodec = void 0), (r = n[t.bitrate]) ? r.url.push(t.url) : (t.url = [t.url], t.urlId = 0, n[t.bitrate] = t, e.push(t)), i && (i.AUDIO && (u = !0, X(r || t, 'audio', i.AUDIO)), i.SUBTITLES && X(r || t, 'text', i.SUBTITLES));
                                                }), a && u && (e = e.filter(function (t) {
                                                    return !!t.videoCodec;
                                                })), e = e.filter(function (t) {
                                                    var i = t.audioCodec, e = t.videoCodec;
                                                    return (!i || j(i, 'audio')) && (!e || j(e, 'video'));
                                                }), t.audioTracks && (s = t.audioTracks.filter(function (t) {
                                                    return !t.audioCodec || j(t.audioCodec, 'audio');
                                                })).forEach(function (t, i) {
                                                    t.id = i;
                                                }), e.length > 0) {
                                                i = e[0].bitrate, e.sort(function (t, i) {
                                                    return t.bitrate - i.bitrate;
                                                }), this.li = e;
                                                for (var l = 0; l < e.length; l++)
                                                    if (e[l].bitrate === i) {
                                                        this.di = l, c.b.log('manifest loaded,' + e.length + ' level(s) found, first bitrate:' + i);
                                                        break;
                                                    }
                                                this.hls.trigger(o.a.MANIFEST_PARSED, {
                                                    levels: e,
                                                    audioTracks: s,
                                                    firstLevel: this.di,
                                                    stats: t.stats,
                                                    audio: u,
                                                    video: a,
                                                    altAudio: s.some(function (t) {
                                                        return !!t.url;
                                                    })
                                                });
                                            } else
                                                this.hls.trigger(o.a.ERROR, {
                                                    type: h.b.MEDIA_ERROR,
                                                    details: h.a.MANIFEST_INCOMPATIBLE_CODECS_ERROR,
                                                    fatal: !0,
                                                    url: this.hls.url,
                                                    reason: 'no level with compatible codecs found in manifest'
                                                });
                                        }, a.setLevelInternal = function (t) {
                                            var i = this.li, e = this.hls;
                                            if (t >= 0 && t < i.length) {
                                                if (this.clearTimer(), this.currentLevelIndex !== t) {
                                                    c.b.log('switching to level ' + t), this.currentLevelIndex = t;
                                                    var s = i[t];
                                                    s.level = t, e.trigger(o.a.LEVEL_SWITCHING, s);
                                                }
                                                var n = i[t], r = n.details;
                                                if (!r || r.live) {
                                                    var a = n.urlId;
                                                    e.trigger(o.a.LEVEL_LOADING, {
                                                        url: n.url[a],
                                                        level: t,
                                                        id: a
                                                    });
                                                }
                                            } else
                                                e.trigger(o.a.ERROR, {
                                                    type: h.b.OTHER_ERROR,
                                                    details: h.a.LEVEL_SWITCH_ERROR,
                                                    level: t,
                                                    fatal: !1,
                                                    reason: 'invalid level idx'
                                                });
                                        }, a.onError = function (t) {
                                            if (t.fatal)
                                                t.type === h.b.NETWORK_ERROR && this.clearTimer();
                                            else {
                                                var i, e = !1, s = !1;
                                                switch (t.details) {
                                                case h.a.FRAG_LOAD_ERROR:
                                                case h.a.FRAG_LOAD_TIMEOUT:
                                                case h.a.KEY_LOAD_ERROR:
                                                case h.a.KEY_LOAD_TIMEOUT:
                                                    i = t.frag.level, s = !0;
                                                    break;
                                                case h.a.LEVEL_LOAD_ERROR:
                                                case h.a.LEVEL_LOAD_TIMEOUT:
                                                    i = t.context.level, e = !0;
                                                    break;
                                                case h.a.REMUX_ALLOC_ERROR:
                                                    i = t.level, e = !0;
                                                }
                                                void 0 !== i && this.recoverLevel(t, i, e, s);
                                            }
                                        }, a.recoverLevel = function (t, i, e, s) {
                                            var n, r, h, a = this, o = this.hls.config, u = t.details, l = this.li[i];
                                            if (l.loadError++, l.fragmentError = s, e) {
                                                if (!(this.levelRetryCount + 1 <= o.levelLoadingMaxRetry))
                                                    return c.b.error('level controller, cannot recover from ' + u + ' error'), this.currentLevelIndex = null, this.clearTimer(), void (t.fatal = !0);
                                                r = Math.min(Math.pow(2, this.levelRetryCount) * o.levelLoadingRetryDelay, o.levelLoadingMaxRetryTimeout), this.timer = setTimeout(function () {
                                                    return a.loadLevel();
                                                }, r), t.levelRetry = !0, this.levelRetryCount++, c.b.warn('level controller, ' + u + ', retry in ' + r + ' ms, current retry count is ' + this.levelRetryCount);
                                            }
                                            (e || s) && ((n = l.url.length) > 1 && l.loadError < n ? (l.urlId = (l.urlId + 1) % n, l.details = void 0, c.b.warn('level controller, ' + u + ' for level ' + i + ': switching to redundant URL-id ' + l.urlId)) : -1 === this.manualLevelIndex ? (h = 0 === i ? this.li.length - 1 : i - 1, c.b.warn('level controller, ' + u + ': switch to ' + h), this.hls.nextAutoLevel = this.currentLevelIndex = h) : s && (c.b.warn('level controller, ' + u + ': reload a fragment'), this.currentLevelIndex = null));
                                        }, a.onFragLoaded = function (t) {
                                            var i = t.frag;
                                            if (void 0 !== i && 'main' === i.type) {
                                                var e = this.li[i.level];
                                                void 0 !== e && (e.fragmentError = !1, e.loadError = 0, this.levelRetryCount = 0);
                                            }
                                        }, a.onLevelLoaded = function (t) {
                                            var i = this, e = t.level, s = t.details;
                                            if (e === this.currentLevelIndex) {
                                                var n = this.li[e];
                                                if (n.fragmentError || (n.loadError = 0, this.levelRetryCount = 0), s.live) {
                                                    var r = function (t, i, e) {
                                                        var s = 1000 * (i.averagetargetduration ? i.averagetargetduration : i.targetduration), n = s / 2;
                                                        return t && i.endSN === t.endSN && (s = n), e && (s = Math.max(n, s - (window.performance.now() - e))), Math.round(s);
                                                    }(n.details, s, t.stats.trequest);
                                                    c.b.log('live playlist, reload in ' + Math.round(r) + ' ms'), this.timer = setTimeout(function () {
                                                        return i.loadLevel();
                                                    }, r);
                                                } else
                                                    this.clearTimer();
                                            }
                                        }, a.onAudioTrackSwitched = function (t) {
                                            var i = this.hls.audioTracks[t.id].groupId, e = this.hls.levels[this.currentLevelIndex];
                                            if (e && e.audioGroupIds) {
                                                for (var s = -1, n = 0; n < e.audioGroupIds.length; n++)
                                                    if (e.audioGroupIds[n] === i) {
                                                        s = n;
                                                        break;
                                                    }
                                                s !== e.urlId && (e.urlId = s, this.startLoad());
                                            }
                                        }, a.loadLevel = function () {
                                            if (c.b.debug('call to loadLevel'), null !== this.currentLevelIndex && this.canload) {
                                                var t = this.li[this.currentLevelIndex];
                                                if ('object' == typeof t && t.url.length > 0) {
                                                    var i = this.currentLevelIndex, e = t.urlId, s = t.url[e];
                                                    c.b.log('Attempt loading level index ' + i + ' with URL-id ' + e), this.hls.trigger(o.a.LEVEL_LOADING, {
                                                        url: s,
                                                        level: i,
                                                        id: e
                                                    });
                                                }
                                            }
                                        }, n = s, (r = [
                                            {
                                                key: 'levels',
                                                get: function () {
                                                    return this.li;
                                                }
                                            },
                                            {
                                                key: 'level',
                                                get: function () {
                                                    return this.currentLevelIndex;
                                                },
                                                set: function (t) {
                                                    var i = this.li;
                                                    i && (t = Math.min(t, i.length - 1), this.currentLevelIndex === t && i[t].details || this.setLevelInternal(t));
                                                }
                                            },
                                            {
                                                key: 'manualLevel',
                                                get: function () {
                                                    return this.manualLevelIndex;
                                                },
                                                set: function (t) {
                                                    this.manualLevelIndex = t, void 0 === this.fi && (this.fi = t), -1 !== t && (this.level = t);
                                                }
                                            },
                                            {
                                                key: 'firstLevel',
                                                get: function () {
                                                    return this.di;
                                                },
                                                set: function (t) {
                                                    this.di = t;
                                                }
                                            },
                                            {
                                                key: 'startLevel',
                                                get: function () {
                                                    if (void 0 === this.fi) {
                                                        var t = this.hls.config.startLevel;
                                                        return void 0 !== t ? t : this.di;
                                                    }
                                                    return this.fi;
                                                },
                                                set: function (t) {
                                                    this.fi = t;
                                                }
                                            },
                                            {
                                                key: 'nextLoadLevel',
                                                get: function () {
                                                    return -1 !== this.manualLevelIndex ? this.manualLevelIndex : this.hls.nextAutoLevel;
                                                },
                                                set: function (t) {
                                                    this.level = t, -1 === this.manualLevelIndex && (this.hls.nextAutoLevel = t);
                                                }
                                            }
                                        ]) && mt(n.prototype, r), s;
                                    }(l), wt = e(4);
                                function Ot(t, i) {
                                    var e;
                                    try {
                                        e = new Event('addtrack');
                                    } catch (t) {
                                        (e = document.createEvent('Event')).initEvent('addtrack', !1, !1);
                                    }
                                    e.track = t, i.dispatchEvent(e);
                                }
                                var xt = function (t) {
                                        var i, e;
                                        function s(i) {
                                            var e;
                                            return (e = t.call(this, i, o.a.MEDIA_ATTACHED, o.a.MEDIA_DETACHING, o.a.FRAG_PARSING_METADATA, o.a.LIVE_BACK_BUFFER_REACHED) || this).id3Track = void 0, e.media = void 0, e;
                                        }
                                        e = t, (i = s).prototype = Object.create(e.prototype), i.prototype.constructor = i, i.__proto__ = e;
                                        var n = s.prototype;
                                        return n.destroy = function () {
                                            l.prototype.destroy.call(this);
                                        }, n.onMediaAttached = function (t) {
                                            this.media = t.media, this.media;
                                        }, n.onMediaDetaching = function () {
                                            !function (t) {
                                                if (t && t.cues)
                                                    for (; t.cues.length > 0;)
                                                        t.removeCue(t.cues[0]);
                                            }(this.id3Track), this.id3Track = void 0, this.media = void 0;
                                        }, n.getID3Track = function (t) {
                                            for (var i = 0; i < t.length; i++) {
                                                var e = t[i];
                                                if ('metadata' === e.kind && 'id3' === e.label)
                                                    return Ot(e, this.media), e;
                                            }
                                            return this.media.addTextTrack('metadata', 'id3');
                                        }, n.onFragParsingMetadata = function (t) {
                                            var i = t.frag, e = t.samples;
                                            this.id3Track || (this.id3Track = this.getID3Track(this.media.textTracks), this.id3Track.mode = 'hidden');
                                            for (var s = this.hls.config.cnxRenderWindow.WebKitDataCue || his.hls.config.cnxRenderWindow.VTTCue || his.hls.config.cnxRenderWindow.TextTrackCue, n = 0; n < e.length; n++) {
                                                var r = wt.a.getID3Frames(e[n].data);
                                                if (r) {
                                                    var h = e[n].pts, a = n < e.length - 1 ? e[n + 1].pts : i.endPTS;
                                                    h === a ? a += 0.0001 : h > a && (c.b.warn('detected an id3 sample with endTime < startTime, adjusting endTime to (startTime + 0.25)'), a = h + 0.25);
                                                    for (var o = 0; o < r.length; o++) {
                                                        var u = r[o];
                                                        if (!wt.a.isTimeStampFrame(u)) {
                                                            var l = new s(h, a, '');
                                                            l.value = u, this.id3Track.addCue(l);
                                                        }
                                                    }
                                                }
                                            }
                                        }, n.onLiveBackBufferReached = function (t) {
                                            var i = t.bufferEnd, e = this.id3Track;
                                            if (e && e.cues && e.cues.length) {
                                                var s = function (t, i) {
                                                    if (i < t[0].endTime)
                                                        return t[0];
                                                    if (i > t[t.length - 1].endTime)
                                                        return t[t.length - 1];
                                                    for (var e = 0, s = t.length - 1; e <= s;) {
                                                        var n = Math.floor((s + e) / 2);
                                                        if (i < t[n].endTime)
                                                            s = n - 1;
                                                        else {
                                                            if (!(i > t[n].endTime))
                                                                return t[n];
                                                            e = n + 1;
                                                        }
                                                    }
                                                    return t[e].endTime - i < i - t[s].endTime ? t[e] : t[s];
                                                }(e.cues, i);
                                                if (s)
                                                    for (; e.cues[0] !== s;)
                                                        e.removeCue(e.cues[0]);
                                            }
                                        }, s;
                                    }(l), St = function () {
                                        function t(t) {
                                            this.alpha_ = void 0, this.estimate_ = void 0, this.totalWeight_ = void 0, this.alpha_ = t ? Math.exp(Math.log(0.5) / t) : 0, this.estimate_ = 0, this.totalWeight_ = 0;
                                        }
                                        var i = t.prototype;
                                        return i.sample = function (t, i) {
                                            var e = Math.pow(this.alpha_, t);
                                            this.estimate_ = i * (1 - e) + e * this.estimate_, this.totalWeight_ += t;
                                        }, i.getTotalWeight = function () {
                                            return this.totalWeight_;
                                        }, i.getEstimate = function () {
                                            if (this.alpha_) {
                                                var t = 1 - Math.pow(this.alpha_, this.totalWeight_);
                                                return this.estimate_ / t;
                                            }
                                            return this.estimate_;
                                        }, t;
                                    }(), jt = function () {
                                        function t(t, i, e, s) {
                                            this.hls = void 0, this.defaultEstimate_ = void 0, this.minWeight_ = void 0, this.minDelayMs_ = void 0, this.slow_ = void 0, this.fast_ = void 0, this.hls = t, this.defaultEstimate_ = s, this.minWeight_ = 0.001, this.minDelayMs_ = 50, this.slow_ = new St(i), this.fast_ = new St(e);
                                        }
                                        var i = t.prototype;
                                        return i.sample = function (t, i) {
                                            var e = (t = Math.max(t, this.minDelayMs_)) / 1000, s = 8 * i / e;
                                            this.fast_.sample(e, s), this.slow_.sample(e, s);
                                        }, i.canEstimate = function () {
                                            var t = this.fast_;
                                            return t && t.getTotalWeight() >= this.minWeight_;
                                        }, i.getEstimate = function () {
                                            return this.canEstimate() ? Math.min(this.fast_.getEstimate(), this.slow_.getEstimate()) : this.defaultEstimate_;
                                        }, i.destroy = function () {
                                        }, t;
                                    }();
                                function kt(t, i) {
                                    for (var e = 0; e < i.length; e++) {
                                        var s = i[e];
                                        s.enumerable = s.enumerable || !1, s.configurable = !0, 'value' in s && (s.writable = !0), Object.defineProperty(t, s.key, s);
                                    }
                                }
                                var _t = window.performance, At = function (t) {
                                        var i, e;
                                        function s(i) {
                                            var e;
                                            return (e = t.call(this, i, o.a.FRAG_LOADING, o.a.FRAG_LOADED, o.a.FRAG_BUFFERED, o.a.ERROR) || this).lastLoadedFragLevel = 0, e.pi = -1, e.hls = i, e.timer = null, e.bwEstimator = null, e.onCheck = e.bi.bind(function (t) {
                                                if (void 0 === t)
                                                    throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
                                                return t;
                                            }(e)), e;
                                        }
                                        e = t, (i = s).prototype = Object.create(e.prototype), i.prototype.constructor = i, i.__proto__ = e;
                                        var n, r, u = s.prototype;
                                        return u.destroy = function () {
                                            this.clearTimer(), l.prototype.destroy.call(this);
                                        }, u.onFragLoading = function (t) {
                                            var i = t.frag;
                                            if ('main' === i.type && (this.timer || (this.fragCurrent = i, this.timer = setInterval(this.onCheck, 100)), !this.bwEstimator)) {
                                                var e, s, n = this.hls, r = n.config, h = i.level;
                                                n.levels[h].details.live ? (e = r.abrEwmaFastLive, s = r.abrEwmaSlowLive) : (e = r.abrEwmaFastVoD, s = r.abrEwmaSlowVoD), this.bwEstimator = new jt(n, s, e, r.abrEwmaDefaultEstimate);
                                            }
                                        }, u.bi = function () {
                                            var t = this.hls, i = t.media, e = this.fragCurrent;
                                            if (e) {
                                                var s = e.loader, n = t.minAutoLevel;
                                                if (!s || s.stats && s.stats.aborted)
                                                    return c.b.warn('frag loader destroy or aborted, disarm abandonRules'), this.clearTimer(), void (this.pi = -1);
                                                var r = s.stats;
                                                if (i && r && (!i.paused && 0 !== i.playbackRate || !i.readyState) && e.autoLevel && e.level) {
                                                    var h = _t.now() - r.trequest, a = Math.abs(i.playbackRate);
                                                    if (h > 500 * e.duration / a) {
                                                        var u = t.levels, l = Math.max(1, r.bw ? r.bw / 8 : 1000 * r.loaded / h), d = u[e.level], f = d.realBitrate ? Math.max(d.realBitrate, d.bitrate) : d.bitrate, p = r.total ? r.total : Math.max(r.loaded, Math.round(e.duration * f / 8)), b = i.currentTime, v = (p - r.loaded) / l, m = ($.bufferInfo(i, b, t.config.maxBufferHole).end - b) / a;
                                                        if (m < 2 * e.duration / a && v > m) {
                                                            var g;
                                                            for (g = e.level - 1; g > n; g--) {
                                                                var y = u[g].realBitrate ? Math.max(u[g].realBitrate, u[g].bitrate) : u[g].bitrate;
                                                                if (e.duration * y / (6.4 * l) < m)
                                                                    break;
                                                            }
                                                            void 0 < v && (c.b.warn('loading too slow, abort fragment loading and switch to level ' + g + ':fragLoadedDelay[' + g + ']<fragLoadedDelay[' + (e.level - 1) + '];bufferStarvationDelay:' + (void 0).toFixed(1) + '<' + v.toFixed(1) + ':' + m.toFixed(1)), t.nextLoadLevel = g, this.bwEstimator.sample(h, r.loaded), s.abort(), this.clearTimer(), t.trigger(o.a.FRAG_LOAD_EMERGENCY_ABORTED, {
                                                                frag: e,
                                                                stats: r
                                                            }));
                                                        }
                                                    }
                                                }
                                            }
                                        }, u.onFragLoaded = function (t) {
                                            var i = t.frag;
                                            if ('main' === i.type && Object(a.a)(i.sn)) {
                                                if (this.clearTimer(), this.lastLoadedFragLevel = i.level, this.pi = -1, this.hls.config.abrMaxWithRealBitrate) {
                                                    var e = this.hls.levels[i.level], s = (e.loaded ? e.loaded.bytes : 0) + t.stats.loaded, n = (e.loaded ? e.loaded.duration : 0) + t.frag.duration;
                                                    e.loaded = {
                                                        bytes: s,
                                                        duration: n
                                                    }, e.realBitrate = Math.round(8 * s / n);
                                                }
                                                if (t.frag.bitrateTest) {
                                                    var r = t.stats;
                                                    r.tparsed = r.tbuffered = r.tload, this.onFragBuffered(t);
                                                }
                                            }
                                        }, u.onFragBuffered = function (t) {
                                            var i = t.stats, e = t.frag;
                                            if (!0 !== i.aborted && 'main' === e.type && Object(a.a)(e.sn) && (!e.bitrateTest || i.tload === i.tbuffered)) {
                                                var s = i.tparsed - i.trequest;
                                                c.b.log('latency/loading/parsing/append/kbps:' + Math.round(i.tfirst - i.trequest) + '/' + Math.round(i.tload - i.tfirst) + '/' + Math.round(i.tparsed - i.tload) + '/' + Math.round(i.tbuffered - i.tparsed) + '/' + Math.round(8 * i.loaded / (i.tbuffered - i.trequest))), this.bwEstimator.sample(s, i.loaded), i.bwEstimate = this.bwEstimator.getEstimate(), e.bitrateTest ? this.bitrateTestDelay = s / 1000 : this.bitrateTestDelay = 0;
                                            }
                                        }, u.onError = function (t) {
                                            switch (t.details) {
                                            case h.a.FRAG_LOAD_ERROR:
                                            case h.a.FRAG_LOAD_TIMEOUT:
                                                this.clearTimer();
                                            }
                                        }, u.clearTimer = function () {
                                            clearInterval(this.timer), this.timer = null;
                                        }, u.vi = function (t, i, e, s, n, r, h, a, o) {
                                            for (var u = n; u >= s; u--) {
                                                var l = o[u];
                                                if (l) {
                                                    var d = l.details, f = d ? d.totalduration / d.fragments.length : i, p = !!d && d.live, b = void 0;
                                                    b = u <= t ? h * e : a * e;
                                                    var v = o[u].realBitrate ? Math.max(o[u].realBitrate, o[u].bitrate) : o[u].bitrate, m = v * f / b;
                                                    if (c.b.trace('level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: ' + u + '/' + Math.round(b) + '/' + v + '/' + f + '/' + r + '/' + m), b > v && (!m || p && !this.bitrateTestDelay || m < r))
                                                        return u;
                                                }
                                            }
                                            return -1;
                                        }, n = s, (r = [
                                            {
                                                key: 'nextAutoLevel',
                                                get: function () {
                                                    var t = this.pi, i = this.bwEstimator;
                                                    if (!(-1 === t || i && i.canEstimate()))
                                                        return t;
                                                    var e = this.nextABRAutoLevel;
                                                    return -1 !== t && (e = Math.min(t, e)), e;
                                                },
                                                set: function (t) {
                                                    this.pi = t;
                                                }
                                            },
                                            {
                                                key: 'nextABRAutoLevel',
                                                get: function () {
                                                    var t = this.hls, i = t.maxAutoLevel, e = t.levels, s = t.config, n = t.minAutoLevel, r = t.media, h = this.lastLoadedFragLevel, a = this.fragCurrent ? this.fragCurrent.duration : 0, o = r ? r.currentTime : 0, u = r && 0 !== r.playbackRate ? Math.abs(r.playbackRate) : 1, l = this.bwEstimator ? this.bwEstimator.getEstimate() : s.abrEwmaDefaultEstimate, d = ($.bufferInfo(r, o, s.maxBufferHole).end - o) / u, f = this.vi(h, a, l, n, i, d, s.abrBandWidthFactor, s.abrBandWidthUpFactor, e);
                                                    if (f >= 0)
                                                        return f;
                                                    c.b.trace('rebuffering expected to happen, lets try to find a quality level minimizing the rebuffering');
                                                    var p = a ? Math.min(a, s.maxStarvationDelay) : s.maxStarvationDelay, b = s.abrBandWidthFactor, v = s.abrBandWidthUpFactor;
                                                    if (0 === d) {
                                                        var m = this.bitrateTestDelay;
                                                        m && (p = (a ? Math.min(a, s.maxLoadingDelay) : s.maxLoadingDelay) - m, c.b.trace('bitrate test took ' + Math.round(1000 * m) + 'ms, set first fragment max fetchDuration to ' + Math.round(1000 * p) + ' ms'), b = v = 1);
                                                    }
                                                    return f = this.vi(h, a, l, n, i, d + p, b, v, e), Math.max(f, 0);
                                                }
                                            }
                                        ]) && kt(n.prototype, r), s;
                                    }(l), It = z(), Ct = function (t) {
                                        var i, e;
                                        function s(i) {
                                            var e;
                                            return (e = t.call(this, i, o.a.MEDIA_ATTACHING, o.a.MEDIA_DETACHING, o.a.MANIFEST_PARSED, o.a.BUFFER_RESET, o.a.BUFFER_APPENDING, o.a.BUFFER_CODECS, o.a.BUFFER_EOS, o.a.BUFFER_FLUSHING, o.a.LEVEL_PTS_UPDATED, o.a.LEVEL_UPDATED) || this).mi = null, e.gi = null, e.yi = 10, e.wi = null, e.Oi = null, e.xi = !1, e.Si = !1, e.config = void 0, e.audioTimestampOffset = void 0, e.bufferCodecEventsExpected = 0, e.ji = 0, e.media = null, e.mediaSource = null, e.segments = [], e.parent = void 0, e.appending = !1, e.appended = 0, e.appendError = 0, e.flushBufferCounter = 0, e.tracks = {}, e.pendingTracks = {}, e.sourceBuffer = {}, e.flushRange = [], e.ki = function () {
                                                c.b.log('media source opened'), e.hls.trigger(o.a.MEDIA_ATTACHED, { media: e.media });
                                                var t = e.mediaSource;
                                                t && t.removeEventListener('sourceopen', e.ki), e.checkPendingTracks();
                                            }, e._i = function () {
                                                c.b.log('media source closed');
                                            }, e.Ai = function () {
                                                c.b.log('media source ended');
                                            }, e.Ii = function () {
                                                if (e.audioTimestampOffset && e.sourceBuffer.audio) {
                                                    var t = e.sourceBuffer.audio;
                                                    c.b.warn('change mpeg audio timestamp offset from ' + t.timestampOffset + ' to ' + e.audioTimestampOffset), t.timestampOffset = e.audioTimestampOffset, delete e.audioTimestampOffset;
                                                }
                                                e.xi && e.doFlush(), e.Si && e.checkEos(), e.appending = !1;
                                                var i = e.parent, s = e.segments.reduce(function (t, e) {
                                                        return e.parent === i ? t + 1 : t;
                                                    }, 0), n = {}, r = e.sourceBuffer;
                                                for (var h in r) {
                                                    var a = r[h];
                                                    if (!a)
                                                        throw Error('handling source buffer update end error: source buffer for ' + h + ' uninitilized and unable to update buffered TimeRanges.');
                                                    n[h] = a.buffered;
                                                }
                                                e.hls.trigger(o.a.BUFFER_APPENDED, {
                                                    parent: i,
                                                    pending: s,
                                                    timeRanges: n
                                                }), e.xi || e.doAppending(), e.updateMediaElementDuration(), 0 === s && e.flushLiveBackBuffer();
                                            }, e.Ci = function (t) {
                                                c.b.error('sourceBuffer error:', t), e.hls.trigger(o.a.ERROR, {
                                                    type: h.b.MEDIA_ERROR,
                                                    details: h.a.BUFFER_APPENDING_ERROR,
                                                    fatal: !1
                                                });
                                            }, e.config = i.config, e;
                                        }
                                        e = t, (i = s).prototype = Object.create(e.prototype), i.prototype.constructor = i, i.__proto__ = e;
                                        var n = s.prototype;
                                        return n.destroy = function () {
                                            l.prototype.destroy.call(this);
                                        }, n.onLevelPtsUpdated = function (t) {
                                            var i = t.type, e = this.tracks.audio;
                                            if ('audio' === i && e && 'audio/mpeg' === e.container) {
                                                var s = this.sourceBuffer.audio;
                                                if (!s)
                                                    throw Error('Level PTS Updated and source buffer for audio uninitalized');
                                                if (Math.abs(s.timestampOffset - t.start) > 0.1) {
                                                    var n = s.updating;
                                                    try {
                                                        s.abort();
                                                    } catch (t) {
                                                        c.b.warn('can not abort audio buffer: ' + t);
                                                    }
                                                    n ? this.audioTimestampOffset = t.start : (c.b.warn('change mpeg audio timestamp offset from ' + s.timestampOffset + ' to ' + t.start), s.timestampOffset = t.start);
                                                }
                                            }
                                        }, n.onManifestParsed = function (t) {
                                            this.bufferCodecEventsExpected = this.ji = t.altAudio ? 2 : 1, c.b.log(this.bufferCodecEventsExpected + ' bufferCodec event(s) expected');
                                        }, n.onMediaAttaching = function (t) {
                                            var i = this.media = t.media;
                                            if (i && It) {
                                                var e = this.mediaSource = new It();
                                                e.addEventListener('sourceopen', this.ki), e.addEventListener('sourceended', this.Ai), e.addEventListener('sourceclose', this._i), i.src = window.URL.createObjectURL(e), this.Oi = i.src;
                                            }
                                        }, n.onMediaDetaching = function () {
                                            c.b.log('media source detaching');
                                            var t = this.mediaSource;
                                            if (t) {
                                                if ('open' === t.readyState)
                                                    try {
                                                        t.endOfStream();
                                                    } catch (t) {
                                                        c.b.warn('onMediaDetaching:' + t.message + ' while calling endOfStream');
                                                    }
                                                t.removeEventListener('sourceopen', this.ki), t.removeEventListener('sourceended', this.Ai), t.removeEventListener('sourceclose', this._i), this.media && (this.Oi && this.hls.config.cnxRenderWindow.URL.revokeObjectURL(this.Oi), this.media.src === this.Oi ? (this.media.removeAttribute('src'), this.media.load()) : c.b.warn('media.src was changed by a third party - skip cleanup')), this.mediaSource = null, this.media = null, this.Oi = null, this.bufferCodecEventsExpected = this.ji, this.pendingTracks = {}, this.tracks = {}, this.sourceBuffer = {}, this.flushRange = [], this.segments = [], this.appended = 0;
                                            }
                                            this.hls.trigger(o.a.MEDIA_DETACHED);
                                        }, n.checkPendingTracks = function () {
                                            var t = this.bufferCodecEventsExpected, i = this.pendingTracks, e = Object.keys(i).length;
                                            (e && !t || 2 === e) && (this.createSourceBuffers(i), this.pendingTracks = {}, this.doAppending());
                                        }, n.onBufferReset = function () {
                                            var t = this.sourceBuffer;
                                            for (var i in t) {
                                                var e = t[i];
                                                try {
                                                    e && (this.mediaSource && this.mediaSource.removeSourceBuffer(e), e.removeEventListener('updateend', this.Ii), e.removeEventListener('error', this.Ci));
                                                } catch (t) {
                                                }
                                            }
                                            this.sourceBuffer = {}, this.flushRange = [], this.segments = [], this.appended = 0;
                                        }, n.onBufferCodecs = function (t) {
                                            var i = this;
                                            Object.keys(this.sourceBuffer).length || (Object.keys(t).forEach(function (e) {
                                                i.pendingTracks[e] = t[e];
                                            }), this.bufferCodecEventsExpected = Math.max(this.bufferCodecEventsExpected - 1, 0), this.mediaSource && 'open' === this.mediaSource.readyState && this.checkPendingTracks());
                                        }, n.createSourceBuffers = function (t) {
                                            var i = this.sourceBuffer, e = this.mediaSource;
                                            if (!e)
                                                throw Error('createSourceBuffers called when mediaSource was null');
                                            for (var s in t)
                                                if (!i[s]) {
                                                    var n = t[s];
                                                    if (!n)
                                                        throw Error('source buffer exists for track ' + s + ', however track does not');
                                                    var r = n.levelCodec || n.codec, a = n.container + ';codecs=' + r;
                                                    c.b.log('creating sourceBuffer(' + a + ')');
                                                    try {
                                                        var u = i[s] = e.addSourceBuffer(a);
                                                        u.addEventListener('updateend', this.Ii), u.addEventListener('error', this.Ci), this.tracks[s] = {
                                                            buffer: u,
                                                            codec: r,
                                                            id: n.id,
                                                            container: n.container,
                                                            levelCodec: n.levelCodec
                                                        };
                                                    } catch (t) {
                                                        c.b.error('error while trying to add sourceBuffer:' + t.message), this.hls.trigger(o.a.ERROR, {
                                                            type: h.b.MEDIA_ERROR,
                                                            details: h.a.BUFFER_ADD_CODEC_ERROR,
                                                            fatal: !1,
                                                            err: t,
                                                            mimeType: a
                                                        });
                                                    }
                                                }
                                            this.hls.trigger(o.a.BUFFER_CREATED, { tracks: this.tracks });
                                        }, n.onBufferAppending = function (t) {
                                            this.xi || (this.segments ? this.segments.push(t) : this.segments = [t], this.doAppending());
                                        }, n.onBufferEos = function (t) {
                                            for (var i in this.sourceBuffer)
                                                if (!t.type || t.type === i) {
                                                    var e = this.sourceBuffer[i];
                                                    e && !e.ended && (e.ended = !0, c.b.log(i + ' sourceBuffer now EOS'));
                                                }
                                            this.checkEos();
                                        }, n.checkEos = function () {
                                            var t = this.sourceBuffer, i = this.mediaSource;
                                            if (i && 'open' === i.readyState) {
                                                for (var e in t) {
                                                    var s = t[e];
                                                    if (s) {
                                                        if (!s.ended)
                                                            return;
                                                        if (s.updating)
                                                            return void (this.Si = !0);
                                                    }
                                                }
                                                c.b.log('all media data are available, signal endOfStream() to MediaSource and stop loading fragment');
                                                try {
                                                    i.endOfStream();
                                                } catch (t) {
                                                    c.b.warn('exception while calling mediaSource.endOfStream()');
                                                }
                                                this.Si = !1;
                                            } else
                                                this.Si = !1;
                                        }, n.onBufferFlushing = function (t) {
                                            t.type ? this.flushRange.push({
                                                start: t.startOffset,
                                                end: t.endOffset,
                                                type: t.type
                                            }) : (this.flushRange.push({
                                                start: t.startOffset,
                                                end: t.endOffset,
                                                type: 'video'
                                            }), this.flushRange.push({
                                                start: t.startOffset,
                                                end: t.endOffset,
                                                type: 'audio'
                                            })), this.flushBufferCounter = 0, this.doFlush();
                                        }, n.flushLiveBackBuffer = function () {
                                            if (this.wi) {
                                                var t = this.config.liveBackBufferLength;
                                                if (isFinite(t) && !(t < 0))
                                                    if (this.media)
                                                        for (var i = this.media.currentTime, e = this.sourceBuffer, s = Object.keys(e), n = i - Math.max(t, this.yi), r = s.length - 1; r >= 0; r--) {
                                                            var h = s[r], a = e[h];
                                                            if (a) {
                                                                var u = a.buffered;
                                                                u.length > 0 && n > u.start(0) && this.removeBufferRange(h, a, 0, n) && this.hls.trigger(o.a.LIVE_BACK_BUFFER_REACHED, { bufferEnd: n });
                                                            }
                                                        }
                                                    else
                                                        c.b.error('flushLiveBackBuffer called without attaching media');
                                            }
                                        }, n.onLevelUpdated = function (t) {
                                            var i = t.details;
                                            i.fragments.length > 0 && (this.gi = i.totalduration + i.fragments[0].start, this.yi = i.averagetargetduration || i.targetduration || 10, this.wi = i.live, this.updateMediaElementDuration());
                                        }, n.updateMediaElementDuration = function () {
                                            var t, i = this.config;
                                            if (null !== this.gi && this.media && this.mediaSource && this.sourceBuffer && 0 !== this.media.readyState && 'open' === this.mediaSource.readyState) {
                                                for (var e in this.sourceBuffer) {
                                                    var s = this.sourceBuffer[e];
                                                    if (s && !0 === s.updating)
                                                        return;
                                                }
                                                t = this.media.duration, null === this.mi && (this.mi = this.mediaSource.duration), !0 === this.wi && !0 === i.liveDurationInfinity ? (c.b.log('Media Source duration is set to Infinity'), this.mi = this.mediaSource.duration = 1 / 0) : (this.gi > this.mi && this.gi > t || !Object(a.a)(t)) && (c.b.log('Updating Media Source duration to ' + this.gi.toFixed(3)), this.mi = this.mediaSource.duration = this.gi);
                                            }
                                        }, n.doFlush = function () {
                                            for (; this.flushRange.length;) {
                                                var t = this.flushRange[0];
                                                if (!this.flushBuffer(t.start, t.end, t.type))
                                                    return void (this.xi = !0);
                                                this.flushRange.shift(), this.flushBufferCounter = 0;
                                            }
                                            if (0 === this.flushRange.length) {
                                                this.xi = !1;
                                                var i = 0, e = this.sourceBuffer;
                                                try {
                                                    for (var s in e) {
                                                        var n = e[s];
                                                        n && (i += n.buffered.length);
                                                    }
                                                } catch (t) {
                                                    c.b.error('error while accessing sourceBuffer.buffered');
                                                }
                                                this.appended = i, this.hls.trigger(o.a.BUFFER_FLUSHED);
                                            }
                                        }, n.doAppending = function () {
                                            var t = this.config, i = this.hls, e = this.segments, s = this.sourceBuffer;
                                            if (Object.keys(s).length) {
                                                if (!this.media || this.media.error)
                                                    return this.segments = [], void c.b.error('trying to append although a media error occured, flush segment and abort');
                                                if (!this.appending) {
                                                    var n = e.shift();
                                                    if (n)
                                                        try {
                                                            var r = s[n.type];
                                                            if (!r)
                                                                return void this.Ii();
                                                            if (r.updating)
                                                                return void e.unshift(n);
                                                            r.ended = !1, this.parent = n.parent, r.appendBuffer(n.data), this.appendError = 0, this.appended++, this.appending = !0;
                                                        } catch (s) {
                                                            c.b.error('error while trying to append buffer:' + s.message), e.unshift(n);
                                                            var a = {
                                                                type: h.b.MEDIA_ERROR,
                                                                parent: n.parent,
                                                                details: '',
                                                                fatal: !1
                                                            };
                                                            22 === s.code ? (this.segments = [], a.details = h.a.BUFFER_FULL_ERROR) : (this.appendError++, a.details = h.a.BUFFER_APPEND_ERROR, this.appendError > t.appendErrorMaxRetry && (c.b.log('fail ' + t.appendErrorMaxRetry + ' times to append segment in sourceBuffer'), this.segments = [], a.fatal = !0)), i.trigger(o.a.ERROR, a);
                                                        }
                                                }
                                            }
                                        }, n.flushBuffer = function (t, i, e) {
                                            var s = this.sourceBuffer;
                                            if (!Object.keys(s).length)
                                                return !0;
                                            var n = 'null';
                                            if (this.media && (n = this.media.currentTime.toFixed(3)), c.b.log('flushBuffer,pos/start/end: ' + n + '/' + t + '/' + i), this.flushBufferCounter >= this.appended)
                                                return c.b.warn('abort flushing too many retries'), !0;
                                            var r = s[e];
                                            if (r) {
                                                if (r.ended = !1, r.updating)
                                                    return c.b.warn('cannot flush, sb updating in progress'), !1;
                                                if (this.removeBufferRange(e, r, t, i))
                                                    return this.flushBufferCounter++, !1;
                                            }
                                            return c.b.log('buffer flushed'), !0;
                                        }, n.removeBufferRange = function (t, i, e, s) {
                                            try {
                                                for (var n = 0; n < i.buffered.length; n++) {
                                                    var r = i.buffered.start(n), h = i.buffered.end(n), a = Math.max(r, e), o = Math.min(h, s);
                                                    if (Math.min(o, h) - a > 0.5) {
                                                        var u = 'null';
                                                        return this.media && (u = this.media.currentTime.toString()), c.b.log('sb remove ' + t + ' [' + a + ',' + o + '], of [' + r + ',' + h + '], pos:' + u), i.remove(a, o), !0;
                                                    }
                                                }
                                            } catch (t) {
                                                c.b.warn('removeBufferRange failed', t);
                                            }
                                            return !1;
                                        }, s;
                                    }(l);
                                function Tt(t, i) {
                                    for (var e = 0; e < i.length; e++) {
                                        var s = i[e];
                                        s.enumerable = s.enumerable || !1, s.configurable = !0, 'value' in s && (s.writable = !0), Object.defineProperty(t, s.key, s);
                                    }
                                }
                                var Pt, Mt = function (t) {
                                        var i, e;
                                        function s(i) {
                                            var e;
                                            return (e = t.call(this, i, o.a.FPS_DROP_LEVEL_CAPPING, o.a.MEDIA_ATTACHING, o.a.MANIFEST_PARSED, o.a.BUFFER_CODECS, o.a.MEDIA_DETACHING) || this).autoLevelCapping = Number.POSITIVE_INFINITY, e.firstLevel = null, e.levels = [], e.media = null, e.restrictedLevels = [], e.timer = null, e;
                                        }
                                        e = t, (i = s).prototype = Object.create(e.prototype), i.prototype.constructor = i, i.__proto__ = e;
                                        var n, r, h, a = s.prototype;
                                        return a.destroy = function () {
                                            this.hls.config.capLevelToPlayerSize && (this.media = null, this.stopCapping());
                                        }, a.onFpsDropLevelCapping = function (t) {
                                            s.isLevelAllowed(t.droppedLevel, this.restrictedLevels) && this.restrictedLevels.push(t.droppedLevel);
                                        }, a.onMediaAttaching = function (t) {
                                            this.media = t.media instanceof this.hls.config.cnxRenderWindow.HTMLVideoElement ? t.media : null;
                                        }, a.onManifestParsed = function (t) {
                                            var i = this.hls;
                                            this.restrictedLevels = [], this.levels = t.levels, this.firstLevel = t.firstLevel, i.config.capLevelToPlayerSize && t.video && this.startCapping();
                                        }, a.onBufferCodecs = function (t) {
                                            this.hls.config.capLevelToPlayerSize && t.video && this.startCapping();
                                        }, a.onLevelsUpdated = function (t) {
                                            this.levels = t.levels;
                                        }, a.onMediaDetaching = function () {
                                            this.stopCapping();
                                        }, a.detectPlayerSize = function () {
                                            if (this.media) {
                                                var t = this.levels ? this.levels.length : 0;
                                                if (t) {
                                                    var i = this.hls;
                                                    i.autoLevelCapping = this.getMaxLevel(t - 1), i.autoLevelCapping > this.autoLevelCapping && i.streamController.nextLevelSwitch(), this.autoLevelCapping = i.autoLevelCapping;
                                                }
                                            }
                                        }, a.getMaxLevel = function (t) {
                                            var i = this;
                                            if (!this.levels)
                                                return -1;
                                            var e = this.levels.filter(function (e, n) {
                                                return s.isLevelAllowed(n, i.restrictedLevels) && n <= t;
                                            });
                                            return s.getMaxLevelByMediaSize(e, this.mediaWidth, this.mediaHeight);
                                        }, a.startCapping = function () {
                                            this.timer || (this.autoLevelCapping = Number.POSITIVE_INFINITY, this.hls.firstLevel = this.getMaxLevel(this.firstLevel), clearInterval(this.timer), this.timer = setInterval(this.detectPlayerSize.bind(this), 1000), this.detectPlayerSize());
                                        }, a.stopCapping = function () {
                                            this.restrictedLevels = [], this.firstLevel = null, this.autoLevelCapping = Number.POSITIVE_INFINITY, this.timer && (this.timer = clearInterval(this.timer), this.timer = null);
                                        }, s.isLevelAllowed = function (t, i) {
                                            return void 0 === i && (i = []), -1 === i.indexOf(t);
                                        }, s.getMaxLevelByMediaSize = function (t, i, e) {
                                            if (!t || t && !t.length)
                                                return -1;
                                            for (var s, n, r = t.length - 1, h = 0; h < t.length; h += 1) {
                                                var a = t[h];
                                                if ((a.width >= i || a.height >= e) && (s = a, !(n = t[h + 1]) || s.width !== n.width || s.height !== n.height)) {
                                                    r = h;
                                                    break;
                                                }
                                            }
                                            return r;
                                        }, n = s, h = [{
                                                key: 'contentScaleFactor',
                                                get: function () {
                                                    return 1;
                                                }
                                            }], (r = [
                                            {
                                                key: 'mediaWidth',
                                                get: function () {
                                                    var t, i = this.media;
                                                    return i && (t = i.width || i.clientWidth || i.offsetWidth, t *= s.contentScaleFactor), t;
                                                }
                                            },
                                            {
                                                key: 'mediaHeight',
                                                get: function () {
                                                    var t, i = this.media;
                                                    return i && (t = i.height || i.clientHeight || i.offsetHeight, t *= s.contentScaleFactor), t;
                                                }
                                            }
                                        ]) && Tt(n.prototype, r), h && Tt(n, h), s;
                                    }(l), Et = window.performance, Lt = function (t) {
                                        var i, e;
                                        function s(i) {
                                            return t.call(this, i, o.a.MEDIA_ATTACHING) || this;
                                        }
                                        e = t, (i = s).prototype = Object.create(e.prototype), i.prototype.constructor = i, i.__proto__ = e;
                                        var n = s.prototype;
                                        return n.destroy = function () {
                                            this.timer && clearInterval(this.timer), this.isVideoPlaybackQualityAvailable = !1;
                                        }, n.onMediaAttaching = function (t) {
                                            var i = this.hls.config;
                                            i.capLevelOnFPSDrop && ('function' == typeof (this.video = t.media instanceof this.hls.config.cnxRenderWindow.HTMLVideoElement ? t.media : null).getVideoPlaybackQuality && (this.isVideoPlaybackQualityAvailable = !0), clearInterval(this.timer), this.timer = setInterval(this.checkFPSInterval.bind(this), i.fpsDroppedMonitoringPeriod));
                                        }, n.checkFPS = function (t, i, e) {
                                            var s = Et.now();
                                            if (i) {
                                                if (this.lastTime) {
                                                    var n = s - this.lastTime, r = e - this.lastDroppedFrames, h = i - this.lastDecodedFrames, a = 1000 * r / n, u = this.hls;
                                                    if (u.trigger(o.a.FPS_DROP, {
                                                            currentDropped: r,
                                                            currentDecoded: h,
                                                            totalDroppedFrames: e
                                                        }), a > 0 && r > u.config.fpsDroppedMonitoringThreshold * h) {
                                                        var l = u.currentLevel;
                                                        c.b.warn('drop FPS ratio greater than max allowed value for currentLevel: ' + l), l > 0 && (-1 === u.autoLevelCapping || u.autoLevelCapping >= l) && (l -= 1, u.trigger(o.a.FPS_DROP_LEVEL_CAPPING, {
                                                            level: l,
                                                            droppedLevel: u.currentLevel
                                                        }), u.autoLevelCapping = l, u.streamController.nextLevelSwitch());
                                                    }
                                                }
                                                this.lastTime = s, this.lastDroppedFrames = e, this.lastDecodedFrames = i;
                                            }
                                        }, n.checkFPSInterval = function () {
                                            var t = this.video;
                                            if (t)
                                                if (this.isVideoPlaybackQualityAvailable) {
                                                    var i = t.getVideoPlaybackQuality();
                                                    this.checkFPS(t, i.totalVideoFrames, i.droppedVideoFrames);
                                                } else
                                                    this.checkFPS(t, t.webkitDecodedFrameCount, t.webkitDroppedFrameCount);
                                        }, s;
                                    }(l), Rt = window, Bt = Rt.performance, Dt = Rt.XMLHttpRequest, Ft = function () {
                                        function t(t) {
                                            t && t.xhrSetup && (this.xhrSetup = t.xhrSetup);
                                        }
                                        var i = t.prototype;
                                        return i.destroy = function () {
                                            this.abort(), this.loader = null;
                                        }, i.abort = function () {
                                            var t = this.loader;
                                            t && 4 !== t.readyState && (this.stats.aborted = !0, t.abort()), window.clearTimeout(this.requestTimeout), this.requestTimeout = null, window.clearTimeout(this.retryTimeout), this.retryTimeout = null;
                                        }, i.load = function (t, i, e) {
                                            this.context = t, this.config = i, this.callbacks = e, this.stats = {
                                                trequest: Bt.now(),
                                                retry: 0
                                            }, this.retryDelay = i.retryDelay, this.loadInternal();
                                        }, i.loadInternal = function () {
                                            var t, i = this.context;
                                            t = this.loader = new Dt();
                                            var e = this.stats;
                                            e.tfirst = 0, e.loaded = 0;
                                            var s = this.xhrSetup;
                                            try {
                                                if (s)
                                                    try {
                                                        s(t, i.url);
                                                    } catch (e) {
                                                        t.open('GET', i.url, !0), s(t, i.url);
                                                    }
                                                t.readyState || t.open('GET', i.url, !0);
                                            } catch (e) {
                                                return void this.callbacks.onError({
                                                    code: t.status,
                                                    text: e.message
                                                }, i, t);
                                            }
                                            i.rangeEnd && t.setRequestHeader('Range', 'bytes=' + i.rangeStart + '-' + (i.rangeEnd - 1)), t.onreadystatechange = this.readystatechange.bind(this), t.onprogress = this.loadprogress.bind(this), t.responseType = i.responseType, this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), this.config.timeout), t.send();
                                        }, i.readystatechange = function (t) {
                                            var i = t.currentTarget, e = i.readyState, s = this.stats, n = this.context, r = this.config;
                                            if (!s.aborted && e >= 2)
                                                if (window.clearTimeout(this.requestTimeout), 0 === s.tfirst && (s.tfirst = Math.max(Bt.now(), s.trequest)), 4 === e) {
                                                    var h = i.status;
                                                    if (h >= 200 && h < 300) {
                                                        var a, o;
                                                        s.tload = Math.max(s.tfirst, Bt.now()), o = 'arraybuffer' === n.responseType ? (a = i.response).byteLength : (a = i.responseText).length, s.loaded = s.total = o;
                                                        var u = {
                                                            url: i.responseURL,
                                                            data: a
                                                        };
                                                        this.callbacks.onSuccess(u, s, n, i);
                                                    } else
                                                        s.retry >= r.maxRetry || h >= 400 && h < 499 ? (c.b.error(h + ' while loading ' + n.url), this.callbacks.onError({
                                                            code: h,
                                                            text: i.statusText
                                                        }, n, i)) : (c.b.warn(h + ' while loading ' + n.url + ', retrying in ' + this.retryDelay + '...'), this.destroy(), this.retryTimeout = window.setTimeout(this.loadInternal.bind(this), this.retryDelay), this.retryDelay = Math.min(2 * this.retryDelay, r.maxRetryDelay), s.retry++);
                                                } else
                                                    this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), r.timeout);
                                        }, i.loadtimeout = function () {
                                            c.b.warn('timeout while loading ' + this.context.url), this.callbacks.onTimeout(this.stats, this.context, null);
                                        }, i.loadprogress = function (t) {
                                            var i = t.currentTarget, e = this.stats;
                                            e.loaded = t.loaded, t.lengthComputable && (e.total = t.total);
                                            var s = this.callbacks.onProgress;
                                            s && s(e, this.context, null, i);
                                        }, t;
                                    }();
                                e(6), function (t) {
                                    t.WIDEVINE = 'com.widevine.alpha', t.PLAYREADY = 'com.microsoft.playready';
                                }(Pt || (Pt = {}));
                                var Vt = function () {
                                    var t = window.cnxRenderWindow;
                                    return void 0 !== t && t.navigator && t.navigator.requestMediaKeySystemAccess ? t.navigator.requestMediaKeySystemAccess.bind(t.navigator) : null;
                                }();
                                function Ut(t, i, e) {
                                    return i in t ? Object.defineProperty(t, i, {
                                        value: e,
                                        enumerable: !0,
                                        configurable: !0,
                                        writable: !0
                                    }) : t[i] = e, t;
                                }
                                var $t = function (t) {
                                    for (var i = 1; i < arguments.length; i++) {
                                        var e = null != arguments[i] ? arguments[i] : {}, s = Object.keys(e);
                                        'function' == typeof Object.getOwnPropertySymbols && (s = s.concat(Object.getOwnPropertySymbols(e).filter(function (t) {
                                            return Object.getOwnPropertyDescriptor(e, t).enumerable;
                                        }))), s.forEach(function (i) {
                                            Ut(t, i, e[i]);
                                        });
                                    }
                                    return t;
                                }({
                                    cnxRenderWindow: window,
                                    autoStartLoad: !0,
                                    startPosition: -1,
                                    defaultAudioCodec: void 0,
                                    debug: !1,
                                    capLevelOnFPSDrop: !1,
                                    capLevelToPlayerSize: !1,
                                    initialLiveManifestSize: 1,
                                    maxBufferLength: 30,
                                    maxBufferSize: 60000000,
                                    maxBufferHole: 0.5,
                                    lowBufferWatchdogPeriod: 0.5,
                                    highBufferWatchdogPeriod: 3,
                                    nudgeOffset: 0.1,
                                    nudgeMaxRetry: 3,
                                    maxFragLookUpTolerance: 0.25,
                                    liveSyncDurationCount: 3,
                                    liveMaxLatencyDurationCount: 1 / 0,
                                    liveSyncDuration: void 0,
                                    liveMaxLatencyDuration: void 0,
                                    liveDurationInfinity: !1,
                                    liveBackBufferLength: 1 / 0,
                                    maxMaxBufferLength: 600,
                                    enableWorker: !0,
                                    enableSoftwareAES: !0,
                                    manifestLoadingTimeOut: 10000,
                                    manifestLoadingMaxRetry: 1,
                                    manifestLoadingRetryDelay: 1000,
                                    manifestLoadingMaxRetryTimeout: 64000,
                                    startLevel: void 0,
                                    levelLoadingTimeOut: 10000,
                                    levelLoadingMaxRetry: 4,
                                    levelLoadingRetryDelay: 1000,
                                    levelLoadingMaxRetryTimeout: 64000,
                                    fragLoadingTimeOut: 20000,
                                    fragLoadingMaxRetry: 6,
                                    fragLoadingRetryDelay: 1000,
                                    fragLoadingMaxRetryTimeout: 64000,
                                    startFragPrefetch: !1,
                                    fpsDroppedMonitoringPeriod: 5000,
                                    fpsDroppedMonitoringThreshold: 0.2,
                                    appendErrorMaxRetry: 3,
                                    loader: Ft,
                                    fLoader: void 0,
                                    pLoader: void 0,
                                    xhrSetup: void 0,
                                    licenseXhrSetup: void 0,
                                    abrController: At,
                                    bufferController: Ct,
                                    capLevelController: Mt,
                                    fpsController: Lt,
                                    stretchShortVideoTrack: !1,
                                    maxAudioFramesDrift: 1,
                                    forceKeyFrameOnDiscontinuity: !0,
                                    abrEwmaFastLive: 3,
                                    abrEwmaSlowLive: 9,
                                    abrEwmaFastVoD: 3,
                                    abrEwmaSlowVoD: 9,
                                    abrEwmaDefaultEstimate: 500000,
                                    abrBandWidthFactor: 0.95,
                                    abrBandWidthUpFactor: 0.7,
                                    abrMaxWithRealBitrate: !1,
                                    maxStarvationDelay: 4,
                                    maxLoadingDelay: 4,
                                    minAutoBitrate: 0,
                                    emeEnabled: !1,
                                    widevineLicenseUrl: void 0,
                                    requestMediaKeySystemAccessFunc: Vt
                                }, {}, {
                                    subtitleStreamController: void 0,
                                    subtitleTrackController: void 0,
                                    timelineController: void 0,
                                    audioStreamController: void 0,
                                    audioTrackController: void 0,
                                    emeController: void 0
                                });
                                function Nt(t, i, e) {
                                    return i in t ? Object.defineProperty(t, i, {
                                        value: e,
                                        enumerable: !0,
                                        configurable: !0,
                                        writable: !0
                                    }) : t[i] = e, t;
                                }
                                function Ht(t) {
                                    if (void 0 === t)
                                        throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
                                    return t;
                                }
                                function qt(t, i) {
                                    for (var e = 0; e < i.length; e++) {
                                        var s = i[e];
                                        s.enumerable = s.enumerable || !1, s.configurable = !0, 'value' in s && (s.writable = !0), Object.defineProperty(t, s.key, s);
                                    }
                                }
                                function zt(t, i, e) {
                                    return i && qt(t.prototype, i), e && qt(t, e), t;
                                }
                                e.d(i, 'default', function () {
                                    return Wt;
                                });
                                var Wt = function (t) {
                                    var i, e;
                                    function s(i) {
                                        var e;
                                        void 0 === i && (i = {}), (e = t.call(this) || this).config = void 0, e.Ti = void 0, e.abrController = void 0, e.capLevelController = void 0, e.levelController = void 0, e.streamController = void 0, e.networkControllers = void 0, e.audioTrackController = void 0, e.subtitleTrackController = void 0, e.emeController = void 0, e.coreComponents = void 0, e.media = null, e.url = null;
                                        var n = s.DefaultConfig;
                                        if ((i.liveSyncDurationCount || i.liveMaxLatencyDurationCount) && (i.liveSyncDuration || i.liveMaxLatencyDuration))
                                            throw new Error('Illegal hls.js config: don\'t mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration');
                                        e.config = function (t) {
                                            for (var i = 1; i < arguments.length; i++) {
                                                var e = null != arguments[i] ? arguments[i] : {}, s = Object.keys(e);
                                                'function' == typeof Object.getOwnPropertySymbols && (s = s.concat(Object.getOwnPropertySymbols(e).filter(function (t) {
                                                    return Object.getOwnPropertyDescriptor(e, t).enumerable;
                                                }))), s.forEach(function (i) {
                                                    Nt(t, i, e[i]);
                                                });
                                            }
                                            return t;
                                        }({}, n, i), window.cnxRenderWindow = e.config.cnxRenderWindow;
                                        var r = Ht(e).config;
                                        if (void 0 !== r.liveMaxLatencyDurationCount && r.liveMaxLatencyDurationCount <= r.liveSyncDurationCount)
                                            throw new Error('Illegal hls.js config: "liveMaxLatencyDurationCount" must be gt "liveSyncDurationCount"');
                                        if (void 0 !== r.liveMaxLatencyDuration && (void 0 === r.liveSyncDuration || r.liveMaxLatencyDuration <= r.liveSyncDuration))
                                            throw new Error('Illegal hls.js config: "liveMaxLatencyDuration" must be gt "liveSyncDuration"');
                                        Object(c.a)(r.debug), e.Ti = -1;
                                        var h = e.abrController = new r.abrController(Ht(e)), a = new r.bufferController(Ht(e)), o = e.capLevelController = new r.capLevelController(Ht(e)), u = new r.fpsController(Ht(e)), l = new E(Ht(e)), d = new L(Ht(e)), f = new R(Ht(e)), p = new xt(Ht(e)), b = e.levelController = new yt(Ht(e)), v = new V(Ht(e)), m = [
                                                b,
                                                e.streamController = new vt(Ht(e), v)
                                            ], g = r.audioStreamController;
                                        g && m.push(new g(Ht(e), v)), e.networkControllers = m;
                                        var y = [
                                            l,
                                            d,
                                            f,
                                            h,
                                            a,
                                            o,
                                            u,
                                            p,
                                            v
                                        ];
                                        if (g = r.audioTrackController) {
                                            var w = new g(Ht(e));
                                            e.audioTrackController = w, y.push(w);
                                        }
                                        if (g = r.subtitleTrackController) {
                                            var O = new g(Ht(e));
                                            e.subtitleTrackController = O, m.push(O);
                                        }
                                        if (g = r.emeController) {
                                            var x = new g(Ht(e));
                                            e.emeController = x, y.push(x);
                                        }
                                        return (g = r.subtitleStreamController) && m.push(new g(Ht(e), v)), (g = r.timelineController) && y.push(new g(Ht(e))), e.coreComponents = y, e;
                                    }
                                    e = t, (i = s).prototype = Object.create(e.prototype), i.prototype.constructor = i, i.__proto__ = e, s.isSupported = function () {
                                        return function () {
                                            var t = z();
                                            if (!t)
                                                return !1;
                                            var i = self.SourceBuffer || self.WebKitSourceBuffer, e = t && 'function' == typeof t.isTypeSupported && t.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"'), s = !i || i.prototype && 'function' == typeof i.prototype.appendBuffer && 'function' == typeof i.prototype.remove;
                                            return !!e && !!s;
                                        }();
                                    }, zt(s, null, [
                                        {
                                            key: 'version',
                                            get: function () {
                                            }
                                        },
                                        {
                                            key: 'Events',
                                            get: function () {
                                                return o.a;
                                            }
                                        },
                                        {
                                            key: 'ErrorTypes',
                                            get: function () {
                                                return h.b;
                                            }
                                        },
                                        {
                                            key: 'ErrorDetails',
                                            get: function () {
                                                return h.a;
                                            }
                                        },
                                        {
                                            key: 'DefaultConfig',
                                            get: function () {
                                                return s.defaultConfig ? s.defaultConfig : $t;
                                            },
                                            set: function (t) {
                                                s.defaultConfig = t;
                                            }
                                        }
                                    ]);
                                    var n = s.prototype;
                                    return n.destroy = function () {
                                        c.b.log('destroy'), this.trigger(o.a.DESTROYING), this.detachMedia(), this.coreComponents.concat(this.networkControllers).forEach(function (t) {
                                            t.destroy();
                                        }), this.url = null, this.removeAllListeners(), this.Ti = -1;
                                    }, n.attachMedia = function (t) {
                                        c.b.log('attachMedia'), this.media = t, this.trigger(o.a.MEDIA_ATTACHING, { media: t });
                                    }, n.detachMedia = function () {
                                        c.b.log('detachMedia'), this.trigger(o.a.MEDIA_DETACHING), this.media = null;
                                    }, n.loadSource = function (t) {
                                        t = r.buildAbsoluteURL(this.config.cnxRenderWindow.location.href, t, { alwaysNormalize: !0 }), c.b.log('loadSource:' + t), this.url = t, this.trigger(o.a.MANIFEST_LOADING, { url: t });
                                    }, n.startLoad = function (t) {
                                        void 0 === t && (t = -1), c.b.log('startLoad(' + t + ')'), this.networkControllers.forEach(function (i) {
                                            i.startLoad(t);
                                        });
                                    }, n.stopLoad = function () {
                                        c.b.log('stopLoad'), this.networkControllers.forEach(function (t) {
                                            t.stopLoad();
                                        });
                                    }, n.swapAudioCodec = function () {
                                        c.b.log('swapAudioCodec'), this.streamController.swapAudioCodec();
                                    }, n.recoverMediaError = function () {
                                        c.b.log('recoverMediaError');
                                        var t = this.media;
                                        this.detachMedia(), t && this.attachMedia(t);
                                    }, zt(s, [
                                        {
                                            key: 'levels',
                                            get: function () {
                                                return this.levelController.levels;
                                            }
                                        },
                                        {
                                            key: 'currentLevel',
                                            get: function () {
                                                return this.streamController.currentLevel;
                                            },
                                            set: function (t) {
                                                c.b.log('set currentLevel:' + t), this.loadLevel = t, this.streamController.immediateLevelSwitch();
                                            }
                                        },
                                        {
                                            key: 'nextLevel',
                                            get: function () {
                                                return this.streamController.nextLevel;
                                            },
                                            set: function (t) {
                                                c.b.log('set nextLevel:' + t), this.levelController.manualLevel = t, this.streamController.nextLevelSwitch();
                                            }
                                        },
                                        {
                                            key: 'loadLevel',
                                            get: function () {
                                                return this.levelController.level;
                                            },
                                            set: function (t) {
                                                c.b.log('set loadLevel:' + t), this.levelController.manualLevel = t;
                                            }
                                        },
                                        {
                                            key: 'nextLoadLevel',
                                            get: function () {
                                                return this.levelController.nextLoadLevel;
                                            },
                                            set: function (t) {
                                                this.levelController.nextLoadLevel = t;
                                            }
                                        },
                                        {
                                            key: 'firstLevel',
                                            get: function () {
                                                return Math.max(this.levelController.firstLevel, this.minAutoLevel);
                                            },
                                            set: function (t) {
                                                c.b.log('set firstLevel:' + t), this.levelController.firstLevel = t;
                                            }
                                        },
                                        {
                                            key: 'startLevel',
                                            get: function () {
                                                return this.levelController.startLevel;
                                            },
                                            set: function (t) {
                                                c.b.log('set startLevel:' + t), -1 !== t && (t = Math.max(t, this.minAutoLevel)), this.levelController.startLevel = t;
                                            }
                                        },
                                        {
                                            key: 'capLevelToPlayerSize',
                                            set: function (t) {
                                                var i = !!t;
                                                i !== this.config.capLevelToPlayerSize && (i ? this.capLevelController.startCapping() : (this.capLevelController.stopCapping(), this.autoLevelCapping = -1, this.streamController.nextLevelSwitch()), this.config.capLevelToPlayerSize = i);
                                            }
                                        },
                                        {
                                            key: 'autoLevelCapping',
                                            get: function () {
                                                return this.Ti;
                                            },
                                            set: function (t) {
                                                c.b.log('set autoLevelCapping:' + t), this.Ti = t;
                                            }
                                        },
                                        {
                                            key: 'bandwidthEstimate',
                                            get: function () {
                                                var t = this.abrController.bwEstimator;
                                                return t ? t.getEstimate() : NaN;
                                            }
                                        },
                                        {
                                            key: 'autoLevelEnabled',
                                            get: function () {
                                                return -1 === this.levelController.manualLevel;
                                            }
                                        },
                                        {
                                            key: 'manualLevel',
                                            get: function () {
                                                return this.levelController.manualLevel;
                                            }
                                        },
                                        {
                                            key: 'minAutoLevel',
                                            get: function () {
                                                for (var t = this.levels, i = this.config.minAutoBitrate, e = t ? t.length : 0, s = 0; s < e; s++)
                                                    if ((t[s].realBitrate ? Math.max(t[s].realBitrate, t[s].bitrate) : t[s].bitrate) > i)
                                                        return s;
                                                return 0;
                                            }
                                        },
                                        {
                                            key: 'maxAutoLevel',
                                            get: function () {
                                                var t = this.levels, i = this.autoLevelCapping;
                                                return -1 === i && t && t.length ? t.length - 1 : i;
                                            }
                                        },
                                        {
                                            key: 'nextAutoLevel',
                                            get: function () {
                                                return Math.min(Math.max(this.abrController.nextAutoLevel, this.minAutoLevel), this.maxAutoLevel);
                                            },
                                            set: function (t) {
                                                this.abrController.nextAutoLevel = Math.max(this.minAutoLevel, t);
                                            }
                                        },
                                        {
                                            key: 'audioTracks',
                                            get: function () {
                                                var t = this.audioTrackController;
                                                return t ? t.audioTracks : [];
                                            }
                                        },
                                        {
                                            key: 'audioTrack',
                                            get: function () {
                                                var t = this.audioTrackController;
                                                return t ? t.audioTrack : -1;
                                            },
                                            set: function (t) {
                                                var i = this.audioTrackController;
                                                i && (i.audioTrack = t);
                                            }
                                        },
                                        {
                                            key: 'liveSyncPosition',
                                            get: function () {
                                                return this.streamController.liveSyncPosition;
                                            }
                                        },
                                        {
                                            key: 'subtitleTracks',
                                            get: function () {
                                                var t = this.subtitleTrackController;
                                                return t ? t.subtitleTracks : [];
                                            }
                                        },
                                        {
                                            key: 'subtitleTrack',
                                            get: function () {
                                                var t = this.subtitleTrackController;
                                                return t ? t.subtitleTrack : -1;
                                            },
                                            set: function (t) {
                                                var i = this.subtitleTrackController;
                                                i && (i.subtitleTrack = t);
                                            }
                                        },
                                        {
                                            key: 'subtitleDisplay',
                                            get: function () {
                                                var t = this.subtitleTrackController;
                                                return !!t && t.subtitleDisplay;
                                            },
                                            set: function (t) {
                                                var i = this.subtitleTrackController;
                                                i && (i.subtitleDisplay = t);
                                            }
                                        }
                                    ]), s;
                                }(G);
                                Wt.defaultConfig = void 0;
                            }.apply(this, arguments);
                        } finally {
                            if ($___old_f7a60a143d7416d2)
                                ({}.constructor.defineProperty(window, 'XMLHttpRequest', $___old_f7a60a143d7416d2));
                        }
                    }
                ]).default);
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return n;
                }), e.d(i, 'b', function () {
                    return r;
                });
                var s = e(0);
                const n = [
                    s.ProtoDeviceType.Smartphone,
                    s.ProtoDeviceType.Tablet
                ];
                var r;
                !function (t) {
                    t.Ios = 'ios', t.Android = 'android', t.Mac = 'macos', t.Windows = 'windows', t.Linux = 'linux';
                }(r || (r = {}));
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'b', function () {
                    return r;
                }), e.d(i, 'e', function () {
                    return h;
                }), e.d(i, 'c', function () {
                    return a;
                }), e.d(i, 'a', function () {
                    return o;
                }), e.d(i, 'd', function () {
                    return u;
                });
                var s = e(1);
                const n = '.cdn.ampproject.org';
                function r(t, i) {
                    i || (i = location.search), t = t.replace(/\[/, '\\[').replace(/]/, '\\]');
                    const e = new RegExp(`[\\?&]${ t }=([^&#]*)`, 'i').exec(i);
                    return null === e ? null : decodeURIComponent(e[1]);
                }
                function h(t, i, e) {
                    const s = new RegExp(`([?&])${ i }=.*?(&|$)`, 'i'), n = -1 !== t.indexOf('?') ? '&' : '?';
                    return t.match(s) ? e ? t.replace(s, `$1${ i }=${ e }$2`) : t.replace(s, '$1') : `${ t }${ n }${ i }=${ e }`;
                }
                function a(t) {
                    return t.indexOf('?') > -1 ? '&' : '?';
                }
                function o(t) {
                    if (Object(s.h)(t))
                        return t.indexOf('://') > -1 ? t.split('/')[2] : t.split('/')[0];
                }
                function c(t, i) {
                    return `${ 'http' + (/(\/s\/)+/.test(t.replace(i, '')) ? 's' : '') }://${ i }`;
                }
                function u(t, i = (() => {
                    return !0;
                })()) {
                    return t = function (t) {
                        return -1 === t.indexOf(n) ? t : (t = (t = (t = (t = (t = (t = (t = t.replace(n, '')).replace('www-', 'www.')).replace('amp-', 'amp.')).cnx_replaceAll('--', '=')).cnx_replaceAll('-', '.')).cnx_replaceAll('=', '-')).replace('www.', 'amp.')).indexOf('amp.') > -1 ? t : t = (t = t.replace('http://', 'http://amp.')).replace('https://', 'https://amp.');
                    }(t = function (t) {
                        const i = /^https:\/\/www.google\..*?\/amp\/s*\/*/.exec(t);
                        if (null !== i) {
                            const e = t.replace(i[0], '');
                            return c(t, e);
                        }
                        return t;
                    }(t = function (t) {
                        if (t.indexOf(n) > -1) {
                            t = t.replace('https://', '');
                            const i = /^[^\/]+(\/[a-z]+\/)+s*\/*/, e = i.test(t) ? t.replace(i.exec(t)[0], '') : t;
                            return c(t, e);
                        }
                        return t;
                    }(t))), i && (t = function (t) {
                        if (-1 === t.indexOf('#origin-') && -1 === t.indexOf('viewerUrl-'))
                            return t;
                        const i = t.split('#origin-')[1].split('viewerUrl-');
                        return u(t = decodeURIComponent(i[1]), !1);
                    }(t)), t;
                }
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return n;
                });
                var s = e(6);
                class n {
                    constructor() {
                        this.Pi = {};
                    }
                    subscribe(t, i, e) {
                        this.Pi[t] || (this.Pi[t] = []), this.Pi[t].push({
                            context: i,
                            func: e
                        });
                    }
                    unsubscribe(t, i, e) {
                        this.Pi[t] && (this.Pi[t] = this.Pi[t].filter(t => {
                            return !(t.context === i && (t.func === e || !e));
                        }));
                    }
                    unsubscribeAll(t) {
                        Object.keys(this.Pi).forEach(i => {
                            this.Pi[i] = this.Pi[i].filter(i => {
                                return i.context !== t;
                            });
                        });
                    }
                    publish(t, i, e = (() => {
                        return { payload: void 0 };
                    })()) {
                        Object.prototype.hasOwnProperty.call(this.Pi, i) && this.Pi[i].forEach(i => {
                            i.context === t && i.func(e);
                        });
                    }
                    relay(t, i, e, n) {
                        Object(s.m)(t).forEach(t => {
                            this.subscribe(t, i, i => {
                                n.publish(e, t, i);
                            });
                        });
                    }
                    relayBulk(t, i, e) {
                        t.forEach(t => {
                            this.relay(t.channel, t.source, i, e);
                        });
                    }
                }
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return s;
                }), e.d(i, 'b', function () {
                    return n;
                });
                const s = JSON.parse('{"version":124898,"domainPrefix":"","logToConsole":false,"logToServer":true,"env":"production"}'), n = !0;
            },
            function (t, i, e) {
                'use strict';
                var s;
                e.d(i, 'a', function () {
                    return s;
                }), function (t) {
                    t[t.CmpApi = 0] = 'CmpApi', t[t.TcfApi = 1] = 'TcfApi';
                }(s || (s = {}));
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return s;
                });
                var s, n = e(5), r = e(0), h = e(8), a = e(1), o = e(19);
                !function (t) {
                    const i = 30000;
                    function e(t, e) {
                        const s = function ({
                                requestUrl: t,
                                requestType: e = 'POST',
                                contentType: s = '',
                                responseType: n = '',
                                withCredentials: r = !1
                            }) {
                                const h = new XMLHttpRequest();
                                return h.open(e, t, !0), s.length > 0 && h.setRequestHeader('Content-Type', s), n.length > 0 && (h.responseType = n), h.timeout = i, h.withCredentials = r, h;
                            }(t), n = new Date();
                        return new Promise((t, i) => {
                            s.onreadystatechange = () => {
                                if (s.readyState === XMLHttpRequest.DONE)
                                    if (200 === s.status)
                                        t(s.response);
                                    else {
                                        let t = '';
                                        try {
                                            t = s.responseText;
                                        } catch (t) {
                                        }
                                        const e = new Date().getTime() - n.getTime();
                                        i(new Error(`Request fail. status:${ s.status }, readyState:${ s.readyState }, response:${ t }, time:${ e }`));
                                    }
                            }, s.ontimeout = () => {
                                const t = new Date().getTime() - n.getTime();
                                i(new Error(`Request timeout status:${ s.status }. time:${ t }`));
                            }, s.send(e);
                        });
                    }
                    function s(t, i, e) {
                        try {
                            const s = Object(h.k)([
                                95,
                                5
                            ]);
                            !s || i && 0 !== Object.keys(i).length || Object(n.a)({
                                message: 'empty_proto_request',
                                callStack: 'empty_function_argument',
                                exception: e,
                                level: r.ProtoLoggingLevelEnum.INFO,
                                sendMaxLog: !1
                            });
                            const a = t.fromObject(i);
                            !s || a && 0 !== Object.keys(a).length || Object(n.a)({
                                message: 'empty_proto_request',
                                callStack: 'empty_fromObject_result',
                                exception: e,
                                level: r.ProtoLoggingLevelEnum.INFO,
                                sendMaxLog: !1
                            });
                            const o = t.encode(a).finish();
                            return !s || o && 0 !== Object.keys(o).length || Object(n.a)({
                                message: 'empty_proto_request',
                                callStack: 'empty_encode_result',
                                exception: e,
                                level: r.ProtoLoggingLevelEnum.INFO,
                                sendMaxLog: !1
                            }), o;
                        } catch (t) {
                            throw Object(n.a)({
                                throttle: 10,
                                sendMaxLog: !0,
                                exception: e,
                                level: r.ProtoLoggingLevelEnum.FATAL,
                                callStack: JSON.stringify(i),
                                message: 'Protobuf_encode'
                            }), Error();
                        }
                    }
                    function c(t, i, s = (() => {
                        return 'POST';
                    })(), h, a) {
                        return function (t, i, e) {
                            return new Promise((s, h) => {
                                i.then(i => {
                                    if (t) {
                                        let a = null;
                                        try {
                                            const s = i ? new Uint8Array(i) : new Uint8Array();
                                            a = t.toObject(t.decode(s), {
                                                defaults: !0,
                                                arrays: !0,
                                                objects: !0
                                            });
                                        } catch (t) {
                                            Object(n.a)({
                                                exception: `${ e }__${ t.message }`,
                                                message: 'Protobuf_decode',
                                                callStack: t.stack,
                                                level: r.ProtoLoggingLevelEnum.WARNING,
                                                sendMaxLog: !0,
                                                throttle: 100
                                            });
                                        }
                                        a && a.errorMessage && '500' === a.errorMessage && h(a.errorMessage), s(a);
                                    }
                                }).catch(t => {
                                    h(t);
                                });
                            });
                        }(t, e({
                            requestUrl: i,
                            requestType: s,
                            withCredentials: a,
                            contentType: 'POST' === s ? 'multipart/form-data' : '',
                            responseType: 'arraybuffer'
                        }, h), i);
                    }
                    t.fetchXMLRequest = function (t, i = (() => {
                        return !0;
                    })()) {
                        const s = e({
                            requestUrl: t,
                            requestType: 'GET',
                            withCredentials: i
                        });
                        return new Promise((t, i) => {
                            s.then(i => {
                                t(i);
                            }).catch(t => {
                                i(t);
                            });
                        });
                    }, t.sendProtoRequest = function ({
                        ProtoResponse: t,
                        ProtoRequest: i,
                        requestData: e,
                        endpoint: u,
                        requestType: l,
                        withCredentials: d,
                        queryParams: f,
                        logError: p
                    }) {
                        const b = e ? s(i, e, u) : null;
                        return c(t, u = function (t, i) {
                            return Object(a.f)(i) ? (Object.keys(i).forEach(e => {
                                return t = Object(o.e)(t, e, i[e]);
                            }), t) : t;
                        }(u, f), l, b, d).catch(t => {
                            throw p && Object(h.k)([
                                95,
                                5
                            ]) && Object(n.a)({
                                message: 'Xhr_error',
                                exception: u,
                                callStack: `${ t }`,
                                level: r.ProtoLoggingLevelEnum.INFO
                            }), new Error(t);
                        });
                    }, t.sendProtoBeaconRequest = function ({
                        ProtoRequest: t,
                        requestData: i,
                        endpoint: e
                    }) {
                        const n = i ? s(t, i, e) : null;
                        return navigator.sendBeacon(e, n);
                    }, t.trackPixel = function (t) {
                        try {
                            new Image().src = t;
                        } catch (t) {
                            Object(n.a)({
                                message: 'Xhr_trackPixel',
                                exception: t.message,
                                callStack: t.stack,
                                level: r.ProtoLoggingLevelEnum.FATAL
                            });
                        }
                    };
                }(s || (s = {}));
            },
            function (t, i, e) {
                'use strict';
                var s, n;
                e.d(i, 'a', function () {
                    return s;
                }), e.d(i, 'd', function () {
                    return n;
                }), e.d(i, 'b', function () {
                    return r;
                }), e.d(i, 'c', function () {
                    return h;
                }), function (t) {
                    t.Chrome = 'chrome', t.Firefox = 'firefox', t.Edge = 'edge', t.Safari = 'safari', t.Opera = 'opera', t.Samsung = 'samsung', t.Facebook = 'facebook', t.InternetExplorer = 'ie';
                }(s || (s = {})), function (t) {
                    t.Standard = 'standard', t.Webkit = 'webkit', t.Moz = 'moz', t.Ms = 'ms', t.O = 'o';
                }(n || (n = {}));
                const r = [
                    {
                        name: n.Standard,
                        keys: {
                            fullscreenEnabled: 'fullscreenEnabled',
                            fullscreenElement: 'fullscreenElement',
                            requestFullscreen: 'requestFullscreen',
                            exitFullscreen: 'exitFullscreen',
                            fullscreenchange: 'fullscreenchange',
                            fullscreenerror: 'fullscreenerror'
                        }
                    },
                    {
                        name: n.Webkit,
                        keys: {
                            fullscreenEnabled: 'webkitFullscreenEnabled',
                            fullscreenElement: 'webkitFullscreenElement',
                            requestFullscreen: 'webkitRequestFullscreen',
                            exitFullscreen: 'webkitExitFullscreen',
                            fullscreenchange: 'webkitfullscreenchange',
                            fullscreenerror: 'webkitfullscreenerror'
                        }
                    },
                    {
                        name: n.Webkit,
                        keys: {
                            fullscreenEnabled: 'webkitSupportsFullscreen',
                            fullscreenElement: 'webkitFullscreenElement',
                            requestFullscreen: 'webkitEnterFullscreen',
                            exitFullscreen: 'webkitExitFullscreen',
                            fullscreenchange: 'webkitfullscreenchange',
                            fullscreenerror: 'webkitfullscreenerror'
                        }
                    },
                    {
                        name: n.Moz,
                        keys: {
                            fullscreenEnabled: 'mozFullScreenEnabled',
                            fullscreenElement: 'mozFullScreenElement',
                            requestFullscreen: 'mozRequestFullScreen',
                            exitFullscreen: 'mozCancelFullScreen',
                            fullscreenchange: 'mozfullscreenchange',
                            fullscreenerror: 'mozfullscreenerror'
                        }
                    },
                    {
                        name: n.Ms,
                        keys: {
                            fullscreenEnabled: 'msFullscreenEnabled',
                            fullscreenElement: 'msFullscreenElement',
                            requestFullscreen: 'msRequestFullscreen',
                            exitFullscreen: 'msExitFullscreen',
                            fullscreenchange: 'MSFullscreenChange',
                            fullscreenerror: 'MSFullscreenError'
                        }
                    }
                ];
                var h;
                !function (t) {
                    t.Self = '_self', t.Blank = '_blank', t.Parent = '_parent', t.Top = '_top';
                }(h || (h = {}));
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'j', function () {
                    return s;
                }), e.d(i, 'k', function () {
                    return n;
                }), e.d(i, 'i', function () {
                    return r;
                }), e.d(i, 'd', function () {
                    return h;
                }), e.d(i, 'g', function () {
                    return a;
                }), e.d(i, 'h', function () {
                    return o;
                }), e.d(i, 'b', function () {
                    return c;
                }), e.d(i, 'f', function () {
                    return u;
                }), e.d(i, 'c', function () {
                    return l;
                }), e.d(i, 'e', function () {
                    return d;
                }), e.d(i, 'a', function () {
                    return f;
                });
                const s = '1.3.13-iab2343', n = '1.3.13-iab2343', r = 'Connatix';
                var h, a, o, c, u, l, d, f;
                !function (t) {
                    t.Generic = 'generic', t.Video = 'video';
                }(h || (h = {})), function (t) {
                    t.Click = 'click', t.InvitationAccept = 'invitationAccept';
                }(a || (a = {})), function (t) {
                    t.PreRoll = 'preroll', t.MidRoll = 'midroll', t.PostRoll = 'postroll', t.Standalone = 'standalone';
                }(o || (o = {})), function (t) {
                    t.SessionStart = 'sessionStart', t.SessionError = 'sessionError', t.SessionFinish = 'sessionFinish';
                }(c || (c = {})), function (t) {
                    t.DefinedByJavascript = 'definedByJavaScript', t.BeginToRender = 'beginToRender';
                }(u || (u = {})), function (t) {
                    t.DefinedByJavascript = 'definedByJavaScript', t.Video = 'video';
                }(l || (l = {})), function (t) {
                    t.sessionError = 'sessionError', t.geometryChange = 'geometryChange';
                }(d || (d = {})), function (t) {
                    t.backgrounded = 'backgrounded', t.notFound = 'notFound';
                }(f || (f = {}));
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'f', function () {
                    return s;
                }), e.d(i, 'g', function () {
                    return n;
                }), e.d(i, 'h', function () {
                    return r;
                }), e.d(i, 'd', function () {
                    return h;
                }), e.d(i, 'b', function () {
                    return a;
                }), e.d(i, 'a', function () {
                    return o;
                }), e.d(i, 'e', function () {
                    return c;
                }), e.d(i, 'c', function () {
                    return u;
                });
                const s = 200, n = 0.9, r = 1.1, h = 31, a = 2000, o = 1000, c = 0.5, u = 'connatix.com';
            },
            ,
            function (t, i, e) {
                'use strict';
                var s;
                e.d(i, 'c', function () {
                    return s;
                }), e.d(i, 'a', function () {
                    return n;
                }), e.d(i, 'b', function () {
                    return r;
                }), function (t) {
                    t.Connatix = '143', t.AppNexus = '32', t.DistrictM = '144', t.IndexExchange = '10', t.Lkqd = '237', t.OneVideo = '25', t.Openx = '69', t.Pubmatic = '76', t.RhythmOne = '36', t.Rubicon = '52', t.Spotx = '165', t.Telaria = '202', t.MediaNet = '142', t.AdMan = '149', t.IronSource = '', t.Undertone = '677', t.SynacorMedia = '', t.AmxRTB = '737', t.Smaato = '82';
                }(s || (s = {}));
                const n = 'cnx_usr_storage', r = ['1YNY'];
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return r;
                }), e.d(i, 'e', function () {
                    return h;
                }), e.d(i, 'b', function () {
                    return a;
                }), e.d(i, 'f', function () {
                    return o;
                }), e.d(i, 'd', function () {
                    return c;
                }), e.d(i, 'c', function () {
                    return u;
                });
                var s = e(1), n = e(11);
                function r(t) {
                    let i, e;
                    return Object(s.g)(t) && (i = t.match(n.b)) && (e = parseInt(i[1], 10) * n.d + parseInt(i[2], 10) * n.e + parseInt(i[3], 10) * n.f + parseInt(i[5] || 0, 10)), isNaN(e) ? null : e;
                }
                function h(t, i) {
                    return /^\d+(\.\d+)?%$/g.test(t) ? i ? i * parseFloat(t.replace('%', '')) / 100 : null : r(t);
                }
                function a(t) {
                    return Date.now() + t * n.a;
                }
                function o(t, i = (() => {
                    return ':';
                })()) {
                    const e = t => {
                        return t >= 10 ? t : `0${ t }`;
                    };
                    return `${ e(Math.floor(t / 60)) }${ i }${ e(Math.floor(t % 60)) }`;
                }
                function c(t, i) {
                    const e = Date.now();
                    return !(e < t || e > i);
                }
                function u() {
                    const t = new Date();
                    return t.getTime() - 1000 * t.getTimezoneOffset() * 60;
                }
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return s;
                });
                class s {
                }
                s.MaxLogOverflow = 1000, s.maxLogOverflowCount = {}, s.logCount = {}, s.maxLogSent = {}, s.sessionId = '', s.pageFocus = !1, s.incrementLogCount = t => {
                    s.logCount[t] ? (++s.maxLogOverflowCount[t], ++s.logCount[t]) : (s.logCount[t] = 1, s.maxLogOverflowCount[t] = 1);
                }, s.isMaxLog = (t, i) => {
                    return !!(s.logCount[t] && s.logCount[t] > i);
                }, s.isMaxLogOverflow = t => {
                    return s.maxLogOverflowCount[t] > s.MaxLogOverflow && (s.maxLogOverflowCount[t] = 1, !0);
                }, s.setMaxLogSent = t => {
                    s.maxLogSent[t] = !0;
                }, s.isMaxLogSent = t => {
                    return !!s.maxLogSent[t];
                };
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return r;
                }), e.d(i, 'c', function () {
                    return h;
                }), e.d(i, 'b', function () {
                    return a;
                });
                var s = e(8), n = e(1);
                const r = t => {
                    return Object.keys(t).map(i => {
                        return t[i];
                    });
                };
                function h(t) {
                    for (const i in t)
                        t.hasOwnProperty(i) && 'string' == typeof t[i] && (t[i] = `%22${ encodeURIComponent(t[i]) }%22`);
                    return JSON.stringify(t).cnx_replaceAll('"', '');
                }
                function a(t, i) {
                    if (!Object(n.f)(t) || !Object(n.f)(i))
                        return !1;
                    const e = Object.getOwnPropertyNames(t), r = Object.getOwnPropertyNames(i);
                    return e.length === r.length && e.every(e => {
                        return Object(s.i)(t[e], i[e]);
                    });
                }
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return s;
                }), e.d(i, 'b', function () {
                    return n;
                });
                const s = 'https://connatix.com/privacy-policy/', n = 'v';
            },
            function (t, i, e) {
                'use strict';
                function s(t) {
                    for (var e in t)
                        i.hasOwnProperty(e) || (i[e] = t[e]);
                }
                Object.defineProperty(i, '_', { value: !0 }), s(e(134)), s(e(135)), s(e(136)), s(e(137));
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'b', function () {
                    return r;
                }), e.d(i, 'a', function () {
                    return h;
                });
                class s {
                }
                s.clientAb0 = 0, s.clientAb1 = 0;
                class n {
                }
                var r;
                n.clientAb0 = 0, n.clientAb1 = 0, function (t) {
                    t[t.ElementsABService = 0] = 'ElementsABService', t[t.PlayspaceABService = 1] = 'PlayspaceABService';
                }(r || (r = {}));
                class h {
                    static get clientAb0() {
                        return this.getABValueForKey('clientAb0');
                    }
                    static get clientAb1() {
                        return this.getABValueForKey('clientAb1');
                    }
                    static getABValueForKey(t) {
                        switch (this.abServiceType) {
                        case r.PlayspaceABService:
                            return n[t];
                        default:
                            return s[t];
                        }
                    }
                }
            },
            function (t, i, e) {
                'use strict';
                function s(t) {
                    for (var e in t)
                        i.hasOwnProperty(e) || (i[e] = t[e]);
                }
                Object.defineProperty(i, '_', { value: !0 }), s(e(66)), s(e(138)), s(e(67)), s(e(68)), s(e(139)), s(e(56)), s(e(69)), s(e(140)), s(e(141));
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return h;
                });
                var s = e(9), n = e(3), r = e(7);
                class h {
                    static Mi() {
                        const t = h.Ei;
                        return h.Ei++, t;
                    }
                    static Li(t) {
                        return h.Ri[t];
                    }
                    static Bi(t) {
                        t.forEach(t => {
                            h.Ri[t.advertiserLineItemId] && h.addCustomHistoryLine('duplicate', { id: t.advertiserLineItemId }), h.Ri[t.advertiserLineItemId] = h.Mi();
                        });
                    }
                    static Di(t) {
                        return t.map(t => {
                            return {
                                advertiserLineItemId: t.advertiserLineItemId,
                                creativeType: t.creativeType,
                                impressionTimeout: t.impressionTimeSpent,
                                lineItemPriority: t.lineItemPriority,
                                playerSize: t.playerSize,
                                requestCap: t.requestCap,
                                sound: t.sound,
                                viewability: t.viewability
                            };
                        });
                    }
                    static setClientSideAdList(t) {
                        h.Fi && (h.Vi = h.Di(JSON.parse(JSON.stringify(t))), h.Bi(h.Vi));
                    }
                    static setRtbAdList(t) {
                        h.Fi && (h.Ui = h.Di(JSON.parse(JSON.stringify(t))), h.Bi(h.Ui));
                    }
                    static setHeaderBidderAdList(t) {
                        h.Fi && (h.$i = h.Di(JSON.parse(JSON.stringify(t))), h.Bi(h.$i));
                    }
                    static setTamAdList(t) {
                        h.Fi && (h.Ni = h.Di(JSON.parse(JSON.stringify(t))), h.Bi(h.Ni));
                    }
                    static setLineItemStatus(t, i) {
                        if (!h.Fi)
                            return;
                        const e = h.Li(t);
                        h.Hi.push({
                            type: 'status',
                            id: e,
                            status: s.a[i]
                        });
                    }
                    static setVpaidEvent(t, i) {
                        if (h.Fi)
                            try {
                                const e = h.Li(t);
                                switch (i) {
                                case n.b.AdLoaded:
                                case n.b.AdStarted:
                                case n.b.AdError:
                                case n.b.AdSkipped:
                                case n.b.AdStopped:
                                case n.b.AdPaused:
                                case n.b.AdPlaying:
                                case n.b.AdImpression:
                                    h.Hi.push({
                                        type: 'vpaid',
                                        id: e,
                                        event: i
                                    });
                                }
                            } catch (t) {
                            }
                    }
                    static setViewabilityState(t) {
                        h.Fi && h.Hi.push({
                            type: 'view',
                            inView: t
                        });
                    }
                    static setFocusState(t) {
                        h.Fi && h.Hi.push({
                            type: 'focus',
                            inView: t
                        });
                    }
                    static setAdState(t) {
                        h.Fi && h.Hi.push({
                            type: 'adState',
                            state: r.ProtoAdSlotsEnum[t]
                        });
                    }
                    static enforcerAction(t) {
                        h.Fi && h.Hi.push({
                            type: 'enforcer',
                            action: t
                        });
                    }
                    static addCustomHistoryLine(t, i) {
                        h.Fi && h.Hi.push(Object.assign({ type: t }, i));
                    }
                    static getJsonString() {
                        return h.Fi ? JSON.stringify({
                            clientAdList: h.Vi,
                            rtbAdList: h.Ui,
                            headerBidderAdList: h.$i,
                            mappedAdList: h.Ri,
                            history: h.Hi
                        }).substring(0, h.qi) : '';
                    }
                    static playerDestroyed() {
                        this.zi = !0;
                    }
                    static isPlayerDestroyed() {
                        return this.zi;
                    }
                }
                h.Fi = Date.now() - 1581093917537 < 0, h.qi = 50000, h.Ei = 0, h.Ri = {}, h.Vi = [], h.Ui = [], h.$i = [], h.Ni = [], h.Hi = [], h.zi = !1;
            },
            function (t, i, e) {
                'use strict';
                var s;
                e.d(i, 'a', function () {
                    return s;
                }), function (t) {
                    t[t.P1 = 1] = 'P1', t[t.P2 = 2] = 'P2', t[t.P3 = 3] = 'P3', t[t.P4 = 4] = 'P4', t[t.P5 = 5] = 'P5', t[t.P6 = 6] = 'P6', t[t.P7 = 7] = 'P7', t[t.P8 = 8] = 'P8', t[t.P9 = 9] = 'P9', t[t.P10 = 10] = 'P10';
                }(s || (s = {}));
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return s;
                });
                class s {
                    constructor() {
                        this.Wi = !1, this.promise = new Promise((t, i) => {
                            this.Gi = t, this.Ji = i;
                        });
                    }
                    Qi() {
                        this.Wi || (this.Wi = !0);
                    }
                    resolve(t) {
                        this.Qi(), this.Gi(t);
                    }
                    reject(t) {
                        this.Qi(), this.Ji(t);
                    }
                    get isPending() {
                        return !this.Wi;
                    }
                }
            },
            function (t, i, e) {
                'use strict';
                (function (t) {
                    var s = i;
                    function n(t, i, e) {
                        for (var s = Object.keys(i), n = 0; n < s.length; ++n)
                            void 0 !== t[s[n]] && e || (t[s[n]] = i[s[n]]);
                        return t;
                    }
                    function r(t) {
                        function i(t, e) {
                            if (!(this instanceof i))
                                return new i(t, e);
                            Object.defineProperty(this, 'message', {
                                get: function () {
                                    return t;
                                }
                            }), Error.captureStackTrace ? Error.captureStackTrace(this, i) : Object.defineProperty(this, 'stack', { value: new Error().stack || '' }), e && n(this, e);
                        }
                        return (i.prototype = Object.create(Error.prototype)).constructor = i, Object.defineProperty(i.prototype, 'name', {
                            get: function () {
                                return t;
                            }
                        }), i.prototype.toString = function () {
                            return this.name + ': ' + this.message;
                        }, i;
                    }
                    s.asPromise = e(121), s.base64 = e(122), s.EventEmitter = e(123), s.float = e(124), s.inquire = e(125), s.utf8 = e(126), s.pool = e(127), s.LongBits = e(128), s.isNode = Boolean(void 0 !== t && t && t.process && t.process.versions && t.process.versions.node), s.global = s.isNode && t || 'undefined' != typeof window && window || 'undefined' != typeof self && self || this, s.emptyArray = Object.freeze ? Object.freeze([]) : [], s.emptyObject = Object.freeze ? Object.freeze({}) : {}, s.isInteger = Number.isInteger || function (t) {
                        return 'number' == typeof t && isFinite(t) && Math.floor(t) === t;
                    }, s.isString = function (t) {
                        return 'string' == typeof t || t instanceof String;
                    }, s.isObject = function (t) {
                        return t && 'object' == typeof t;
                    }, s.isset = s.isSet = function (t, i) {
                        var e = t[i];
                        return !(null == e || !t.hasOwnProperty(i)) && ('object' != typeof e || (Array.isArray(e) ? e.length : Object.keys(e).length) > 0);
                    }, s.Buffer = function () {
                        try {
                            var t = s.inquire('buffer').Buffer;
                            return t.prototype.utf8Write ? t : null;
                        } catch (t) {
                            return null;
                        }
                    }(), s.Xi = null, s.Yi = null, s.newBuffer = function (t) {
                        return 'number' == typeof t ? s.Buffer ? s.Yi(t) : new s.Array(t) : s.Buffer ? s.Xi(t) : 'undefined' == typeof Uint8Array ? t : new Uint8Array(t);
                    }, s.Array = 'undefined' != typeof Uint8Array ? Uint8Array : Array, s.Long = s.global.dcodeIO && s.global.dcodeIO.Long || s.global.Long || s.inquire('long'), s.key2Re = /^true|false|0|1$/, s.key32Re = /^-?(?:0|[1-9][0-9]*)$/, s.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/, s.longToHash = function (t) {
                        return t ? s.LongBits.from(t).toHash() : s.LongBits.zeroHash;
                    }, s.longFromHash = function (t, i) {
                        var e = s.LongBits.fromHash(t);
                        return s.Long ? s.Long.fromBits(e.lo, e.hi, i) : e.toNumber(Boolean(i));
                    }, s.merge = n, s.lcFirst = function (t) {
                        return t.charAt(0).toLowerCase() + t.substring(1);
                    }, s.newError = r, s.ProtocolError = r('ProtocolError'), s.oneOfGetter = function (t) {
                        for (var i = {}, e = 0; e < t.length; ++e)
                            i[t[e]] = 1;
                        return function () {
                            for (var t = Object.keys(this), e = t.length - 1; e > -1; --e)
                                if (1 === i[t[e]] && void 0 !== this[t[e]] && null !== this[t[e]])
                                    return t[e];
                        };
                    }, s.oneOfSetter = function (t) {
                        return function (i) {
                            for (var e = 0; e < t.length; ++e)
                                t[e] !== i && delete this[t[e]];
                        };
                    }, s.toJSONOptions = {
                        longs: String,
                        enums: String,
                        bytes: String,
                        json: !0
                    }, s.Ki = function () {
                        var t = s.Buffer;
                        t ? (s.Xi = t.from !== Uint8Array.from && t.from || function (i, e) {
                            return new t(i, e);
                        }, s.Yi = t.allocUnsafe || function (i) {
                            return new t(i);
                        }) : s.Xi = s.Yi = null;
                    };
                }.call(this, e(62)));
            },
            function (t, i, e) {
                'use strict';
                Object.defineProperty(i, '_', { value: !0 });
                var s = e(33), n = function () {
                        function t() {
                        }
                        return t.encode = function (t, i) {
                            var e;
                            if ('string' == typeof t && (t = parseInt(t, 10)), (e = t.toString(2)).length > i || t < 0)
                                throw new s.EncodingError(t + ' too large to encode into ' + i);
                            return e.length < i && (e = '0'.repeat(i - e.length) + e), e;
                        }, t.decode = function (t, i) {
                            if (i !== t.length)
                                throw new s.DecodingError('invalid bit length');
                            return parseInt(t, 2);
                        }, t;
                    }();
                i.IntEncoder = n;
            },
            function (t, i, e) {
                'use strict';
                var s = this && this.Zi || function (t) {
                    var i = 'function' == typeof Symbol && Symbol.iterator, e = i && t[i], s = 0;
                    if (e)
                        return e.call(t);
                    if (t && 'number' == typeof t.length)
                        return {
                            next: function () {
                                return t && s >= t.length && (t = void 0), {
                                    value: t && t[s++],
                                    done: !t
                                };
                            }
                        };
                    throw new TypeError(i ? 'Object is not iterable.' : 'Symbol.iterator is not defined.');
                };
                Object.defineProperty(i, '_', { value: !0 });
                var n = function () {
                    function t() {
                    }
                    return t.prototype.clone = function () {
                        var t = this, i = new this.constructor();
                        return Object.keys(this).forEach(function (e) {
                            var s = t.deepClone(t[e]);
                            void 0 !== s && (i[e] = s);
                        }), i;
                    }, t.prototype.deepClone = function (t) {
                        var i, e, n = typeof t;
                        if ('number' === n || 'string' === n || 'boolean' === n)
                            return t;
                        if (null !== t && 'object' === n) {
                            if ('function' == typeof t.clone)
                                return t.clone();
                            if (t instanceof Date)
                                return new Date(t.getTime());
                            if (void 0 !== t[Symbol.iterator]) {
                                var r = [];
                                try {
                                    for (var h = s(t), a = h.next(); !a.done; a = h.next()) {
                                        var o = a.value;
                                        r.push(this.deepClone(o));
                                    }
                                } catch (t) {
                                    i = { error: t };
                                } finally {
                                    try {
                                        a && !a.done && (e = h.return) && e.call(h);
                                    } finally {
                                        if (i)
                                            throw i.error;
                                    }
                                }
                                return t instanceof Array ? r : new t.constructor(r);
                            }
                            var c = {};
                            for (var u in t)
                                t.hasOwnProperty(u) && (c[u] = this.deepClone(t[u]));
                            return c;
                        }
                    }, t;
                }();
                i.Cloneable = n;
            },
            function (t, i, e) {
                'use strict';
                var s;
                !function (t) {
                    t.prebid = 'prebid', t.bid = 'bid', t.win = 'win', t.impression = 'impression', t.viewableImpression = 'viewableImpression', t.postbid = 'postbid', t.initAd = 'initAd', t.request = 'request';
                }(s || (s = {}));
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return s;
                }), e.d(i, 'b', function () {
                    return r;
                });
                var s, n = e(0);
                !function (t) {
                    t[t.PreRoll = 0] = 'PreRoll', t[t.MidRoll = 1] = 'MidRoll', t[t.PostRoll = 2] = 'PostRoll', t[t.Standalone = 3] = 'Standalone';
                }(s || (s = {}));
                const r = {
                    [n.ProtoAdSlotsEnum.PreRoll]: s.PreRoll,
                    [n.ProtoAdSlotsEnum.MidRoll]: s.MidRoll,
                    [n.ProtoAdSlotsEnum.PostRoll]: s.PostRoll
                };
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return d;
                }), e.d(i, 'b', function () {
                    return f;
                });
                var s = e(45), n = e(0), r = e(14), h = e(1), a = e(5);
                const o = new s.a(n.ProtoAdDomainBlockingResponse, 'AdDomainBlockingService'), c = 2;
                let u;
                const l = new Map();
                function d(t) {
                    u || (u = new Promise(i => {
                        const e = t.find(t => {
                            return t.blockedDomainsRevisionNumber;
                        });
                        if (!e)
                            return void i();
                        const {
                                publisherLineItemId: s,
                                blockedDomainsRevisionNumber: h
                            } = e, u = `${ r.a.endPoints.base.lineItems }${ s }/blockedDomains_${ h }.bin`;
                        o.fetchMetadata(u, c).then(t => {
                            l.set(s, t.domains), i();
                        }).catch(() => {
                            Object(a.a)({
                                message: 'AdDomainBlockingService_fetchBlockedDomains_endpoint_unavailable',
                                level: n.ProtoLoggingLevelEnum.FATAL,
                                throttle: 2,
                                sendMaxLog: !1
                            }), i();
                        });
                    }));
                }
                function f(t, i) {
                    return new Promise(e => {
                        Object(h.h)(i) ? u.then(() => {
                            l.has(t) && l.get(t).some(t => {
                                return i.includes(t);
                            }) ? e(!0) : e(!1);
                        }) : e(!1);
                    });
                }
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return o;
                });
                var s = e(0), n = e(8), r = e(5), h = e(1), a = e(23);
                class o {
                    constructor(t, i) {
                        this.te = t, this.ie = i, this.ee = t => {
                            return new Promise((i, e) => {
                                a.a.sendProtoRequest({
                                    ProtoResponse: this.te,
                                    endpoint: t,
                                    requestType: 'GET',
                                    logError: !0
                                }).then(t => {
                                    i(t);
                                }).catch(t => {
                                    e(t);
                                });
                            });
                        };
                    }
                    fetchMetadata(t, i = (() => {
                        return 5;
                    })()) {
                        return new Promise((e, s) => {
                            Object(n.j)(() => {
                                return this.ee(t);
                            }, i).then(i => {
                                if (Object(h.f)(i))
                                    return e(i);
                                const n = new Error('invalid metadata');
                                return this.se({
                                    url: t,
                                    metadata: i,
                                    e: n
                                }), s(n);
                            }).catch(i => {
                                this.se({
                                    url: t,
                                    e: i
                                }), s(i);
                            });
                        });
                    }
                    se(t) {
                        var i;
                        const e = Object(h.h)(null === (i = t.e) || void 0 === i ? void 0 : i.message) ? t.e.message : '';
                        -1 === e.indexOf('XhrUtils_XMLHttpRequest_error') && Object(r.a)({
                            message: 'MediaMetadataHandler_fetchMetadata',
                            exception: `${ this.ie }_${ e }:${ JSON.stringify(t) }`,
                            callStack: t.e && t.e.stack,
                            level: s.ProtoLoggingLevelEnum.FATAL
                        });
                    }
                }
            },
            function (t, i, e) {
                'use strict';
                Object.defineProperty(i, '_', { value: !0 });
                var s = function () {
                    function t() {
                    }
                    return t.encode = function (t) {
                        return +t + '';
                    }, t.decode = function (t) {
                        return '1' === t;
                    }, t;
                }();
                i.BooleanEncoder = s;
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return s;
                });
                var s, n = e(50), r = e(2), h = e(8);
                !function (t) {
                    const i = [
                            'adBanner',
                            'banner-search',
                            'abc_banner',
                            'Banner_Top',
                            'ad_container',
                            'pub_300x250',
                            'pub_300x250m',
                            'pub_728x90',
                            'text-ad',
                            'text_ad',
                            'textAd',
                            'text-ad-links',
                            'text_ads',
                            'text-ads',
                            'text-ad-links'
                        ], e = 'cnxtestadblock', s = function () {
                            const t = i.join(' ');
                            return `<style>.adBanner{background-color: transparent; height: 1px !important; width: 1px !important; position: absolute !important; left: -10000px !important; top: -1000px !important; display:block !important; }</style><div id="${ e }" class="${ t }"></div>`;
                        }, a = { src: n.a };
                    t.detectUsingCSS = function (t) {
                        try {
                            let i = !1;
                            t.document.body.insertAdjacentHTML('beforeend', s());
                            const n = t.document.getElementById(e);
                            return 0 !== n.getBoundingClientRect().height && 0 !== n.getBoundingClientRect().width || (i = !0), t.document.body.removeChild(n), i;
                        } catch (t) {
                            return !1;
                        }
                    }, t.detectUsingScript = function () {
                        return new Promise(t => {
                            const i = Object(h.f)(window).topFrame;
                            i.googletag && t(!1), Object(r.x)(a, i.document.head, i, () => {
                                return i.googletag ? t(!1) : t(!0);
                            }, () => {
                                return t(!0);
                            });
                        });
                    };
                }(s || (s = {}));
            },
            function (t, i, e) {
                'use strict';
                var s = e(8), n = e(28), r = e(23), h = e(0), a = e(14), o = e(1), c = e(32), u = e(21);
                class l {
                    constructor(t) {
                        this.ne = t, this.re = !0, this.he = '', this.ae = !1, this.ce = [];
                    }
                    static getInstance(t) {
                        const i = n.a, e = Object(s.f)(t).topFrame;
                        return e[i] || (e[i] = new l(e)), e[i];
                    }
                    get userId() {
                        if (Object(o.h)(this.ue))
                            return this.ue.split('_')[0];
                    }
                    set userId(t) {
                        this.ue = t;
                    }
                    get isCcpaApplicable() {
                        return this.re;
                    }
                    set isCcpaApplicable(t) {
                        this.re = t;
                    }
                    get usPrivacyString() {
                        return this.he;
                    }
                    set usPrivacyString(t) {
                        this.he = t;
                    }
                    get consentPayload() {
                        return this.le;
                    }
                    set consentPayload(t) {
                        this.le || (this.le = t);
                    }
                    getScope() {
                        return this.ne;
                    }
                    syncDemandPartner(t) {
                        if (this.userId) {
                            const i = {
                                userId: this.userId,
                                demandPartner: parseInt(t.demandPartner, 10),
                                demandPartnerUserId: t.demandPartnerUserId
                            };
                            r.a.sendProtoRequest({
                                ProtoRequest: h.ProtoUserSyncRequest,
                                endpoint: a.a.endPoints.api.syncUrls,
                                requestData: i,
                                queryParams: { [c.b]: u.a.version },
                                logError: !0
                            }).then(t => {
                            }).catch(t => {
                            });
                        }
                    }
                    registerPlsCall(t) {
                        return this.ae ? (this.ce.push(t), () => {
                        }) : this.userId ? (t(), () => {
                        }) : (this.ae = !0, t(), () => {
                            this.ae = !1, this.ce.forEach(t => {
                                return t();
                            }), this.ce = [];
                        });
                    }
                }
                var d, f = e(29), p = e(5), b = e(6);
                !function (t) {
                    t.USER_ID = 'cnx_userId';
                }(d || (d = {}));
                class v {
                    constructor(t, i) {
                        this.de = t, this.fe = i, this.pe = { [d.USER_ID]: 30 }, this.be = [
                            'Facebook App',
                            'Google App',
                            'Flipboard App',
                            'Instagram App',
                            'Pinterest App'
                        ], this.ve = !1;
                    }
                    me({
                        name: t,
                        value: i
                    }) {
                        t === d.USER_ID && (this.de.userId = this.ge(i));
                    }
                    ye(t) {
                        let i = '';
                        const e = this.pe[t.name];
                        if (e) {
                            i = `; expires=${ new Date(Object(f.b)(e)).toUTCString() }`;
                        }
                        this.fe.document.cookie = `${ t.name }=${ t.value }${ i }; path=/`;
                    }
                    we(t, i) {
                        if (!Object(b.h)(t))
                            return;
                        const e = {
                            cookieList: t,
                            secureMode: i ? h.ProtoCookieSecureModeEnum.Unsecure : h.ProtoCookieSecureModeEnum.Auto,
                            browserInfo: this.Oe
                        };
                        return r.a.sendProtoRequest({
                            requestData: e,
                            ProtoRequest: h.ProtoCookieSyncRequest,
                            endpoint: a.a.endPoints.api.cookie,
                            withCredentials: !0,
                            queryParams: { [c.b]: u.a.version },
                            logError: !1
                        }).catch(t => {
                            return Object(p.a)({
                                message: 'UserCookieManager_setThirdPartyCookie',
                                exception: t.message,
                                callStack: t.callStack,
                                level: h.ProtoLoggingLevelEnum.FATAL
                            });
                        });
                    }
                    ge(t) {
                        return t.split('_')[0];
                    }
                    xe(t) {
                        try {
                            const i = t + '=', e = decodeURIComponent(this.fe.document.cookie).split(';');
                            for (let t of e) {
                                for (; ' ' === t.charAt(0);)
                                    t = t.substring(1);
                                if (0 === t.indexOf(i))
                                    return this.ge(t.substring(i.length, t.length));
                            }
                        } catch (t) {
                        }
                        return '';
                    }
                    getUserId() {
                        return this.de.userId;
                    }
                    syncFirstPartyCookie(t) {
                        const i = {
                            name: t,
                            value: '',
                            timestamp: Object(f.b)(this.pe[t])
                        };
                        t === d.USER_ID && (i.value = this.de.userId), Object(o.h)(i.value) && this.ye(i);
                    }
                    syncThirdPartyCookieList(t) {
                        const i = [d.USER_ID], e = [];
                        i.forEach(t => {
                            t === d.USER_ID && Object(o.h)(this.de.userId) && e.push({
                                name: d.USER_ID,
                                value: this.de.userId,
                                timestamp: Object(f.b)(this.pe[d.USER_ID])
                            });
                        }), this.we(e, t);
                    }
                    setBrowserInfo(t, i) {
                        this.Oe = t, this.ve = this.be.includes(t.browserType), this.ve && i && this.syncThirdPartyCookieList(this.ve);
                    }
                    setUserInformation(t) {
                        t && this.me({
                            name: d.USER_ID,
                            value: t.userId
                        });
                    }
                    fetchCookies() {
                        [d.USER_ID].map(t => {
                            return {
                                name: t,
                                value: this.xe(t)
                            };
                        }).filter(({value: t}) => {
                            return Object(o.h)(t);
                        }).forEach(t => {
                            return this.me(t);
                        });
                    }
                    get unsecuredCookieSync() {
                        return this.ve;
                    }
                }
                var m = e(22);
                const g = {
                    [m.a.CmpApi]: {
                        windowPropertyName: '__cmp',
                        framePropertyName: '__cmpLocator',
                        getVendorConsentDataMethodName: 'getVendorConsents',
                        getConsentDataMethodName: 'getConsentData'
                    },
                    [m.a.TcfApi]: {
                        windowPropertyName: '__tcfapi',
                        framePropertyName: '__tcfapiLocator',
                        getVendorConsentDataMethodName: 'getTCData',
                        consentUpdateMethodName: 'addEventListener',
                        removeUpdateListenerMethodName: 'removeEventListener'
                    }
                };
                class y {
                    constructor(t, i) {
                        this.Se = t, this.je = i, this.apiType = m.a.CmpApi, this.ke = {}, this.le = null, this._e = t => {
                            return new Promise((i, e) => {
                                try {
                                    const s = 'string' == typeof t.data ? JSON.parse(t.data) : t.data;
                                    if ('object' == typeof s && s.Ae)
                                        if (s.Ae.callId === this.Ie) {
                                            const t = s.Ae.returnValue && s.Ae.returnValue.vendorConsents;
                                            this.Ce(t).then(() => {
                                                return i(this.Ie);
                                            });
                                        } else if (s.Ae.callId === this.Te) {
                                            const t = s.Ae.returnValue && s.Ae.returnValue.consentData;
                                            this.Pe(t).then(() => {
                                                return i(this.Te);
                                            });
                                        }
                                } catch (t) {
                                    e();
                                }
                            });
                        };
                    }
                    isApiOnPage() {
                        return null !== this.Se || null !== this.je;
                    }
                    bindToApi() {
                        return null !== this.Se ? new Promise((t, i) => {
                            this.Me(this.Se).then(() => {
                                return t();
                            }).catch(t => {
                                return i(t);
                            });
                        }) : null !== this.je ? this.Ee(this.je) : Promise.reject();
                    }
                    isConsentForVendor(t) {
                        return !!this.ke[t];
                    }
                    getConsentPayload() {
                        return this.le;
                    }
                    setInAppConsentData(t) {
                        this.Ce(t), this.Pe(t.consentString);
                    }
                    hasIvtConsent() {
                        return this.isConsentForVendor(n.c.Connatix);
                    }
                    isConsentForPurposes(t) {
                        return !0;
                    }
                    Ee(t) {
                        this.Te = Object(s.c)(), this.Ie = Object(s.c)();
                        const i = {};
                        return new Promise(e => {
                            const s = t => {
                                this._e(t).then(t => {
                                    i[t] = !0, i[this.Te] && i[this.Ie] && (window.removeEventListener('message', s, !1), e());
                                }).catch(t => {
                                });
                            };
                            window.addEventListener('message', s, !1);
                            const n = g[m.a.CmpApi].getVendorConsentDataMethodName, r = g[m.a.CmpApi].getConsentDataMethodName;
                            t.postMessage({
                                Le: {
                                    command: n,
                                    parameter: null,
                                    callId: this.Ie
                                }
                            }, '*'), t.postMessage({
                                Le: {
                                    command: r,
                                    parameter: null,
                                    callId: this.Te
                                }
                            }, '*');
                        });
                    }
                    Me(t) {
                        const i = g[m.a.CmpApi].windowPropertyName, e = g[m.a.CmpApi].getVendorConsentDataMethodName, s = g[m.a.CmpApi].getConsentDataMethodName;
                        if (t && t[i]) {
                            const n = new Promise(s => {
                                    t[i](e, null, (t, i) => {
                                        if (i) {
                                            const {vendorConsents: i} = t;
                                            this.Ce(i).then(() => {
                                                return s();
                                            });
                                        }
                                    });
                                }), r = new Promise(e => {
                                    t[i](s, null, (t, i) => {
                                        if (i) {
                                            const {consentData: i} = t;
                                            this.Pe(i).then(() => {
                                                return e();
                                            });
                                        }
                                    });
                                });
                            return Promise.all([
                                n,
                                r
                            ]);
                        }
                        return Promise.reject();
                    }
                    Ce(t) {
                        return Object(o.f)(t) ? (this.ke = t, Promise.resolve()) : Promise.reject();
                    }
                    Pe(t) {
                        return Object(o.g)(t) ? (this.le = t, Promise.resolve()) : Promise.reject();
                    }
                }
                var w = e(2), O = e(77), x = e(78);
                const S = (t, i) => {
                        const e = g[i].windowPropertyName;
                        return Object(w.r)(t, e);
                    }, j = (t, i) => {
                        const e = g[i].framePropertyName;
                        return Object(w.q)(t, e);
                    }, k = (t, i) => {
                        return null !== S(t, i) || null !== j(t, i);
                    }, _ = t => {
                        const i = O.TCString.decode(t), e = {}, s = {};
                        return i.vendorConsents.forEach((t, i) => {
                            return e[i] = t;
                        }), i.purposeConsents.forEach((t, i) => {
                            return s[i] = t;
                        }), {
                            vendorConsents: e,
                            purposeConsents: s,
                            tcString: t
                        };
                    }, A = t => {
                        const i = x.decodeConsentString(t);
                        let e = '';
                        const s = i.maxVendorId;
                        for (let t = 1; t <= s; t++)
                            e += '0';
                        const n = e.split('');
                        return i.allowedVendorIds.forEach(t => {
                            n[t - 1] = '1';
                        }), (t => {
                            const i = { consentString: t };
                            for (let e = 0; e < t.length; e++)
                                i[e + 1] = '1' === t[e];
                            return i;
                        })(n.join(''));
                    }, I = (t, i, e) => {
                        let s;
                        try {
                            s = i(t);
                        } catch (t) {
                        }
                        if (Object(o.f)(s))
                            return s;
                        try {
                            s = e(t);
                        } catch (t) {
                        }
                        return s;
                    }, C = t => {
                        var i;
                        return Object(o.h)(null === (i = t) || void 0 === i ? void 0 : i.tcString);
                    }, T = t => {
                        var i;
                        return Object(o.h)(null === (i = t) || void 0 === i ? void 0 : i.consentString);
                    }, P = ({
                        cmpEncodedString: t,
                        tcfEncodedString: i
                    }) => {
                        if (!Object(o.h)(t) && !Object(o.h)(i))
                            return null;
                        let e = null;
                        return Object(o.h)(i) && (e = I(i, _, A)), Object(o.f)(e) ? e : Object(o.h)(t) ? (e = I(t, A, _), Object(o.f)(e) ? e : (Object(p.a)({
                            message: 'UserManagerService_getDecodedConsentData',
                            exception: 'cmpEncodedString failed to decode',
                            callStack: JSON.stringify({
                                cmpEncodedString: t,
                                tcfEncodedString: i
                            }),
                            level: h.ProtoLoggingLevelEnum.FATAL
                        }), null)) : (Object(p.a)({
                            message: 'UserManagerService_getDecodedConsentData',
                            exception: 'tcfEncodedString failed to decode',
                            callStack: JSON.stringify({ tcfEncodedString: i }),
                            level: h.ProtoLoggingLevelEnum.FATAL
                        }), null);
                    }, M = 'useractioncomplete', E = 'tcloaded';
                class L {
                    constructor(t, i) {
                        this.Re = t, this.Be = i, this.apiType = m.a.TcfApi, this.De = t => {
                            return new Promise((i, e) => {
                                try {
                                    let s = t.data;
                                    if ('string' == typeof t.data)
                                        try {
                                            s = JSON.parse(t.data);
                                        } catch (t) {
                                            s = void 0;
                                        }
                                    if ('object' == typeof s && s.Fe && s.Fe.callId === this.Ve) {
                                        const t = s.Fe.returnValue.tcString;
                                        this.Ce(t).then(() => {
                                            return i(this.Ve);
                                        }).catch(t => {
                                            return e();
                                        });
                                    }
                                } catch (t) {
                                    e();
                                }
                            });
                        };
                    }
                    isApiOnPage() {
                        return null !== this.Re || null !== this.Be;
                    }
                    bindToApi() {
                        return null !== this.Re ? new Promise((t, i) => {
                            this.Me(this.Re).then(() => {
                                return t();
                            }).catch(t => {
                                return i(t);
                            });
                        }) : null !== this.Be ? this.Ee(this.Be) : Promise.reject();
                    }
                    isConsentForVendor(t) {
                        var i, e;
                        return !(null === (i = this.Ue) || void 0 === i || !i.vendorConsents) && !!(null === (e = this.Ue) || void 0 === e ? void 0 : e.vendorConsents[t]);
                    }
                    getConsentPayload() {
                        var t;
                        return null === (t = this.Ue) || void 0 === t ? void 0 : t.tcString;
                    }
                    setInAppConsentData(t) {
                        this.Ue = Object.assign(Object.assign({}, this.Ue), t);
                    }
                    hasIvtConsent() {
                        return !0;
                    }
                    isConsentForPurposes(t) {
                        var i;
                        return !(null === (i = this.Ue) || void 0 === i || !i.purposeConsents) && t.every(t => {
                            return !!this.Ue.purposeConsents[t];
                        });
                    }
                    Ee(t) {
                        this.Ve = Object(s.c)();
                        const i = {};
                        return new Promise(e => {
                            const s = t => {
                                this.De(t).then(t => {
                                    i[t] = !0, i[this.Ve] && (window.removeEventListener('message', s, !1), e());
                                }).catch(t => {
                                });
                            };
                            window.addEventListener('message', s, !1);
                            const n = g[m.a.TcfApi].getVendorConsentDataMethodName;
                            t.postMessage({
                                $e: {
                                    command: n,
                                    parameter: null,
                                    callId: this.Ve
                                }
                            }, '*');
                        });
                    }
                    Me(t) {
                        const i = g[m.a.TcfApi].windowPropertyName, e = g[m.a.TcfApi].consentUpdateMethodName, s = g[m.a.TcfApi].removeUpdateListenerMethodName;
                        return t && t[i] ? new Promise(t => {
                            this.Re[i](e, 2, (e, n) => {
                                if (n && (e.eventStatus === M || e.eventStatus === E)) {
                                    const n = e.tcString;
                                    this.Ce(n).then(() => {
                                        return t();
                                    }), this.Re[i](s, 2, () => {
                                        return void 0;
                                    }, e.listenerId);
                                }
                            });
                        }) : Promise.reject();
                    }
                    Ce(t) {
                        const i = P({ tcfEncodedString: t });
                        return C(i) ? (this.Ue = i, Promise.resolve()) : Promise.reject();
                    }
                }
                var R = e(37);
                const B = [
                    R.a.P1,
                    R.a.P2,
                    R.a.P4,
                    R.a.P7,
                    R.a.P8
                ];
                class D {
                    constructor(t, i, e = (() => {
                        return {};
                    })()) {
                        var s, n;
                        this.Ne = t, this.fe = i;
                        const r = P({
                                cmpEncodedString: null === (s = e.cmp) || void 0 === s ? void 0 : s.consentString,
                                tcfEncodedString: null === (n = e.tcf) || void 0 === n ? void 0 : n.tcString
                            }), a = this.He(r);
                        null !== a ? (this.qe(a), (C(r) || T(r)) && this.ze.setInAppConsentData(r)) : Object(p.a)({
                            message: 'UserManagerService_UserConsentApiManager',
                            exception: 'failed to find the right api, no consent string and no framework on page was found',
                            callStack: JSON.stringify({ _appSettings: e }),
                            level: h.ProtoLoggingLevelEnum.FATAL
                        });
                    }
                    setPageUrl(t) {
                        this.We = t;
                    }
                    setAmpUserConsent(t) {
                        var i, e;
                        if (!this.isConsentRequired())
                            return;
                        const s = t.consentStringTypeEnum.US_PRIVACY_STRING, n = null === (i = t.consentMetadata) || void 0 === i ? void 0 : i.consentStringType, r = t.encodeConsentString || (null === (e = t.consentMetadata) || void 0 === e ? void 0 : e.additionalConsent);
                        let a;
                        if (!Object(o.h)(r))
                            return void Object(p.a)({
                                level: h.ProtoLoggingLevelEnum.INFO,
                                message: 'AMP_no_consent_string_provided',
                                callStack: JSON.stringify(t),
                                exception: this.We
                            });
                        if (n === s)
                            return void Object(p.a)({
                                message: 'UserConsentApiManager_CCPA_encoded_string_from_amp_not_used',
                                level: h.ProtoLoggingLevelEnum.WARNING,
                                callStack: r,
                                exception: `${ JSON.stringify(t) }__pageURL_${ this.We }`,
                                throttle: 2,
                                sendMaxLog: !1
                            });
                        const c = P({
                            tcfEncodedString: r,
                            cmpEncodedString: r
                        });
                        C(c) ? a = new L(null, null) : T(c) && (a = new y(null, null)), a ? a ? (this.ze = a, this.ze.setInAppConsentData(c)) : Object(p.a)({
                            message: 'UserConsentApiManager_amp_userConsentApi_not_found',
                            level: h.ProtoLoggingLevelEnum.WARNING,
                            callStack: r,
                            exception: `${ JSON.stringify(t) }__pageURL__${ this.We }`,
                            throttle: 2,
                            sendMaxLog: !1
                        }) : Object(p.a)({
                            message: 'UserConsentApiManager_encoded_string_not_tcf_and_not_cmp',
                            level: h.ProtoLoggingLevelEnum.WARNING,
                            callStack: r,
                            exception: `${ JSON.stringify(t) }__pageURL__${ this.We }`,
                            throttle: 2,
                            sendMaxLog: !1
                        });
                    }
                    isConsentRequired() {
                        return this.Ne;
                    }
                    isConsent(t, i = (() => {
                        return [];
                    })()) {
                        if (this.isConsentRequired()) {
                            return this.ze.isConsentForVendor(t) && this.ze.isConsentForPurposes(i);
                        }
                        return !0;
                    }
                    isConsentConnatix() {
                        return this.isConsent(n.c.Connatix, B);
                    }
                    getConsentDataPayload() {
                        return this.ze.getConsentPayload();
                    }
                    bindToConsentApi() {
                        return this.ze.bindToApi();
                    }
                    isConsentApiOnPage() {
                        return this.ze.isApiOnPage();
                    }
                    hasIVTConsent() {
                        return this.ze.hasIvtConsent();
                    }
                    getConsentApiType() {
                        return this.ze.apiType;
                    }
                    qe(t) {
                        const i = S(this.fe, t), e = j(this.fe, t);
                        t === m.a.TcfApi ? this.ze = new L(i, e) : this.ze = new y(i, e);
                    }
                    He(t) {
                        if (C(t))
                            return m.a.TcfApi;
                        if (T(t))
                            return m.a.CmpApi;
                        return k(this.fe, m.a.TcfApi) ? m.a.TcfApi : k(this.fe, m.a.CmpApi) ? m.a.CmpApi : m.a.TcfApi;
                    }
                }
                var F = e(19);
                const V = 'UserThirdPartySyncManager_Pubmatic', U = 'CookieSync_syncScript_not_properly_loaded', $ = 'CookieSync_param_not_parsed_properly', N = (t, i, e) => {
                        return new Promise((s, n) => {
                            const r = Object(F.b)('p', t), h = Object(F.b)('predirect', t);
                            if (window.PubMaticSync) {
                                if (!H(r, h))
                                    return void n();
                                q(r, h, i, e), s(!0);
                            } else
                                Object(w.x)({ src: '//ads.pubmatic.com/AdServer/js/userSync.js' }, window.document.head, window, () => {
                                    H(r, h) ? (q(r, h, i, e), s(!0)) : n();
                                }, () => {
                                    n();
                                }, !0, V);
                        });
                    }, H = (t, i) => {
                        if (!window.PubMaticSync)
                            return z(U, 'PUBMATIC'), !1;
                        const e = Number.parseInt(t, 10);
                        return Object(o.d)(e) ? !!Object(o.h)(i) || (z($, 'PUBMATIC', 'predirect'), !1) : (z($, 'PUBMATIC', 'p'), !1);
                    }, q = (t, i, e, s) => {
                        const n = {
                            pubId: Number.parseInt(t, 10),
                            url: i
                        };
                        e && (n.delay = 1000, n.gdpr = 1, n.gdprConsent = s), window.PubMaticSync.sync(n);
                    }, z = (t, i, e = (() => {
                        return '';
                    })()) => {
                        Object(p.a)({
                            message: t,
                            callStack: i,
                            exception: e,
                            level: h.ProtoLoggingLevelEnum.FATAL,
                            throttle: 1,
                            sendMaxLog: !1
                        });
                    }, W = 'yellowblue.io';
                class G {
                    constructor(t, i) {
                        this.Ge = t, this.Ne = i, this.Je = [];
                    }
                    replaceuserIdMacros(t, i) {
                        let e = t;
                        return e = (e = (e = e.replace('%5BuserId%5D', i)).replace('[userId]', i)).replace('%7bUSER_ID%7d', i);
                    }
                    Qe(t, i) {
                        try {
                            if (this.Xe(t)) {
                                const e = i.document.createElement('iframe');
                                e.setAttribute('style', 'width:1px;height:1px;border:0px;margin:0px;padding:0px'), e.src = t.url, i.document.body.appendChild(e);
                            } else
                                Object(w.x)({ src: t.url }, i.document.head, i, null, null, 1 === Object(s.k)([
                                    95,
                                    5
                                ]), 'UserManager_unable_to_insert_sync_url_script');
                            return !0;
                        } catch (t) {
                            return !1;
                        }
                    }
                    Xe(t) {
                        switch (t.vendorId) {
                        case n.c.Rubicon:
                        case n.c.Pubmatic:
                            return !0;
                        default:
                            return t.url.indexOf(W) > -1;
                        }
                    }
                    syncUrls(t, i) {
                        this.Je.forEach(e => {
                            if (this.Ge.isConsent(e.vendorId) && !e.synced) {
                                if (e.vendorId === n.c.Pubmatic)
                                    return void N(e.url, this.Ge.isConsentRequired(), this.Ge.getConsentDataPayload()).then(() => {
                                        e.synced = !0;
                                    });
                                if (-1 !== e.url.indexOf('openx.net'))
                                    return e.url = `${ e.url.split('r=')[0] }&r=\n                        ${ encodeURIComponent(`https://capi.connatix.com/core/us?DemandPartner=8&UserId=${ t }&DemandPartnerUserId=`) }`, e.url = this.replaceuserIdMacros(e.url, t), r.a.trackPixel(e.url), void (e.synced = !0);
                                if (e.url.indexOf('pixel.advertising.com') > -1 && (e.url = e.url.replace('gdpr=', `gdpr=${ this.Ge.isConsentRequired() ? 1 : 0 }`), e.url = e.url.replace('gdpr_consent=', 'gdpr_consent=0')), e.url = this.replaceuserIdMacros(e.url, t), this.Ne) {
                                    e.url = Object(F.e)(e.url, 'gdpr', '1');
                                    const t = this.Ge.getConsentDataPayload();
                                    e.url = Object(F.e)(e.url, 'gdpr_consent', t);
                                }
                                this.Qe(e, i) && (e.synced = !0);
                            }
                        });
                    }
                    setSyncUrls(t = (() => {
                        return {};
                    })()) {
                        return !(this.Je.length > 0) && (this.Je = [], Object.keys(t).forEach(i => {
                            this.Je.push({
                                vendorId: i,
                                url: t[i],
                                synced: !1
                            });
                        }), !0);
                    }
                }
                var J = e(38);
                const Q = {
                    subdivision: { California: 5332921 },
                    country: { US: 6252001 }
                };
                class X {
                    constructor(t, i) {
                        this.de = t, this.Ye = 1, this.Ke = '__uspapi', this.Ze = 'getUSPData', this.ts(i);
                    }
                    getUsPrivacyString() {
                        if (this.de.usPrivacyString || this.de.isCcpaApplicable)
                            return this.de.usPrivacyString;
                    }
                    isCcpaApplicable() {
                        return this.de.isCcpaApplicable;
                    }
                    isSellUserAllowed() {
                        return !this.de.isCcpaApplicable || this.es();
                    }
                    setGeoLocation(t) {
                        this.ss = t, t.subdivisionId !== Q.subdivision.California && (this.de.isCcpaApplicable = !1);
                    }
                    fetchUsPrivacyString() {
                        return this.ns() && this.rs(), this.isCcpaApplicable() ? new Promise(t => {
                            this.getUsPrivacyString() ? t() : t(this.hs());
                        }) : Promise.resolve();
                    }
                    hs() {
                        return new Promise((t, i) => {
                            const e = this.de.getScope()[this.Ke];
                            e ? e(this.Ze, this.Ye, (e, s) => {
                                s ? (this.ts(e.uspString), t()) : i();
                            }) : i();
                        });
                    }
                    es() {
                        return !this.de.usPrivacyString || Object(b.g)(this.de.usPrivacyString, n.b);
                    }
                    ts(t) {
                        this.de.usPrivacyString = t;
                    }
                    ns() {
                        if (!Object(s.k)([
                                95,
                                5
                            ]))
                            return !1;
                        const t = new Date(2020, 10, 16, 12, 0, 0).getTime(), i = new Date(2020, 10, 17, 12, 0, 0).getTime();
                        return Object(f.d)(t, i);
                    }
                    rs() {
                        const {
                            countryGeoId: t,
                            subdivisionId: i
                        } = this.ss;
                        t === Q.country.US && Object(p.a)({
                            message: 'UserCcpaManager_logCCPA',
                            level: h.ProtoLoggingLevelEnum.INFO,
                            callStack: JSON.stringify(i),
                            exception: this.de.usPrivacyString
                        });
                    }
                }
                var Y, K;
                e.d(i, 'a', function () {
                    return Y;
                }), e.d(i, 'b', function () {
                    return Z;
                }), function (t) {
                    t.CCPA_INFO_RECEIVED = 'ccpaInfoReceived', t.CONSENT_DATA_UPDATE = 'consentDataUpdate';
                }(Y || (Y = {})), function (t) {
                    t.SYNC_URLS_RECEIVED = 'thirdPartySyncUrlsReceived', t.USER_INFO_RECEIVED = 'userInfoReceived';
                }(K || (K = {}));
                class Z {
                    constructor(t, i, e, s = (() => {
                        return {};
                    })()) {
                        this.cs = i, this.us = e, this._appSettings = s, this.gdprConsentMode = h.ProtoGdprConsentModeEnum.Unknown, this.ls = {}, this.ds = '', this.fs = !1, this.ps = () => {
                            !this.Ge.isConsentRequired() || this.cs ? this.resolveEvent(Y.CONSENT_DATA_UPDATE) : (this.gdprConsentMode = this.Ge.isConsentApiOnPage() || this.us ? h.ProtoGdprConsentModeEnum.NoConsent : h.ProtoGdprConsentModeEnum.NoCmp, this.Ge.bindToConsentApi().then(() => {
                                this.isConsentConnatix() || (this.gdprConsentMode = h.ProtoGdprConsentModeEnum.NoConnatixConsent), this.resolveEvent(Y.CONSENT_DATA_UPDATE);
                            }).catch(t => {
                            }));
                        }, this.bs = () => {
                            this.isConsentConnatix() && (this.onEvent([K.USER_INFO_RECEIVED]).then(() => {
                                this.fs && (this.vs.syncThirdPartyCookieList(), this.vs.unsecuredCookieSync && this.vs.syncThirdPartyCookieList(this.vs.unsecuredCookieSync), this.vs.syncFirstPartyCookie(d.USER_ID));
                            }), this.onEvent([
                                K.SYNC_URLS_RECEIVED,
                                Y.CONSENT_DATA_UPDATE,
                                Y.CCPA_INFO_RECEIVED
                            ]).then(() => {
                                if (this.isConsentConnatix() && this.ms.isSellUserAllowed())
                                    try {
                                        this.gs.syncUrls(this.de.userId, this.de.getScope());
                                    } catch (t) {
                                        Object(p.a)({
                                            level: h.ProtoLoggingLevelEnum.WARNING,
                                            message: 'UserManager_syncUrls',
                                            exception: t.message,
                                            callStack: t.stack
                                        });
                                    }
                            }));
                        };
                        try {
                            this.de = l.getInstance(t), this.cs || (this.vs = new v(this.de, t));
                            const {
                                cmp: i,
                                tcf: e
                            } = this._appSettings;
                            this.Ge = new D(!!this.ds, t, {
                                cmp: i,
                                tcf: e
                            }), this.gs = new G(this.Ge, this.isGDPR()), this.ms = new X(this.de, this._appSettings.usPrivacyString), this.ys();
                        } catch (t) {
                            Object(p.a)({
                                callStack: t.stack,
                                exception: t.message,
                                message: 'UserManager_constructor',
                                level: h.ProtoLoggingLevelEnum.FATAL
                            });
                        }
                    }
                    ys() {
                        this.vs && this.vs.fetchCookies(), this.ps(), this.onEvent([Y.CONSENT_DATA_UPDATE]).then(() => {
                            setTimeout(() => {
                                try {
                                    if (this.cs)
                                        return;
                                    this.bs();
                                } catch (t) {
                                    Object(p.a)({
                                        callStack: t.stack,
                                        exception: t.message,
                                        message: 'UserManager_consent_data_received',
                                        level: h.ProtoLoggingLevelEnum.FATAL
                                    });
                                }
                            }, 0);
                        });
                    }
                    ws(t) {
                        return void 0 === this.ls[t] && (this.ls[t] = new J.a(), this.ls[t].promise.catch(() => {
                            return this.ls[t].reject();
                        })), this.ls[t];
                    }
                    resolveEvent(t, i) {
                        this.ws(t).resolve(i);
                    }
                    setAmpUserConsent(t) {
                        this.Ge.setAmpUserConsent(t), this.resolveEvent(Y.CONSENT_DATA_UPDATE);
                    }
                    setPageUrl(t) {
                        this.Ge && this.Ge.setPageUrl(t);
                    }
                    onEvent(t) {
                        const i = t.map(t => {
                            return this.ws(t).promise;
                        });
                        return Promise.all(i);
                    }
                    isConsent(t, i) {
                        return this.Ge.isConsent(t, i);
                    }
                    isConsentConnatix() {
                        return this.Ge.isConsentConnatix();
                    }
                    getConsentPayload() {
                        return this.Ge.getConsentDataPayload();
                    }
                    isConsentRequired() {
                        return this.Ge.isConsentRequired();
                    }
                    setThirdPartySyncUrls(t) {
                        this.cs || this.gs.setSyncUrls(t) && this.resolveEvent(K.SYNC_URLS_RECEIVED);
                    }
                    setGeoLocation(t) {
                        this.ms.setGeoLocation(t), this.ms.fetchUsPrivacyString().then(() => {
                            this.resolveEvent(Y.CCPA_INFO_RECEIVED);
                        }).catch(() => {
                            this.resolveEvent(Y.CCPA_INFO_RECEIVED);
                        });
                    }
                    getUserId() {
                        if (this.isConsentConnatix() && this.vs)
                            return this.vs.getUserId();
                    }
                    Os() {
                        return this.vs && this.vs.getUserId();
                    }
                    setUserInformation(t) {
                        this.vs && (this.vs.setUserInformation(t), this.resolveEvent(K.USER_INFO_RECEIVED), !this.cs && this.isConsentConnatix() && this.vs.syncFirstPartyCookie(d.USER_ID));
                    }
                    isGDPR() {
                        return !!this.ds;
                    }
                    getUsPrivacyString() {
                        return this.ms.getUsPrivacyString();
                    }
                    isCcpaApplicable() {
                        return this.ms.isCcpaApplicable();
                    }
                    isSellUserAllowed() {
                        return this.cs || this.ms.isSellUserAllowed();
                    }
                    getDeviceId() {
                        if (this.isConsentConnatix())
                            return this._appSettings.deviceID;
                    }
                    Ss() {
                        return this._appSettings.deviceID;
                    }
                    getTrackableUser() {
                        return this.cs ? this.getDeviceId() : this.getUserId();
                    }
                    getForcedTrackableUser() {
                        return this.cs ? this.Ss() : this.Os();
                    }
                    registerPlsCall(t) {
                        return this.isConsentConnatix() || (this.fs = !0), this.de.registerPlsCall(t);
                    }
                    setBrowserInfo(t) {
                        this.vs && this.vs.setBrowserInfo(t, this.isConsentConnatix());
                    }
                    getGdprConsentApiType() {
                        return this.Ge.getConsentApiType();
                    }
                }
            },
            function (t, i, e) {
                'use strict';
                var s, n;
                e.d(i, 'a', function () {
                    return r;
                }), function (t) {
                    t.hidden = 'hidden', t.msHidden = 'msHidden', t.webkitHidden = 'webkitHidden';
                }(s || (s = {})), function (t) {
                    t.visibilitychange = 'visibilitychange', t.msvisibilitychange = 'msvisibilitychange', t.webkitvisibilitychange = 'webkitvisibilitychange';
                }(n || (n = {}));
                class r {
                    constructor(t) {
                        this.js = t, this.ks = [], this._s(), this.As();
                    }
                    on(t) {
                        this.ks.push(t), t(this.isDocumentVisible());
                    }
                    off(t) {
                        this.ks = this.ks.filter(i => {
                            return i !== t;
                        });
                    }
                    _s() {
                        void 0 !== this.js.getDocumentProperty(s.hidden) ? (this.Is = s.hidden, this.Cs = n.visibilitychange) : void 0 !== this.js.getDocumentProperty(s.msHidden) ? (this.Is = s.msHidden, this.Cs = n.msvisibilitychange) : void 0 !== this.js.getDocumentProperty(s.webkitHidden) && (this.Is = s.webkitHidden, this.Cs = n.webkitvisibilitychange);
                    }
                    As() {
                        this.js.addEventListenerOnGlobal(this.Cs, () => {
                            this.ks.forEach(t => {
                                t(this.isDocumentVisible());
                            });
                        }, !0, !1);
                    }
                    isDocumentVisible() {
                        return !this.js.getDocumentProperty(this.Is);
                    }
                }
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return s;
                });
                const s = '//securepubads.g.doubleclick.net/tag/js/gpt.js';
            },
            function (t, i) {
                t.exports = '<cnx class=cnx-g-card> <cnx class=cnx-g-card-image-container> <cnx class=cnx-g-triangle></cnx> <cnx class=cnx-g-card-image> <cnx class=cnx-g-card-icon> <cnx class=cnx-ui-btn> <cnx class="cnx-icon-button cnx-ui-btn-hoverable cnx-mod-hover"> <cnx class=cnx-btn-container> <cnx class=cnx-play-icon> <svg markup-inline class=cnx-color-icon xmlns=http://www.w3.org/2000/svg viewBox="0 0 24 24"><path d="M5 4v16l16-8z" fill-rule=evenodd /></svg> </cnx> </cnx> </cnx> </cnx> </cnx> </cnx> </cnx> <cnx class=cnx-g-card-text-container> <cnx class=cnx-g-card-text> <cnx-span></cnx-span> </cnx> </cnx> </cnx> ';
            },
            function (t, i) {
                t.exports = '<cnx class="cnx-icon-button cnx-button-caption cnx-ui-btn-hoverable"> <cnx class=cnx-btn-container> <cnx class=cnx-caption-off-icon> <svg markup-inline class=cnx-color-icon xmlns=http://www.w3.org/2000/svg viewBox="0 0 24 24"><path d="M20.556 5H3.444C3.163 5 3 5.15 3 5.25v13.5c0 .1.163.25.444.25h17.11c.275 0 .444-.156.444-.25V5.25c0-.094-.17-.25-.444-.25zm0-2C21.9 3 23 4.013 23 5.25v13.5c0 1.238-1.1 2.25-2.444 2.25H3.444C2.088 21 1 19.988 1 18.75V5.25C1 4.013 2.088 3 3.444 3h17.11zM11 11H9.5v-.5h-2v3h2V13H11v1c0 .55-.45 1-1 1H7c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v1zm7 0h-1.5v-.5h-2v3h2V13H18v1c0 .55-.45 1-1 1h-3c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v1z" fill-rule=evenodd /></svg> </cnx> <cnx class=cnx-caption-on-icon> <svg markup-inline class=cnx-color-icon xmlns=http://www.w3.org/2000/svg viewBox="0 0 24 24"><g fill=none><path d="M20.6 3C21.9 3 23 4 23 5.3L23 18.8C23 20 21.9 21 20.6 21L3.4 21C2.1 21 1 20 1 18.8L1 5.3C1 4 2.1 3 3.4 3L20.6 3Z" class=cnx-color-accent /><path d="M11 11L9.5 11 9.5 10.5 7.5 10.5 7.5 13.5 9.5 13.5 9.5 13 11 13 11 14C11 14.6 10.6 15 10 15L7 15C6.5 15 6 14.6 6 14L6 10C6 9.5 6.5 9 7 9L10 9C10.6 9 11 9.5 11 10L11 11ZM18 11L16.5 11 16.5 10.5 14.5 10.5 14.5 13.5 16.5 13.5 16.5 13 18 13 18 14C18 14.6 17.6 15 17 15L14 15C13.5 15 13 14.6 13 14L13 10C13 9.5 13.5 9 14 9L17 9C17.6 9 18 9.5 18 10L18 11Z" class=cnx-color-icon /></g></svg> </cnx> </cnx> </cnx> ';
            },
            function (t, i) {
                t.exports = '<cnx class=cnx-ui-loader> <svg class=cnx-color-accent version=1.1 viewBox="0 0 79 90" xmlns=http://www.w3.org/2000/svg><polygon points="21 73.322 11 79 11 12 21 17.678" fill=none stroke-linecap=round stroke-linejoin=round /><polygon points="27 70 27 21 38 27.267 38 63.733" fill=transparent stroke-linecap=round stroke-linejoin=round /><polygon points="44 61 44 31 54 36.769 54 55.231" fill=none stroke-linecap=round stroke-linejoin=round /><polygon points="60 51 60 40 70 45.5" fill=none stroke-linecap=round stroke-linejoin=round /></svg> </cnx> ';
            },
            function (t, i) {
                t.exports = '<svg viewBox="0 0 25 25" xmlns="http://www.w3.org/2000/svg" fill-rule="evenodd"><path d="M5 21.453c2.022 1.627 4.6 2.602 7.387 2.602 3.973 0 7.485-1.967 9.622-4.977l-4.596-3.34a3.87 3.87 0 0 0-4.548 0L5 21.453zM22 4.977A11.75 11.75 0 0 0 12.387 0 11.74 11.74 0 0 0 5 2.602l7.9 5.74a3.81 3.81 0 0 0 4.479 0l4.63-3.364zm1.563 11.395c.494-1.3.767-2.712.767-4.186S24.057 9.3 23.563 8l-3.858 2.803a1.71 1.71 0 0 0 0 2.766l3.858 2.803z" fill="#fff"></path><path d="M2.378 5c-.024-.017-.057-.012-.074.01A11.74 11.74 0 0 0 0 12.025a11.74 11.74 0 0 0 2.304 7.004c.017.023.05.028.074.01l8.013-5.822c.81-.59.81-1.797 0-2.386L2.378 5z" fill="#09f"></path></svg>';
            },
            function (t, i, e) {
                'use strict';
                Object.defineProperty(i, '_', { value: !0 });
                var s = e(35), n = function () {
                        function t() {
                        }
                        var i, e, n, r, h, a, o, c, u, l, d, f, p, b, v, m, g, y;
                        return i = s.Fields.cmpId, e = s.Fields.cmpVersion, n = s.Fields.consentLanguage, r = s.Fields.consentScreen, h = s.Fields.created, a = s.Fields.isServiceSpecific, o = s.Fields.lastUpdated, c = s.Fields.policyVersion, u = s.Fields.publisherCountryCode, l = s.Fields.publisherLegitimateInterests, d = s.Fields.publisherConsents, f = s.Fields.purposeConsents, p = s.Fields.purposeLegitimateInterests, b = s.Fields.purposeOneTreatment, v = s.Fields.specialFeatureOptins, m = s.Fields.useNonStandardStacks, g = s.Fields.vendorListVersion, y = s.Fields.version, t[i] = 12, t[e] = 12, t[n] = 12, t[r] = 6, t[h] = 36, t[a] = 1, t[o] = 36, t[c] = 6, t[u] = 12, t[l] = 24, t[d] = 24, t[f] = 24, t[p] = 24, t[b] = 1, t[v] = 12, t[m] = 1, t[g] = 12, t[y] = 6, t.anyBoolean = 1, t.encodingType = 1, t.maxId = 16, t.numCustomPurposes = 6, t.numEntries = 12, t.numRestrictions = 12, t.purposeId = 6, t.restrictionType = 2, t.segmentType = 3, t.singleOrRange = 1, t.vendorId = 16, t;
                    }();
                i.BitLength = n;
            },
            function (t, i, e) {
                'use strict';
                var s;
                Object.defineProperty(i, '_', { value: !0 }), (s = i.RestrictionType || (i.RestrictionType = {}))[s.NOT_ALLOWED = 0] = 'NOT_ALLOWED', s[s.REQUIRE_CONSENT = 1] = 'REQUIRE_CONSENT', s[s.REQUIRE_LI = 2] = 'REQUIRE_LI';
            },
            function (t, i, e) {
                'use strict';
                Object.defineProperty(i, '_', { value: !0 });
                var s = e(46), n = e(33), r = e(35), h = function () {
                        function t() {
                        }
                        return t.encode = function (t, i) {
                            for (var e = '', n = 1; n <= i; n++)
                                e += s.BooleanEncoder.encode(t.has(n));
                            return e;
                        }, t.decode = function (t, i) {
                            if (t.length !== i)
                                throw new n.DecodingError('bitfield encoding length mismatch');
                            for (var e = new r.Vector(), h = 1; h <= i; h++)
                                s.BooleanEncoder.decode(t[h - 1]) && e.set(h);
                            return e.bitLength = t.length, e;
                        }, t;
                    }();
                i.FixedVectorEncoder = h;
            },
            function (t, i) {
                t.exports = '<cnx class=cnx-ui-progress-label> <cnx-span></cnx-span> </cnx> ';
            },
            function (t, i) {
                t.exports = '<svg class="cnx-color-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18 21h3V3h-3v18zM3 21l14-9L3 3v18z" fill-rule="evenodd"></path></svg>';
            },
            function (t, i, e) {
                'use strict';
                t.exports = e(120);
            },
            function (t, i, e) {
                'use strict';
                t.exports = l;
                var s, n = e(39), r = n.LongBits, h = n.base64, a = n.utf8;
                function o(t, i, e) {
                    this.fn = t, this.len = i, this.next = void 0, this.val = e;
                }
                function c() {
                }
                function u(t) {
                    this.head = t.head, this.tail = t.tail, this.len = t.len, this.next = t.states;
                }
                function l() {
                    this.len = 0, this.head = new o(c, 0, 0), this.tail = this.head, this.states = null;
                }
                var d = function () {
                    return n.Buffer ? function () {
                        return (l.create = function () {
                            return new s();
                        })();
                    } : function () {
                        return new l();
                    };
                };
                function f(t, i, e) {
                    i[e] = 255 & t;
                }
                function p(t, i) {
                    this.len = t, this.next = void 0, this.val = i;
                }
                function b(t, i, e) {
                    for (; t.hi;)
                        i[e++] = 127 & t.lo | 128, t.lo = (t.lo >>> 7 | t.hi << 25) >>> 0, t.hi >>>= 7;
                    for (; t.lo > 127;)
                        i[e++] = 127 & t.lo | 128, t.lo = t.lo >>> 7;
                    i[e++] = t.lo;
                }
                function v(t, i, e) {
                    i[e] = 255 & t, i[e + 1] = t >>> 8 & 255, i[e + 2] = t >>> 16 & 255, i[e + 3] = t >>> 24;
                }
                l.create = d(), l.alloc = function (t) {
                    return new n.Array(t);
                }, n.Array !== Array && (l.alloc = n.pool(l.alloc, n.Array.prototype.subarray)), l.prototype.Ts = function (t, i, e) {
                    return this.tail = this.tail.next = new o(t, i, e), this.len += i, this;
                }, p.prototype = Object.create(o.prototype), p.prototype.fn = function (t, i, e) {
                    for (; t > 127;)
                        i[e++] = 127 & t | 128, t >>>= 7;
                    i[e] = t;
                }, l.prototype.uint32 = function (t) {
                    return this.len += (this.tail = this.tail.next = new p((t >>>= 0) < 128 ? 1 : t < 16384 ? 2 : t < 2097152 ? 3 : t < 268435456 ? 4 : 5, t)).len, this;
                }, l.prototype.int32 = function (t) {
                    return t < 0 ? this.Ts(b, 10, r.fromNumber(t)) : this.uint32(t);
                }, l.prototype.sint32 = function (t) {
                    return this.uint32((t << 1 ^ t >> 31) >>> 0);
                }, l.prototype.uint64 = function (t) {
                    var i = r.from(t);
                    return this.Ts(b, i.length(), i);
                }, l.prototype.int64 = l.prototype.uint64, l.prototype.sint64 = function (t) {
                    var i = r.from(t).zzEncode();
                    return this.Ts(b, i.length(), i);
                }, l.prototype.bool = function (t) {
                    return this.Ts(f, 1, t ? 1 : 0);
                }, l.prototype.fixed32 = function (t) {
                    return this.Ts(v, 4, t >>> 0);
                }, l.prototype.sfixed32 = l.prototype.fixed32, l.prototype.fixed64 = function (t) {
                    var i = r.from(t);
                    return this.Ts(v, 4, i.lo).Ts(v, 4, i.hi);
                }, l.prototype.sfixed64 = l.prototype.fixed64, l.prototype.float = function (t) {
                    return this.Ts(n.float.writeFloatLE, 4, t);
                }, l.prototype.double = function (t) {
                    return this.Ts(n.float.writeDoubleLE, 8, t);
                };
                var m = n.Array.prototype.set ? function (t, i, e) {
                    i.set(t, e);
                } : function (t, i, e) {
                    for (var s = 0; s < t.length; ++s)
                        i[e + s] = t[s];
                };
                l.prototype.bytes = function (t) {
                    var i = t.length >>> 0;
                    if (!i)
                        return this.Ts(f, 1, 0);
                    if (n.isString(t)) {
                        var e = l.alloc(i = h.length(t));
                        h.decode(t, e, 0), t = e;
                    }
                    return this.uint32(i).Ts(m, i, t);
                }, l.prototype.string = function (t) {
                    var i = a.length(t);
                    return i ? this.uint32(i).Ts(a.write, i, t) : this.Ts(f, 1, 0);
                }, l.prototype.fork = function () {
                    return this.states = new u(this), this.head = this.tail = new o(c, 0, 0), this.len = 0, this;
                }, l.prototype.reset = function () {
                    return this.states ? (this.head = this.states.head, this.tail = this.states.tail, this.len = this.states.len, this.states = this.states.next) : (this.head = this.tail = new o(c, 0, 0), this.len = 0), this;
                }, l.prototype.ldelim = function () {
                    var t = this.head, i = this.tail, e = this.len;
                    return this.reset().uint32(e), e && (this.tail.next = t.next, this.tail = i, this.len += e), this;
                }, l.prototype.finish = function () {
                    for (var t = this.head.next, i = this.constructor.alloc(this.len), e = 0; t;)
                        t.fn(t.val, i, e), e += t.len, t = t.next;
                    return i;
                }, l.Ki = function (t) {
                    s = t, l.create = d(), s.Ki();
                };
            },
            function (t, i) {
                var e;
                e = function () {
                    return this;
                }();
                try {
                    e = e || new Function('return this')();
                } catch (t) {
                    'object' == typeof window && (e = window);
                }
                t.exports = e;
            },
            function (t, i, e) {
                'use strict';
                t.exports = o;
                var s, n = e(39), r = n.LongBits, h = n.utf8;
                function a(t, i) {
                    return RangeError('index out of range: ' + t.pos + ' + ' + (i || 1) + ' > ' + t.len);
                }
                function o(t) {
                    this.buf = t, this.pos = 0, this.len = t.length;
                }
                var c, u = 'undefined' != typeof Uint8Array ? function (t) {
                        if (t instanceof Uint8Array || Array.isArray(t))
                            return new o(t);
                        throw Error('illegal buffer');
                    } : function (t) {
                        if (Array.isArray(t))
                            return new o(t);
                        throw Error('illegal buffer');
                    }, l = function () {
                        return n.Buffer ? function (t) {
                            return (o.create = function (t) {
                                return n.Buffer.isBuffer(t) ? new s(t) : u(t);
                            })(t);
                        } : u;
                    };
                function d() {
                    var t = new r(0, 0), i = 0;
                    if (!(this.len - this.pos > 4)) {
                        for (; i < 3; ++i) {
                            if (this.pos >= this.len)
                                throw a(this);
                            if (t.lo = (t.lo | (127 & this.buf[this.pos]) << 7 * i) >>> 0, this.buf[this.pos++] < 128)
                                return t;
                        }
                        return t.lo = (t.lo | (127 & this.buf[this.pos++]) << 7 * i) >>> 0, t;
                    }
                    for (; i < 4; ++i)
                        if (t.lo = (t.lo | (127 & this.buf[this.pos]) << 7 * i) >>> 0, this.buf[this.pos++] < 128)
                            return t;
                    if (t.lo = (t.lo | (127 & this.buf[this.pos]) << 28) >>> 0, t.hi = (t.hi | (127 & this.buf[this.pos]) >> 4) >>> 0, this.buf[this.pos++] < 128)
                        return t;
                    if (i = 0, this.len - this.pos > 4) {
                        for (; i < 5; ++i)
                            if (t.hi = (t.hi | (127 & this.buf[this.pos]) << 7 * i + 3) >>> 0, this.buf[this.pos++] < 128)
                                return t;
                    } else
                        for (; i < 5; ++i) {
                            if (this.pos >= this.len)
                                throw a(this);
                            if (t.hi = (t.hi | (127 & this.buf[this.pos]) << 7 * i + 3) >>> 0, this.buf[this.pos++] < 128)
                                return t;
                        }
                    throw Error('invalid varint encoding');
                }
                function f(t, i) {
                    return (t[i - 4] | t[i - 3] << 8 | t[i - 2] << 16 | t[i - 1] << 24) >>> 0;
                }
                function p() {
                    if (this.pos + 8 > this.len)
                        throw a(this, 8);
                    return new r(f(this.buf, this.pos += 4), f(this.buf, this.pos += 4));
                }
                o.create = l(), o.prototype.Ps = n.Array.prototype.subarray || n.Array.prototype.slice, o.prototype.uint32 = (c = 4294967295, function () {
                    if (c = (127 & this.buf[this.pos]) >>> 0, this.buf[this.pos++] < 128)
                        return c;
                    if (c = (c | (127 & this.buf[this.pos]) << 7) >>> 0, this.buf[this.pos++] < 128)
                        return c;
                    if (c = (c | (127 & this.buf[this.pos]) << 14) >>> 0, this.buf[this.pos++] < 128)
                        return c;
                    if (c = (c | (127 & this.buf[this.pos]) << 21) >>> 0, this.buf[this.pos++] < 128)
                        return c;
                    if (c = (c | (15 & this.buf[this.pos]) << 28) >>> 0, this.buf[this.pos++] < 128)
                        return c;
                    if ((this.pos += 5) > this.len)
                        throw this.pos = this.len, a(this, 10);
                    return c;
                }), o.prototype.int32 = function () {
                    return 0 | this.uint32();
                }, o.prototype.sint32 = function () {
                    var t = this.uint32();
                    return t >>> 1 ^ -(1 & t) | 0;
                }, o.prototype.bool = function () {
                    return 0 !== this.uint32();
                }, o.prototype.fixed32 = function () {
                    if (this.pos + 4 > this.len)
                        throw a(this, 4);
                    return f(this.buf, this.pos += 4);
                }, o.prototype.sfixed32 = function () {
                    if (this.pos + 4 > this.len)
                        throw a(this, 4);
                    return 0 | f(this.buf, this.pos += 4);
                }, o.prototype.float = function () {
                    if (this.pos + 4 > this.len)
                        throw a(this, 4);
                    var t = n.float.readFloatLE(this.buf, this.pos);
                    return this.pos += 4, t;
                }, o.prototype.double = function () {
                    if (this.pos + 8 > this.len)
                        throw a(this, 4);
                    var t = n.float.readDoubleLE(this.buf, this.pos);
                    return this.pos += 8, t;
                }, o.prototype.bytes = function () {
                    var t = this.uint32(), i = this.pos, e = this.pos + t;
                    if (e > this.len)
                        throw a(this, t);
                    return this.pos += t, Array.isArray(this.buf) ? this.buf.slice(i, e) : i === e ? new this.buf.constructor(0) : this.Ps.call(this.buf, i, e);
                }, o.prototype.string = function () {
                    var t = this.bytes();
                    return h.read(t, 0, t.length);
                }, o.prototype.skip = function (t) {
                    if ('number' == typeof t) {
                        if (this.pos + t > this.len)
                            throw a(this, t);
                        this.pos += t;
                    } else
                        do {
                            if (this.pos >= this.len)
                                throw a(this);
                        } while (128 & this.buf[this.pos++]);
                    return this;
                }, o.prototype.skipType = function (t) {
                    switch (t) {
                    case 0:
                        this.skip();
                        break;
                    case 1:
                        this.skip(8);
                        break;
                    case 2:
                        this.skip(this.uint32());
                        break;
                    case 3:
                        for (; 4 != (t = 7 & this.uint32());)
                            this.skipType(t);
                        break;
                    case 5:
                        this.skip(4);
                        break;
                    default:
                        throw Error('invalid wire type ' + t + ' at offset ' + this.pos);
                    }
                    return this;
                }, o.Ki = function (t) {
                    s = t, o.create = l(), s.Ki();
                    var i = n.Long ? 'toLong' : 'toNumber';
                    n.merge(o.prototype, {
                        int64: function () {
                            return d.call(this)[i](!1);
                        },
                        uint64: function () {
                            return d.call(this)[i](!0);
                        },
                        sint64: function () {
                            return d.call(this).zzDecode()[i](!1);
                        },
                        fixed64: function () {
                            return p.call(this)[i](!0);
                        },
                        sfixed64: function () {
                            return p.call(this)[i](!1);
                        }
                    });
                };
            },
            function (t, i, e) {
                'use strict';
                function s(t) {
                    for (var e in t)
                        i.hasOwnProperty(e) || (i[e] = t[e]);
                }
                Object.defineProperty(i, '_', { value: !0 }), s(e(65)), s(e(55)), s(e(142)), s(e(146)), s(e(70)), s(e(76));
            },
            function (t, i, e) {
                'use strict';
                Object.defineProperty(i, '_', { value: !0 });
                var s = e(33), n = function () {
                        function t() {
                        }
                        return t.encode = function (t) {
                            if (!/^[0-1]+$/.test(t))
                                throw new s.EncodingError('Invalid bitField');
                            var i = t.length % this.LCM;
                            t += i ? '0'.repeat(this.LCM - i) : '';
                            for (var e = '', n = 0; n < t.length; n += this.BASIS)
                                e += this.DICT[parseInt(t.substr(n, this.BASIS), 2)];
                            return e;
                        }, t.decode = function (t) {
                            if (!/^[A-Za-z0-9\-_]+$/.test(t))
                                throw new s.DecodingError('Invalidly encoded Base64URL string');
                            for (var i = '', e = 0; e < t.length; e++) {
                                var n = this.REVERSE_DICT.get(t[e]).toString(2);
                                i += '0'.repeat(this.BASIS - n.length) + n;
                            }
                            return i;
                        }, t.DICT = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_', t.REVERSE_DICT = new Map([
                            [
                                'A',
                                0
                            ],
                            [
                                'B',
                                1
                            ],
                            [
                                'C',
                                2
                            ],
                            [
                                'D',
                                3
                            ],
                            [
                                'E',
                                4
                            ],
                            [
                                'F',
                                5
                            ],
                            [
                                'G',
                                6
                            ],
                            [
                                'H',
                                7
                            ],
                            [
                                'I',
                                8
                            ],
                            [
                                'J',
                                9
                            ],
                            [
                                'K',
                                10
                            ],
                            [
                                'L',
                                11
                            ],
                            [
                                'M',
                                12
                            ],
                            [
                                'N',
                                13
                            ],
                            [
                                'O',
                                14
                            ],
                            [
                                'P',
                                15
                            ],
                            [
                                'Q',
                                16
                            ],
                            [
                                'R',
                                17
                            ],
                            [
                                'S',
                                18
                            ],
                            [
                                'T',
                                19
                            ],
                            [
                                'U',
                                20
                            ],
                            [
                                'V',
                                21
                            ],
                            [
                                'W',
                                22
                            ],
                            [
                                'X',
                                23
                            ],
                            [
                                'Y',
                                24
                            ],
                            [
                                'Z',
                                25
                            ],
                            [
                                'a',
                                26
                            ],
                            [
                                'b',
                                27
                            ],
                            [
                                'c',
                                28
                            ],
                            [
                                'd',
                                29
                            ],
                            [
                                'e',
                                30
                            ],
                            [
                                'f',
                                31
                            ],
                            [
                                'g',
                                32
                            ],
                            [
                                'h',
                                33
                            ],
                            [
                                'i',
                                34
                            ],
                            [
                                'j',
                                35
                            ],
                            [
                                'k',
                                36
                            ],
                            [
                                'l',
                                37
                            ],
                            [
                                'm',
                                38
                            ],
                            [
                                'n',
                                39
                            ],
                            [
                                'o',
                                40
                            ],
                            [
                                'p',
                                41
                            ],
                            [
                                'q',
                                42
                            ],
                            [
                                'r',
                                43
                            ],
                            [
                                's',
                                44
                            ],
                            [
                                't',
                                45
                            ],
                            [
                                'u',
                                46
                            ],
                            [
                                'v',
                                47
                            ],
                            [
                                'w',
                                48
                            ],
                            [
                                'x',
                                49
                            ],
                            [
                                'y',
                                50
                            ],
                            [
                                'z',
                                51
                            ],
                            [
                                '0',
                                52
                            ],
                            [
                                '1',
                                53
                            ],
                            [
                                '2',
                                54
                            ],
                            [
                                '3',
                                55
                            ],
                            [
                                '4',
                                56
                            ],
                            [
                                '5',
                                57
                            ],
                            [
                                '6',
                                58
                            ],
                            [
                                '7',
                                59
                            ],
                            [
                                '8',
                                60
                            ],
                            [
                                '9',
                                61
                            ],
                            [
                                '-',
                                62
                            ],
                            [
                                '_',
                                63
                            ]
                        ]), t.BASIS = 6, t.LCM = 24, t;
                    }();
                i.Base64Url = n;
            },
            function (t, i, e) {
                'use strict';
                var s, n = this && this.Es || (s = function (t, i) {
                        return (s = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (t, i) {
                            t.__proto__ = i;
                        } || function (t, i) {
                            for (var e in i)
                                i.hasOwnProperty(e) && (t[e] = i[e]);
                        })(t, i);
                    }, function (t, i) {
                        function e() {
                            this.constructor = t;
                        }
                        s(t, i), t.prototype = null === i ? Object.create(i) : (e.prototype = i.prototype, new e());
                    });
                Object.defineProperty(i, '_', { value: !0 });
                var r = function (t) {
                    function i() {
                        var i = null !== t && t.apply(this, arguments) || this;
                        return i.root = null, i;
                    }
                    return n(i, t), i.prototype.isEmpty = function () {
                        return !this.root;
                    }, i.prototype.add = function (t) {
                        var i, e = {
                                value: t,
                                left: null,
                                right: null
                            };
                        if (this.isEmpty())
                            this.root = e;
                        else
                            for (i = this.root;;)
                                if (t < i.value) {
                                    if (null === i.left) {
                                        i.left = e;
                                        break;
                                    }
                                    i = i.left;
                                } else {
                                    if (!(t > i.value))
                                        break;
                                    if (null === i.right) {
                                        i.right = e;
                                        break;
                                    }
                                    i = i.right;
                                }
                    }, i.prototype.get = function () {
                        for (var t = [], i = this.root; i;)
                            if (i.left) {
                                for (var e = i.left; e.right && e.right != i;)
                                    e = e.right;
                                e.right == i ? (e.right = null, t.push(i.value), i = i.right) : (e.right = i, i = i.left);
                            } else
                                t.push(i.value), i = i.right;
                        return t;
                    }, i.prototype.contains = function (t) {
                        for (var i = !1, e = this.root; e;) {
                            if (e.value === t) {
                                i = !0;
                                break;
                            }
                            t > e.value ? e = e.right : t < e.value && (e = e.left);
                        }
                        return i;
                    }, i.prototype.min = function (t) {
                        var i;
                        for (void 0 === t && (t = this.root); t;)
                            t.left ? t = t.left : (i = t.value, t = null);
                        return i;
                    }, i.prototype.max = function (t) {
                        var i;
                        for (void 0 === t && (t = this.root); t;)
                            t.right ? t = t.right : (i = t.value, t = null);
                        return i;
                    }, i.prototype.remove = function (t, i) {
                        void 0 === i && (i = this.root);
                        for (var e = null, s = 'left'; i;)
                            if (t < i.value)
                                e = i, i = i.left, s = 'left';
                            else if (t > i.value)
                                e = i, i = i.right, s = 'right';
                            else {
                                if (i.left || i.right)
                                    if (i.left)
                                        if (i.right) {
                                            var n = this.min(i.right);
                                            this.remove(n, i.right), i.value = n;
                                        } else
                                            e ? e[s] = i.left : this.root = i.left;
                                    else
                                        e ? e[s] = i.right : this.root = i.right;
                                else
                                    e ? e[s] = null : this.root = null;
                                i = null;
                            }
                    }, i;
                }(e(41).Cloneable);
                i.BinarySearchTree = r;
            },
            function (t, i, e) {
                'use strict';
                Object.defineProperty(i, '_', { value: !0 });
                var s = function () {
                    function t() {
                    }
                    return t.cmpId = 'cmpId', t.cmpVersion = 'cmpVersion', t.consentLanguage = 'consentLanguage', t.consentScreen = 'consentScreen', t.created = 'created', t.supportOOB = 'supportOOB', t.isServiceSpecific = 'isServiceSpecific', t.lastUpdated = 'lastUpdated', t.numCustomPurposes = 'numCustomPurposes', t.policyVersion = 'policyVersion', t.publisherCountryCode = 'publisherCountryCode', t.publisherCustomConsents = 'publisherCustomConsents', t.publisherCustomLegitimateInterests = 'publisherCustomLegitimateInterests', t.publisherLegitimateInterests = 'publisherLegitimateInterests', t.publisherConsents = 'publisherConsents', t.publisherRestrictions = 'publisherRestrictions', t.purposeConsents = 'purposeConsents', t.purposeLegitimateInterests = 'purposeLegitimateInterests', t.purposeOneTreatment = 'purposeOneTreatment', t.specialFeatureOptins = 'specialFeatureOptins', t.useNonStandardStacks = 'useNonStandardStacks', t.vendorConsents = 'vendorConsents', t.vendorLegitimateInterests = 'vendorLegitimateInterests', t.vendorListVersion = 'vendorListVersion', t.vendorsAllowed = 'vendorsAllowed', t.vendorsDisclosed = 'vendorsDisclosed', t.version = 'version', t;
                }();
                i.Fields = s;
            },
            function (t, i, e) {
                'use strict';
                var s, n = this && this.Es || (s = function (t, i) {
                        return (s = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (t, i) {
                            t.__proto__ = i;
                        } || function (t, i) {
                            for (var e in i)
                                i.hasOwnProperty(e) && (t[e] = i[e]);
                        })(t, i);
                    }, function (t, i) {
                        function e() {
                            this.constructor = t;
                        }
                        s(t, i), t.prototype = null === i ? Object.create(i) : (e.prototype = i.prototype, new e());
                    });
                Object.defineProperty(i, '_', { value: !0 });
                var r = e(41), h = e(33), a = e(56), o = function (t) {
                        function i(i, e) {
                            var s = t.call(this) || this;
                            return void 0 !== i && (s.purposeId = i), void 0 !== e && (s.restrictionType = e), s;
                        }
                        return n(i, t), i.unHash = function (t) {
                            var e = t.split(this.hashSeparator), s = new i();
                            if (2 !== e.length)
                                throw new h.TCModelError('hash', t);
                            return s.purposeId = parseInt(e[0], 10), s.restrictionType = parseInt(e[1], 10), s;
                        }, Object.defineProperty(i.prototype, 'hash', {
                            get: function () {
                                if (!this.isValid())
                                    throw new Error('cannot hash invalid PurposeRestriction');
                                return '' + this.purposeId + i.hashSeparator + this.restrictionType;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(i.prototype, 'purposeId', {
                            get: function () {
                                return this.purposeId_;
                            },
                            set: function (t) {
                                this.purposeId_ = t;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), i.prototype.isValid = function () {
                            return Number.isInteger(this.purposeId) && this.purposeId > 0 && (this.restrictionType === a.RestrictionType.NOT_ALLOWED || this.restrictionType === a.RestrictionType.REQUIRE_CONSENT || this.restrictionType === a.RestrictionType.REQUIRE_LI);
                        }, i.prototype.isSameAs = function (t) {
                            return this.purposeId === t.purposeId && this.restrictionType === t.restrictionType;
                        }, i.hashSeparator = '-', i;
                    }(r.Cloneable);
                i.PurposeRestriction = o;
            },
            function (t, i, e) {
                'use strict';
                var s;
                Object.defineProperty(i, '_', { value: !0 }), (s = i.Segment || (i.Segment = {})).CORE = 'core', s.VENDORS_DISCLOSED = 'vendorsDisclosed', s.VENDORS_ALLOWED = 'vendorsAllowed', s.PUBLISHER_TC = 'publisherTC';
            },
            function (t, i, e) {
                'use strict';
                function s(t) {
                    for (var e in t)
                        i.hasOwnProperty(e) || (i[e] = t[e]);
                }
                Object.defineProperty(i, '_', { value: !0 }), s(e(46)), s(e(71)), s(e(143)), s(e(57)), s(e(40)), s(e(72)), s(e(73)), s(e(75)), s(e(74));
            },
            function (t, i, e) {
                'use strict';
                Object.defineProperty(i, '_', { value: !0 });
                var s = e(40), n = e(33), r = function () {
                        function t() {
                        }
                        return t.encode = function (t, i) {
                            return s.IntEncoder.encode(Math.round(t.getTime() / 100), i);
                        }, t.decode = function (t, i) {
                            if (i !== t.length)
                                throw new n.DecodingError('invalid bit length');
                            var e = new Date();
                            return e.setTime(100 * s.IntEncoder.decode(t, i)), e;
                        }, t;
                    }();
                i.DateEncoder = r;
            },
            function (t, i, e) {
                'use strict';
                Object.defineProperty(i, '_', { value: !0 });
                var s = e(40), n = e(33), r = function () {
                        function t() {
                        }
                        return t.encode = function (t, i) {
                            var e = (t = t.toUpperCase()).charCodeAt(0) - 65, r = t.charCodeAt(1) - 65;
                            if (e < 0 || e > 25 || r < 0 || r > 25)
                                throw new n.EncodingError('invalid language code: ' + t);
                            if (i % 2 == 1)
                                throw new n.EncodingError('numBits must be even, ' + i + ' is not valid');
                            return i /= 2, s.IntEncoder.encode(e, i) + s.IntEncoder.encode(r, i);
                        }, t.decode = function (t, i) {
                            if (i !== t.length || t.length % 2)
                                throw new n.DecodingError('invalid bit length for language');
                            var e = t.length / 2, r = s.IntEncoder.decode(t.slice(0, e), e) + 65, h = s.IntEncoder.decode(t.slice(e), e) + 65;
                            return String.fromCharCode(r) + String.fromCharCode(h);
                        }, t;
                    }();
                i.LangEncoder = r;
            },
            function (t, i, e) {
                'use strict';
                Object.defineProperty(i, '_', { value: !0 });
                var s = e(55), n = e(46), r = e(33), h = e(40), a = e(35), o = function () {
                        function t() {
                        }
                        return t.encode = function (t) {
                            var i = h.IntEncoder.encode(t.numRestrictions, s.BitLength.numRestrictions);
                            return t.isEmpty() || t.getRestrictions().forEach(function (e) {
                                i += h.IntEncoder.encode(e.purposeId, s.BitLength.purposeId), i += h.IntEncoder.encode(e.restrictionType, s.BitLength.restrictionType);
                                for (var r = t.getVendors(e), a = r.length, o = 0, c = 0, u = '', l = 0; l < a; l++) {
                                    var d = r[l];
                                    if (0 === c && (o++, c = d), l === a - 1 || r[l + 1] > d + 1) {
                                        var f = !(d === c);
                                        u += n.BooleanEncoder.encode(f), u += h.IntEncoder.encode(c, s.BitLength.vendorId), f && (u += h.IntEncoder.encode(d, s.BitLength.vendorId)), c = 0;
                                    }
                                }
                                i += h.IntEncoder.encode(o, s.BitLength.numEntries), i += u;
                            }), i;
                        }, t.decode = function (t) {
                            var i = 0, e = new a.PurposeRestrictionVector(), o = h.IntEncoder.decode(t.substr(i, s.BitLength.numRestrictions), s.BitLength.numRestrictions);
                            i += s.BitLength.numRestrictions;
                            for (var c = 0; c < o; c++) {
                                var u = h.IntEncoder.decode(t.substr(i, s.BitLength.purposeId), s.BitLength.purposeId);
                                i += s.BitLength.purposeId;
                                var l = h.IntEncoder.decode(t.substr(i, s.BitLength.restrictionType), s.BitLength.restrictionType);
                                i += s.BitLength.restrictionType;
                                var d = new a.PurposeRestriction(u, l), f = h.IntEncoder.decode(t.substr(i, s.BitLength.numEntries), s.BitLength.numEntries);
                                i += s.BitLength.numEntries;
                                for (var p = 0; p < f; p++) {
                                    var b = n.BooleanEncoder.decode(t.substr(i, s.BitLength.anyBoolean));
                                    i += s.BitLength.anyBoolean;
                                    var v = h.IntEncoder.decode(t.substr(i, s.BitLength.vendorId), s.BitLength.vendorId);
                                    if (i += s.BitLength.vendorId, b) {
                                        var m = h.IntEncoder.decode(t.substr(i, s.BitLength.vendorId), s.BitLength.vendorId);
                                        if (i += s.BitLength.vendorId, m < v)
                                            throw new r.DecodingError('Invalid RangeEntry: endVendorId ' + m + ' is less than ' + v);
                                        for (var g = v; g <= m; g++)
                                            e.add(g, d);
                                    } else
                                        e.add(v, d);
                                }
                            }
                            return e.bitLength = i, e;
                        }, t;
                    }();
                i.PurposeRestrictionVectorEncoder = o;
            },
            function (t, i, e) {
                'use strict';
                Object.defineProperty(i, '_', { value: !0 });
                var s = e(35), n = e(64), r = e(40), h = e(46), a = e(57), o = e(75), c = e(33), u = function () {
                        function t() {
                        }
                        return t.encode = function (t) {
                            var i, e = [], s = [], a = r.IntEncoder.encode(t.maxId, n.BitLength.maxId), c = '', u = n.BitLength.maxId + n.BitLength.encodingType, l = u + t.maxId, d = 2 * n.BitLength.vendorId + n.BitLength.singleOrRange + n.BitLength.numEntries, f = u + n.BitLength.numEntries;
                            return t.forEach(function (r, a) {
                                c += h.BooleanEncoder.encode(r), (i = t.maxId > d && f < l) && r && (t.has(a + 1) ? 0 === s.length && (s.push(a), f += n.BitLength.singleOrRange, f += n.BitLength.vendorId) : (s.push(a), f += n.BitLength.vendorId, e.push(s), s = []));
                            }), i ? (a += o.VectorEncodingType.RANGE + '', a += this.buildRangeEncoding(e)) : (a += o.VectorEncodingType.FIELD + '', a += c), a;
                        }, t.decode = function (t, i) {
                            var e, u = 0, l = r.IntEncoder.decode(t.substr(u, n.BitLength.maxId), n.BitLength.maxId);
                            u += n.BitLength.maxId;
                            var d = r.IntEncoder.decode(t.charAt(u), n.BitLength.encodingType);
                            if (u += n.BitLength.encodingType, d === o.VectorEncodingType.RANGE) {
                                if (e = new s.Vector(), 1 === i) {
                                    if ('1' === t.substr(u, 1))
                                        throw new c.DecodingError('Unable to decode default consent=1');
                                    u++;
                                }
                                var f = r.IntEncoder.decode(t.substr(u, n.BitLength.numEntries), n.BitLength.numEntries);
                                u += n.BitLength.numEntries;
                                for (var p = 0; p < f; p++) {
                                    var b = h.BooleanEncoder.decode(t.charAt(u));
                                    u += n.BitLength.singleOrRange;
                                    var v = r.IntEncoder.decode(t.substr(u, n.BitLength.vendorId), n.BitLength.vendorId);
                                    if (u += n.BitLength.vendorId, b) {
                                        var m = r.IntEncoder.decode(t.substr(u, n.BitLength.vendorId), n.BitLength.vendorId);
                                        u += n.BitLength.vendorId;
                                        for (var g = v; g <= m; g++)
                                            e.set(g);
                                    } else
                                        e.set(v);
                                }
                            } else {
                                var y = t.substr(u, l);
                                u += l, e = a.FixedVectorEncoder.decode(y, l);
                            }
                            return e.bitLength = u, e;
                        }, t.buildRangeEncoding = function (t) {
                            var i = t.length, e = r.IntEncoder.encode(i, n.BitLength.numEntries);
                            return t.forEach(function (t) {
                                var i = 1 === t.length;
                                e += h.BooleanEncoder.encode(!i), e += r.IntEncoder.encode(t[0], n.BitLength.vendorId), i || (e += r.IntEncoder.encode(t[1], n.BitLength.vendorId));
                            }), e;
                        }, t;
                    }();
                i.VendorVectorEncoder = u;
            },
            function (t, i, e) {
                'use strict';
                var s;
                Object.defineProperty(i, '_', { value: !0 }), (s = i.VectorEncodingType || (i.VectorEncodingType = {}))[s.FIELD = 0] = 'FIELD', s[s.RANGE = 1] = 'RANGE';
            },
            function (t, i, e) {
                'use strict';
                function s(t) {
                    for (var e in t)
                        i.hasOwnProperty(e) || (i[e] = t[e]);
                }
                Object.defineProperty(i, '_', { value: !0 }), s(e(144)), s(e(145));
            },
            function (t, i, e) {
                'use strict';
                Object.defineProperty(i, '_', { value: !0 });
                var s = e(64), n = e(35), r = e(40), h = e(147), a = function () {
                        function t() {
                        }
                        return t.encode = function (t, i) {
                            var e, n, r = '';
                            return t = s.SemanticPreEncoder.process(t, i), (n = Array.isArray(null === (e = i) || void 0 === e ? void 0 : e.segments) ? i.segments : new s.SegmentSequence(t, i)['' + t.version]).forEach(function (i, e) {
                                var h = '';
                                e < n.length - 1 && (h = '.'), r += s.SegmentEncoder.encode(t, i) + h;
                            }), r;
                        }, t.decode = function (t, i) {
                            var e = t.split('.'), a = e.length;
                            i || (i = new h.TCModel());
                            for (var o = 0; o < a; o++) {
                                var c = e[o], u = s.Base64Url.decode(c.charAt(0)).substr(0, s.BitLength.segmentType), l = n.SegmentIDs.ID_TO_KEY[r.IntEncoder.decode(u, s.BitLength.segmentType).toString()];
                                s.SegmentEncoder.decode(c, i, l);
                            }
                            return i;
                        }, t;
                    }();
                i.TCString = a;
            },
            function (t, i, e) {
                'use strict';
                var s = e(150).decodeConsentString;
                t.exports = { decodeConsentString: s };
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return F;
                });
                var s = e(0), n = e.n(s), r = e(5), h = e(8), a = e(2), o = e(117), c = e(113), u = e(80), l = e(81), d = e(19), f = e(21), p = e(30), b = e(1), v = e(6), m = e(13), g = e(49), y = e(34), w = e(48), O = e(82), x = e(114), S = e(115), j = e(25), k = e(24), _ = e(83), A = e(20), I = e(16), C = e(4), T = e(84), P = e(118), M = e(116), E = e(44), L = e(47), R = e(85);
                const B = 'player_instance', D = ',';
                class F extends A.a {
                    constructor(t, i, e, s, n, r) {
                        super(), this.services = t, this.GLOBAL = i, this.cs = e, this.us = s, this.Ls = n, this.readyCallback = r, this.Rs = {}, this.Bs = '<cnx-placeholder></cnx-placeholder>', this.Ds = 100, this.Fs = 1000, this.isServerlessMode = !1, this.Vs = !1, this.Us = [], this.$s = '{{omidVerificationClient}}', this.cs && this.Ns(), this.Hs = L.a.detectUsingCSS(this.GLOBAL), this.qs = Object(a.o)(this.GLOBAL);
                    }
                    zs() {
                        const t = {
                            playerId: this.externalAttributes.playerId,
                            _appSettings: this.externalAttributes._appSettings,
                            settings: {
                                _connatixInternals: this.externalAttributes.settings._connatixInternals,
                                advertising: {},
                                customization: {},
                                rendering: {},
                                plugins: {}
                            }
                        };
                        this.externalAttributes.customParam1 && (t.customParam1 = this.externalAttributes.customParam1), this.externalAttributes.customParam2 && (t.customParam2 = this.externalAttributes.customParam2), this.externalAttributes.customParam3 && (t.customParam3 = this.externalAttributes.customParam3), this.externalAttributes.customParam4 && (t.customParam4 = this.externalAttributes.customParam4), this.externalAttributes.customParam5 && (t.customParam5 = this.externalAttributes.customParam5), this.externalAttributes.settings.useExternalViewabilityService && (t.settings.useExternalViewabilityService = this.externalAttributes.settings.useExternalViewabilityService), this.externalAttributes = t;
                    }
                    Ws(t) {
                        const i = this.GLOBAL.frameElement;
                        if (!Object(a.B)(i))
                            return;
                        let e = !0;
                        i && t && (e = !1), e ? Object(a.u)(i) : Object(a.O)(i);
                    }
                    Gs(t, i) {
                        try {
                            return this.Js(t, i);
                        } catch (t) {
                            return null;
                        }
                    }
                    Qs(t) {
                        let i;
                        try {
                            i = eval(t);
                        } catch (e) {
                            i = t.replace(/\[(\d+)]/g, ':nth-child($1)');
                        }
                        return i;
                    }
                    Ys(t, i) {
                        const e = this.Gs(t, i);
                        return null === e ? new Promise(e => {
                            setTimeout(() => {
                                e(this.Ys(t, i));
                            }, this.Ds);
                        }) : Promise.resolve(e);
                    }
                    Ks(t, i) {
                        const e = this.Qs(t);
                        return Promise.resolve(this.Ys(e, i));
                    }
                    Js(t, i) {
                        let e;
                        return t.split(/(\.cnxEq\(\d+\))/).filter(t => {
                            return t;
                        }).forEach(t => {
                            e = -1 === t.indexOf('cnxEq') ? e ? e.querySelectorAll(t) : Object(a.H)(t, i) : this.Zs(e, t);
                        }), e ? (e.hasOwnProperty('length') && (e = e.length > 0 ? e[0] : null), e) : null;
                    }
                    Zs(t, i) {
                        const e = /\d+/g.exec(i), s = parseInt(e[0], 10);
                        return s > t.length ? Object(v.c)(t)[t.length - 1] : Object(v.c)(t)[s];
                    }
                    tn() {
                        return this.us ? s.ProtoImplementationType.Amp : s.ProtoImplementationType.Web;
                    }
                    in(t, i) {
                        const e = Object(h.f)(this.GLOBAL);
                        let s;
                        return s = Object(b.a)(this.externalAttributes.settings.rendering.forceInsertPath) ? this.externalAttributes.settings.rendering.forceInsertPath : i.forceInsertPath, new Promise((n, r) => {
                            let h = Object(a.f)(this.Bs, this.GLOBAL);
                            if (s || t.tag.parentNode === this.GLOBAL.document.head && (!e.topChildFrame || i.renderInFrame)) {
                                let t, s, r;
                                e.topChildFrame && Object(a.I)(e.topChildFrame.frameElement, C.h.DisplayNone), t = Object(b.h)(this.externalAttributes.settings.rendering.containerSelector) ? this.externalAttributes.settings.rendering.containerSelector : i.containerSelector, s = Object(b.a)(this.externalAttributes.settings.rendering.insertPosition) ? this.externalAttributes.settings.rendering.insertPosition : i.insertPosition, r = Object(b.a)(this.externalAttributes.settings.rendering.position) ? this.externalAttributes.settings.rendering.position : i.position, this.Ks(t, e.topFrame).then(t => {
                                    this.en(t, h, s, r), n({
                                        insertContainer: h,
                                        insertWindow: e.topFrame
                                    });
                                });
                            } else
                                e.topChildFrame && !i.renderInFrame ? (h = Object(a.f)(this.Bs, e.topFrame), e.topChildFrame.frameElement.parentNode.insertBefore(h, e.topChildFrame.frameElement), Object(a.a)(e.topChildFrame.frameElement, C.h.DisplayNone), n({
                                    insertContainer: h,
                                    insertWindow: e.topFrame
                                })) : (t.tag.parentNode.insertBefore(h, t.tag), n({ insertContainer: h }));
                        });
                    }
                    nn(t, i, e) {
                        Object(a.v)(i, t, e);
                    }
                    rn(t, i, e) {
                        switch (e) {
                        case s.ProtoPlayerInsertMode.BeforeContainer:
                            t.parentElement.insertBefore(i, t);
                            break;
                        case s.ProtoPlayerInsertMode.ReplaceContainer:
                            t.parentElement.insertBefore(i, t), Object(a.J)(t);
                            break;
                        case s.ProtoPlayerInsertMode.HideContainer:
                            t.parentElement.insertBefore(i, t), Object(a.u)(t);
                            break;
                        case s.ProtoPlayerInsertMode.AfterContainer:
                            t.nextElementSibling ? t.parentElement.insertBefore(i, t.nextElementSibling) : t.parentElement.appendChild(i);
                        }
                    }
                    en(t, i, e, n) {
                        e === s.ProtoPlayerInsertMode.WithinContainer ? this.nn(t, i, n) : this.rn(t, i, e);
                    }
                    hn(t, i = (() => {
                        return [];
                    })()) {
                        t.lineItems = [
                            ...t.lineItems,
                            ...i
                        ];
                        const e = t.lineItems.length;
                        t.lineItems = Object(v.e)('advertiserLineItemId', t.lineItems), e !== t.lineItems.length && Object(r.a)({
                            level: s.ProtoLoggingLevelEnum.WARNING,
                            message: 'Loader_duplicated_adsources',
                            callStack: '_'
                        });
                    }
                    an(t, i) {
                        const e = t.players[i], {
                                playerModel: n,
                                globalDomUtilsService: h,
                                urlSuffixerService: a
                            } = this.Rs[i];
                        if (this.Hs || this.services.UserManagerService.setThirdPartySyncUrls(t.cookieSyncUrls), this.services.UserManagerService.setGeoLocation(t.geoLocation), p.a.sessionId = e.sessionId, this.cn.addPlayerSession(e.playerId, e.sessionId), !n)
                            return void this.registerApiError(m.a.SetupError, 'No playlist was provided!');
                        const o = new l.a({
                                browser: t.browser,
                                geoLocation: t.geoLocation,
                                pageUrl: this.pageUrl,
                                playerId: n.playerId,
                                explorationMode: t.explorationMode,
                                bundleID: this.externalAttributes._appSettings.bundleID,
                                appID: this.externalAttributes._appSettings.appID,
                                domainURL: this.externalAttributes._appSettings.domainURL,
                                storeURL: this.externalAttributes._appSettings.storeURL,
                                appCategories: this.externalAttributes._appSettings.appCategories,
                                appIsPaid: this.externalAttributes._appSettings.appIsPaid,
                                appName: this.externalAttributes._appSettings.appName,
                                appPrivacyPolicy: this.externalAttributes._appSettings.appPrivacyPolicy,
                                appVersion: this.externalAttributes._appSettings.appVersion,
                                deviceId: this.externalAttributes._appSettings.deviceID,
                                isRecyclerViewIntegration: this.externalAttributes._appSettings.isRecyclerViewIntegration,
                                appPageURL: this.externalAttributes._appSettings.appPageURL
                            }), d = o.browser.browserType === k.a.InternetExplorer, f = new g.a(h), v = this.getViewabilityService(n, f, d), y = this.Hs;
                        this.Hs = L.a.detectUsingCSS(n.global), y !== this.Hs && Object(r.a)({
                            message: 'Loader_adBlockerDetection_changed_after_new_global',
                            throttle: 2,
                            sendMaxLog: !1,
                            level: s.ProtoLoggingLevelEnum.INFO,
                            exception: `${ y }`
                        });
                        const O = new u.a(n, t.geoLocation, o.pageUrl, o.pageDomain, this.externalAttributes._appSettings, this.qs, t.publisherNetworkCode), x = {
                                services: {
                                    GlobalDomUtilsService: h,
                                    ViewabilityService: v,
                                    TrackingService: this.un(n, t, i),
                                    ResizeObserver: new c.a(n.global),
                                    UserManagerService: this.services.UserManagerService,
                                    MacrosService: O,
                                    EventsStorageService: this.services.EventsStorageService,
                                    PageFocusService: f,
                                    InteractionService: new M.a(n.global, o.isMobile),
                                    UrlSuffixerService: a
                                },
                                config: o
                            };
                        this.Hs && x.services.TrackingService.trackSessionAdBlocker(s.ProtoAdBlockDetectionTypeEnum.Banner), x.services.UserManagerService.setPageUrl(x.config.pageUrl);
                        const S = this.tn();
                        x.services.TrackingService.setImplementationTypeOnMeta(S), n.externalMacros && x.services.MacrosService.addExtraMacros(n.externalMacros), x.services.UserManagerService.onEvent([w.a.CCPA_INFO_RECEIVED]).then(() => {
                            x.services.MacrosService.setUsPrivacyString(x.services.UserManagerService.getUsPrivacyString());
                        }), x.services.UserManagerService.onEvent([w.a.CONSENT_DATA_UPDATE]).then(() => {
                            x.services.TrackingService.updateMetadataModel({ userId: x.services.UserManagerService.getTrackableUser() });
                            const t = x.services.UserManagerService.getConsentPayload();
                            if (x.services.TrackingService.hasGdprConsentPayload = Object(b.h)(t), this.services.UserManagerService.gdprConsentMode === s.ProtoGdprConsentModeEnum.NoConsent || this.cs) {
                                const t = n.lineItemSettings.lineItems.filter(t => {
                                    return Object(b.h)(t.vendorId);
                                }).every(t => {
                                    return this.services.UserManagerService.isConsent(t.vendorId);
                                });
                                this.services.UserManagerService.gdprConsentMode = t ? s.ProtoGdprConsentModeEnum.AllGood : s.ProtoGdprConsentModeEnum.NotAllDemandConsent;
                            }
                        });
                        const j = {
                            wasPlayerReloaded: this.cn.wasPlayerReloaded(e.playerId),
                            wasPlayerInView: this.cn.getSessionInView(e.playerId)
                        };
                        this.renderer = this.getRendererInstance(n, x, this.Hs, j, this.externalAttributes._appSettings), this.subscribe(I.c.SessionView, this.renderer, () => {
                            this.cn.addSessionInView(e.playerId);
                        }), this.subscribe(I.c.SessionRendered, this.renderer, () => {
                            if (this.ln) {
                                const t = this.services.UserManagerService.getUserId();
                                new P.a(O, h, this.ln, t).addFraudSensorScript();
                            }
                        });
                        const _ = Object.assign({
                            configEnums: this.getApiConfigEnums(),
                            configEvents: this.getApiConfigEvents()
                        }, this.renderer.getApiMethods());
                        let A = e.customJsCode;
                        if (A) {
                            const t = `${ B }_${ x.config.appId }`;
                            this.GLOBAL[t] = _, A = A.cnx_replaceAll(`"{{${ B }}}"`, `window.${ t }`);
                        }
                        this.renderer.init(() => {
                            this.dn(A);
                        }) ? this.registerApiSuccess(_) : this.registerApiError(m.a.RenderError, 'Player size under supported value');
                    }
                    un(t, i, e) {
                        return t.disableTracking ? new O.a() : new o.a({
                            userManagerService: this.services.UserManagerService,
                            browser: i.browser,
                            geoLocation: i.geoLocation,
                            playerId: t.playerId,
                            userId: this.services.UserManagerService.getTrackableUser(),
                            sessionId: i.players[e].sessionId,
                            pageUrl: this.pageUrl,
                            bundleId: this.externalAttributes._appSettings.bundleID,
                            customParam1: this.externalAttributes.customParam1,
                            customParam2: this.externalAttributes.customParam2,
                            customParam3: this.externalAttributes.customParam3,
                            customParam4: this.externalAttributes.customParam4,
                            customParam5: this.externalAttributes.customParam5,
                            abTestId: i.players[e].abTestId,
                            explorationMode: i.explorationMode
                        });
                    }
                    dn(t, i = (() => {
                        return { useSafeMode: !0 };
                    })()) {
                        if (!t)
                            return;
                        const {
                                global: e,
                                useSafeMode: s
                            } = i, n = e || this.GLOBAL;
                        let r;
                        r = s ? `\n        (function() {\n            "use strict";\n            try {\n                ${ t }\n            }catch(e){\n                console.warn('---CnxCustomApiError---');\n                console.warn(e.message);\n            }\n          })()\n        ` : t, Object(a.w)(n.document.head, n, r.trim());
                    }
                    Ns() {
                        if (this.$s.includes('{{omidVerificationClient'))
                            return;
                        const t = {
                            useSafeMode: !1,
                            global: window
                        };
                        this.dn(decodeURI(this.$s), t);
                    }
                    pn() {
                        const {
                            playerId: t,
                            parseDomain: i
                        } = this.bn;
                        return this.vn(t, i).catch(t => {
                            const i = new Error(t);
                            throw Object(r.a)({
                                callStack: i.stack,
                                level: s.ProtoLoggingLevelEnum.FATAL,
                                exception: i.message,
                                message: 'Prerender_Loader_player_id_call_get_pls',
                                throttle: 1000
                            }), this.registerApiError(m.a.SetupError, 'player data call error'), this.mn(), i;
                        });
                    }
                    gn(t) {
                        const {
                            browser: i,
                            userInformation: e
                        } = t;
                        if (this.services.UserManagerService.setUserInformation(e), this.services.UserManagerService.setBrowserInfo(i), e && e.callFraudSensor) {
                            const {
                                lookupId: t,
                                lookupResponseCode: s,
                                publisherAdsTxt: n
                            } = e;
                            this.ln = {
                                lookupId: t,
                                lookupResponseCode: s,
                                publisherAdsTxt: n,
                                deviceType: i.device
                            };
                        }
                        y.a.serverAb0 = t.serverAb0, y.a.serverAb1 = t.serverAb1, Object(v.h)(t.players) ? (t.players.length > 1 && (this.zs(), this.Vs = !0), Object.keys(t.players).forEach(i => {
                            this.yn(t, this.bn, i);
                        })) : this.registerApiError(m.a.NoPlayer, `No player available for given player id:${ this.bn.playerId }`), this.mn();
                    }
                    mn() {
                        this.wn(), this.xn();
                    }
                    xn() {
                        setTimeout(() => {
                            if (!this.Vs) {
                                const t = this.Us[0];
                                this.readyCallback && this.readyCallback(t.apiErrorObj, t.apiConfigObj);
                            }
                            this.Sn();
                        });
                    }
                    Sn() {
                        this.Us.filter(t => {
                            return t.apiErrorObj;
                        }).forEach(() => {
                            this.services.EventsStorageService.emitRenderError();
                        });
                    }
                    yn(t, i, e) {
                        const s = t.players[e], {playerModel: n} = this.Rs[e];
                        this.Ws(s.renderInFrame), this.an(t, e), this.jn(n, this.renderer.playerContainer);
                    }
                    vn(t, i = (() => {
                        return !1;
                    })()) {
                        let e = {
                            parseDomain: i,
                            referrer: this.qs,
                            pageUrl: this.pageUrl,
                            tokens: [t]
                        };
                        e.bundleId = this.externalAttributes._appSettings.bundleID, this.queryParams.cnxLineItemId && (e.forceLineItemIds = this.queryParams.cnxLineItemId.split(D).filter(t => {
                            return Object(b.h)(t);
                        })), this.queryParams.cnxPlayerId ? e.forcePlayerId = this.queryParams.cnxPlayerId : this.externalAttributes.settings._connatixInternals.skipServingRules && (e.forcePlayerId = t), this.queryParams.cnxExplorationMode && (e.forceExploration = !0);
                        const {queryJsTargeting: s} = this.externalAttributes.settings;
                        return Object(b.f)(s) && Object.keys(s).length > 0 && (e.queryJsTargeting = Object.keys(s).reduce((t, i) => {
                            return Object.assign(Object.assign({}, t), { [i]: `${ s[i] }` });
                        }, {})), e.customParam1 = this.externalAttributes.customParam1, e.customParam2 = this.externalAttributes.customParam2, e.customParam3 = this.externalAttributes.customParam3, e.customParam4 = this.externalAttributes.customParam4, e.customParam5 = this.externalAttributes.customParam5, e.disableTracking = this.externalAttributes.settings._connatixInternals.disableTracking, e.version = f.a.version, e.es6 = f.b, e.userId = this.services.UserManagerService.getForcedTrackableUser(), e.isConsentConnatix = this.services.UserManagerService.isConsentConnatix(), e.clientAb0 = y.a.clientAb0, e.clientAb1 = y.a.clientAb1, e.implementationType = this.tn(), e.reloadedPlayers = this.cn.getCookiePlayersSession(), e = Object.assign(Object.assign({}, e), this.getSpecificRequestData()), this.bn.playerId ? this.getPlayerResponse(e, this.bn.playerId || 'serverless') : new Promise((t, i) => {
                            this.isServerlessMode = !0, t(this.defaultInitFromProto());
                        });
                    }
                    kn() {
                        const t = Object(d.b)('cnxVideoPosition', this.pageUrl), i = parseInt(Object(d.b)('cnxStoryPosition', this.pageUrl), 10);
                        return {
                            cnxStoryId: Object(d.b)('cnxStoryId', this.pageUrl),
                            cnxLineItemId: Object(d.b)('cnxLineItemId', this.pageUrl),
                            cnxPlayerId: Object(d.b)('cnxPlayerId', this.pageUrl),
                            cnxMediaId: Object(d.b)('cnxMediaId', this.pageUrl),
                            cnxPlaylistId: Object(d.b)('cnxPlaylistId', this.pageUrl),
                            cnxVideoPosition: t ? parseInt(t, 10) : null,
                            cnxExplorationMode: 'true' === Object(d.b)('cnxExplorationMode', this.pageUrl),
                            cnxStoryPosition: Object(b.e)(i) ? i : null,
                            cnxSkipAdsFlag: 'true' === Object(d.b)('cnxSkipAdsFlag', this.pageUrl),
                            cnxReloadTime: parseInt(Object(d.b)('cnxReloadTime', this.pageUrl), 10),
                            cnxOverrideLineitems: 'true' === Object(d.b)('cnxOverrideLineitems', this.pageUrl),
                            cnxIsSeoTraffic: 'true' === Object(d.b)('cnxIsSeoTraffic', this.pageUrl)
                        };
                    }
                    jn(t, i) {
                        const e = this.getDelegateHandler();
                        new x.a(this.GLOBAL, this.services.EventsStorageService, e, t, i).start();
                    }
                    _n() {
                        const t = this.GLOBAL.OmidSessionClient && this.GLOBAL.OmidSessionClient[j.j];
                        t ? this.An = new S.a(t, this.services.EventsStorageService, this.externalAttributes._appSettings.sdkVersion) : Object(r.a)({
                            message: 'OmidSessionClient not found.',
                            level: s.ProtoLoggingLevelEnum.FATAL
                        });
                    }
                    In(t) {
                        const i = () => {
                            return new Promise((i, e) => {
                                const s = this.Cn();
                                t.addCssStylesheetToHead(s, () => {
                                    return i();
                                }, t => {
                                    return e(t);
                                });
                            });
                        };
                        return Object(h.j)(() => {
                            return i();
                        }).catch(t => {
                            throw Object(r.a)({
                                message: 'Loader_add_css_link',
                                exception: t,
                                level: s.ProtoLoggingLevelEnum.INFO
                            }), new Error(t);
                        });
                    }
                    updateQueryParams() {
                        this.queryParams = this.kn();
                    }
                    loadScriptTag(t, i) {
                        let e;
                        if (this.externalAttributes = t, i && (e = this.GLOBAL.document.getElementById(i)), !e)
                            return Object(r.a)({
                                message: 'Loader_no_script_id',
                                exception: `${ t.playerId }`,
                                level: s.ProtoLoggingLevelEnum.WARNING
                            }), this.registerApiError(m.a.SetupError, 'Could not locate any script tag ids in the page'), !1;
                        const n = Object(b.f)(t.settings.plugins.adobeAnalyticsSettings);
                        return this.Ls && this._n(), this.bn = {
                            parseDomain: n,
                            playerId: t.playerId,
                            tag: e
                        }, !0;
                    }
                    insertRenderer() {
                        try {
                            this.cn = new _.a(this.queryParams.cnxReloadTime), this.Ws();
                            const t = () => {
                                try {
                                    this.pn().then(t => {
                                        const i = [];
                                        t.players.forEach((e, n) => {
                                            t.players[n].limitClientSideApiUse && this.zs();
                                            const h = this.in(this.bn, e).then(i => {
                                                this.hn(e, t.lineItems);
                                                const s = new R.a();
                                                t.bandwidthLoggingEnabled && s.setQueryParams({ playerId: t.players[n].playerId });
                                                const r = this.getPlayerModel(i, t, s, n.toString()), h = new T.a(r.global);
                                                return Object(E.a)(r.lineItemSettings.lineItems), this.Rs[n] = {
                                                    playerModel: r,
                                                    globalDomUtilsService: h,
                                                    urlSuffixerService: s
                                                }, this.In(h);
                                            }).catch(t => {
                                                this.registerApiError(m.a.SetupError, 'rendering error'), Object(r.a)({
                                                    message: 'Loader_send_data_to_renderer',
                                                    exception: t.message,
                                                    callStack: t.stack,
                                                    level: s.ProtoLoggingLevelEnum.FATAL
                                                });
                                            });
                                            i.push(h);
                                        }), Promise.all(i).then(() => {
                                            return this.gn(t);
                                        });
                                    });
                                } catch (t) {
                                    Object(r.a)({
                                        message: 'Prerender_Loader_do_player_call',
                                        callStack: t.stack,
                                        exception: t.message,
                                        throttle: 1000
                                    });
                                }
                            };
                            this.wn = this.services.UserManagerService.registerPlsCall(t);
                        } catch (t) {
                            Object(r.a)({
                                message: 'Prerender_Loader_insert_renderer',
                                exception: t.message,
                                callStack: t.stack,
                                level: s.ProtoLoggingLevelEnum.FATAL
                            });
                        }
                    }
                    findPageUrl(t, i, e = (() => {
                        return !1;
                    })()) {
                        if (t.cnx_page_url)
                            this.pageUrl = t.cnx_page_url;
                        else
                            try {
                                t['cnxAmpAd)'] ? this.pageUrl = t.context.sourceUrl || t.context.location.href : this.pageUrl = i || Object(h.e)(Object(h.f)(this.GLOBAL), this.GLOBAL);
                            } catch (t) {
                            }
                        if (!this.pageUrl || 0 === this.pageUrl.length)
                            return e || Object(r.a)({
                                message: 'Prerender_Loader_find_page_url',
                                level: s.ProtoLoggingLevelEnum.INFO,
                                throttle: 1000
                            }), new Promise(e => {
                                setTimeout(() => {
                                    this.findPageUrl(t, i, !0).then(() => {
                                        return e();
                                    });
                                }, this.Fs);
                            });
                        try {
                            return this.pageUrl = Object(d.d)(this.pageUrl), Promise.resolve();
                        } catch (t) {
                            return Object(r.a)({
                                message: 'Loader_find_page_url',
                                exception: t.message,
                                callStack: t.stack,
                                level: s.ProtoLoggingLevelEnum.FATAL
                            }), Promise.reject();
                        }
                    }
                    registerApiError(t = (() => {
                        return m.a.SetupError;
                    })(), i = (() => {
                        return '';
                    })()) {
                        this.Us.push({
                            apiErrorObj: {
                                type: t,
                                message: i
                            }
                        });
                    }
                    registerApiSuccess(t) {
                        this.Us.push({ apiConfigObj: t });
                    }
                    destroy() {
                        this.renderer && this.renderer.destroy();
                    }
                }
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return u;
                });
                var s, n = e(0), r = e(8), h = e(2), a = e(31), o = e(26), c = e(1);
                !function (t) {
                    t.AppUrl = 'APP_URL', t.AppBundle = 'APP_BUNDLE', t.AppName = 'APP_NAME', t.Uuid = 'UUID', t.PageUrl = 'PAGE_URL', t.AdPosition = 'AD_POSITION', t.VideoTitle = 'VIDEO_TITLE', t.MediaTitle = 'MEDIA_TITLE', t.VideoDuration = 'VIDEO_DURATION', t.ContentLength = 'CONTENT_LENGTH', t.VideoDescription = 'VIDEO_DESCRIPTION', t.VideoUrl = 'VIDEO_URL', t.VideoId = 'VIDEO_ID', t.VideoTime = 'VIDEO_TIME', t.DescriptionUrl = 'DESCRIPTION_URL', t.VideoKeywords = 'VIDEO_KEYWORDS', t.Autoplay = 'AUTOPLAY', t.UserAgent = 'UA', t.Ip = 'IP', t.CashBuster = 'CB', t.Width = 'WIDTH', t.Height = 'HEIGHT', t.Domain = 'DOMAIN', t.SourceReferrer = 'SOURCE_REFERRER', t.Gdpr = 'GDPR', t.GdprConsent = 'GDPR_CONSENT', t.Consent = 'CONSENT', t.Ctd = 'CTD', t.Publisher = 'PUBLISHER', t.Random = 'RAND', t.Site = 'SITE', t.SubId = 'SUB_ID', t.Url = 'URL', t.UserLat = 'USER_LAT', t.UserLong = 'USER_LONG', t.UsPrivacyString = 'US_PRIVACY', t.DoNotTrack = 'DNT', t.FraudSensorUserId = 'FS_USER_ID', t.PublisherId = 'PUBLISHER_ID', t.SessionId = 'SESSION_ID', t.FraudSensorDeviceType = 'FS_DEVICE_TYPE', t.FraudSensorLookupId = 'MGID', t.FraudSensorLookupResponseCode = 'MGTO', t.FraudSensorMediaType = 'FS_MEDIA_TYPE', t.CnxSupplierId = 'CNX_SUPPLIER_ID', t.AdxPublisherNetworkCode = 'ADX_CPNC';
                }(s || (s = {}));
                class u {
                    constructor(t, i, e, r, h, a, c) {
                        this.Tn = new Map(), this.Pn = '[', this.Mn = ']', this.Tn.set(s.Autoplay, t.playbackMode === n.ProtoPlayerPlaybackModeEnum.Autoplay), this.Tn.set(s.UserAgent, navigator.userAgent), this.Tn.set(s.UserLong, i.lon), this.Tn.set(s.UserLat, i.lat), this.Tn.set(s.Ip, i.ip), this.En(h), this.Ln(a), this.Rn(e), this.Bn(), this.Tn.set(s.Domain, r), this.Tn.set(s.CnxSupplierId, o.c), this.Tn.set(s.SessionId, t.sessionId), c && this.Tn.set(s.AdxPublisherNetworkCode, `,${ c }`);
                    }
                    En(t) {
                        this.Tn.set(s.AppBundle, t.bundleID), this.Tn.set(s.AppName, t.appName), this.Tn.set(s.AppUrl, t.storeURL);
                    }
                    Ln(t) {
                        this.Tn.set(s.SourceReferrer, t);
                    }
                    Bn() {
                        const t = Object(h.A)() ? 1 : 0;
                        this.Tn.set(s.DoNotTrack, t);
                    }
                    Rn(t) {
                        this.Tn.set(s.PageUrl, t), this.Tn.set(s.Url, t), this.Tn.set(s.Publisher, t), this.Tn.set(s.Site, t), this.Tn.set(s.DescriptionUrl, t);
                    }
                    Dn() {
                        const t = Object(r.c)();
                        this.Tn.set(s.CashBuster, t), this.Tn.set(s.Random, t), this.Tn.set(s.Ctd, t);
                    }
                    Fn(t) {
                        return t.split('?')[0];
                    }
                    Vn(t) {
                        return t.split('?').slice(1).join('?');
                    }
                    Un(t, i, e) {
                        return 0 === t.indexOf(i) && t.indexOf(e, e.length) === t.length - i.length;
                    }
                    $n(t, i) {
                        const e = this.Fn(t), s = this.Nn(this.Vn(t), i);
                        return `${ e }${ s ? `?${ s }` : '' }`;
                    }
                    Nn(t, i, e = (() => {
                        return !1;
                    })()) {
                        let s = t;
                        return s.split('&').forEach(t => {
                            const n = t.split('=');
                            if (n[1])
                                if (this.Un(n[1], this.Pn, this.Mn))
                                    s = s.replace(n[1], this.Hn(n[1].toLowerCase(), i, e));
                                else if (decodeURIComponent(n[1]).split('=').length > 1) {
                                    const t = this.Nn(decodeURIComponent(n[1]), i, !0);
                                    s = s.replace(n[1], encodeURIComponent(t));
                                }
                        }), s = this.qn(s, i), this.zn(s);
                    }
                    zn(t) {
                        return t.indexOf(this.Pn) > -1 && (t = t.cnx_replaceAll(this.Pn, encodeURIComponent(this.Pn))), t.indexOf(this.Mn) > -1 && (t = t.cnx_replaceAll(this.Mn, encodeURIComponent(this.Mn))), t;
                    }
                    Hn(t, i, e) {
                        let s, n = t;
                        return i.forEach((t, i) => {
                            for (; n.indexOf(this.Pn + i.toLowerCase() + this.Mn) > -1;)
                                s = e ? t : encodeURIComponent(t), n = n.replace(this.Pn + i.toLowerCase() + this.Mn, s);
                        }), n;
                    }
                    qn(t, i) {
                        const e = `${ this.Pn }${ s.AdxPublisherNetworkCode }${ this.Mn }`;
                        return -1 === t.indexOf(e) ? t : i.has(s.AdxPublisherNetworkCode) ? t.cnx_replaceAll(e, i.get(s.AdxPublisherNetworkCode)) : t.cnx_replaceAll(e, '');
                    }
                    setAdWidth(t) {
                        this.Tn.set(s.Width, Math.floor(t));
                    }
                    setAdHeight(t) {
                        this.Tn.set(s.Height, Math.floor(t));
                    }
                    setSubId(t) {
                        this.Tn.set(s.SubId, t);
                    }
                    setGDPR(t) {
                        this.Tn.set(s.Gdpr, t);
                    }
                    setUUID(t) {
                        this.Tn.set(s.Uuid, t);
                    }
                    setGDPRConsent(t) {
                        this.Tn.set(s.GdprConsent, t);
                    }
                    setConsent(t) {
                        this.Tn.set(s.Consent, t);
                    }
                    setVideoId(t) {
                        this.Tn.set(s.VideoId, t);
                    }
                    setVideoTime(t) {
                        this.Tn.set(s.VideoTime, Math.floor(t));
                    }
                    setVideoUrl(t) {
                        this.Tn.set(s.VideoUrl, t);
                    }
                    setVideoDescription(t) {
                        this.Tn.set(s.VideoDescription, t);
                    }
                    setVideoDuration(t) {
                        this.Tn.set(s.VideoDuration, t), this.Tn.set(s.ContentLength, t);
                    }
                    setVideoTitle(t) {
                        let i;
                        this.Tn.set(s.VideoTitle, t), this.Tn.set(s.MediaTitle, t), t && (i = t.split(' ').join(',')), this.Tn.set(s.VideoKeywords, i);
                    }
                    setAdPosition(t = (() => {
                        return 'midRoll';
                    })()) {
                        this.Tn.set(s.AdPosition, t);
                    }
                    setupMacros(t) {
                        return this.Dn(), this.$n(t, this.Tn);
                    }
                    addExtraMacros(t) {
                        const i = Object(a.a)(s);
                        Object.keys(t).filter(t => {
                            return !i.includes(t.toUpperCase());
                        }).forEach(i => {
                            this.Tn.set(i, t[i]);
                        });
                    }
                    getExtraMacros() {
                        const t = Object(a.a)(s), i = {};
                        return this.Tn.forEach((e, s) => {
                            t.includes(s) || null == e || (i[s] = Object(c.h)(e) ? e : JSON.stringify(e));
                        }), i;
                    }
                    setUsPrivacyString(t) {
                        const i = t || '';
                        this.Tn.set(s.UsPrivacyString, i);
                    }
                    setUserId(t) {
                        this.Tn.set(s.FraudSensorUserId, t);
                    }
                    setPublisherId(t) {
                        this.Tn.set(s.PublisherId, t);
                    }
                    setFraudSensorMacros(t) {
                        this.Tn.set(s.FraudSensorDeviceType, t.deviceType), this.Tn.set(s.FraudSensorLookupId, t.lookupId), this.Tn.set(s.FraudSensorLookupResponseCode, t.lookupResponseCode), this.Tn.set(s.FraudSensorMediaType, t.mediaType);
                    }
                    destroy() {
                    }
                }
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return o;
                });
                var s = e(18), n = e(8), r = e(24), h = e(19), a = e(1);
                class o {
                    constructor(t) {
                        this.Wn = t, this.Gn = 100, this.Jn = Object(n.f)(window).topFrame, this.Qn = s.a.indexOf(this.Wn.browser.device) > -1, this.Xn = Object(n.d)(), this.Yn = {
                            browserType: this.Kn(),
                            browserVersion: this.Wn.browser.browserVersion
                        }, this.Zn = this.tr(), this.ir = this.pageUrl.substr(0, this.Gn), this.er = Object(h.a)(this.ir);
                    }
                    Kn() {
                        let t;
                        return Object.keys(r.a).forEach(i => {
                            this.Wn.browser.browserType.toLowerCase().indexOf(r.a[i]) > -1 && (t = r.a[i]);
                        }), t;
                    }
                    tr() {
                        let t, i = 0;
                        const e = this.Wn.browser.osCode.split('_'), n = e[0].toLowerCase();
                        return Object.keys(s.b).forEach(i => {
                            n.indexOf(s.b[i]) > -1 && (t = s.b[i]);
                        }), e.length > 1 && (i = parseFloat(`${ e[1] || 0 }.${ e[2] || 0 }`)), {
                            os: t,
                            osVersion: i
                        };
                    }
                    get device() {
                        return this.Wn.browser.device;
                    }
                    get browser() {
                        return this.Yn;
                    }
                    get os() {
                        return this.Zn;
                    }
                    get geoLocation() {
                        return this.Wn.geoLocation;
                    }
                    get pageUrl() {
                        return this.Wn.pageUrl || '';
                    }
                    get pageUrlTrunc() {
                        return this.ir;
                    }
                    get pageDomain() {
                        return this.er;
                    }
                    get isMobile() {
                        return this.Qn;
                    }
                    get isInApp() {
                        return Object(a.h)(this.Wn.bundleID);
                    }
                    get isInAppAndroid() {
                        return this.isInApp && this.os.os === s.b.Android;
                    }
                    get playerId() {
                        return this.Wn.playerId;
                    }
                    get appId() {
                        return this.Xn;
                    }
                    get bundleID() {
                        return this.Wn.bundleID;
                    }
                    get iOSAppID() {
                        return this.Wn.appID;
                    }
                    get domainURL() {
                        return this.Wn.domainURL;
                    }
                    get storeURL() {
                        return this.Wn.storeURL;
                    }
                    get explorationMode() {
                        return this.Wn.explorationMode;
                    }
                    get appName() {
                        return this.Wn.appName;
                    }
                    get appCategories() {
                        return this.Wn.appCategories;
                    }
                    get appVersion() {
                        return this.Wn.appVersion;
                    }
                    get appPrivacyPolicy() {
                        return this.Wn.appPrivacyPolicy;
                    }
                    get appIsPaid() {
                        return this.Wn.appIsPaid;
                    }
                    get deviceId() {
                        return this.Wn.deviceId;
                    }
                    get topWindow() {
                        return this.Jn;
                    }
                    get isRecyclerViewIntegration() {
                        return this.Wn.isRecyclerViewIntegration;
                    }
                    get appPageURL() {
                        return this.Wn.appPageURL;
                    }
                }
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return s;
                });
                class s {
                    setNewMedia() {
                    }
                    updateMediaMetadata() {
                    }
                    setMediaStart() {
                    }
                    setContentStart() {
                    }
                    setSessionPlayback() {
                    }
                    setSessionViewability() {
                    }
                    trackSessionRendered() {
                    }
                    trackSessionViewability() {
                    }
                    trackMediaQuartile() {
                    }
                    trackMediaClick() {
                    }
                    setAdStart() {
                    }
                    startBidRequests() {
                    }
                    addPrebid() {
                    }
                    addPostBid() {
                    }
                    addBid() {
                    }
                    trackAuctionInfoForBid() {
                    }
                    trackVideoAdImpression() {
                    }
                    trackVideoAdImpressionViewable() {
                    }
                    trackVideoAdQuartile() {
                    }
                    trackAdClick() {
                    }
                    trackAdOpportunity() {
                    }
                    trackSessionAdBlocker() {
                    }
                    getMetadataModel() {
                    }
                    updateMetadataModel() {
                    }
                    setIsConsentPayload() {
                    }
                    destroy() {
                    }
                    publish() {
                    }
                    setImplementationTypeOnMeta() {
                    }
                    addPlatformCappedLineItemSubscriber() {
                    }
                    removePlatformCappedLineItemSubscriber() {
                    }
                    setImpressionRevenueSubscriber() {
                    }
                    unsubscribeToImpressionRevenue() {
                    }
                    trackHeavyAdIntervention() {
                    }
                }
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return a;
                });
                var s = e(8), n = e(5), r = e(0), h = e(11);
                class a {
                    constructor(t) {
                        this.RELOAD_TIME = h.a, this.RELOAD_COOKIES = 'cnx_player_reload', this.SESSION_IN_VIEW_FLAG = '_sessionWasViewed', this.sr = {}, this.nr = {}, this.rr = {}, this.Jn = Object(s.f)(window).topFrame, this.hr(t);
                        try {
                            this.ar();
                        } catch (t) {
                            Object(n.a)({
                                message: 'PlayerReloader_cookie_fetch_failed',
                                level: r.ProtoLoggingLevelEnum.WARNING,
                                exception: t
                            });
                        }
                    }
                    wasPlayerReloaded(t) {
                        return !!this.sr[t];
                    }
                    addPlayerSession(t, i) {
                        this.nr[t] = i;
                    }
                    getCookiePlayersSession() {
                        return this.sr;
                    }
                    addSessionInView(t) {
                        this.nr[t] += this.SESSION_IN_VIEW_FLAG;
                    }
                    getSessionInView(t) {
                        return this.rr[t];
                    }
                    hr(t) {
                        setTimeout(() => {
                            this.or(), this.Jn.location.reload();
                        }, t || this.RELOAD_TIME);
                    }
                    ar() {
                        decodeURIComponent(this.Jn.document.cookie).split(';').forEach(t => {
                            const i = t.split('=');
                            i[0].indexOf(this.RELOAD_COOKIES) > -1 && (this.sr = JSON.parse(i[1]));
                        }), this.cr(), this.ur();
                    }
                    cr() {
                        Object.keys(this.sr).forEach(t => {
                            const i = this.sr[t].indexOf(this.SESSION_IN_VIEW_FLAG);
                            i > -1 && (this.sr[t] = this.sr[t].substr(0, i), this.rr[t] = !0);
                        });
                    }
                    ur() {
                        this.Jn.document.cookie = `${ this.RELOAD_COOKIES }=; expires = Thu, 01 Jan 1970 00:00:00 GMT; path=/`;
                    }
                    or() {
                        Object.keys(this.rr).forEach(t => {
                            -1 === this.nr[t].indexOf(this.SESSION_IN_VIEW_FLAG) && this.addSessionInView(t);
                        });
                        const t = new Date();
                        let i = t.getTime();
                        i += h.g * h.f, t.setTime(i), this.Jn.document.cookie = `${ this.RELOAD_COOKIES }=${ JSON.stringify(this.nr) }; expires=${ t.toUTCString() }; path=/`;
                    }
                }
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return l;
                });
                var s = e(8), n = e(2), r = e(14), h = e(6), a = e(5), o = e(0), c = e(17), u = e(1);
                class l {
                    constructor(t) {
                        this.createElement = (t, i = (() => {
                            return this.fe;
                        })()) => {
                            return i.document.createElement(t);
                        }, this.fe = t, this.addPreconnect();
                    }
                    initHls(t) {
                        return t.cnxRenderWindow = this.fe, new c(t);
                    }
                    addCssString(t, i = (() => {
                        return '';
                    })()) {
                        return Object(n.b)(t, i, this.fe);
                    }
                    addPreconnect() {
                        Object(n.c)(r.a.endPoints.base.video, this.fe), Object(n.c)(r.a.endPoints.base.core, this.fe), Object(n.c)(r.a.endPoints.base.image, this.fe);
                    }
                    getLineHeightPropertyValue(t) {
                        return Object(n.k)(t, this.fe).getPropertyValue('line-height');
                    }
                    getFontSizePropertyValue(t) {
                        return Object(n.k)(t, this.fe).getPropertyValue('font-size');
                    }
                    getFontWeightPropertyValue(t) {
                        return Object(n.k)(t, this.fe).getPropertyValue('font-weight');
                    }
                    getTransformPropertyValue(t) {
                        return Object(n.k)(t, this.fe).getPropertyValue('transform');
                    }
                    getPaddingTopPropertyValue(t) {
                        return Object(n.k)(t, this.fe).getPropertyValue('padding-top');
                    }
                    getPaddingBottomPropertyValue(t) {
                        return Object(n.k)(t, this.fe).getPropertyValue('padding-bottom');
                    }
                    getMarginTopPropertyValue(t) {
                        return Object(n.k)(t, this.fe).getPropertyValue('margin-top');
                    }
                    getMarginBottomPropertyValue(t) {
                        return Object(n.k)(t, this.fe).getPropertyValue('margin-bottom');
                    }
                    getMarginLeftPropertyValue(t) {
                        return Object(n.k)(t, this.fe).getPropertyValue('margin-left');
                    }
                    getMarginRightPropertyValue(t) {
                        return Object(n.k)(t, this.fe).getPropertyValue('margin-right');
                    }
                    createElementByString(t, i = (() => {
                        return this.fe;
                    })()) {
                        return Object(n.f)(t, i);
                    }
                    createDocumentFragment(t = (() => {
                        return this.fe;
                    })()) {
                        return t.document.createDocumentFragment();
                    }
                    isHttpsProtocolUsed() {
                        return Object(n.C)(this.fe);
                    }
                    isURLSameDomainToTop(t) {
                        return Object(n.D)(t, this.fe);
                    }
                    isDetachedFromDOM(t) {
                        let i = t;
                        for (; i.parentNode;)
                            if ((i = i.parentNode) === this.fe.document.body)
                                return !1;
                        return !0;
                    }
                    querySelector(t, i = (() => {
                        return this.fe;
                    })()) {
                        let e;
                        try {
                            e = i.document.querySelector(t);
                        } catch (t) {
                        }
                        return e;
                    }
                    addCssStylesheetToHead(t, i, e) {
                        const s = this.fe.document;
                        s.getElementById(t.id) ? Object(u.b)(i) && i() : Object(n.y)(t, s.head, this.fe, i, e);
                    }
                    getFullscreenKeys(t) {
                        return Object(n.n)(t || this.fe.document);
                    }
                    exitFullscreen(t, i) {
                        (i || this.fe.document)[t]();
                    }
                    getDocumentProperty(t) {
                        return this.fe.document[t];
                    }
                    addEventListenerOnGlobal(t, i, e, s = (() => {
                        return !1;
                    })()) {
                        (e ? this.fe.document : this.fe).addEventListener(t, i, s);
                    }
                    removeEventListenerOnGlobal(t, i, e, s = (() => {
                        return !1;
                    })()) {
                        (e ? this.fe.document : this.fe).removeEventListener(t, i, s);
                    }
                    trackWithImages(t, i) {
                        Object(s.l)(t, this.fe, i);
                    }
                    getElementCoordinates(t) {
                        let {
                            top: i,
                            left: e
                        } = t.getBoundingClientRect();
                        const {
                                width: s,
                                height: n
                            } = t.getBoundingClientRect(), r = this.fe.pageYOffset;
                        return {
                            clientX: e += this.fe.pageXOffset,
                            clientY: i += r,
                            width: s,
                            height: n
                        };
                    }
                    requestAnimationFrameHelper(t) {
                        return Object(n.M)(this.fe, t);
                    }
                    cancelRequestAnimationFrame(t) {
                        return Object(n.e)(this.fe, t);
                    }
                    getGlobalLocationProperties() {
                        const t = this.fe.location;
                        return {
                            hostname: t.hostname,
                            pathname: t.pathname,
                            href: t.href,
                            protocol: t.protocol,
                            host: t.host,
                            port: t.port,
                            search: t.search,
                            hash: t.hash
                        };
                    }
                    open(t, i) {
                        this.fe.open(t, i);
                    }
                    getComputedTranslateX(t) {
                        let i = 0;
                        const e = Object(n.k)(t, this.fe).getPropertyValue('transform').match(/^matrix\((.+)\)$/);
                        return Object(h.h)(e) && (i = parseFloat(e[1].split(', ')[4])), i;
                    }
                    getBodyDimensions() {
                        try {
                            const t = Object(s.f)(this.fe).topFrame.document.body;
                            let {
                                offsetWidth: i,
                                offsetHeight: e
                            } = t;
                            const r = Object(n.k)(t, this.fe);
                            return {
                                width: i += parseInt(r.marginLeft, 10) + parseInt(r.marginRight, 10),
                                height: e += parseInt(r.marginTop, 10) + parseInt(r.marginBottom, 10)
                            };
                        } catch (t) {
                            return Object(a.a)({
                                message: 'DomUtils_error_getting_body_dimensions',
                                exception: t.message,
                                callStack: t.stack,
                                level: o.ProtoLoggingLevelEnum.FATAL
                            }), {
                                width: 0,
                                height: 0
                            };
                        }
                    }
                    getViewportWidth() {
                        return Object(s.f)(this.fe).topFrame.innerWidth;
                    }
                    getViewportHeight() {
                        return Object(s.f)(this.fe).topFrame.innerHeight;
                    }
                    getGlobalClosestTop() {
                        return Object(s.f)(this.fe);
                    }
                    stripHtmlTags(t) {
                        return Object(n.P)(t, this.fe);
                    }
                    getComputedStyle(t, i) {
                        return Object(n.k)(t, this.fe, i);
                    }
                    getElementById(t) {
                        return Object(n.l)(t, this.fe);
                    }
                    getElementsByClassName(t) {
                        return Object(n.m)(t, this.fe);
                    }
                    insertScript(t, i, e) {
                        this.fe.document.getElementById(t.id) ? Object(u.b)(i) && i() : Object(n.x)(t, this.fe.document.head, this.fe, i, null, !0, e);
                    }
                    destroy() {
                    }
                }
            },
            function (t, i, e) {
                'use strict';
                e.d(i, 'a', function () {
                    return r;
                });
                var s = e(6), n = e(1);
                class r {
                    constructor() {
                        this.lr = {};
                    }
                    setQueryParams(t) {
                        this.lr = t;
                    }
                    appendParamsToUrl(t) {
                        return this.dr(t, Object.keys(this.lr).map(t => {
                            return {
                                paramName: t,
                                paramValue: this.lr[t]
                            };
                        }));
                    }
                    dr(t, i) {
                        if (!Object(s.h)(i))
                            return t;
                        t += t.includes('?') ? '&' : '?';
                        let e = '';
                        return i.forEach(t => {
                            Object(n.h)(t.paramName) && Object(n.h)(t.paramValue) && (e += `${ e.length > 0 ? '&' : '' }${ t.paramName }=${ t.paramValue }`);
                        }), t + e;
                    }
                }
            },
            function (t, i) {
                t.exports = '<cnx class=cnx-g-card> <cnx class=cnx-g-triangle></cnx> <cnx class=cnx-g-card-image></cnx> <cnx class=cnx-g-card-text-container> <cnx class=cnx-g-card-text></cnx> </cnx> <cnx class=cnx-g-card-icon> <cnx class=cnx-ui-btn> <cnx class="cnx-icon-button cnx-ui-btn-hoverable cnx-mod-hover"> <cnx class=cnx-btn-container> <cnx class=cnx-play-icon> <svg markup-inline class=cnx-color-icon xmlns=http://www.w3.org/2000/svg viewBox="0 0 24 24"><path d="M5 4v16l16-8z" fill-rule=evenodd /></svg> </cnx> </cnx> </cnx> </cnx> </cnx> </cnx> ';
            },
            function (t, i) {
                t.exports = '<cnx class="cnx-tooltip-holder cnx-color-tt-bg"> <cnx class="cnx-tooltip-text cnx-color-tt-text">TEST</cnx> </cnx> ';
            },
            function (t, i) {
                t.exports = '<cnx class="cnx-icon-button cnx-button-settings cnx-context-controller cnx-ui-btn-hoverable"> <cnx class=cnx-btn-container> <cnx class=cnx-settings-icon> <svg markup-inline class=cnx-color-icon xmlns=http://www.w3.org/2000/svg xmlns:xlink=http://www.w3.org/1999/xlink viewBox="0 0 22 22"><path d="M18.454 5.847l-2.642 1.05-1.03-.784c-.444-.338-.904-.603-1.39-.8l-1.205-.488-.404-2.786h-1.563l-.404 2.786-1.205.488c-.465.188-.93.46-1.413.817L6.17 6.9 3.546 5.847l-.783 1.34 2.232 1.727-.16 1.266c-.042.33-.062.59-.062.82s.02.49.062.82l.16 1.266-2.233 1.727.783 1.34 2.642-1.05 1.03.784c.444.338.904.603 1.39.8l1.205.488.404 2.786h1.563l.404-2.786 1.205-.488c.465-.188.93-.46 1.413-.817l1.025-.76 2.625 1.043.783-1.34-2.233-1.727.16-1.266c.043-.337.062-.584.062-.82s-.02-.483-.062-.82l-.16-1.266 2.233-1.727-.783-1.34zm.71 6.227l2.32 1.81c.21.164.264.46.132.702l-2.198 3.793c-.132.24-.418.34-.67.24l-2.736-1.096c-.57.427-1.187.8-1.857 1.074l-.418 2.905c-.033.263-.264.46-.538.46H8.802c-.275 0-.506-.197-.538-.46l-.418-2.905c-.67-.274-1.286-.636-1.857-1.074l-2.736 1.096c-.242.088-.538 0-.67-.24L.385 14.584c-.132-.24-.077-.537.132-.702l2.32-1.81A8.67 8.67 0 0 1 2.758 11a8.67 8.67 0 0 1 .077-1.074l-2.32-1.81a.54.54 0 0 1-.132-.702l2.198-3.793c.132-.24.418-.34.67-.24L5.99 4.478c.57-.427 1.187-.8 1.857-1.074L8.264.5c.033-.263.264-.46.538-.46h4.396c.275 0 .506.197.538.46l.418 2.905c.67.274 1.286.636 1.857 1.074l2.736-1.096c.242-.088.538 0 .67.24l2.198 3.793c.132.24.077.537-.132.702l-2.32 1.81A8.52 8.52 0 0 1 19.242 11a8.52 8.52 0 0 1-.077 1.074zM11 14.256A3.26 3.26 0 0 0 14.256 11 3.26 3.26 0 0 0 11 7.744 3.26 3.26 0 0 0 7.744 11 3.26 3.26 0 0 0 11 14.256zm0-2A1.26 1.26 0 0 1 9.744 11 1.26 1.26 0 0 1 11 9.744 1.26 1.26 0 0 1 12.256 11 1.26 1.26 0 0 1 11 12.256z"/></svg> </cnx> <cnx class=cnx-hd-flag> <svg markup-inline xmlns=http://www.w3.org/2000/svg viewBox="0 0 17 11"><g fill=none><rect class=cnx-color-accent width=17 height=11 rx=2 fill=#09F /><path class=cnx-color-icon d="M8 9L6.9 9 6.9 5.9 4.1 5.9 4.1 9 3 9 3 2 4.1 2 4.1 4.9 6.9 4.9 6.9 2 8 2 8 9ZM10 9L10 2 12 2C12.6 2 13.1 2.2 13.6 2.4 14 2.7 14.4 3.1 14.6 3.6 14.9 4.1 15 4.7 15 5.3L15 5.7C15 6.4 14.9 6.9 14.6 7.4 14.4 7.9 14 8.3 13.5 8.6 13.1 8.9 12.5 9 11.9 9L10 9ZM11 3L11 8 12.2 8C12.8 8 13.2 7.8 13.5 7.4 13.8 7 14 6.4 14 5.7L14 5.3C14 4.6 13.8 4 13.5 3.6 13.2 3.2 12.8 3 12.2 3L11 3Z"/></g></svg> </cnx> </cnx> </cnx> ';
            },
            function (t, i) {
                t.exports = '<cnx class="cnx-up-next-container cnx-hide-on-single-video"> <cnx class=cnx-up-next-box> <cnx class=cnx-up-next-box-image> <img/> </cnx> <cnx class=cnx-up-next-box-gradient></cnx> <cnx class=cnx-up-next-box-text></cnx> <cnx class=cnx-up-next-box-button> <cnx class=cnx-up-next-box-button-text>NEXT</cnx> </cnx> </cnx> </cnx> ';
            },
            function (t, i) {
                t.exports = '<cnx class="cnx-progress-bar cnx-video-progress"> <cnx class=cnx-progress-rail-container> <cnx class=cnx-progress-rail></cnx> <cnx class="cnx-progress-fill cnx-color-accent"></cnx> <cnx class=cnx-progress-follow></cnx> </cnx> <cnx class="cnx-progress-handle cnx-color-accent"></cnx> <cnx class=cnx-progress-hitarea></cnx> </cnx> ';
            },
            function (t, i) {
                t.exports = '<cnx class="cnx-ui-cm cnx-ui-cm-context"> <cnx class=cnx-cm-container></cnx> </cnx> ';
            },
            function (t, i) {
                t.exports = '<cnx class="cnx-ui-cm cnx-ui-cm-settings"> <cnx class=cnx-cm-container></cnx> </cnx> ';
            },
            function (t, i) {
                t.exports = '<cnx class=cnx-captions> <cnx class=cnx-captions-container> <cnx-span class=cnx-captions-text-holder></cnx-span> </cnx> </cnx> ';
            },
            function (t, i) {
                t.exports = '<svg class="cnx-color-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 4v16l16-8z" fill-rule="evenodd"></path></svg>';
            },
            function (t, i) {
                t.exports = '<svg class="cnx-color-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9 21H3V3h6v18zm12 0h-6V3h6v18z" fill-rule="evenodd"></path></svg>';
            },
            function (t, i) {
                t.exports = '<cnx class=cnx-progress-bar> <cnx class=cnx-progress-rail-container> <cnx class=cnx-progress-rail></cnx> <cnx class="cnx-progress-fill cnx-color-icon"></cnx> </cnx> <cnx class="cnx-progress-handle cnx-color-icon"></cnx> </cnx> ';
            },
            function (t, i) {
                t.exports = '<cnx class="cnx-icon-button cnx-ui-btn-hoverable"> <cnx class=cnx-btn-container> <cnx class=cnx-expand-icon> <svg markup-inline class=cnx-color-icon xmlns=http://www.w3.org/2000/svg viewBox="0 0 24 24"><path d="M4.6 3H10v2H5v5H3V4.6A1.58 1.58 0 0 1 4.6 3zM5 14v5h5v2H4.6A1.58 1.58 0 0 1 3 19.4V14h2zM19.4 3A1.58 1.58 0 0 1 21 4.6V10h-2V5h-5V3h5.4zM19 14h2v5.4a1.58 1.58 0 0 1-1.6 1.6H14v-2h5v-5z" fill-rule=evenodd /></svg> </cnx> <cnx class=cnx-collapse-icon> <svg markup-inline class=cnx-color-icon xmlns=http://www.w3.org/2000/svg viewBox="0 0 24 24" fill-rule=evenodd><path d="M16.6 15a1.58 1.58 0 0 0-1.6 1.6V22h2v-5h5v-2h-5.4zM17 2h-2v5.4A1.58 1.58 0 0 0 16.6 9H22V7h-5V2zM7.4 15A1.58 1.58 0 0 1 9 16.6V22H7v-5H2v-2h5.4zM7 2h2v5.4A1.58 1.58 0 0 1 7.4 9H2V7h5V2z"/></svg> </cnx> </cnx> </cnx> ';
            },
            function (t, i) {
                t.exports = '<cnx class="cnx-ui-cm cnx-ui-cm-quality"> <cnx class=cnx-cm-container></cnx> </cnx> ';
            },
            function (t, i) {
                t.exports = '<svg viewBox="0 0 22 22" class="cnx-color-icon" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M18 5.4L16.6 4 11 9.6 5.4 4 4 5.4 9.6 11 4 16.6 5.4 18l5.6-5.6 5.6 5.6 1.4-1.4-5.6-5.6z"></path></svg>';
            },
            function (t, i) {
                t.exports = '<svg class="cnx-color-icon" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 22 22"><path d="M11 7c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"></path></svg>';
            },
            function (t, i) {
                t.exports = '<cnx class="cnx-ad-skip-button cnx-ui-btn"> <cnx class=cnx-icon-button> <cnx class=cnx-skip-ad-text> Skip <cnx-span></cnx-span> </cnx> <cnx class=cnx-skip-ad-icon> <svg markup-inline viewBox="0 0 24 24" class=cnx-color-icon xmlns=http://www.w3.org/2000/svg viewBox="0 0 24 24"><path d="M18 21h3V3h-3v18zM3 21l14-9L3 3v18z" fill-rule=evenodd /></svg> </cnx> </cnx> <cnx class=cnx-timer-loader> <svg markup-inline xmlns=http://www.w3.org/2000/svg width=36 height=36 viewBox="0 0 36 36"><circle class=cnx-svg-circle-stroke cx=18 cy=18 r=17 /></svg> </cnx> </cnx> ';
            },
            function (t, i) {
                t.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="2 2 20 20"><path d="M14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3m-2 16H5V5h7V3H5a2 2 0 00-2 2v14a2 2 0 002 2h14a2 2 0 002-2v-7h-2v7z"></path></svg>';
            },
            function (t, i) {
                t.exports = '<cnx class=cnx-pod-loading-screen-container> <img alt="Loading Pods" class=cnx-pod-loading-background /> <cnx class=cnx-pod-loading-info> <cnx class=cnx-pod-open-new-icon> </cnx> <cnx class=cnx-pod-visit-website-text> <cnx-span>Visit Advertiser website</cnx-span> </cnx> <cnx class=cnx-pod-read-more-container> <cnx-span class=cnx-pod-read-more-btn>GO TO PAGE</cnx-span> </cnx> </cnx> <cnx class=cnx-pod-loading-fallback> <cnx class=cnx-pod-loading-spinner></cnx> <cnx-span class=cnx-pod-slot-count-text></cnx-span> </cnx> </cnx>';
            },
            function (t, i) {
                t.exports = '<svg class="cnx-color-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M21 3H3c-1.1 0-2 .9-2 2v3h2V5h18v14h-7v2h7c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM1 18v3h3c0-1.66-1.34-3-3-3zm0-4v2c2.76 0 5 2.24 5 5h2c0-3.87-3.13-7-7-7zm0-4v2c4.97 0 9 4.03 9 9h2c0-6.08-4.93-11-11-11z" fill-rule="evenodd"></path></svg>';
            },
            function (t, i) {
                t.exports = '<svg class="cnx-color-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18 16.08c-.76 0-1.44.3-1.96.77L8.9 12.7c.05-.23.1-.46.1-.7s-.04-.47-.1-.7l7.05-4.1c.54.5 1.25.8 2.04.8 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.1.7L8.04 9.8C7.5 9.3 6.8 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.8 0 1.5-.3 2.04-.8l7.12 4.16a2.82 2.82 0 0 0-.08.65c0 1.6 1.3 2.92 2.92 2.92s2.92-1.3 2.92-2.92-1.3-2.92-2.92-2.92z" fill-rule="evenodd"></path></svg>';
            },
            function (t, i) {
                t.exports = '<cnx class=cnx-icon-button> <cnx class=cnx-btn-container> <cnx class=cnx-unmute-icon> <svg markup-inline class=cnx-color-icon xmlns=http://www.w3.org/2000/svg viewBox="0 0 24 24"><path d="M0 7.913v7.913h4.946l5.935 5.045V1.978L4.946 7.913zm16.815 3.957c.03-2.078-1.12-3.994-2.967-4.946v9.9c1.847-.952 2.997-2.867 2.967-4.945zM13.848 0v2.077a10.39 10.39 0 0 1 0 19.585v2.077a12.05 12.05 0 0 0 8.9-11.87A12.05 12.05 0 0 0 13.848 0z"/></svg> </cnx> <cnx class=cnx-mute-icon> <svg markup-inline class=cnx-color-icon xmlns=http://www.w3.org/2000/svg viewBox="0 0 24 24"><path d="M11 2L8.25 4.25 11 7zM0 7v9h5l6 5v-6.5L3.85 7zm17 4.5c0-1.965-1.2-3.735-3-4.5v3l2.8 2.8a3.73 3.73 0 0 0 .2-1.3zm3.4 7.45l-1.85-1.85-2.65-2.6-1.9-1.95-3-3-4.15-4.1-4.95-5L1.45 0 0 1.45 17.15 18.6 19 20.4l3.55 3.6L24 22.55zM14 23a11.83 11.83 0 0 0 3.65-1.55l-1.25-1.3c-.747.498-1.553.902-2.4 1.2V23zm9-11.5A11.77 11.77 0 0 0 14 0v1.6A10.53 10.53 0 0 1 20 16l1.45 1.45A11.99 11.99 0 0 0 23 11.5z"/></svg> </cnx> </cnx> </cnx> ';
            },
            function (t, i) {
                t.exports = '<svg viewBox="0 0 44 44" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="nonzero"><path d="M22 15.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13z" fill="#FFF"></path><path d="M22 18a4 4 0 110 8 4 4 0 010-8z" fill="#FF4047"></path><path d="M37.598 7.541c7.955 7.972 8.036 20.846.243 28.918l-.243.248-1.77-1.765c6.985-7 7.062-18.302.233-25.397l-.233-.238 1.77-1.766zm-4.722 5.225c4.34 4.926 4.415 12.803.224 17.831l-.224.262L31 29.206c3.515-3.989 3.583-10.465.203-14.55L31 14.42l1.876-1.653z" fill="#FFF"></path><path d="M6.598 7.541c7.955 7.972 8.036 20.846.243 28.918l-.243.248-1.77-1.765c6.985-7 7.062-18.302.233-25.397l-.233-.238 1.77-1.766zm-4.722 5.225c4.34 4.926 4.415 12.803.224 17.831l-.224.262L0 29.206c3.515-3.989 3.583-10.465.203-14.55L0 14.42l1.876-1.653z" fill="#FFF" transform="matrix(-1 0 0 1 12.626 0)"></path></g></svg>';
            },
            function (t, i) {
                t.exports = '<svg viewBox="0 0 44 44" xmlns="http://www.w3.org/2000/svg"><g fill="#FFF" fill-rule="evenodd"><rect class="cnx-live-icon-svg-rectangle" transform="rotate(90 22.06 21.43)" x="20.059" y="15.929"></rect><path d="M37.598 7.541c7.955 7.972 8.036 20.846.243 28.918l-.243.248-1.77-1.765c6.985-7 7.062-18.302.233-25.397l-.233-.238 1.77-1.766zm-4.722 5.225c4.34 4.926 4.415 12.803.224 17.831l-.224.262L31 29.206c3.515-3.989 3.583-10.465.203-14.55L31 14.42l1.876-1.653z" fill-rule="nonzero" opacity=".5"></path><path d="M6.598 7.541c7.955 7.972 8.036 20.846.243 28.918l-.243.248-1.77-1.765c6.985-7 7.062-18.302.233-25.397l-.233-.238 1.77-1.766zm-4.722 5.225c4.34 4.926 4.415 12.803.224 17.831l-.224.262L0 29.206c3.515-3.989 3.583-10.465.203-14.55L0 14.42l1.876-1.653z" fill-rule="nonzero" opacity=".5" transform="matrix(-1 0 0 1 12.626 0)"></path></g></svg>';
            },
            function (t, i) {
                t.exports = '<cnx class="cnx-live-poster cnx-mod-active"> <cnx class=cnx-live-broadcast> <cnx class=cnx-live-icon> <svg class=cnx-live-icon-starting markup-inline viewBox="0 0 44 44" xmlns=http://www.w3.org/2000/svg><g fill=none fill-rule=nonzero><path d="M22 15.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13z" fill=#FFF /><path d="M22 18a4 4 0 110 8 4 4 0 010-8z" fill=#FF4047 /><path d="M37.598 7.541c7.955 7.972 8.036 20.846.243 28.918l-.243.248-1.77-1.765c6.985-7 7.062-18.302.233-25.397l-.233-.238 1.77-1.766zm-4.722 5.225c4.34 4.926 4.415 12.803.224 17.831l-.224.262L31 29.206c3.515-3.989 3.583-10.465.203-14.55L31 14.42l1.876-1.653z" fill=#FFF /><path d="M6.598 7.541c7.955 7.972 8.036 20.846.243 28.918l-.243.248-1.77-1.765c6.985-7 7.062-18.302.233-25.397l-.233-.238 1.77-1.766zm-4.722 5.225c4.34 4.926 4.415 12.803.224 17.831l-.224.262L0 29.206c3.515-3.989 3.583-10.465.203-14.55L0 14.42l1.876-1.653z" fill=#FFF transform="matrix(-1 0 0 1 12.626 0)"/></g></svg> <svg class=cnx-live-icon-ended markup-inline viewBox="0 0 44 44" xmlns=http://www.w3.org/2000/svg><g fill=#FFF fill-rule=evenodd><rect class=cnx-live-icon-svg-rectangle transform="rotate(90 22.06 21.43)" x=20.059 y=15.929 /><path d="M37.598 7.541c7.955 7.972 8.036 20.846.243 28.918l-.243.248-1.77-1.765c6.985-7 7.062-18.302.233-25.397l-.233-.238 1.77-1.766zm-4.722 5.225c4.34 4.926 4.415 12.803.224 17.831l-.224.262L31 29.206c3.515-3.989 3.583-10.465.203-14.55L31 14.42l1.876-1.653z" fill-rule=nonzero opacity=.5 /><path d="M6.598 7.541c7.955 7.972 8.036 20.846.243 28.918l-.243.248-1.77-1.765c6.985-7 7.062-18.302.233-25.397l-.233-.238 1.77-1.766zm-4.722 5.225c4.34 4.926 4.415 12.803.224 17.831l-.224.262L0 29.206c3.515-3.989 3.583-10.465.203-14.55L0 14.42l1.876-1.653z" fill-rule=nonzero opacity=.5 transform="matrix(-1 0 0 1 12.626 0)"/></g></svg> </cnx> <cnx class=cnx-live-message> <cnx-span></cnx-span> </cnx> </cnx> </cnx> ';
            },
            function (t, i) {
                t.exports = '<cnx class="cnx-ui-live-badge-wrapper cnx-d-md-none"> <cnx class=cnx-ui-live-badge> <svg markup-inline xmlns=http://www.w3.org/2000/svg viewBox="0 0 37 9" fill-rule=nonzero><path d="M15.223 9V7.816H11.35V.47H9.868V9h5.356zm3.7 0V.47h-1.477V9h1.477zm6.555 0L28.55.47h-1.63l-2.168 6.674L22.608.47h-1.623L24.043 9h1.436zm10.6 0V7.816h-4.096V5.2h3.504V4.02h-3.504V1.664h4.055V.47H30.5V9h5.578zM3 2a3 3 0 1 0 0 6 3 3 0 1 0 0-6z" fill=#fff /><path d="M3 3a2 2 0 1 1 0 4 2 2 0 1 1 0-4z" fill=#ff4047 /></svg> </cnx> </cnx> ';
            },
            function (t, i) {
                t.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 22"><path d="M26,22H0V0H31.93L32,16A6,6,0,0,1,26,22Z" style="fill:#ffc800;fill-rule:evenodd"></path><path d="M12,5.29h0L16.45,16.7H14.83l-1.06-2.85H8.86l-1,2.85H6.21L10.6,5.31h0Zm5.89,11.42V5.29h3.63A5.52,5.52,0,0,1,26.65,11a5.33,5.33,0,0,1-4.93,5.7H17.89Zm1.46-1.36h2.17c1.77,0,3.7-1.49,3.7-4.35s-1.93-4.28-3.7-4.28H19.35Zm-8-8.16-2,5.24h3.86Z" style="fill-rule:evenodd"></path></svg>';
            },
            function (t, i) {
                t.exports = '<cnx class=cnx-mute-watermark> <cnx> <svg markup-inline class=cnx-color-icon xmlns=http://www.w3.org/2000/svg viewBox="0 0 24 24"><path d="M11 2L8.25 4.25 11 7zM0 7v9h5l6 5v-6.5L3.85 7zm17 4.5c0-1.965-1.2-3.735-3-4.5v3l2.8 2.8a3.73 3.73 0 0 0 .2-1.3zm3.4 7.45l-1.85-1.85-2.65-2.6-1.9-1.95-3-3-4.15-4.1-4.95-5L1.45 0 0 1.45 17.15 18.6 19 20.4l3.55 3.6L24 22.55zM14 23a11.83 11.83 0 0 0 3.65-1.55l-1.25-1.3c-.747.498-1.553.902-2.4 1.2V23zm9-11.5A11.77 11.77 0 0 0 14 0v1.6A10.53 10.53 0 0 1 20 16l1.45 1.45A11.99 11.99 0 0 0 23 11.5z"/></svg> </cnx> </cnx> ';
            },
            function (t, i, e) {
                'use strict';
                var s, n = e(5), r = e(0), h = e(2), a = [], o = 'ResizeObserver loop completed with undelivered notifications.';
                !function (t) {
                    t.BORDER_BOX = 'border-box', t.CONTENT_BOX = 'content-box', t.DEVICE_PIXEL_CONTENT_BOX = 'device-pixel-content-box';
                }(s || (s = {}));
                var c, u = function () {
                        function t(t, i, e, s) {
                            return this.x = t, this.y = i, this.width = e, this.height = s, this.top = this.y, this.left = this.x, this.bottom = this.top + this.height, this.right = this.left + this.width, Object.freeze(this);
                        }
                        return t.prototype.toJSON = function () {
                            var t = this;
                            return {
                                x: t.x,
                                y: t.y,
                                top: t.top,
                                right: t.right,
                                bottom: t.bottom,
                                left: t.left,
                                width: t.width,
                                height: t.height
                            };
                        }, t.fromRect = function (i) {
                            return new t(i.x, i.y, i.width, i.height);
                        }, t;
                    }(), l = function (t) {
                        return t instanceof SVGElement && 'getBBox' in t;
                    }, d = function (t) {
                        if (l(t)) {
                            var i = t.getBBox(), e = i.width, s = i.height;
                            return !e && !s;
                        }
                        var n = t, r = n.offsetWidth, h = n.offsetHeight;
                        return !(r || h || t.getClientRects().length);
                    }, f = function (t) {
                        var i, e, s = null === (e = null === (i = t) || void 0 === i ? void 0 : i.ownerDocument) || void 0 === e ? void 0 : e.defaultView;
                        return !!(s && t instanceof s.Element);
                    }, p = 'undefined' != typeof window ? window : {}, b = new WeakMap(), v = /auto|scroll/, m = /^tb|vertical/, g = /msie|trident/i.test(p.navigator && p.navigator.userAgent), y = function (t) {
                        return parseFloat(t || '0');
                    }, w = function (t, i, e) {
                        return void 0 === t && (t = 0), void 0 === i && (i = 0), void 0 === e && (e = !1), Object.freeze({
                            inlineSize: (e ? i : t) || 0,
                            blockSize: (e ? t : i) || 0
                        });
                    }, O = Object.freeze({
                        devicePixelContentBoxSize: w(),
                        borderBoxSize: w(),
                        contentBoxSize: w(),
                        contentRect: new u(0, 0, 0, 0)
                    }), x = function (t, i) {
                        if (void 0 === i && (i = !1), b.has(t) && !i)
                            return b.get(t);
                        if (d(t))
                            return b.set(t, O), O;
                        var e = getComputedStyle(t), s = l(t) && t.ownerSVGElement && t.getBBox(), n = !g && 'border-box' === e.boxSizing, r = m.test(e.writingMode || ''), h = !s && v.test(e.overflowY || ''), a = !s && v.test(e.overflowX || ''), o = s ? 0 : y(e.paddingTop), c = s ? 0 : y(e.paddingRight), f = s ? 0 : y(e.paddingBottom), p = s ? 0 : y(e.paddingLeft), x = s ? 0 : y(e.borderTopWidth), S = s ? 0 : y(e.borderRightWidth), j = s ? 0 : y(e.borderBottomWidth), k = p + c, _ = o + f, A = (s ? 0 : y(e.borderLeftWidth)) + S, I = x + j, C = a ? t.offsetHeight - I - t.clientHeight : 0, T = h ? t.offsetWidth - A - t.clientWidth : 0, P = n ? k + A : 0, M = n ? _ + I : 0, E = s ? s.width : y(e.width) - P - T, L = s ? s.height : y(e.height) - M - C, R = E + k + T + A, B = L + _ + C + I, D = Object.freeze({
                                devicePixelContentBoxSize: w(Math.round(E * devicePixelRatio), Math.round(L * devicePixelRatio), r),
                                borderBoxSize: w(R, B, r),
                                contentBoxSize: w(E, L, r),
                                contentRect: new u(p, o, E, L)
                            });
                        return b.set(t, D), D;
                    }, S = function (t, i, e) {
                        var n = x(t, e), r = n.borderBoxSize, h = n.contentBoxSize, a = n.devicePixelContentBoxSize;
                        switch (i) {
                        case s.DEVICE_PIXEL_CONTENT_BOX:
                            return a;
                        case s.BORDER_BOX:
                            return r;
                        default:
                            return h;
                        }
                    }, j = function () {
                        return function (t) {
                            var i = x(t);
                            this.target = t, this.contentRect = i.contentRect, this.borderBoxSize = [i.borderBoxSize], this.contentBoxSize = [i.contentBoxSize], this.devicePixelContentBoxSize = [i.devicePixelContentBoxSize];
                        };
                    }(), k = function (t) {
                        if (d(t))
                            return 1 / 0;
                        for (var i = 0, e = t.parentNode; e;)
                            i += 1, e = e.parentNode;
                        return i;
                    }, _ = function () {
                        var t = 1 / 0, i = [];
                        a.forEach(function (e) {
                            if (0 !== e.activeTargets.length) {
                                var s = [];
                                e.activeTargets.forEach(function (i) {
                                    var e = new j(i.target), n = k(i.target);
                                    s.push(e), i.lastReportedSize = S(i.target, i.observedBox), n < t && (t = n);
                                }), i.push(function () {
                                    e.callback.call(e.observer, s, e.observer);
                                }), e.activeTargets.splice(0, e.activeTargets.length);
                            }
                        });
                        for (var e = 0, s = i; e < s.length; e++) {
                            (0, s[e])();
                        }
                        return t;
                    }, A = function (t) {
                        a.forEach(function (i) {
                            i.activeTargets.splice(0, i.activeTargets.length), i.skippedTargets.splice(0, i.skippedTargets.length), i.observationTargets.forEach(function (e) {
                                e.isActive() && (k(e.target) > t ? i.activeTargets.push(e) : i.skippedTargets.push(e));
                            });
                        });
                    }, I = function () {
                        var t, i = 0;
                        for (A(i); a.some(function (t) {
                                return t.activeTargets.length > 0;
                            });)
                            i = _(), A(i);
                        return a.some(function (t) {
                            return t.skippedTargets.length > 0;
                        }) && ('function' == typeof ErrorEvent ? t = new ErrorEvent('error', { message: o }) : ((t = document.createEvent('Event')).initEvent('error', !1, !1), t.message = o), window.dispatchEvent(t)), i > 0;
                    }, C = [], T = function (t) {
                        if (!c) {
                            var i = 0, e = document.createTextNode('');
                            new MutationObserver(function () {
                                return C.splice(0).forEach(function (t) {
                                    return t();
                                });
                            }).observe(e, { characterData: !0 }), c = function () {
                                e.textContent = '' + (i ? i-- : i++);
                            };
                        }
                        C.push(t), c();
                    }, P = 0, M = {
                        attributes: !0,
                        characterData: !0,
                        childList: !0,
                        subtree: !0
                    }, E = [
                        'resize',
                        'load',
                        'transitionend',
                        'animationend',
                        'animationstart',
                        'animationiteration',
                        'keyup',
                        'keydown',
                        'mouseup',
                        'mousedown',
                        'mouseover',
                        'mouseout',
                        'blur',
                        'focus'
                    ], L = function (t) {
                        return void 0 === t && (t = 0), Date.now() + t;
                    }, R = !1, B = new (function () {
                        function t() {
                            var t = this;
                            this.stopped = !0, this.listener = function () {
                                return t.schedule();
                            };
                        }
                        return t.prototype.run = function (t) {
                            var i = this;
                            if (void 0 === t && (t = 250), !R) {
                                R = !0;
                                var e, s = L(t);
                                e = function () {
                                    var e = !1;
                                    try {
                                        e = I();
                                    } finally {
                                        if (R = !1, t = s - L(), !P)
                                            return;
                                        e ? i.run(1000) : t > 0 ? i.run(t) : i.start();
                                    }
                                }, T(function () {
                                    requestAnimationFrame(e);
                                });
                            }
                        }, t.prototype.schedule = function () {
                            this.stop(), this.run();
                        }, t.prototype.observe = function () {
                            var t = this, i = function () {
                                    return t.observer && t.observer.observe(document.body, M);
                                };
                            document.body ? i() : p.addEventListener('DOMContentLoaded', i);
                        }, t.prototype.start = function () {
                            var t = this;
                            this.stopped && (this.stopped = !1, this.observer = new MutationObserver(this.listener), this.observe(), E.forEach(function (i) {
                                return p.addEventListener(i, t.listener, !0);
                            }));
                        }, t.prototype.stop = function () {
                            var t = this;
                            this.stopped || (this.observer && this.observer.disconnect(), E.forEach(function (i) {
                                return p.removeEventListener(i, t.listener, !0);
                            }), this.stopped = !0);
                        }, t;
                    }())(), D = function (t) {
                        !P && t > 0 && B.start(), !(P += t) && B.stop();
                    }, F = function () {
                        function t(t, i) {
                            this.target = t, this.observedBox = i || s.CONTENT_BOX, this.lastReportedSize = {
                                inlineSize: 0,
                                blockSize: 0
                            };
                        }
                        return t.prototype.isActive = function () {
                            var t, i = S(this.target, this.observedBox, !0);
                            return t = this.target, l(t) || function (t) {
                                switch (t.tagName) {
                                case 'INPUT':
                                    if ('image' !== t.type)
                                        break;
                                case 'VIDEO':
                                case 'AUDIO':
                                case 'EMBED':
                                case 'OBJECT':
                                case 'CANVAS':
                                case 'IFRAME':
                                case 'IMG':
                                    return !0;
                                }
                                return !1;
                            }(t) || 'inline' !== getComputedStyle(t).display || (this.lastReportedSize = i), this.lastReportedSize.inlineSize !== i.inlineSize || this.lastReportedSize.blockSize !== i.blockSize;
                        }, t;
                    }(), V = function () {
                        return function (t, i) {
                            this.activeTargets = [], this.skippedTargets = [], this.observationTargets = [], this.observer = t, this.callback = i;
                        };
                    }(), U = new WeakMap(), $ = function (t, i) {
                        for (var e = 0; e < t.length; e += 1)
                            if (t[e].target === i)
                                return e;
                        return -1;
                    }, N = function () {
                        function t() {
                        }
                        return t.connect = function (t, i) {
                            var e = new V(t, i);
                            U.set(t, e);
                        }, t.observe = function (t, i, e) {
                            var s = U.get(t), n = 0 === s.observationTargets.length;
                            $(s.observationTargets, i) < 0 && (n && a.push(s), s.observationTargets.push(new F(i, e && e.box)), D(1), B.schedule());
                        }, t.unobserve = function (t, i) {
                            var e = U.get(t), s = $(e.observationTargets, i), n = 1 === e.observationTargets.length;
                            s >= 0 && (n && a.splice(a.indexOf(e), 1), e.observationTargets.splice(s, 1), D(-1));
                        }, t.disconnect = function (t) {
                            var i = this, e = U.get(t);
                            e.observationTargets.slice().forEach(function (e) {
                                return i.unobserve(t, e.target);
                            }), e.activeTargets.splice(0, e.activeTargets.length);
                        }, t;
                    }(), H = function () {
                        function t(t) {
                            if (0 === arguments.length)
                                throw new TypeError('Failed to construct \'ResizeObserver\': 1 argument required, but only 0 present.');
                            if ('function' != typeof t)
                                throw new TypeError('Failed to construct \'ResizeObserver\': The callback provided as parameter 1 is not a function.');
                            N.connect(this, t);
                        }
                        return t.prototype.observe = function (t, i) {
                            if (0 === arguments.length)
                                throw new TypeError('Failed to execute \'observe\' on \'ResizeObserver\': 1 argument required, but only 0 present.');
                            if (!f(t))
                                throw new TypeError('Failed to execute \'observe\' on \'ResizeObserver\': parameter 1 is not of type \'Element');
                            N.observe(this, t, i);
                        }, t.prototype.unobserve = function (t) {
                            if (0 === arguments.length)
                                throw new TypeError('Failed to execute \'unobserve\' on \'ResizeObserver\': 1 argument required, but only 0 present.');
                            if (!f(t))
                                throw new TypeError('Failed to execute \'unobserve\' on \'ResizeObserver\': parameter 1 is not of type \'Element');
                            N.unobserve(this, t);
                        }, t.prototype.disconnect = function () {
                            N.disconnect(this);
                        }, t.toString = function () {
                            return 'function ResizeObserver () { [polyfill code] }';
                        }, t;
                    }();
                e.d(i, 'a', function () {
                    return q;
                });
                class q {
                    constructor(t) {
                        this.pr = [], this.br = (t, i) => {
                            t.forEach(t => {
                                this.vr(t.target).forEach(t => {
                                    t && (Object(h.i)(t.element), t.callback(t.element));
                                });
                            });
                        };
                        try {
                            const i = t.ResizeObserver || H;
                            this.mr = new i(this.br);
                        } catch (t) {
                            Object(n.a)({
                                message: 'ResizeObserver_constructor',
                                callStack: t.stack,
                                exception: t.message,
                                level: r.ProtoLoggingLevelEnum.FATAL
                            });
                        }
                    }
                    on(t, i) {
                        this.gr(t, i) || (this.pr.push({
                            element: t,
                            callback: i
                        }), this.mr.observe(t));
                    }
                    off(t, i) {
                        const e = this.gr(t, i);
                        if (!e)
                            return;
                        this.mr.unobserve(e.element);
                        const s = this.pr.indexOf(e);
                        s >= 0 && this.pr.splice(s, 1);
                    }
                    destroy() {
                        if (this.pr)
                            for (; this.pr.length > 0;)
                                this.pr.pop();
                        this.mr.disconnect();
                    }
                    vr(t) {
                        return this.pr.filter(i => {
                            return i.element === t;
                        });
                    }
                    gr(t, i) {
                        return this.pr.find(e => {
                            return e.element === t && e.callback === i;
                        });
                    }
                }
            },
            function (t, i, e) {
                'use strict';
                var s, n = e(2);
                class r {
                    constructor(t) {
                        this.yr = [], this.wr = t => {
                            this.yr.push(t);
                        }, this.Or = t.subscribe(this.wr);
                    }
                    get cachedEvents() {
                        return this.yr;
                    }
                    destroy() {
                        this.yr = null, this.Or();
                    }
                }
                !function (t) {
                    t.AdobeAnalytics = 'AdobeAnalytics', t.MoatAnalytics = 'MoatAnalytics';
                }(s || (s = {}));
                var h = e(1), a = e(5), o = e(0), c = e(6), u = e(31), l = e(8), d = e(19), f = e(21), p = e(14);
                e.d(i, 'a', function () {
                    return b;
                });
                class b {
                    constructor(t, i, e, s, n) {
                        this.xr = i, this.Sr = e, this.jr = s, this.kr = n, this._r = [], this.Ar = t => {
                            try {
                                this.Ir(t);
                                const i = this._r.find(i => {
                                    return i.name === t.type;
                                });
                                let e;
                                if (i && !i.started) {
                                    i.started = !0;
                                    const t = i.eventsCacheHandler;
                                    e = t.cachedEvents, t.destroy();
                                }
                                const {
                                        adobeAnalyticsSettings: s,
                                        moatAnalyticsSettings: n,
                                        _debugLogging: r
                                    } = this.jr.apiConfig.settings.plugins, {
                                        secondLevelDomain: h,
                                        playerId: c
                                    } = this.jr, u = {
                                        cachedEvents: e,
                                        adobeAnalyticsSettings: s,
                                        moatAnalyticsSettings: n,
                                        _debugLogging: r,
                                        secondLevelDomain: h,
                                        playerId: c,
                                        pageName: this.Cr,
                                        pageUrl: this.We,
                                        version: f.a.version,
                                        delegateHandlers: this.Sr,
                                        playerContainer: this.kr,
                                        playerWindow: window
                                    };
                                t.getInstance().start(this.xr, u);
                            } catch (t) {
                                Object(a.a)({
                                    callStack: t.stack,
                                    exception: t.message,
                                    level: o.ProtoLoggingLevelEnum.FATAL,
                                    message: 'PluginsHandler_initPlugin'
                                });
                            }
                        };
                        const r = Object(l.f)(t);
                        this.fe = r.topFrame, this.We = Object(l.e)(r, this.fe), this.We = Object(d.d)(this.We), this.Cr = Object(d.a)(this.We);
                    }
                    start() {
                        this.Tr(), this.Pr(), this.fe.cnxPlugins.pluginsHandlers.push(this.Ar);
                    }
                    Tr() {
                        let t = [];
                        Array.isArray(this.fe.cnxPlugins) && this.fe.cnxPlugins.length > 0 && (t = this.fe.cnxPlugins).forEach(t => {
                            return this.Ar(t);
                        }), Object(h.f)(this.fe.cnxPlugins) || this.Mr(t);
                    }
                    Pr() {
                        const t = this.Er();
                        Object(c.h)(t) && this.Lr(t);
                    }
                    Rr(t) {
                        const i = this.fe.cnxPlugins.cachedPlugins;
                        if (Object(c.h)(i))
                            return i.find(i => {
                                return i.type === t;
                            });
                    }
                    Ir(t) {
                        this.Rr(t.type) || this.fe.cnxPlugins.cachedPlugins.push(t);
                    }
                    Mr(t) {
                        this.fe.cnxPlugins = {
                            cachedPlugins: t,
                            pluginsHandlers: [],
                            push: function (t) {
                                this.pluginsHandlers.forEach(i => {
                                    i(t);
                                });
                            }
                        };
                    }
                    Lr(t) {
                        t.forEach(t => {
                            this.Rr(t) || this._r.push({
                                name: t,
                                started: !1,
                                eventsCacheHandler: new r(this.xr)
                            });
                        }), this._r.forEach(({name: t}) => {
                            return this.Br(t);
                        });
                    }
                    Dr(t) {
                        return Object(u.a)(t).every(t => {
                            return Object(h.h)(t);
                        });
                    }
                    Er() {
                        const t = [];
                        return this.jr.apiConfig.settings.plugins.adobeAnalyticsSettings && this.Dr(this.jr.apiConfig.settings.plugins.adobeAnalyticsSettings) && t.push(s.AdobeAnalytics), this.jr.moatTrackingEnabled && t.push(s.MoatAnalytics), t;
                    }
                    Br(t) {
                        const i = {
                            id: `cnx-${ t }`,
                            src: ''
                        };
                        switch (t) {
                        case s.AdobeAnalytics:
                            i.src = p.a.endPoints.assets.plugins.adobeAnalytics;
                            break;
                        case s.MoatAnalytics:
                            i.src = p.a.endPoints.assets.plugins.moatAnalytics;
                        }
                        this.fe.document.getElementById(i.id) || Object(n.x)(i, this.fe.document.head, this.fe, null, null, !0, 'PluginsHandler_unable_to_insert_plugin_script');
                    }
                }
            },
            function (t, i, e) {
                'use strict';
                var s, n, r = e(25), h = e(12), a = e(43);
                !function (t) {
                    t.Minimized = 'minimized', t.Collapsed = 'collapsed', t.Normal = 'normal', t.Expanded = 'expanded', t.Fullscreen = 'fullscreen';
                }(s || (s = {})), function (t) {
                    t.StateChanged = 'stateChanged';
                }(n || (n = {}));
                class o {
                    constructor(t) {
                        this.mediator = t;
                    }
                    computeState(t) {
                        const i = this.Fr(t);
                        this.Vr && this.Vr.name === i || this.mediator.publish(this, n.StateChanged, { payload: { state: i } }), this.Vr = {
                            dimensions: t,
                            name: i
                        }, this.Ur || i !== s.Normal || (this.Ur = Object.assign({}, this.Vr));
                    }
                    setPlayerState(t) {
                        this.Vr && this.Vr.name === t || this.mediator.publish(this, n.StateChanged, { payload: { state: t } }), this.Vr = { name: t }, this.Ur || t !== s.Normal || (this.Ur = Object.assign({}, this.Vr));
                    }
                    get currentState() {
                        return this.Vr && this.Vr.name;
                    }
                    Fr(t) {
                        if (!this.Ur)
                            return s.Normal;
                        const {
                                width: i,
                                height: e
                            } = this.Ur.dimensions, n = i * e, r = t.width * t.height;
                        switch (!0) {
                        case n < r:
                            return s.Expanded;
                        case n > r:
                            return s.Collapsed;
                        default:
                            return s.Normal;
                        }
                    }
                }
                var c = e(20), u = e(5), l = e(0);
                e.d(i, 'a', function () {
                    return d;
                });
                class d extends c.a {
                    constructor(t, i, e) {
                        super(), this.$r = t, this.xr = i, this.Nr = new o(this), this.Hr = !1, this.qr = {
                            [h.a.AdError]: () => {
                                return this.zr();
                            },
                            [h.a.PlayError]: () => {
                                return this.Wr();
                            },
                            [h.a.RenderError]: () => {
                                return this.Gr();
                            },
                            [h.a.AdImpression]: () => {
                                return this.Jr();
                            },
                            [h.a.AdComplete]: () => {
                                return this.Qr();
                            },
                            [h.a.AdVideoStart]: ({adVideoStartMetadata: t}) => {
                                return this.Xr(t);
                            },
                            [h.a.AdVideoFirstQuartile]: () => {
                                return this.Yr();
                            },
                            [h.a.AdVideoMidpoint]: () => {
                                return this.Kr();
                            },
                            [h.a.AdVideoThirdQuartile]: () => {
                                return this.Zr();
                            },
                            [h.a.AdVideoComplete]: () => {
                                return this.th();
                            },
                            [h.a.VolumeChange]: ({volume: t}) => {
                                return this.ih(t);
                            },
                            [h.a.AdPause]: () => {
                                return this.eh();
                            },
                            [h.a.AdPlay]: () => {
                                return this.sh();
                            },
                            [h.a.AdSkipped]: () => {
                                return this.nh();
                            },
                            [h.a.AdClickThru]: () => {
                                return this.rh();
                            },
                            [h.a.AdInteraction]: () => {
                                return this.hh();
                            },
                            [h.a.AdLoaded]: ({adLoadedMetadata: t}) => {
                                return this.ah(t);
                            },
                            [h.a.AdStateChange]: ({adStateChangedMetadata: t}) => {
                                return this.oh(t);
                            },
                            [h.a.PlayerResized]: ({playerDimensionsMetadata: t}) => {
                                return this.uh(t);
                            },
                            [h.a.OnEnterFullscreen]: () => {
                                return this.lh();
                            },
                            [h.a.PlayerCollapsed]: () => {
                                return this.dh();
                            },
                            [h.a.PlayerExpanded]: () => {
                                return this.fh();
                            },
                            [h.a.Destroy]: () => {
                                return this.unsubscribeAll(this.Nr);
                            }
                        }, this.ph = t => {
                            try {
                                const i = this.qr[t.name];
                                if (!i)
                                    return;
                                i(t.metadata);
                            } catch (t) {
                                Object(u.a)({
                                    message: 'SessionClientWrapper_omsdk__onEventStorageEvent',
                                    exception: t.message,
                                    callStack: t.callStack,
                                    level: l.ProtoLoggingLevelEnum.WARNING
                                });
                            }
                        };
                        try {
                            const {
                                    AdSession: t,
                                    AdEvents: i,
                                    MediaEvents: s
                                } = this.$r, r = this.bh(e);
                            this.vh = new t(r), this.mh = new i(this.vh), this.gh = new s(this.vh), this.xr.subscribe(this.ph), this.subscribe(n.StateChanged, this.Nr, ({
                                payload: {state: t}
                            }) => {
                                this.yh(t);
                            }), this.wh();
                        } catch (t) {
                            Object(u.a)({
                                message: 'SessionClientWrapper_omsdk_classes_init_err',
                                exception: t.message,
                                callStack: t.callStack,
                                level: l.ProtoLoggingLevelEnum.WARNING
                            });
                        }
                    }
                    zr() {
                        this.vh.error(r.d.Video, h.a.AdError);
                    }
                    Wr() {
                        this.vh.error(r.d.Video, h.a.PlayError);
                    }
                    Gr() {
                        this.vh.error(r.d.Generic, h.a.RenderError);
                    }
                    bh(t) {
                        const {
                            Partner: i,
                            Context: e
                        } = this.$r;
                        return new e(new i(r.i, t));
                    }
                    Jr() {
                        this.Hr = !0, this.mh.impressionOccurred();
                        const t = this.Nr.currentState;
                        t !== s.Normal && this.yh(t);
                    }
                    Qr() {
                        this.Hr = !1;
                    }
                    Xr(t) {
                        const {
                            duration: i,
                            mediaPlayerVolume: e
                        } = t;
                        this.gh.start(i, e);
                    }
                    Yr() {
                        this.gh.firstQuartile();
                    }
                    Kr() {
                        this.gh.midpoint();
                    }
                    Zr() {
                        this.gh.thirdQuartile();
                    }
                    th() {
                        this.gh.complete();
                    }
                    ih(t) {
                        this.Hr && this.gh.volumeChange(t);
                    }
                    eh() {
                        this.gh.pause();
                    }
                    sh() {
                        this.gh.resume();
                    }
                    nh() {
                        this.gh.skipped();
                    }
                    rh() {
                        this.gh.adUserInteraction(r.g.Click);
                    }
                    hh() {
                        this.gh.adUserInteraction(r.g.InvitationAccept);
                    }
                    ah(t) {
                        const {
                                isSkippable: i,
                                skipOffset: e,
                                isAutoPlay: s
                            } = t, {VastProperties: n} = this.$r, r = new n(i, e, s, this.Oh);
                        this.mh.loaded(r);
                    }
                    oh({state: t}) {
                        this.Oh = r.h[a.a[t]];
                    }
                    yh(t) {
                        t && this.gh.playerStateChange(t);
                    }
                    xh(t) {
                        this.Nr.computeState(t);
                    }
                    Sh(t) {
                        this.Nr.setPlayerState(t);
                    }
                    uh(t) {
                        this.xh(t);
                    }
                    lh() {
                        this.Sh(s.Fullscreen);
                    }
                    dh() {
                        this.Sh(s.Minimized);
                    }
                    fh() {
                        this.Sh(s.Normal);
                    }
                    wh() {
                        this.vh.registerSessionObserver(t => {
                            t.type === r.b.SessionStart ? this.jh(t) : t.type === r.b.SessionError && Object(u.a)({
                                message: 'SessionClientWrapper_omsdk_session_error',
                                exception: t.type,
                                callStack: JSON.stringify(t),
                                level: l.ProtoLoggingLevelEnum.WARNING,
                                throttle: 1,
                                sendMaxLog: !1
                            });
                        });
                    }
                    jh(t) {
                        t.data.creativeType === r.c.DefinedByJavascript && this.vh.setCreativeType(r.c.Video), t.data.impressionType === r.f.DefinedByJavascript && this.vh.setImpressionType(r.f.BeginToRender);
                    }
                }
            },
            function (t, i, e) {
                'use strict';
                var s, n, r, h, a = e(4), o = e(10);
                !function (t) {
                    t[t.X = 0] = 'X', t[t.Y = 1] = 'Y';
                }(s || (s = {})), function (t) {
                    t.Click = 'click', t.InteractionStart = 'interactionstart', t.Interaction = 'interaction', t.InteractionEnd = 'interactionend';
                }(n || (n = {})), function (t) {
                    t[t.Swipe = 0] = 'Swipe', t[t.Hold = 1] = 'Hold';
                }(r || (r = {})), function (t) {
                    t[t.Left = 0] = 'Left', t[t.Right = 1] = 'Right';
                }(h || (h = {}));
                var c = e(6), u = e(2);
                const l = {
                    MAIN: 0,
                    AUXILIARY: 1,
                    SECONDARY: 2,
                    FOURTH: 3,
                    FIFTH: 4
                };
                function d(t) {
                    return t.button === l.MAIN;
                }
                var f = e(15), p = e(1);
                e.d(i, 'a', function () {
                    return g;
                });
                const b = 25, v = 250, m = 30;
                class g {
                    constructor(t, i, e) {
                        this.kh = t, this.Qn = i, this.mediator = null, this._h = m, this.Ah = v, this.Ih = b, this.Ch = [], this.Th = {}, this.Ph = 0, this.Mh = 0, this.Eh = !0, this.Lh = null, this.Rh = !1, this.Bh = !1, this.Dh = !1, this.Fh = !1, this.Vh = 0, this.Uh = 0, this.$h = null, this.Nh = null, this.Hh = null, this.qh = !0, this.zh = !1, this.Wh = t => {
                            this.Qn ? (t.element.addEventListener('touchstart', this.Gh, { passive: !0 }), t.element.addEventListener('touchmove', this.Jh, { passive: !0 }), t.element.addEventListener('touchend', this.Qh), t.element.addEventListener('touchcancel', this.Xh), t.element.addEventListener('mouseup', this.Yh)) : (t.element.addEventListener('mousedown', this.Kh), t.element.addEventListener('mouseup', this.Yh));
                        }, this.Zh = t => {
                            this.Qn ? (t.element.removeEventListener('touchstart', this.Gh), t.element.removeEventListener('touchmove', this.Jh), t.element.removeEventListener('touchend', this.Qh), t.element.removeEventListener('touchcancel', this.Xh), t.element.removeEventListener('mouseup', this.Yh)) : (t.element.removeEventListener('mousedown', this.Kh), t.element.removeEventListener('mouseup', this.Yh));
                        }, this.Gh = t => {
                            t.stopPropagation();
                            const i = this.ta(t);
                            this.Hh = i, this.Bh = !1, this.ia(i, r.Hold) && this.ea(t);
                            const e = this.sa(t);
                            this.Mh = e.eventX, this.Ph = e.eventY, this.na(t, i, n.InteractionStart), this.Eh = !0;
                        }, this.Jh = t => {
                            t.stopPropagation();
                            const i = this.ta(t), e = this.sa(t);
                            if (this.Eh && (Math.abs(e.deltaXFromStart) > this.Ih || Math.abs(e.deltaYFromStart) > this.Ih) && (this.Eh = !1), this.Rh || this.ia(i, r.Swipe)) {
                                if (null === this.$h && this.ra(i, e), this.$h === s.Y)
                                    return;
                                null === this.Nh && (this.Nh = Object(u.M)(this.kh, () => {
                                    this.Nh = null, this.ha(e.deltaXFromStart), i.mediator.publish(i.context, o.a[o.a.SwipeMove], { payload: e.deltaXFromStart });
                                }));
                            }
                        }, this.Qh = t => {
                            const i = this.ta(t);
                            if (this.zh = !1, this.Hh === i) {
                                const e = this.sa(t);
                                t.cancelable && this.ia(i, r.Hold) && Math.abs(e.deltaXFromStart) < this.Ih && Math.abs(e.deltaYFromStart) < this.Ih && t.preventDefault(), this.aa(t, i, e), this.oa(e) === s.Y && Math.abs(e.deltaYFromStart) >= this.Ih ? this.qh && i.mediator.publish(i.context, o.a[o.a.Scroll]) : !this.Eh || this.Dh || this.Bh || (this.zh = !0);
                            }
                            this.Hh = null;
                        }, this.Xh = t => {
                            const i = this.ta(t);
                            this.aa(t, i), this.Hh = null;
                        }, this.Kh = t => {
                            if (!d(t))
                                return void this.ca(n.InteractionStart, t);
                            const i = this.ta(t);
                            this.Hh = i, t.stopPropagation(), t.preventDefault(), this.ia(i, r.Hold) && this.ea(t), this.na(t, i, n.InteractionStart);
                        }, this.Yh = t => {
                            const i = this.ta(t);
                            return this.zh ? (i.mediator.publish(i.context, o.a[o.a.Click]), void (this.zh = !1)) : d(t) && this.Hh ? (t.stopPropagation(), t.preventDefault(), this.na(t, this.Hh, n.Interaction), this.na(t, this.Hh, n.InteractionEnd), (this.Rh || this.ia(i, r.Hold)) && this.ua(t), this.Hh === i && (this.na(t, i, n.Click), i.mediator.publish(i.context, o.a[o.a.Click])), void (this.Hh = null)) : (this.ca(n.Interaction, t), void this.ca(n.InteractionEnd, t));
                        }, this.la = t => {
                            if (!d(t))
                                return this.ca(n.Interaction, t), void this.ca(n.InteractionEnd, t);
                            this.Hh = null;
                        }, this.da = t => {
                            if (!d(t) || !this.Hh)
                                return this.ca(n.Interaction, t), void this.ca(n.InteractionEnd, t);
                            this.na(t, this.Hh, n.Interaction), this.na(t, this.Hh, n.InteractionEnd), (this.Rh || this.ia(this.Hh, r.Hold)) && this.ua(t), this.Hh = null;
                        };
                        const {
                            leftTapSizeThreshold: h,
                            holdTriggerDuration: a,
                            scrollThreshold: c
                        } = Object.assign({}, e);
                        this._h = h || this._h, this.Ah = a || this.Ah, this.Ih = c || this.Ih, this.kh.document.addEventListener('mousedown', this.la), this.kh.document.addEventListener('mouseup', this.da);
                    }
                    register(t, i, e, s = (() => {
                        return {};
                    })(), n = (() => {
                        return [];
                    })()) {
                        const r = {
                            element: t,
                            mediator: i,
                            context: e,
                            callbacks: s || {},
                            allowedSpecialInteractions: n,
                            disabledSpecialInteractions: []
                        };
                        this.Ch.push(r), this.Wh(r);
                    }
                    unregister(t) {
                        const i = this.Ch.find(i => {
                            return i.element === t;
                        });
                        i && (this.Ch = this.Ch.filter(i => {
                            return i.element !== t;
                        }), this.Zh(i));
                    }
                    unregisterAll(t) {
                        const i = this.Ch.filter(i => {
                            return i.mediator === t;
                        });
                        i.forEach(this.Zh), this.Ch = Object(c.a)(this.Ch, i);
                    }
                    addGlobalActions(t, i) {
                        Object.keys(Object.assign({}, i)).forEach(e => {
                            this.Th[e] = this.Th[e] || [], this.Th[e].push({
                                initiator: t,
                                action: i[e]
                            });
                        });
                    }
                    removeGlobalActions(t) {
                        Object.keys(this.Th).forEach(i => {
                            this.Th[i].some(i => {
                                return i.initiator === t;
                            }) && (this.Th[i] = this.Th[i].filter(i => {
                                return i.initiator !== t;
                            }));
                        });
                    }
                    disableSpecialInteractions(t) {
                        const i = this.fa(t);
                        i.disabledSpecialInteractions = Object(c.n)(i.allowedSpecialInteractions);
                    }
                    enableSpecialInteractions(t) {
                        this.fa(t).disabledSpecialInteractions = [];
                    }
                    getNonInterruptibleInteractions() {
                        return [
                            o.a.HoldStart,
                            o.a.HoldEnd,
                            o.a.SwipeMove,
                            o.a.SwipeEnd,
                            o.a.Scroll
                        ];
                    }
                    disableScrollEvent() {
                        this.qh = !1;
                    }
                    enableScrollEvent() {
                        this.qh = !0;
                    }
                    destroy() {
                        clearTimeout(this.Lh), this.Ch.forEach(this.Zh), this.kh.document.removeEventListener('mousedown', this.la), this.kh.document.removeEventListener('mouseup', this.da);
                    }
                    pa(t) {
                        const i = this.ta(t), e = i.element.getBoundingClientRect(), s = this.ba(t), n = e.width, r = Object(f.e)(0, n, 0, 100, s);
                        this.va(i, this._h, r);
                    }
                    va(t, i, e) {
                        e < i ? t.mediator.publish(t.context, o.a[o.a.TapLeft]) : t.mediator.publish(t.context, o.a[o.a.TapRight]);
                    }
                    ea(t) {
                        clearTimeout(this.Lh), this.Rh = !1, this.Dh = !1;
                        const i = this.ta(t);
                        Object(u.a)(i.element, a.h.OnHold), this.Lh = setTimeout(() => {
                            this.Rh = !0, this.Eh && (this.Dh = !0, i.mediator.publish(i.context, o.a[o.a.HoldStart]));
                        }, this.Ah);
                    }
                    ua(t) {
                        clearTimeout(this.Lh);
                        const i = this.ta(t);
                        Object(u.I)(i.element, a.h.OnHold), this.Rh ? (this.Rh = !1, this.Dh && (this.Dh = !1, i.mediator.publish(i.context, o.a[o.a.HoldEnd]))) : (this.Bh = !0, this.pa(t));
                    }
                    aa(t, i, e) {
                        e = e || this.sa(t), t.stopPropagation(), this.na(t, i, n.Interaction), this.na(t, i, n.InteractionEnd), (this.Rh || this.Fh || this.Eh && this.ia(i, r.Hold)) && this.ua(t), (this.Fh || this.ia(i, r.Swipe)) && this.ma(i, e);
                    }
                    ra(t, i) {
                        this.$h = this.oa(i), this.$h === s.X && (this.Fh = !0, this.Rh || (clearTimeout(this.Lh), this.Lh = null, this.Rh = !0, t.mediator.publish(t.context, o.a[o.a.HoldStart])));
                    }
                    ma(t, i) {
                        if (this.Fh) {
                            const e = this.ga(i);
                            t.mediator.publish(t.context, o.a[o.a.SwipeEnd], { payload: e });
                        }
                        Object(u.e)(this.kh, this.Nh), this.Nh = null, this.Fh = !1, this.Mh = null, this.Ph = null, this.$h = null, this.Vh = 0, this.Uh = 0;
                    }
                    ha(t) {
                        this.Uh < this.Ih ? this.Uh++ : (this.Vh = t, this.Uh = 0);
                    }
                    oa(t) {
                        return Math.abs(t.deltaXFromStart) >= Math.abs(t.deltaYFromStart) ? s.X : s.Y;
                    }
                    ga(t) {
                        return t.deltaXFromStart - this.Vh < 0 ? h.Left : h.Right;
                    }
                    sa(t) {
                        const i = t.changedTouches[0];
                        return {
                            deltaXFromStart: i.clientX - this.Mh,
                            deltaYFromStart: i.clientY - this.Ph,
                            eventX: i.clientX,
                            eventY: i.clientY
                        };
                    }
                    ta(t) {
                        return this.Hh || this.fa(t.currentTarget);
                    }
                    fa(t) {
                        return this.Ch.find(i => {
                            return i.element === t;
                        });
                    }
                    ba(t) {
                        const i = this.ta(t);
                        if (this.Qn) {
                            return t.changedTouches[0].clientX - i.element.getBoundingClientRect().left;
                        }
                        return t.offsetX;
                    }
                    ia(t, i) {
                        return t.allowedSpecialInteractions.includes(i) && !t.disabledSpecialInteractions.includes(i);
                    }
                    na(t, i, e) {
                        const s = i.callbacks[e];
                        Object(p.b)(s) && s(t), this.ca(e, t);
                    }
                    ca(t, i) {
                        var e;
                        null === (e = this.Th[t]) || void 0 === e || e.forEach(t => {
                            t.action(i);
                        });
                    }
                }
            },
            function (t, i, e) {
                'use strict';
                var s = e(23), n = e(0), r = e(21), h = e(14), a = e(11);
                class o {
                    constructor() {
                        this.ya = null, this.wa = 0;
                    }
                    Oa() {
                        if (null === this.ya)
                            return;
                        const t = new Date().getTime();
                        this.wa = t - this.ya;
                    }
                    startCountingTime() {
                        this.ya = new Date().getTime();
                    }
                    stopCountingTime() {
                        this.Oa(), this.ya = null;
                    }
                    fetchTime(t) {
                        this.Oa();
                        const i = Math.round(this.wa / a.f);
                        return this.wa = 0, null !== this.ya && this.startCountingTime(), i > t ? t : i;
                    }
                }
                var c = e(20), u = e(1), l = e(34), d = e(32), f = e(8), p = e(6), b = e(30);
                e(42);
                e.d(i, 'a', function () {
                    return m;
                });
                const v = 500;
                class m extends c.a {
                    constructor({
                        userId: t,
                        playerId: i,
                        geoLocation: e,
                        browser: s,
                        sessionId: n,
                        pageUrl: h,
                        bundleId: a,
                        xa: c,
                        userManagerService: u,
                        customParam1: d,
                        customParam2: b,
                        customParam3: v,
                        customParam4: m,
                        customParam5: g,
                        abTestId: y,
                        explorationMode: w
                    }) {
                        super(), this.hasGdprConsentPayload = !1, this.Sa = {}, this.ja = {}, this.ka = !1, this._a = !1, this.Aa = !1, this.Ia = !1, this.Ca = [], this.Ta = [], this.Pa = [], this.Ma = 5000, this.Ea = !1, this.xa = !1, this.La = [
                            {
                                delay: 7,
                                timesRepeatDelay: 1
                            },
                            {
                                delay: 8,
                                timesRepeatDelay: 1
                            },
                            {
                                delay: 15,
                                timesRepeatDelay: 3
                            },
                            {
                                delay: 30,
                                timesRepeatDelay: 2
                            },
                            {
                                delay: 60,
                                timesRepeatDelay: 1
                            },
                            {
                                delay: 120,
                                timesRepeatDelay: 1
                            },
                            {
                                delay: 300,
                                timesRepeatDelay: 8
                            },
                            {
                                delay: 600,
                                timesRepeatDelay: 13
                            },
                            { delay: 1800 }
                        ], this.Ra = 0, this.Ba = [];
                        Object(p.g)(i, [
                            '47286b3d-90c5-4634-ac87-0061769d15a8',
                            '2a9c6007-6213-4187-9b0d-1a6e9d7826f0',
                            'dac6e2fc-472a-46e6-8a6b-b5bea57a50bc',
                            '112cdb88-91ea-452d-990c-03a7d3118d2c',
                            '075127fa-fec9-4ee7-9a4c-bfb4478a4412',
                            '2febda63-6ec9-4951-9c07-5939376b8226',
                            '55ca7ad7-f311-4854-b29a-a2d590760493',
                            '62bbbcda-024e-4769-968a-db84830f65cc',
                            '648d8d4d-fa41-496c-8415-26f3ad2d1989',
                            '6fdffbf5-b899-44ac-96a6-4eab50497b5b',
                            'b6094ff6-54a0-4ddd-b799-66193f8346c7',
                            'c81bb1f8-de80-428b-ae42-1ce0e75d3998',
                            'ddbadb2c-9e78-442a-b757-a49113a791ed',
                            '20d71b12-41ce-45db-8135-1a3cd111b25d',
                            '13e4ee65-6bed-40e6-8e41-4ef9087c294b',
                            '62d76d13-cd32-4021-a243-98b2444cd14d',
                            'b1c78103-4bb7-47ac-9cfe-dcd9b603e8a2',
                            '77a7ef56-c608-456d-8ff9-a382d139ff95',
                            '5d8eeea7-4ee0-4ad7-9023-97fbc8d97fa7',
                            'ed379095-5f46-4c1c-917d-ad063d84eaf1',
                            '0527ea2b-cb60-408e-85c1-e500bee128c3',
                            '148a0193-55d6-47a1-8a33-2c4ba9c97b5e',
                            '27937f13-f008-457b-938c-87c9fe447de8',
                            '4c2b6243-5715-4651-a27e-f6052b61af80',
                            '10efae62-af17-4d47-a65e-baabc2b60496',
                            '65d7cfb4-70a5-480a-95a7-25a713d61695',
                            '6e3ef6a1-2ccf-48b3-973c-55244487dc38',
                            '13426e00-211b-4c70-981e-d71a622543cf',
                            '728b020d-aa32-4009-ad0d-9c1b6b57b3c9',
                            '77e6bf0d-befe-4364-9f95-df37d478f297',
                            '19e14bfd-d5ef-4f82-8c9d-ea19512d0793',
                            '8c175c10-202a-4275-9e10-5ab9b216a61d',
                            '9429315c-a644-4fbf-938f-30cd23f2b098',
                            'a1bf91f8-98cb-4642-a2ec-2124782bf273',
                            '3025741e-c645-46ee-93db-c6b1c5cdb842',
                            'c32f1fb1-68d7-41cc-9a33-5f541d5b0cfd',
                            'c92ebcd4-b4c1-449e-809a-6744a0cd21d1',
                            'd0ad8360-284d-47d3-861d-6be5b09619e1',
                            '9b3b0ce6-cae5-43e0-b669-023c76e9127f',
                            'bbb6ab44-3b47-44d8-990c-642de4bb12ba',
                            'eeb97179-3486-4ca8-968c-c18f49e3be4a',
                            'ffc13c6a-6d6b-48dc-9965-d5a5adfea0f1',
                            'a8ec4044-50c7-46b1-8e8a-4da98ff95aed',
                            'ce2e36d0-8e66-4433-bb3c-47e78ad6f250',
                            '079b7e9c-6d8f-4772-b5d7-579c6f5f873b',
                            '04f884af-47ec-4754-a913-b38823f701a5',
                            '2e7b1501-840a-46f0-a3ae-015008b666d8',
                            '2ea0b3ba-66c9-46f4-a4a3-300f1bb36a93',
                            '3e1fcf24-0e7a-4aeb-9dce-a98d552dd7c7',
                            '5156a44c-a3d9-40ad-a592-b6ffb8019b2a',
                            '6b55d261-63c7-4349-804f-3d9bbd7aac85',
                            '8d95a3a5-ffa0-4932-8208-e06a8f659b55',
                            'a49d8dbb-b91f-41a3-b5a8-8a5b053af776',
                            'a585524a-2784-4b2d-924b-d872994cb7a8',
                            '225f96d6-6d58-483b-8856-ddffd61bac40',
                            'ad5efc62-db13-40f2-a76e-df9b90a2687b',
                            '08b46451-1849-433c-9019-85b2aeca87d1',
                            'bb5ad3b4-8fcd-4cb8-af70-383839db3712',
                            'e68c7376-e6c7-44ff-ad65-775691372f19',
                            'f5a3920b-15fc-4b52-8586-16091b9bedde',
                            '0c83603a-5d0c-4b62-a613-5f2db36510d3',
                            '0f3c7056-05d4-46fe-824c-32df48115369',
                            '81329826-a1f3-4f0b-86e1-2c1fb58cac85',
                            'a7b4eaad-8dea-41d5-8bd0-c8f13cd84296',
                            'c1282781-f75a-46b7-b774-5695e0a74c3d',
                            'd47819ae-be18-4054-8ffd-dc86eb6fdb5a'
                        ]) ? this.Sa.trackAllRequests = !0 : this.Sa.trackAllRequests = 1 === Object(f.k)([
                            99,
                            1
                        ]), this.Da = u, this.Sa.userId = t, this.Sa.playerId = i, this.Sa.geo = e, this.Sa.browser = s, this.Sa.version = r.a.version, this.Sa.sessionId = n, this.Sa.clientAb0 = l.a.clientAb0, this.Sa.clientAb1 = l.a.clientAb1, this.Sa.serverAb0 = l.a.serverAb0, this.Sa.serverAb1 = l.a.serverAb1, this.Sa.pageUrl = h, this.Sa.bundleId = a, this.Sa.customParam1 = d, this.Sa.customParam2 = b, this.Sa.customParam3 = v, this.Sa.customParam4 = m, this.Sa.customParam5 = g, this.Sa.abTestId = y, this.Fa = new o(), this.Va = new o(), this.Ua = w;
                    }
                    $a(t, i = (() => {
                        return n.ProtoTrackingRequest;
                    })(), e, r = (() => {
                        return !0;
                    })()) {
                        return this.Sa.pageInFocus = b.a.pageFocus, s.a.sendProtoBeaconRequest({
                            endpoint: t,
                            ProtoRequest: i,
                            requestData: Object.assign({ trackingRequestMeta: r ? this.Sa : void 0 }, e),
                            logError: !1
                        });
                    }
                    Na(t, i = (() => {
                        return n.ProtoTrackingRequest;
                    })(), e, h = (() => {
                        return !0;
                    })()) {
                        this.Sa.pageInFocus = b.a.pageFocus;
                        const a = s.a.sendProtoRequest({
                            endpoint: t,
                            ProtoRequest: i,
                            ProtoResponse: n.ProtoTrackingResponse,
                            requestData: Object.assign({ trackingRequestMeta: h ? this.Sa : void 0 }, e),
                            queryParams: { [d.b]: r.a.version },
                            withCredentials: !0,
                            logError: !0
                        });
                        return a.then(t => {
                            const i = t.platformCappedLineItemIdList;
                            Object(p.h)(i) && this.Ba.forEach(t => {
                                t.setPlatformCappedLineItemIdList(i);
                            });
                            const {
                                impressionRevenue: e,
                                adServerLineItemName: s
                            } = t;
                            Object(u.e)(e) && Object(u.h)(s) && this.Ha && this.Ha.notifyImpressionRevenue({
                                impressionRevenue: e,
                                adServerLineItemName: s
                            });
                        }).catch(t => {
                        }), a;
                    }
                    addPlatformCappedLineItemSubscriber(t) {
                        this.Ba.push(t);
                    }
                    removePlatformCappedLineItemSubscriber(t) {
                        const i = this.Ba.indexOf(t);
                        i >= 0 && this.Ba.splice(i, 1);
                    }
                    setImpressionRevenueSubscriber(t) {
                        this.Ha = t;
                    }
                    unsubscribeToImpressionRevenue(t) {
                        this.Ha !== t && (this.Ha = void 0);
                    }
                    qa(t, i, e = (() => {
                        return n.ProtoMediaTrackingRequest;
                    })()) {
                        const s = Object.assign({}, i);
                        Object(u.h)(this.ja.mediaId) && (s.mediaGuid = this.ja.mediaId), this.Na(t, e, s);
                    }
                    za() {
                        this.Ea || (this.Ea = !0, this.Na(h.a.endPoints.tracking.playerStart, n.ProtoTrackingRequest));
                    }
                    Wa(t, i, e = (() => {
                        return n.ProtoMediaTrackingRequest;
                    })()) {
                        return this.Na(t, e, Object.assign({ mediaGuid: this.ja.mediaId }, i));
                    }
                    Ga(t) {
                        this.qa(h.a.endPoints.tracking.media_quartile, {
                            baseMeta: this.ja,
                            mediaId: this.ja.mediaId,
                            quartile: t
                        });
                    }
                    Ja() {
                        this.Qa(this.Ta, this.Ca, this.Pa), this.Ta = [], this.Ca = [], this.Pa = [];
                    }
                    Qa(t, i, e) {
                        if (0 === t.length && 0 === i.length && 0 === e.length)
                            return;
                        e.forEach(t => {
                            t.error && t.error.length > 0 && (t.error = t.error.substring(0, v));
                        });
                        const s = {
                            mediaGuid: this.ja.mediaId,
                            prebids: t,
                            bids: i,
                            postBids: e,
                            logEveryting: this.xa,
                            hasGdprConsentPayload: this.hasGdprConsentPayload,
                            gdprConsentMode: this.Da.gdprConsentMode,
                            useExploration: this.Ua
                        };
                        this.Na(h.a.endPoints.tracking.bids, n.ProtoBidTrackingsRequest, s);
                    }
                    Xa(t) {
                        this.Na(h.a.endPoints.tracking.ad_click, n.ProtoAdClickTrackingRequest, Object.assign({ mediaGuid: this.ja.mediaId }, t));
                    }
                    Ya(t) {
                        this.$a(h.a.endPoints.tracking.heavy_ad_intervention, n.ProtoHeavyAdTrackingRequest, t);
                    }
                    Ka() {
                        const t = this.La[this.Ra];
                        clearTimeout(this.Za), this.Za = setTimeout(() => {
                            this.to(t.delay), Object(u.e)(t.timesRepeatDelay) && t.timesRepeatDelay--, 0 === t.timesRepeatDelay && this.Ra++, this.Ka();
                        }, 1000 * t.delay);
                    }
                    to(t) {
                        this.Na(h.a.endPoints.tracking.session_time, n.ProtoSessionTimeTrackingRequest, {
                            trackingRequestMeta: this.Sa,
                            sessionTime: t,
                            timePlayed: this.Fa.fetchTime(t),
                            timePlayedInView: this.Va.fetchTime(t)
                        });
                    }
                    setNewMedia(t) {
                        this.ja = t;
                    }
                    updateMediaMetadata(t) {
                        this.ja = t;
                    }
                    setImplementationTypeOnMeta(t) {
                        this.Sa.implementationType = t;
                    }
                    setMediaStart() {
                        this.Ga(n.ProtoQuartilesEnum.Start);
                    }
                    setContentStart() {
                        this.za();
                    }
                    setSessionPlayback(t) {
                        this.Aa !== t && (this.Aa = t, this.Ia && this.Aa && this.Va.startCountingTime(), this.Aa ? this.Fa.startCountingTime() : (this.Fa.stopCountingTime(), this.Va.stopCountingTime()));
                    }
                    setSessionViewability(t) {
                        this.Ia !== t && (this.Ia = t, this.Ia && this.Aa ? this.Va.startCountingTime() : this.Ia || this.Va.stopCountingTime());
                    }
                    trackSessionRendered(t) {
                        if (this.ka)
                            return;
                        this.Na(h.a.endPoints.tracking.session_rendered, n.ProtoTrackingRequest, {
                            hasAdBlocker: t,
                            bundleName: 'player.dc.js'
                        }), this.ka = !0, this.Ka();
                    }
                    trackSessionViewability() {
                        !this._a && this.Ea && (this.Na(h.a.endPoints.tracking.session_view), this._a = !0);
                    }
                    trackMediaQuartile(t) {
                        this.Ga(t);
                    }
                    trackMediaClick(t = (() => {
                        return n.ProtoMediaClickTypeEnum.Click;
                    })()) {
                        const i = {
                            type: t,
                            clickUrl: t === n.ProtoMediaClickTypeEnum.UrlClick ? this.ja.clickUrl : void 0,
                            slideTitle: this.ja.slideTitle,
                            slideNumber: this.ja.slideNumber,
                            slideMediaType: this.ja.slideMediaType
                        };
                        this.qa(h.a.endPoints.tracking.media_click, i, n.ProtoMediaClickTrackingRequest);
                    }
                    setAdStart() {
                        this.za();
                    }
                    startBidRequests() {
                        this.io = setInterval(() => {
                            this.Ja();
                        }, this.Ma);
                    }
                    addPrebid(t) {
                        this.Ta.push(t);
                    }
                    addPostBid(t) {
                        Object(u.g)(t.error) || (t.error = JSON.stringify(t.error)), this.Pa.push(t);
                    }
                    addBid(t) {
                        this.Ca.push(t);
                    }
                    trackAuctionInfoForBid(t) {
                        this.Na(h.a.endPoints.tracking.auctionInformation, n.ProtoAuctionInfoRequest, t);
                    }
                    trackVideoAdImpression(t) {
                        return this.Wa(h.a.endPoints.tracking.ad_impression, t, n.ProtoVideoAdImpressionRequest);
                    }
                    trackVideoAdImpressionViewable(t) {
                        return this.Wa(h.a.endPoints.tracking.ad_impression_viewable, t, n.ProtoVideoAdImpressionViewableRequest);
                    }
                    trackVideoAdQuartile(t) {
                        this.qa(h.a.endPoints.tracking.ad_quartile, t, n.ProtoVideoAdQuartilesRequest);
                    }
                    trackAdClick(t) {
                        this.Xa(t);
                    }
                    trackAdOpportunity(t) {
                        const {sessionId: i} = this.Sa;
                        t.sessionId = i, this.Na(h.a.endPoints.tracking.adOpportunity, n.ProtoAdOpportunityRequest, t);
                    }
                    trackSessionAdBlocker(t) {
                        this.Na(h.a.endPoints.tracking.sessionAdBlocker, n.ProtoSessionAdBlockerRequest, {
                            trackingRequestMeta: this.Sa,
                            adBlockDetectionType: t
                        });
                    }
                    getMetadataModel() {
                        return this.Sa;
                    }
                    updateMetadataModel(t) {
                        this.Sa = Object.assign(Object.assign({}, this.Sa), t);
                    }
                    trackHeavyAdIntervention(t) {
                        this.Ya(t);
                    }
                    destroy() {
                        clearInterval(this.Za), clearInterval(this.io);
                    }
                }
            },
            function (t, i, e) {
                'use strict';
                var s, n = e(1), r = e(0);
                !function (t) {
                    t[t.Desktop = 2] = 'Desktop', t[t.SmartTV = 3] = 'SmartTV', t[t.Smartphone = 4] = 'Smartphone', t[t.Tablet = 5] = 'Tablet', t[t.GameConsole = 6] = 'GameConsole', t[t.Unrecognized = 7] = 'Unrecognized';
                }(s || (s = {}));
                const h = {
                        [r.ProtoDeviceType.Desktop]: s.Desktop,
                        [r.ProtoDeviceType.Smartphone]: s.Smartphone,
                        [r.ProtoDeviceType.Tablet]: s.Tablet,
                        [r.ProtoDeviceType.GameConsole]: s.GameConsole,
                        [r.ProtoDeviceType.SmartTV]: s.SmartTV,
                        [r.ProtoDeviceType.WearableComputer]: s.Unrecognized,
                        [r.ProtoDeviceType.PDA]: s.Unrecognized,
                        [r.ProtoDeviceType.Unrecognized]: s.Unrecognized
                    }, a = 'https://s.srvsynd.com/2/234175/analytics.js?dt=2341751597675869250012&di=[DOMAIN]&ui=[FS_USER_ID]&md=[FS_MEDIA_TYPE]&ap=[APP_BUNDLE]&sr=[CNX_SUPPLIER_ID]&pp=[PUBLISHER_ID]&ti=[SESSION_ID]&de=[FS_DEVICE_TYPE]&to=[MGTO]&pv=[MGID]', o = 'cnx_fraud_sensor', c = '00000000-0000-0000-0000-000000000000', u = 2;
                e.d(i, 'a', function () {
                    return l;
                });
                class l {
                    constructor(t, i, e, s) {
                        this.eo = t, this.so = i, this.ln = e, this.no(s);
                    }
                    addFraudSensorScript() {
                        if (this.so.getElementById(o))
                            return;
                        const t = {
                            id: o,
                            src: this.eo.setupMacros(a)
                        };
                        this.so.insertScript(t, null, 'FraudSensor_script_error');
                    }
                    no(t) {
                        t = Object(n.h)(t) ? t : c;
                        const {
                                lookupId: i,
                                lookupResponseCode: e,
                                publisherAdsTxt: s
                            } = this.ln, r = h[this.ln.deviceType];
                        this.eo.setPublisherId(s), this.eo.setUserId(t), this.eo.setFraudSensorMacros({
                            lookupId: i,
                            lookupResponseCode: e,
                            deviceType: r,
                            mediaType: u
                        });
                    }
                }
            },
            ,
            function (t, i, e) {
                'use strict';
                var s = i;
                function n() {
                    s.util.Ki(), s.Writer.Ki(s.BufferWriter), s.Reader.Ki(s.BufferReader);
                }
                s.build = 'minimal', s.Writer = e(61), s.BufferWriter = e(129), s.Reader = e(63), s.BufferReader = e(130), s.util = e(39), s.rpc = e(131), s.roots = e(133), s.configure = n, n();
            },
            function (t, i, e) {
                'use strict';
                t.exports = function (t, i) {
                    var e = new Array(arguments.length - 1), s = 0, n = 2, r = !0;
                    for (; n < arguments.length;)
                        e[s++] = arguments[n++];
                    return new Promise(function (n, h) {
                        e[s] = function (t) {
                            if (r)
                                if (r = !1, t)
                                    h(t);
                                else {
                                    for (var i = new Array(arguments.length - 1), e = 0; e < i.length;)
                                        i[e++] = arguments[e];
                                    n.apply(null, i);
                                }
                        };
                        try {
                            t.apply(i || null, e);
                        } catch (t) {
                            r && (r = !1, h(t));
                        }
                    });
                };
            },
            function (t, i, e) {
                'use strict';
                var s = i;
                s.length = function (t) {
                    var i = t.length;
                    if (!i)
                        return 0;
                    for (var e = 0; --i % 4 > 1 && '=' === t.charAt(i);)
                        ++e;
                    return Math.ceil(3 * t.length) / 4 - e;
                };
                for (var n = new Array(64), r = new Array(123), h = 0; h < 64;)
                    r[n[h] = h < 26 ? h + 65 : h < 52 ? h + 71 : h < 62 ? h - 4 : h - 59 | 43] = h++;
                s.encode = function (t, i, e) {
                    for (var s, r = null, h = [], a = 0, o = 0; i < e;) {
                        var c = t[i++];
                        switch (o) {
                        case 0:
                            h[a++] = n[c >> 2], s = (3 & c) << 4, o = 1;
                            break;
                        case 1:
                            h[a++] = n[s | c >> 4], s = (15 & c) << 2, o = 2;
                            break;
                        case 2:
                            h[a++] = n[s | c >> 6], h[a++] = n[63 & c], o = 0;
                        }
                        a > 8191 && ((r || (r = [])).push(String.fromCharCode.apply(String, h)), a = 0);
                    }
                    return o && (h[a++] = n[s], h[a++] = 61, 1 === o && (h[a++] = 61)), r ? (a && r.push(String.fromCharCode.apply(String, h.slice(0, a))), r.join('')) : String.fromCharCode.apply(String, h.slice(0, a));
                };
                s.decode = function (t, i, e) {
                    for (var s, n = e, h = 0, a = 0; a < t.length;) {
                        var o = t.charCodeAt(a++);
                        if (61 === o && h > 1)
                            break;
                        if (void 0 === (o = r[o]))
                            throw Error('invalid encoding');
                        switch (h) {
                        case 0:
                            s = o, h = 1;
                            break;
                        case 1:
                            i[e++] = s << 2 | (48 & o) >> 4, s = o, h = 2;
                            break;
                        case 2:
                            i[e++] = (15 & s) << 4 | (60 & o) >> 2, s = o, h = 3;
                            break;
                        case 3:
                            i[e++] = (3 & s) << 6 | o, h = 0;
                        }
                    }
                    if (1 === h)
                        throw Error('invalid encoding');
                    return e - n;
                }, s.test = function (t) {
                    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(t);
                };
            },
            function (t, i, e) {
                'use strict';
                function s() {
                    this.ro = {};
                }
                t.exports = s, s.prototype.on = function (t, i, e) {
                    return (this.ro[t] || (this.ro[t] = [])).push({
                        fn: i,
                        ctx: e || this
                    }), this;
                }, s.prototype.off = function (t, i) {
                    if (void 0 === t)
                        this.ro = {};
                    else if (void 0 === i)
                        this.ro[t] = [];
                    else
                        for (var e = this.ro[t], s = 0; s < e.length;)
                            e[s].fn === i ? e.splice(s, 1) : ++s;
                    return this;
                }, s.prototype.emit = function (t) {
                    var i = this.ro[t];
                    if (i) {
                        for (var e = [], s = 1; s < arguments.length;)
                            e.push(arguments[s++]);
                        for (s = 0; s < i.length;)
                            i[s].fn.apply(i[s++].ctx, e);
                    }
                    return this;
                };
            },
            function (t, i, e) {
                'use strict';
                function s(t) {
                    return 'undefined' != typeof Float32Array ? function () {
                        var i = new Float32Array([-0]), e = new Uint8Array(i.buffer), s = 128 === e[3];
                        function n(t, s, n) {
                            i[0] = t, s[n] = e[0], s[n + 1] = e[1], s[n + 2] = e[2], s[n + 3] = e[3];
                        }
                        function r(t, s, n) {
                            i[0] = t, s[n] = e[3], s[n + 1] = e[2], s[n + 2] = e[1], s[n + 3] = e[0];
                        }
                        function h(t, s) {
                            return e[0] = t[s], e[1] = t[s + 1], e[2] = t[s + 2], e[3] = t[s + 3], i[0];
                        }
                        function a(t, s) {
                            return e[3] = t[s], e[2] = t[s + 1], e[1] = t[s + 2], e[0] = t[s + 3], i[0];
                        }
                        t.writeFloatLE = s ? n : r, t.writeFloatBE = s ? r : n, t.readFloatLE = s ? h : a, t.readFloatBE = s ? a : h;
                    }() : function () {
                        function i(t, i, e, s) {
                            var n = i < 0 ? 1 : 0;
                            if (n && (i = -i), 0 === i)
                                t(1 / i > 0 ? 0 : 2147483648, e, s);
                            else if (isNaN(i))
                                t(2143289344, e, s);
                            else if (i > 3.4028234663852886e+38)
                                t((n << 31 | 2139095040) >>> 0, e, s);
                            else if (i < 1.1754943508222875e-38)
                                t((n << 31 | Math.round(i / 1.401298464324817e-45)) >>> 0, e, s);
                            else {
                                var r = Math.floor(Math.log(i) / Math.LN2);
                                t((n << 31 | r + 127 << 23 | 8388607 & Math.round(i * Math.pow(2, -r) * 8388608)) >>> 0, e, s);
                            }
                        }
                        function e(t, i, e) {
                            var s = t(i, e), n = 2 * (s >> 31) + 1, r = s >>> 23 & 255, h = 8388607 & s;
                            return 255 === r ? h ? NaN : n * (1 / 0) : 0 === r ? 1.401298464324817e-45 * n * h : n * Math.pow(2, r - 150) * (h + 8388608);
                        }
                        t.writeFloatLE = i.bind(null, n), t.writeFloatBE = i.bind(null, r), t.readFloatLE = e.bind(null, h), t.readFloatBE = e.bind(null, a);
                    }(), 'undefined' != typeof Float64Array ? function () {
                        var i = new Float64Array([-0]), e = new Uint8Array(i.buffer), s = 128 === e[7];
                        function n(t, s, n) {
                            i[0] = t, s[n] = e[0], s[n + 1] = e[1], s[n + 2] = e[2], s[n + 3] = e[3], s[n + 4] = e[4], s[n + 5] = e[5], s[n + 6] = e[6], s[n + 7] = e[7];
                        }
                        function r(t, s, n) {
                            i[0] = t, s[n] = e[7], s[n + 1] = e[6], s[n + 2] = e[5], s[n + 3] = e[4], s[n + 4] = e[3], s[n + 5] = e[2], s[n + 6] = e[1], s[n + 7] = e[0];
                        }
                        function h(t, s) {
                            return e[0] = t[s], e[1] = t[s + 1], e[2] = t[s + 2], e[3] = t[s + 3], e[4] = t[s + 4], e[5] = t[s + 5], e[6] = t[s + 6], e[7] = t[s + 7], i[0];
                        }
                        function a(t, s) {
                            return e[7] = t[s], e[6] = t[s + 1], e[5] = t[s + 2], e[4] = t[s + 3], e[3] = t[s + 4], e[2] = t[s + 5], e[1] = t[s + 6], e[0] = t[s + 7], i[0];
                        }
                        t.writeDoubleLE = s ? n : r, t.writeDoubleBE = s ? r : n, t.readDoubleLE = s ? h : a, t.readDoubleBE = s ? a : h;
                    }() : function () {
                        function i(t, i, e, s, n, r) {
                            var h = s < 0 ? 1 : 0;
                            if (h && (s = -s), 0 === s)
                                t(0, n, r + i), t(1 / s > 0 ? 0 : 2147483648, n, r + e);
                            else if (isNaN(s))
                                t(0, n, r + i), t(2146959360, n, r + e);
                            else if (s > 1.7976931348623157e+308)
                                t(0, n, r + i), t((h << 31 | 2146435072) >>> 0, n, r + e);
                            else {
                                var a;
                                if (s < 2.2250738585072014e-308)
                                    t((a = s / 5e-324) >>> 0, n, r + i), t((h << 31 | a / 4294967296) >>> 0, n, r + e);
                                else {
                                    var o = Math.floor(Math.log(s) / Math.LN2);
                                    1024 === o && (o = 1023), t(4503599627370496 * (a = s * Math.pow(2, -o)) >>> 0, n, r + i), t((h << 31 | o + 1023 << 20 | 1048576 * a & 1048575) >>> 0, n, r + e);
                                }
                            }
                        }
                        function e(t, i, e, s, n) {
                            var r = t(s, n + i), h = t(s, n + e), a = 2 * (h >> 31) + 1, o = h >>> 20 & 2047, c = 4294967296 * (1048575 & h) + r;
                            return 2047 === o ? c ? NaN : a * (1 / 0) : 0 === o ? 5e-324 * a * c : a * Math.pow(2, o - 1075) * (c + 4503599627370496);
                        }
                        t.writeDoubleLE = i.bind(null, n, 0, 4), t.writeDoubleBE = i.bind(null, r, 4, 0), t.readDoubleLE = e.bind(null, h, 0, 4), t.readDoubleBE = e.bind(null, a, 4, 0);
                    }(), t;
                }
                function n(t, i, e) {
                    i[e] = 255 & t, i[e + 1] = t >>> 8 & 255, i[e + 2] = t >>> 16 & 255, i[e + 3] = t >>> 24;
                }
                function r(t, i, e) {
                    i[e] = t >>> 24, i[e + 1] = t >>> 16 & 255, i[e + 2] = t >>> 8 & 255, i[e + 3] = 255 & t;
                }
                function h(t, i) {
                    return (t[i] | t[i + 1] << 8 | t[i + 2] << 16 | t[i + 3] << 24) >>> 0;
                }
                function a(t, i) {
                    return (t[i] << 24 | t[i + 1] << 16 | t[i + 2] << 8 | t[i + 3]) >>> 0;
                }
                t.exports = s(s);
            },
            function (t, i, e) {
                'use strict';
                function s(t) {
                    try {
                        var i = eval('quire'.replace(/^/, 're'))(t);
                        if (i && (i.length || Object.keys(i).length))
                            return i;
                    } catch (t) {
                    }
                    return null;
                }
                t.exports = s;
            },
            function (t, i, e) {
                'use strict';
                var s = i;
                s.length = function (t) {
                    for (var i = 0, e = 0, s = 0; s < t.length; ++s)
                        (e = t.charCodeAt(s)) < 128 ? i += 1 : e < 2048 ? i += 2 : 55296 == (64512 & e) && 56320 == (64512 & t.charCodeAt(s + 1)) ? (++s, i += 4) : i += 3;
                    return i;
                }, s.read = function (t, i, e) {
                    if (e - i < 1)
                        return '';
                    for (var s, n = null, r = [], h = 0; i < e;)
                        (s = t[i++]) < 128 ? r[h++] = s : s > 191 && s < 224 ? r[h++] = (31 & s) << 6 | 63 & t[i++] : s > 239 && s < 365 ? (s = ((7 & s) << 18 | (63 & t[i++]) << 12 | (63 & t[i++]) << 6 | 63 & t[i++]) - 65536, r[h++] = 55296 + (s >> 10), r[h++] = 56320 + (1023 & s)) : r[h++] = (15 & s) << 12 | (63 & t[i++]) << 6 | 63 & t[i++], h > 8191 && ((n || (n = [])).push(String.fromCharCode.apply(String, r)), h = 0);
                    return n ? (h && n.push(String.fromCharCode.apply(String, r.slice(0, h))), n.join('')) : String.fromCharCode.apply(String, r.slice(0, h));
                }, s.write = function (t, i, e) {
                    for (var s, n, r = e, h = 0; h < t.length; ++h)
                        (s = t.charCodeAt(h)) < 128 ? i[e++] = s : s < 2048 ? (i[e++] = s >> 6 | 192, i[e++] = 63 & s | 128) : 55296 == (64512 & s) && 56320 == (64512 & (n = t.charCodeAt(h + 1))) ? (s = 65536 + ((1023 & s) << 10) + (1023 & n), ++h, i[e++] = s >> 18 | 240, i[e++] = s >> 12 & 63 | 128, i[e++] = s >> 6 & 63 | 128, i[e++] = 63 & s | 128) : (i[e++] = s >> 12 | 224, i[e++] = s >> 6 & 63 | 128, i[e++] = 63 & s | 128);
                    return e - r;
                };
            },
            function (t, i, e) {
                'use strict';
                t.exports = function (t, i, e) {
                    var s = e || 8192, n = s >>> 1, r = null, h = s;
                    return function (e) {
                        if (e < 1 || e > n)
                            return t(e);
                        h + e > s && (r = t(s), h = 0);
                        var a = i.call(r, h, h += e);
                        return 7 & h && (h = 1 + (7 | h)), a;
                    };
                };
            },
            function (t, i, e) {
                'use strict';
                t.exports = n;
                var s = e(39);
                function n(t, i) {
                    this.lo = t >>> 0, this.hi = i >>> 0;
                }
                var r = n.zero = new n(0, 0);
                r.toNumber = function () {
                    return 0;
                }, r.zzEncode = r.zzDecode = function () {
                    return this;
                }, r.length = function () {
                    return 1;
                };
                var h = n.zeroHash = '\0\0\0\0\0\0\0\0';
                n.fromNumber = function (t) {
                    if (0 === t)
                        return r;
                    var i = t < 0;
                    i && (t = -t);
                    var e = t >>> 0, s = (t - e) / 4294967296 >>> 0;
                    return i && (s = ~s >>> 0, e = ~e >>> 0, ++e > 4294967295 && (e = 0, ++s > 4294967295 && (s = 0))), new n(e, s);
                }, n.from = function (t) {
                    if ('number' == typeof t)
                        return n.fromNumber(t);
                    if (s.isString(t)) {
                        if (!s.Long)
                            return n.fromNumber(parseInt(t, 10));
                        t = s.Long.fromString(t);
                    }
                    return t.low || t.high ? new n(t.low >>> 0, t.high >>> 0) : r;
                }, n.prototype.toNumber = function (t) {
                    if (!t && this.hi >>> 31) {
                        var i = 1 + ~this.lo >>> 0, e = ~this.hi >>> 0;
                        return i || (e = e + 1 >>> 0), -(i + 4294967296 * e);
                    }
                    return this.lo + 4294967296 * this.hi;
                }, n.prototype.toLong = function (t) {
                    return s.Long ? new s.Long(0 | this.lo, 0 | this.hi, Boolean(t)) : {
                        low: 0 | this.lo,
                        high: 0 | this.hi,
                        unsigned: Boolean(t)
                    };
                };
                var a = String.prototype.charCodeAt;
                n.fromHash = function (t) {
                    return t === h ? r : new n((a.call(t, 0) | a.call(t, 1) << 8 | a.call(t, 2) << 16 | a.call(t, 3) << 24) >>> 0, (a.call(t, 4) | a.call(t, 5) << 8 | a.call(t, 6) << 16 | a.call(t, 7) << 24) >>> 0);
                }, n.prototype.toHash = function () {
                    return String.fromCharCode(255 & this.lo, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, 255 & this.hi, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24);
                }, n.prototype.zzEncode = function () {
                    var t = this.hi >> 31;
                    return this.hi = ((this.hi << 1 | this.lo >>> 31) ^ t) >>> 0, this.lo = (this.lo << 1 ^ t) >>> 0, this;
                }, n.prototype.zzDecode = function () {
                    var t = -(1 & this.lo);
                    return this.lo = ((this.lo >>> 1 | this.hi << 31) ^ t) >>> 0, this.hi = (this.hi >>> 1 ^ t) >>> 0, this;
                }, n.prototype.length = function () {
                    var t = this.lo, i = (this.lo >>> 28 | this.hi << 4) >>> 0, e = this.hi >>> 24;
                    return 0 === e ? 0 === i ? t < 16384 ? t < 128 ? 1 : 2 : t < 2097152 ? 3 : 4 : i < 16384 ? i < 128 ? 5 : 6 : i < 2097152 ? 7 : 8 : e < 128 ? 9 : 10;
                };
            },
            function (t, i, e) {
                'use strict';
                t.exports = r;
                var s = e(61);
                (r.prototype = Object.create(s.prototype)).constructor = r;
                var n = e(39);
                function r() {
                    s.call(this);
                }
                function h(t, i, e) {
                    t.length < 40 ? n.utf8.write(t, i, e) : i.utf8Write ? i.utf8Write(t, e) : i.write(t, e);
                }
                r.Ki = function () {
                    r.alloc = n.Yi, r.writeBytesBuffer = n.Buffer && n.Buffer.prototype instanceof Uint8Array && 'set' === n.Buffer.prototype.set.name ? function (t, i, e) {
                        i.set(t, e);
                    } : function (t, i, e) {
                        if (t.copy)
                            t.copy(i, e, 0, t.length);
                        else
                            for (var s = 0; s < t.length;)
                                i[e++] = t[s++];
                    };
                }, r.prototype.bytes = function (t) {
                    n.isString(t) && (t = n.Xi(t, 'base64'));
                    var i = t.length >>> 0;
                    return this.uint32(i), i && this.Ts(r.writeBytesBuffer, i, t), this;
                }, r.prototype.string = function (t) {
                    var i = n.Buffer.byteLength(t);
                    return this.uint32(i), i && this.Ts(h, i, t), this;
                }, r.Ki();
            },
            function (t, i, e) {
                'use strict';
                t.exports = r;
                var s = e(63);
                (r.prototype = Object.create(s.prototype)).constructor = r;
                var n = e(39);
                function r(t) {
                    s.call(this, t);
                }
                r.Ki = function () {
                    n.Buffer && (r.prototype.Ps = n.Buffer.prototype.slice);
                }, r.prototype.string = function () {
                    var t = this.uint32();
                    return this.buf.utf8Slice ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + t, this.len)) : this.buf.toString('utf-8', this.pos, this.pos = Math.min(this.pos + t, this.len));
                }, r.Ki();
            },
            function (t, i, e) {
                'use strict';
                i.Service = e(132);
            },
            function (t, i, e) {
                'use strict';
                t.exports = n;
                var s = e(39);
                function n(t, i, e) {
                    if ('function' != typeof t)
                        throw TypeError('rpcImpl must be a function');
                    s.EventEmitter.call(this), this.rpcImpl = t, this.requestDelimited = Boolean(i), this.responseDelimited = Boolean(e);
                }
                (n.prototype = Object.create(s.EventEmitter.prototype)).constructor = n, n.prototype.rpcCall = function t(i, e, n, r, h) {
                    if (!r)
                        throw TypeError('request must be specified');
                    var a = this;
                    if (!h)
                        return s.asPromise(t, a, i, e, n, r);
                    if (a.rpcImpl)
                        try {
                            return a.rpcImpl(i, e[a.requestDelimited ? 'encodeDelimited' : 'encode'](r).finish(), function (t, e) {
                                if (t)
                                    return a.emit('error', t, i), h(t);
                                if (null !== e) {
                                    if (!(e instanceof n))
                                        try {
                                            e = n[a.responseDelimited ? 'decodeDelimited' : 'decode'](e);
                                        } catch (t) {
                                            return a.emit('error', t, i), h(t);
                                        }
                                    return a.emit('data', e, i), h(null, e);
                                }
                                a.end(!0);
                            });
                        } catch (t) {
                            return a.emit('error', t, i), void setTimeout(function () {
                                h(t);
                            }, 0);
                        }
                    else
                        setTimeout(function () {
                            h(Error('already ended'));
                        }, 0);
                }, n.prototype.end = function (t) {
                    return this.rpcImpl && (t || this.rpcImpl(null, null, null), this.rpcImpl = null, this.emit('end').off()), this;
                };
            },
            function (t, i, e) {
                'use strict';
                t.exports = {};
            },
            function (t, i, e) {
                'use strict';
                var s, n = this && this.Es || (s = function (t, i) {
                        return (s = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (t, i) {
                            t.__proto__ = i;
                        } || function (t, i) {
                            for (var e in i)
                                i.hasOwnProperty(e) && (t[e] = i[e]);
                        })(t, i);
                    }, function (t, i) {
                        function e() {
                            this.constructor = t;
                        }
                        s(t, i), t.prototype = null === i ? Object.create(i) : (e.prototype = i.prototype, new e());
                    });
                Object.defineProperty(i, '_', { value: !0 });
                var r = function (t) {
                    function i(i) {
                        var e = t.call(this, i) || this;
                        return e.name = 'DecodingError', e;
                    }
                    return n(i, t), i;
                }(Error);
                i.DecodingError = r;
            },
            function (t, i, e) {
                'use strict';
                var s, n = this && this.Es || (s = function (t, i) {
                        return (s = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (t, i) {
                            t.__proto__ = i;
                        } || function (t, i) {
                            for (var e in i)
                                i.hasOwnProperty(e) && (t[e] = i[e]);
                        })(t, i);
                    }, function (t, i) {
                        function e() {
                            this.constructor = t;
                        }
                        s(t, i), t.prototype = null === i ? Object.create(i) : (e.prototype = i.prototype, new e());
                    });
                Object.defineProperty(i, '_', { value: !0 });
                var r = function (t) {
                    function i(i) {
                        var e = t.call(this, i) || this;
                        return e.name = 'EncodingError', e;
                    }
                    return n(i, t), i;
                }(Error);
                i.EncodingError = r;
            },
            function (t, i, e) {
                'use strict';
                var s, n = this && this.Es || (s = function (t, i) {
                        return (s = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (t, i) {
                            t.__proto__ = i;
                        } || function (t, i) {
                            for (var e in i)
                                i.hasOwnProperty(e) && (t[e] = i[e]);
                        })(t, i);
                    }, function (t, i) {
                        function e() {
                            this.constructor = t;
                        }
                        s(t, i), t.prototype = null === i ? Object.create(i) : (e.prototype = i.prototype, new e());
                    });
                Object.defineProperty(i, '_', { value: !0 });
                var r = function (t) {
                    function i(i) {
                        var e = t.call(this, i) || this;
                        return e.name = 'GVLError', e;
                    }
                    return n(i, t), i;
                }(Error);
                i.GVLError = r;
            },
            function (t, i, e) {
                'use strict';
                var s, n = this && this.Es || (s = function (t, i) {
                        return (s = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (t, i) {
                            t.__proto__ = i;
                        } || function (t, i) {
                            for (var e in i)
                                i.hasOwnProperty(e) && (t[e] = i[e]);
                        })(t, i);
                    }, function (t, i) {
                        function e() {
                            this.constructor = t;
                        }
                        s(t, i), t.prototype = null === i ? Object.create(i) : (e.prototype = i.prototype, new e());
                    });
                Object.defineProperty(i, '_', { value: !0 });
                var r = function (t) {
                    function i(i, e, s) {
                        void 0 === s && (s = '');
                        var n = t.call(this, 'invalid value ' + e + ' passed for ' + i + ' ' + s) || this;
                        return n.name = 'TCModelError', n;
                    }
                    return n(i, t), i;
                }(Error);
                i.TCModelError = r;
            },
            function (t, i, e) {
                'use strict';
                Object.defineProperty(i, '_', { value: !0 });
                var s = function () {
                    function t() {
                    }
                    return t.prototype.has = function (i) {
                        return t.langSet.has(i);
                    }, t.prototype.forEach = function (i) {
                        t.langSet.forEach(i);
                    }, Object.defineProperty(t.prototype, 'size', {
                        get: function () {
                            return t.langSet.size;
                        },
                        enumerable: !0,
                        configurable: !0
                    }), t.langSet = new Set([
                        'BG',
                        'CA',
                        'CS',
                        'DA',
                        'DE',
                        'EL',
                        'EN',
                        'ES',
                        'ET',
                        'FI',
                        'FR',
                        'HR',
                        'HU',
                        'IT',
                        'LT',
                        'LV',
                        'MT',
                        'NL',
                        'NO',
                        'PL',
                        'PT',
                        'RO',
                        'RU',
                        'SK',
                        'SL',
                        'SV',
                        'ZH'
                    ]), t;
                }();
                i.ConsentLanguages = s;
            },
            function (t, i, e) {
                'use strict';
                var s, n = this && this.Es || (s = function (t, i) {
                        return (s = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (t, i) {
                            t.__proto__ = i;
                        } || function (t, i) {
                            for (var e in i)
                                i.hasOwnProperty(e) && (t[e] = i[e]);
                        })(t, i);
                    }, function (t, i) {
                        function e() {
                            this.constructor = t;
                        }
                        s(t, i), t.prototype = null === i ? Object.create(i) : (e.prototype = i.prototype, new e());
                    });
                Object.defineProperty(i, '_', { value: !0 });
                var r = e(68), h = e(66), a = e(56), o = function (t) {
                        function i() {
                            var i = null !== t && t.apply(this, arguments) || this;
                            return i.bitLength = 0, i.map = new Map(), i;
                        }
                        return n(i, t), i.prototype.has = function (t) {
                            return this.map.has(t);
                        }, i.prototype.isOkToHave = function (t, i, e) {
                            var s, n = !0;
                            if (null === (s = this.gvl) || void 0 === s ? void 0 : s.vendors) {
                                var r = this.gvl.vendors[e];
                                if (r)
                                    if (t === a.RestrictionType.NOT_ALLOWED)
                                        n = r.legIntPurposes.includes(i) || r.purposes.includes(i);
                                    else if (r.flexiblePurposes.length)
                                        switch (t) {
                                        case a.RestrictionType.REQUIRE_CONSENT:
                                            n = r.flexiblePurposes.includes(i) && r.legIntPurposes.includes(i);
                                            break;
                                        case a.RestrictionType.REQUIRE_LI:
                                            n = r.flexiblePurposes.includes(i) && r.purposes.includes(i);
                                        }
                                    else
                                        n = !1;
                                else
                                    n = !1;
                            }
                            return n;
                        }, i.prototype.add = function (t, i) {
                            if (this.isOkToHave(i.restrictionType, i.purposeId, t)) {
                                var e = i.hash;
                                this.has(e) || (this.map.set(e, new h.BinarySearchTree()), this.bitLength = 0), this.map.get(e).add(t);
                            }
                        }, i.prototype.getVendors = function (t) {
                            var i = [];
                            if (t) {
                                var e = t.hash;
                                this.has(e) && (i = this.map.get(e).get());
                            } else {
                                var s = new Set();
                                this.map.forEach(function (t) {
                                    t.get().forEach(function (t) {
                                        s.add(t);
                                    });
                                }), i = Array.from(s);
                            }
                            return i;
                        }, i.prototype.getRestrictionType = function (t, i) {
                            var e;
                            return this.getRestrictions(t).forEach(function (t) {
                                t.purposeId === i && (void 0 === e || e > t.restrictionType) && (e = t.restrictionType);
                            }), e;
                        }, i.prototype.vendorHasRestriction = function (t, i) {
                            for (var e = !1, s = this.getRestrictions(t), n = 0; n < s.length && !e; n++)
                                e = i.isSameAs(s[n]);
                            return e;
                        }, i.prototype.getMaxVendorId = function () {
                            var t = 0;
                            return this.map.forEach(function (i) {
                                t = Math.max(i.max(), t);
                            }), t;
                        }, i.prototype.getRestrictions = function (t) {
                            var i = [];
                            return this.map.forEach(function (e, s) {
                                t ? e.contains(t) && i.push(r.PurposeRestriction.unHash(s)) : i.push(r.PurposeRestriction.unHash(s));
                            }), i;
                        }, i.prototype.getPurposes = function () {
                            var t = new Set();
                            return this.map.forEach(function (i, e) {
                                t.add(r.PurposeRestriction.unHash(e).purposeId);
                            }), Array.from(t);
                        }, i.prototype.remove = function (t, i) {
                            var e = i.hash, s = this.map.get(e);
                            s && (s.remove(t), s.isEmpty() && (this.map.delete(e), this.bitLength = 0));
                        }, Object.defineProperty(i.prototype, 'gvl', {
                            get: function () {
                                return this.gvl_;
                            },
                            set: function (t) {
                                var i = this;
                                this.gvl_ || (this.gvl_ = t, this.map.forEach(function (t, e) {
                                    var s = r.PurposeRestriction.unHash(e);
                                    t.get().forEach(function (e) {
                                        i.isOkToHave(s.restrictionType, s.purposeId, e) || t.remove(e);
                                    });
                                }));
                            },
                            enumerable: !0,
                            configurable: !0
                        }), i.prototype.isEmpty = function () {
                            return 0 === this.map.size;
                        }, Object.defineProperty(i.prototype, 'numRestrictions', {
                            get: function () {
                                return this.map.size;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), i;
                    }(e(41).Cloneable);
                i.PurposeRestrictionVector = o;
            },
            function (t, i, e) {
                'use strict';
                var s;
                Object.defineProperty(i, '_', { value: !0 });
                var n = e(69), r = function () {
                        function t() {
                        }
                        return t.ID_TO_KEY = [
                            n.Segment.CORE,
                            n.Segment.VENDORS_DISCLOSED,
                            n.Segment.VENDORS_ALLOWED,
                            n.Segment.PUBLISHER_TC
                        ], t.KEY_TO_ID = ((s = {})[n.Segment.CORE] = 0, s[n.Segment.VENDORS_DISCLOSED] = 1, s[n.Segment.VENDORS_ALLOWED] = 2, s[n.Segment.PUBLISHER_TC] = 3, s), t;
                    }();
                i.SegmentIDs = r;
            },
            function (t, i, e) {
                'use strict';
                var s, n = this && this.Es || (s = function (t, i) {
                        return (s = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (t, i) {
                            t.__proto__ = i;
                        } || function (t, i) {
                            for (var e in i)
                                i.hasOwnProperty(e) && (t[e] = i[e]);
                        })(t, i);
                    }, function (t, i) {
                        function e() {
                            this.constructor = t;
                        }
                        s(t, i), t.prototype = null === i ? Object.create(i) : (e.prototype = i.prototype, new e());
                    }), r = this && this.ho || function (t, i) {
                        var e, s, n, r, h = {
                                label: 0,
                                sent: function () {
                                    if (1 & n[0])
                                        throw n[1];
                                    return n[1];
                                },
                                trys: [],
                                ops: []
                            };
                        return r = {
                            next: a(0),
                            throw: a(1),
                            return: a(2)
                        }, 'function' == typeof Symbol && (r[Symbol.iterator] = function () {
                            return this;
                        }), r;
                        function a(r) {
                            return function (a) {
                                return function (r) {
                                    if (e)
                                        throw new TypeError('Generator is already executing.');
                                    for (; h;)
                                        try {
                                            if (e = 1, s && (n = 2 & r[0] ? s.return : r[0] ? s.throw || ((n = s.return) && n.call(s), 0) : s.next) && !(n = n.call(s, r[1])).done)
                                                return n;
                                            switch (s = 0, n && (r = [
                                                    2 & r[0],
                                                    n.value
                                                ]), r[0]) {
                                            case 0:
                                            case 1:
                                                n = r;
                                                break;
                                            case 4:
                                                return h.label++, {
                                                    value: r[1],
                                                    done: !1
                                                };
                                            case 5:
                                                h.label++, s = r[1], r = [0];
                                                continue;
                                            case 7:
                                                r = h.ops.pop(), h.trys.pop();
                                                continue;
                                            default:
                                                if (!(n = (n = h.trys).length > 0 && n[n.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                                    h = 0;
                                                    continue;
                                                }
                                                if (3 === r[0] && (!n || r[1] > n[0] && r[1] < n[3])) {
                                                    h.label = r[1];
                                                    break;
                                                }
                                                if (6 === r[0] && h.label < n[1]) {
                                                    h.label = n[1], n = r;
                                                    break;
                                                }
                                                if (n && h.label < n[2]) {
                                                    h.label = n[2], h.ops.push(r);
                                                    break;
                                                }
                                                n[2] && h.ops.pop(), h.trys.pop();
                                                continue;
                                            }
                                            r = i.call(t, h);
                                        } catch (t) {
                                            r = [
                                                6,
                                                t
                                            ], s = 0;
                                        } finally {
                                            e = n = 0;
                                        }
                                    if (5 & r[0])
                                        throw r[1];
                                    return {
                                        value: r[0] ? r[1] : void 0,
                                        done: !0
                                    };
                                }([
                                    r,
                                    a
                                ]);
                            };
                        }
                    }, h = this && this.Zi || function (t) {
                        var i = 'function' == typeof Symbol && Symbol.iterator, e = i && t[i], s = 0;
                        if (e)
                            return e.call(t);
                        if (t && 'number' == typeof t.length)
                            return {
                                next: function () {
                                    return t && s >= t.length && (t = void 0), {
                                        value: t && t[s++],
                                        done: !t
                                    };
                                }
                            };
                        throw new TypeError(i ? 'Object is not iterable.' : 'Symbol.iterator is not defined.');
                    };
                Object.defineProperty(i, '_', { value: !0 });
                var a = e(41), o = e(33), c = function (t) {
                        function i() {
                            var i = null !== t && t.apply(this, arguments) || this;
                            return i.bitLength = 0, i.maxId_ = 0, i.set_ = new Set(), i;
                        }
                        return n(i, t), i.prototype[Symbol.iterator] = function () {
                            var t;
                            return r(this, function (i) {
                                switch (i.label) {
                                case 0:
                                    t = 1, i.label = 1;
                                case 1:
                                    return t <= this.maxId ? [
                                        4,
                                        [
                                            t,
                                            this.has(t)
                                        ]
                                    ] : [
                                        3,
                                        4
                                    ];
                                case 2:
                                    i.sent(), i.label = 3;
                                case 3:
                                    return t++, [
                                        3,
                                        1
                                    ];
                                case 4:
                                    return [2];
                                }
                            });
                        }, i.prototype.values = function () {
                            return this.set_.values();
                        }, Object.defineProperty(i.prototype, 'maxId', {
                            get: function () {
                                return this.maxId_;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), i.prototype.has = function (t) {
                            return this.set_.has(t);
                        }, i.prototype.unset = function (t) {
                            var i = this;
                            Array.isArray(t) ? t.forEach(function (t) {
                                return i.unset(t);
                            }) : 'object' == typeof t ? this.unset(Object.keys(t).map(function (t) {
                                return +t;
                            })) : (this.set_.delete(t), this.bitLength = 0, t === this.maxId && (this.maxId_ = 0, this.set_.forEach(function (t) {
                                i.maxId_ = Math.max(i.maxId, t);
                            })));
                        }, i.prototype.isIntMap = function (t) {
                            var i = this, e = 'object' == typeof t;
                            return e && Object.keys(t).every(function (e) {
                                var s = Number.isInteger(parseInt(e, 10));
                                return (s = s && i.isValidNumber(t[e].id)) && void 0 !== t[e].name;
                            });
                        }, i.prototype.isValidNumber = function (t) {
                            return parseInt(t, 10) > 0;
                        }, i.prototype.isSet = function (t) {
                            var i = !1;
                            return t instanceof Set && (i = Array.from(t).every(this.isValidNumber)), i;
                        }, i.prototype.set = function (t) {
                            var i = this;
                            if (Array.isArray(t))
                                t.forEach(function (t) {
                                    return i.set(t);
                                });
                            else if (this.isSet(t))
                                this.set(Array.from(t));
                            else if (this.isIntMap(t))
                                this.set(Object.keys(t).map(function (t) {
                                    return +t;
                                }));
                            else {
                                if (!this.isValidNumber(t))
                                    throw new o.TCModelError('set()', t, 'must be positive integer array, positive integer, Set<number>, or IntMap');
                                this.set_.add(t), this.maxId_ = Math.max(this.maxId, t), this.bitLength = 0;
                            }
                        }, i.prototype.empty = function () {
                            this.set_ = new Set();
                        }, i.prototype.forEach = function (t) {
                            var i, e;
                            try {
                                for (var s = h(this), n = s.next(); !n.done; n = s.next()) {
                                    var r = n.value;
                                    t(r[1], r[0]);
                                }
                            } catch (t) {
                                i = { error: t };
                            } finally {
                                try {
                                    n && !n.done && (e = s.return) && e.call(s);
                                } finally {
                                    if (i)
                                        throw i.error;
                                }
                            }
                        }, Object.defineProperty(i.prototype, 'size', {
                            get: function () {
                                return this.set_.size;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), i.prototype.setAll = function (t) {
                            this.set(t);
                        }, i;
                    }(a.Cloneable);
                i.Vector = c;
            },
            function (t, i, e) {
                'use strict';
                Object.defineProperty(i, '_', { value: !0 });
                var s = e(65), n = e(55), r = e(70), h = e(76), a = e(33), o = e(67), c = e(35), u = function () {
                        function t() {
                        }
                        return t.encode = function (t, i) {
                            var e, h = this;
                            try {
                                e = this.fieldSequence['' + t.version][i];
                            } catch (e) {
                                throw new a.EncodingError('Unable to encode version: ' + t.version + ', segment: ' + i);
                            }
                            var u = '';
                            return i !== c.Segment.CORE && (u = r.IntEncoder.encode(c.SegmentIDs.KEY_TO_ID[i], n.BitLength.segmentType)), e.forEach(function (e) {
                                var s = t[e], c = r.FieldEncoderMap[e], l = n.BitLength[e];
                                void 0 === l && h.isPublisherCustom(e) && (l = +t[o.Fields.numCustomPurposes]);
                                try {
                                    u += c.encode(s, l);
                                } catch (t) {
                                    throw new a.EncodingError('Error encoding ' + i + '->' + e + ': ' + t.message);
                                }
                            }), s.Base64Url.encode(u);
                        }, t.decode = function (t, i, e) {
                            var h = this, u = s.Base64Url.decode(t), l = 0;
                            return e === c.Segment.CORE && (i.version = r.IntEncoder.decode(u.substr(l, n.BitLength[o.Fields.version]), n.BitLength[o.Fields.version])), e !== c.Segment.CORE && (l += n.BitLength.segmentType), this.fieldSequence['' + i.version][e].forEach(function (t) {
                                var e = r.FieldEncoderMap[t], s = n.BitLength[t];
                                if (void 0 === s && h.isPublisherCustom(t) && (s = +i[o.Fields.numCustomPurposes]), 0 !== s) {
                                    var c = u.substr(l, s);
                                    if (e === r.VendorVectorEncoder ? i[t] = e.decode(c, i.version) : i[t] = e.decode(c, s), Number.isInteger(s))
                                        l += s;
                                    else {
                                        if (!Number.isInteger(i[t].bitLength))
                                            throw new a.DecodingError(t);
                                        l += i[t].bitLength;
                                    }
                                }
                            }), i;
                        }, t.isPublisherCustom = function (t) {
                            return 0 === t.indexOf('publisherCustom');
                        }, t.fieldSequence = new h.FieldSequence(), t;
                    }();
                i.SegmentEncoder = u;
            },
            function (t, i, e) {
                'use strict';
                Object.defineProperty(i, '_', { value: !0 });
                var s = e(35), n = e(46), r = e(71), h = e(57), a = e(40), o = e(72), c = e(73), u = e(74), l = function () {
                        function t() {
                        }
                        var i, e, l, d, f, p, b, v, m, g, y, w, O, x, S, j, k, _, A, I, C, T, P, M, E, L;
                        return i = s.Fields.version, e = s.Fields.created, l = s.Fields.lastUpdated, d = s.Fields.cmpId, f = s.Fields.cmpVersion, p = s.Fields.consentScreen, b = s.Fields.consentLanguage, v = s.Fields.vendorListVersion, m = s.Fields.policyVersion, g = s.Fields.isServiceSpecific, y = s.Fields.useNonStandardStacks, w = s.Fields.specialFeatureOptins, O = s.Fields.purposeConsents, x = s.Fields.purposeLegitimateInterests, S = s.Fields.purposeOneTreatment, j = s.Fields.publisherCountryCode, k = s.Fields.vendorConsents, _ = s.Fields.vendorLegitimateInterests, A = s.Fields.publisherRestrictions, I = s.Fields.vendorsDisclosed, C = s.Fields.vendorsAllowed, T = s.Fields.publisherConsents, P = s.Fields.publisherLegitimateInterests, M = s.Fields.numCustomPurposes, E = s.Fields.publisherCustomConsents, L = s.Fields.publisherCustomLegitimateInterests, t[i] = a.IntEncoder, t[e] = r.DateEncoder, t[l] = r.DateEncoder, t[d] = a.IntEncoder, t[f] = a.IntEncoder, t[p] = a.IntEncoder, t[b] = o.LangEncoder, t[v] = a.IntEncoder, t[m] = a.IntEncoder, t[g] = n.BooleanEncoder, t[y] = n.BooleanEncoder, t[w] = h.FixedVectorEncoder, t[O] = h.FixedVectorEncoder, t[x] = h.FixedVectorEncoder, t[S] = n.BooleanEncoder, t[j] = o.LangEncoder, t[k] = u.VendorVectorEncoder, t[_] = u.VendorVectorEncoder, t[A] = c.PurposeRestrictionVectorEncoder, t.segmentType = a.IntEncoder, t[I] = u.VendorVectorEncoder, t[C] = u.VendorVectorEncoder, t[T] = h.FixedVectorEncoder, t[P] = h.FixedVectorEncoder, t[M] = a.IntEncoder, t[E] = h.FixedVectorEncoder, t[L] = h.FixedVectorEncoder, t;
                    }();
                i.FieldEncoderMap = l;
            },
            function (t, i, e) {
                'use strict';
                Object.defineProperty(i, '_', { value: !0 });
                var s = e(35);
                i.FieldSequence = function () {
                    var t, i;
                    this[1] = ((t = {})[s.Segment.CORE] = [
                        s.Fields.version,
                        s.Fields.created,
                        s.Fields.lastUpdated,
                        s.Fields.cmpId,
                        s.Fields.cmpVersion,
                        s.Fields.consentScreen,
                        s.Fields.consentLanguage,
                        s.Fields.vendorListVersion,
                        s.Fields.purposeConsents,
                        s.Fields.vendorConsents
                    ], t), this[2] = ((i = {})[s.Segment.CORE] = [
                        s.Fields.version,
                        s.Fields.created,
                        s.Fields.lastUpdated,
                        s.Fields.cmpId,
                        s.Fields.cmpVersion,
                        s.Fields.consentScreen,
                        s.Fields.consentLanguage,
                        s.Fields.vendorListVersion,
                        s.Fields.policyVersion,
                        s.Fields.isServiceSpecific,
                        s.Fields.useNonStandardStacks,
                        s.Fields.specialFeatureOptins,
                        s.Fields.purposeConsents,
                        s.Fields.purposeLegitimateInterests,
                        s.Fields.purposeOneTreatment,
                        s.Fields.publisherCountryCode,
                        s.Fields.vendorConsents,
                        s.Fields.vendorLegitimateInterests,
                        s.Fields.publisherRestrictions
                    ], i[s.Segment.PUBLISHER_TC] = [
                        s.Fields.publisherConsents,
                        s.Fields.publisherLegitimateInterests,
                        s.Fields.numCustomPurposes,
                        s.Fields.publisherCustomConsents,
                        s.Fields.publisherCustomLegitimateInterests
                    ], i[s.Segment.VENDORS_ALLOWED] = [s.Fields.vendorsAllowed], i[s.Segment.VENDORS_DISCLOSED] = [s.Fields.vendorsDisclosed], i);
                };
            },
            function (t, i, e) {
                'use strict';
                Object.defineProperty(i, '_', { value: !0 });
                var s = e(35);
                i.SegmentSequence = function (t, i) {
                    if (this[1] = [s.Segment.CORE], this[2] = [s.Segment.CORE], 2 === t.version)
                        if (t.isServiceSpecific)
                            this[2].push(s.Segment.PUBLISHER_TC);
                        else {
                            var e = !(!i || !i.isForVendors);
                            e && !0 !== t[s.Fields.supportOOB] || this[2].push(s.Segment.VENDORS_DISCLOSED), e && (t[s.Fields.supportOOB] && t[s.Fields.vendorsAllowed].size > 0 && this[2].push(s.Segment.VENDORS_ALLOWED), this[2].push(s.Segment.PUBLISHER_TC));
                        }
                };
            },
            function (t, i, e) {
                'use strict';
                var s = this && this.Zi || function (t) {
                        var i = 'function' == typeof Symbol && Symbol.iterator, e = i && t[i], s = 0;
                        if (e)
                            return e.call(t);
                        if (t && 'number' == typeof t.length)
                            return {
                                next: function () {
                                    return t && s >= t.length && (t = void 0), {
                                        value: t && t[s++],
                                        done: !t
                                    };
                                }
                            };
                        throw new TypeError(i ? 'Object is not iterable.' : 'Symbol.iterator is not defined.');
                    }, n = this && this.ao || function (t, i) {
                        var e = 'function' == typeof Symbol && t[Symbol.iterator];
                        if (!e)
                            return t;
                        var s, n, r = e.call(t), h = [];
                        try {
                            for (; (void 0 === i || i-- > 0) && !(s = r.next()).done;)
                                h.push(s.value);
                        } catch (t) {
                            n = { error: t };
                        } finally {
                            try {
                                s && !s.done && (e = r.return) && e.call(r);
                            } finally {
                                if (n)
                                    throw n.error;
                            }
                        }
                        return h;
                    };
                Object.defineProperty(i, '_', { value: !0 });
                var r = e(33), h = e(35), a = function () {
                        function t() {
                        }
                        return t.process = function (t, i) {
                            var e, s, n = t.gvl;
                            if (!n)
                                throw new r.EncodingError('Unable to encode TCModel without a GVL');
                            if (!n.isReady)
                                throw new r.EncodingError('Unable to encode TCModel tcModel.gvl.readyPromise is not resolved');
                            (t = t.clone()).consentLanguage = n.language.toUpperCase(), (null === (e = i) || void 0 === e ? void 0 : e.version) > 0 && (null === (s = i) || void 0 === s ? void 0 : s.version) <= this.processor.length ? t.version = i.version : t.version = this.processor.length;
                            var h = t.version - 1;
                            if (!this.processor[h])
                                throw new r.EncodingError('Invalid version: ' + t.version);
                            return this.processor[h](t, n);
                        }, t.processor = [
                            function (t) {
                                return t;
                            },
                            function (t, i) {
                                var e, r, a, o;
                                t.publisherRestrictions.gvl = i, t.purposeLegitimateInterests.unset(1);
                                var c = new Map();
                                c.set('legIntPurposes', t.vendorLegitimateInterests), c.set('purposes', t.vendorConsents);
                                try {
                                    for (var u = s(c), l = u.next(); !l.done; l = u.next()) {
                                        var d = n(l.value, 2), f = d[0], p = d[1];
                                        try {
                                            for (var b = (a = void 0, s(p.values())), v = b.next(); !v.done; v = b.next()) {
                                                var m = v.value, g = i.vendors[m];
                                                if (!g || g.deletedDate)
                                                    p.unset(m);
                                                else if (0 === g[f].length)
                                                    if (t.isServiceSpecific)
                                                        if (0 === g.flexiblePurposes.length)
                                                            p.unset(m);
                                                        else {
                                                            for (var y = t.publisherRestrictions.getRestrictions(m), w = !1, O = 0, x = y.length; O < x && !w; O++)
                                                                w = y[O].restrictionType === h.RestrictionType.REQUIRE_CONSENT && 'purposes' === f || y[O].restrictionType === h.RestrictionType.REQUIRE_LI && 'legIntPurposes' === f;
                                                            w || p.unset(m);
                                                        }
                                                    else
                                                        p.unset(m);
                                            }
                                        } catch (t) {
                                            a = { error: t };
                                        } finally {
                                            try {
                                                v && !v.done && (o = b.return) && o.call(b);
                                            } finally {
                                                if (a)
                                                    throw a.error;
                                            }
                                        }
                                    }
                                } catch (t) {
                                    e = { error: t };
                                } finally {
                                    try {
                                        l && !l.done && (r = u.return) && r.call(u);
                                    } finally {
                                        if (e)
                                            throw e.error;
                                    }
                                }
                                return t.vendorsDisclosed.set(i.vendors), t;
                            }
                        ], t;
                    }();
                i.SemanticPreEncoder = a;
            },
            function (t, i, e) {
                'use strict';
                var s, n = this && this.Es || (s = function (t, i) {
                        return (s = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (t, i) {
                            t.__proto__ = i;
                        } || function (t, i) {
                            for (var e in i)
                                i.hasOwnProperty(e) && (t[e] = i[e]);
                        })(t, i);
                    }, function (t, i) {
                        function e() {
                            this.constructor = t;
                        }
                        s(t, i), t.prototype = null === i ? Object.create(i) : (e.prototype = i.prototype, new e());
                    });
                Object.defineProperty(i, '_', { value: !0 });
                var r = e(41), h = e(33), a = e(148), o = e(35), c = function (t) {
                        function i(i) {
                            var e = t.call(this) || this;
                            return e.isServiceSpecific_ = !1, e.supportOOB_ = !0, e.useNonStandardStacks_ = !1, e.purposeOneTreatment_ = !1, e.publisherCountryCode_ = 'AA', e.version_ = 2, e.consentScreen_ = 0, e.policyVersion_ = 2, e.consentLanguage_ = 'EN', e.cmpId_ = 0, e.cmpVersion_ = 0, e.vendorListVersion_ = 0, e.numCustomPurposes_ = 0, e.specialFeatureOptins = new o.Vector(), e.purposeConsents = new o.Vector(), e.purposeLegitimateInterests = new o.Vector(), e.publisherConsents = new o.Vector(), e.publisherLegitimateInterests = new o.Vector(), e.publisherCustomConsents = new o.Vector(), e.publisherCustomLegitimateInterests = new o.Vector(), e.vendorConsents = new o.Vector(), e.vendorLegitimateInterests = new o.Vector(), e.vendorsDisclosed = new o.Vector(), e.vendorsAllowed = new o.Vector(), e.publisherRestrictions = new o.PurposeRestrictionVector(), i && (e.gvl = i), e.created = new Date(), e.updated(), e;
                        }
                        return n(i, t), Object.defineProperty(i.prototype, 'gvl', {
                            get: function () {
                                return this.gvl_;
                            },
                            set: function (t) {
                                a.GVL.isInstanceOf(t) || (t = new a.GVL(t)), this.gvl_ = t, this.publisherRestrictions.gvl = t;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(i.prototype, 'cmpId', {
                            get: function () {
                                return this.cmpId_;
                            },
                            set: function (t) {
                                if (!(Number.isInteger(+t) && t > 1))
                                    throw new h.TCModelError('cmpId', t);
                                this.cmpId_ = +t;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(i.prototype, 'cmpVersion', {
                            get: function () {
                                return this.cmpVersion_;
                            },
                            set: function (t) {
                                if (!(Number.isInteger(+t) && t > -1))
                                    throw new h.TCModelError('cmpVersion', t);
                                this.cmpVersion_ = +t;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(i.prototype, 'consentScreen', {
                            get: function () {
                                return this.consentScreen_;
                            },
                            set: function (t) {
                                if (!(Number.isInteger(+t) && t > -1))
                                    throw new h.TCModelError('consentScreen', t);
                                this.consentScreen_ = +t;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(i.prototype, 'consentLanguage', {
                            get: function () {
                                return this.consentLanguage_;
                            },
                            set: function (t) {
                                this.consentLanguage_ = t;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(i.prototype, 'publisherCountryCode', {
                            get: function () {
                                return this.publisherCountryCode_;
                            },
                            set: function (t) {
                                if (!/^([A-z]){2}$/.test(t))
                                    throw new h.TCModelError('publisherCountryCode', t);
                                this.publisherCountryCode_ = t.toUpperCase();
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(i.prototype, 'vendorListVersion', {
                            get: function () {
                                return this.gvl ? this.gvl.vendorListVersion : this.vendorListVersion_;
                            },
                            set: function (t) {
                                if ((t = +t >> 0) < 0)
                                    throw new h.TCModelError('vendorListVersion', t);
                                this.vendorListVersion_ = t;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(i.prototype, 'policyVersion', {
                            get: function () {
                                return this.gvl ? this.gvl.tcfPolicyVersion : this.policyVersion_;
                            },
                            set: function (t) {
                                if (this.policyVersion_ = parseInt(t, 10), this.policyVersion_ < 0)
                                    throw new h.TCModelError('policyVersion', t);
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(i.prototype, 'version', {
                            get: function () {
                                return this.version_;
                            },
                            set: function (t) {
                                this.version_ = parseInt(t, 10);
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(i.prototype, 'isServiceSpecific', {
                            get: function () {
                                return this.isServiceSpecific_;
                            },
                            set: function (t) {
                                this.isServiceSpecific_ = t;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(i.prototype, 'useNonStandardStacks', {
                            get: function () {
                                return this.useNonStandardStacks_;
                            },
                            set: function (t) {
                                this.useNonStandardStacks_ = t;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(i.prototype, 'supportOOB', {
                            get: function () {
                                return this.supportOOB_;
                            },
                            set: function (t) {
                                this.supportOOB_ = t;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(i.prototype, 'purposeOneTreatment', {
                            get: function () {
                                return this.purposeOneTreatment_;
                            },
                            set: function (t) {
                                this.purposeOneTreatment_ = t;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), i.prototype.setAllVendorConsents = function () {
                            this.vendorConsents.set(this.gvl.vendors);
                        }, i.prototype.unsetAllVendorConsents = function () {
                            this.vendorConsents.empty();
                        }, i.prototype.setAllVendorsDisclosed = function () {
                            this.vendorsDisclosed.set(this.gvl.vendors);
                        }, i.prototype.unsetAllVendorsDisclosed = function () {
                            this.vendorsDisclosed.empty();
                        }, i.prototype.setAllVendorsAllowed = function () {
                            this.vendorsAllowed.set(this.gvl.vendors);
                        }, i.prototype.unsetAllVendorsAllowed = function () {
                            this.vendorsAllowed.empty();
                        }, i.prototype.setAllVendorLegitimateInterests = function () {
                            this.vendorLegitimateInterests.set(this.gvl.vendors);
                        }, i.prototype.unsetAllVendorLegitimateInterests = function () {
                            this.vendorLegitimateInterests.empty();
                        }, i.prototype.setAllPurposeConsents = function () {
                            this.purposeConsents.set(this.gvl.purposes);
                        }, i.prototype.unsetAllPurposeConsents = function () {
                            this.purposeConsents.empty();
                        }, i.prototype.setAllPurposeLegitimateInterests = function () {
                            this.purposeLegitimateInterests.set(this.gvl.purposes);
                        }, i.prototype.unsetAllPurposeLegitimateInterests = function () {
                            this.purposeLegitimateInterests.empty();
                        }, i.prototype.setAllSpecialFeatureOptins = function () {
                            this.specialFeatureOptins.set(this.gvl.specialFeatures);
                        }, i.prototype.unsetAllSpecialFeatureOptins = function () {
                            this.specialFeatureOptins.empty();
                        }, i.prototype.setAll = function () {
                            this.setAllVendorConsents(), this.setAllPurposeLegitimateInterests(), this.setAllSpecialFeatureOptins(), this.setAllPurposeConsents(), this.setAllVendorLegitimateInterests();
                        }, i.prototype.unsetAll = function () {
                            this.unsetAllVendorConsents(), this.unsetAllPurposeLegitimateInterests(), this.unsetAllSpecialFeatureOptins(), this.unsetAllPurposeConsents(), this.unsetAllVendorLegitimateInterests();
                        }, Object.defineProperty(i.prototype, 'numCustomPurposes', {
                            get: function () {
                                var t = this.numCustomPurposes_;
                                if ('object' == typeof this.customPurposes) {
                                    var i = Object.keys(this.customPurposes).sort(function (t, i) {
                                        return +t - +i;
                                    });
                                    t = parseInt(i.pop(), 10);
                                }
                                return t;
                            },
                            set: function (t) {
                                if (this.numCustomPurposes_ = parseInt(t, 10), this.numCustomPurposes_ < 0)
                                    throw new h.TCModelError('numCustomPurposes', t);
                            },
                            enumerable: !0,
                            configurable: !0
                        }), i.prototype.updated = function () {
                            this.lastUpdated = new Date();
                        }, i.consentLanguages = a.GVL.consentLanguages, i;
                    }(r.Cloneable);
                i.TCModel = c;
            },
            function (t, i, e) {
                'use strict';
                var s, n = this && this.Es || (s = function (t, i) {
                        return (s = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (t, i) {
                            t.__proto__ = i;
                        } || function (t, i) {
                            for (var e in i)
                                i.hasOwnProperty(e) && (t[e] = i[e]);
                        })(t, i);
                    }, function (t, i) {
                        function e() {
                            this.constructor = t;
                        }
                        s(t, i), t.prototype = null === i ? Object.create(i) : (e.prototype = i.prototype, new e());
                    }), r = this && this.oo || function (t, i, e, s) {
                        return new (e || (e = Promise))(function (n, r) {
                            function h(t) {
                                try {
                                    o(s.next(t));
                                } catch (t) {
                                    r(t);
                                }
                            }
                            function a(t) {
                                try {
                                    o(s.throw(t));
                                } catch (t) {
                                    r(t);
                                }
                            }
                            function o(t) {
                                var i;
                                t.done ? n(t.value) : (i = t.value, i instanceof e ? i : new e(function (t) {
                                    t(i);
                                })).then(h, a);
                            }
                            o((s = s.apply(t, i || [])).next());
                        });
                    }, h = this && this.ho || function (t, i) {
                        var e, s, n, r, h = {
                                label: 0,
                                sent: function () {
                                    if (1 & n[0])
                                        throw n[1];
                                    return n[1];
                                },
                                trys: [],
                                ops: []
                            };
                        return r = {
                            next: a(0),
                            throw: a(1),
                            return: a(2)
                        }, 'function' == typeof Symbol && (r[Symbol.iterator] = function () {
                            return this;
                        }), r;
                        function a(r) {
                            return function (a) {
                                return function (r) {
                                    if (e)
                                        throw new TypeError('Generator is already executing.');
                                    for (; h;)
                                        try {
                                            if (e = 1, s && (n = 2 & r[0] ? s.return : r[0] ? s.throw || ((n = s.return) && n.call(s), 0) : s.next) && !(n = n.call(s, r[1])).done)
                                                return n;
                                            switch (s = 0, n && (r = [
                                                    2 & r[0],
                                                    n.value
                                                ]), r[0]) {
                                            case 0:
                                            case 1:
                                                n = r;
                                                break;
                                            case 4:
                                                return h.label++, {
                                                    value: r[1],
                                                    done: !1
                                                };
                                            case 5:
                                                h.label++, s = r[1], r = [0];
                                                continue;
                                            case 7:
                                                r = h.ops.pop(), h.trys.pop();
                                                continue;
                                            default:
                                                if (!(n = (n = h.trys).length > 0 && n[n.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                                    h = 0;
                                                    continue;
                                                }
                                                if (3 === r[0] && (!n || r[1] > n[0] && r[1] < n[3])) {
                                                    h.label = r[1];
                                                    break;
                                                }
                                                if (6 === r[0] && h.label < n[1]) {
                                                    h.label = n[1], n = r;
                                                    break;
                                                }
                                                if (n && h.label < n[2]) {
                                                    h.label = n[2], h.ops.push(r);
                                                    break;
                                                }
                                                n[2] && h.ops.pop(), h.trys.pop();
                                                continue;
                                            }
                                            r = i.call(t, h);
                                        } catch (t) {
                                            r = [
                                                6,
                                                t
                                            ], s = 0;
                                        } finally {
                                            e = n = 0;
                                        }
                                    if (5 & r[0])
                                        throw r[1];
                                    return {
                                        value: r[0] ? r[1] : void 0,
                                        done: !0
                                    };
                                }([
                                    r,
                                    a
                                ]);
                            };
                        }
                    };
                Object.defineProperty(i, '_', { value: !0 });
                var a = e(41), o = e(33), c = e(149), u = e(35), l = function (t) {
                        function i(e) {
                            var s = t.call(this) || this;
                            s.isReady_ = !1, s.isLatest = !1;
                            var n = i.baseUrl;
                            if (s.lang_ = i.DEFAULT_LANGUAGE, s.isVendorList(e))
                                s.populate(e), s.readyPromise = Promise.resolve();
                            else {
                                if (!n)
                                    throw new o.GVLError('must specify GVL.baseUrl before loading GVL json');
                                if (e > 0) {
                                    var r = e;
                                    i.CACHE.has(r) ? (s.populate(i.CACHE.get(r)), s.readyPromise = Promise.resolve()) : (n += i.versionedFilename.replace('[VERSION]', r + ''), s.readyPromise = s.fetchJson(n));
                                } else
                                    i.CACHE.has(i.LATEST_CACHE_KEY) ? (s.populate(i.CACHE.get(i.LATEST_CACHE_KEY)), s.readyPromise = Promise.resolve()) : (s.isLatest = !0, s.readyPromise = s.fetchJson(n + i.latestFilename));
                            }
                            return s;
                        }
                        return n(i, t), Object.defineProperty(i, 'baseUrl', {
                            get: function () {
                                return this.baseUrl_;
                            },
                            set: function (t) {
                                if (/^https?:\/\/vendorlist\.consensu\.org\//.test(t))
                                    throw new o.GVLError('Invalid baseUrl!  You may not pull directly from vendorlist.consensu.org and must provide your own cache');
                                t.length > 0 && '/' !== t[t.length - 1] && (t += '/'), this.baseUrl_ = t;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), i.emptyLanguageCache = function (t) {
                            var e = !1;
                            return void 0 === t && i.LANGUAGE_CACHE.size > 0 ? (i.LANGUAGE_CACHE = new Map(), e = !0) : 'string' == typeof t && this.consentLanguages.has(t.toUpperCase()) && (i.LANGUAGE_CACHE.delete(t.toUpperCase()), e = !0), e;
                        }, i.emptyCache = function (t) {
                            var e = !1;
                            return Number.isInteger(t) && t >= 0 ? (i.CACHE.delete(t), e = !0) : void 0 === t && (i.CACHE = new Map(), e = !0), e;
                        }, i.prototype.cacheLanguage = function () {
                            i.LANGUAGE_CACHE.has(this.lang_) || i.LANGUAGE_CACHE.set(this.lang_, {
                                purposes: this.purposes,
                                specialPurposes: this.specialPurposes,
                                features: this.features,
                                specialFeatures: this.specialFeatures,
                                stacks: this.stacks
                            });
                        }, i.prototype.fetchJson = function (t) {
                            return r(this, void 0, void 0, function () {
                                var i, e;
                                return h(this, function (s) {
                                    switch (s.label) {
                                    case 0:
                                        return s.trys.push([
                                            0,
                                            2,
                                            ,
                                            3
                                        ]), i = this.populate, [
                                            4,
                                            c.Json.fetch(t)
                                        ];
                                    case 1:
                                        return i.apply(this, [s.sent()]), [
                                            3,
                                            3
                                        ];
                                    case 2:
                                        throw e = s.sent(), new o.GVLError(e.message);
                                    case 3:
                                        return [2];
                                    }
                                });
                            });
                        }, i.prototype.getJson = function () {
                            return JSON.parse(JSON.stringify({
                                gvlSpecificationVersion: this.gvlSpecificationVersion,
                                vendorListVersion: this.vendorListVersion,
                                tcfPolicyVersion: this.tcfPolicyVersion,
                                lastUpdated: this.lastUpdated,
                                purposes: this.purposes,
                                specialPurposes: this.specialPurposes,
                                features: this.features,
                                specialFeatures: this.specialFeatures,
                                stacks: this.stacks,
                                vendors: this.fullVendorList
                            }));
                        }, i.prototype.changeLanguage = function (t) {
                            return r(this, void 0, void 0, function () {
                                var e, s, n, r, a;
                                return h(this, function (h) {
                                    switch (h.label) {
                                    case 0:
                                        if (e = t.toUpperCase(), !i.consentLanguages.has(e))
                                            return [
                                                3,
                                                6
                                            ];
                                        if (e === this.lang_)
                                            return [
                                                3,
                                                5
                                            ];
                                        if (this.lang_ = e, !i.LANGUAGE_CACHE.has(e))
                                            return [
                                                3,
                                                1
                                            ];
                                        for (n in s = i.LANGUAGE_CACHE.get(e))
                                            s.hasOwnProperty(n) && (this[n] = s[n]);
                                        return [
                                            3,
                                            5
                                        ];
                                    case 1:
                                        r = i.baseUrl + i.languageFilename.replace('[LANG]', t), h.label = 2;
                                    case 2:
                                        return h.trys.push([
                                            2,
                                            4,
                                            ,
                                            5
                                        ]), [
                                            4,
                                            this.fetchJson(r)
                                        ];
                                    case 3:
                                        return h.sent(), this.cacheLanguage(), [
                                            3,
                                            5
                                        ];
                                    case 4:
                                        throw a = h.sent(), new o.GVLError('unable to load language: ' + a.message);
                                    case 5:
                                        return [
                                            3,
                                            7
                                        ];
                                    case 6:
                                        throw new o.GVLError('unsupported language ' + t);
                                    case 7:
                                        return [2];
                                    }
                                });
                            });
                        }, Object.defineProperty(i.prototype, 'language', {
                            get: function () {
                                return this.lang_;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), i.prototype.isVendorList = function (t) {
                            return void 0 !== t && void 0 !== t.vendors;
                        }, i.prototype.populate = function (t) {
                            this.purposes = t.purposes, this.specialPurposes = t.specialPurposes, this.features = t.features, this.specialFeatures = t.specialFeatures, this.stacks = t.stacks, this.isVendorList(t) && (this.gvlSpecificationVersion = t.gvlSpecificationVersion, this.tcfPolicyVersion = t.tcfPolicyVersion, this.vendorListVersion = t.vendorListVersion, this.lastUpdated = t.lastUpdated, 'string' == typeof this.lastUpdated && (this.lastUpdated = new Date(this.lastUpdated)), this.vendors_ = t.vendors, this.fullVendorList = t.vendors, this.mapVendors(), this.isReady_ = !0, this.isLatest && i.CACHE.set(i.LATEST_CACHE_KEY, this.getJson()), i.CACHE.has(this.vendorListVersion) || i.CACHE.set(this.vendorListVersion, this.getJson())), this.cacheLanguage();
                        }, i.prototype.mapVendors = function (t) {
                            var i = this;
                            this.byPurposeVendorMap = {}, this.bySpecialPurposeVendorMap = {}, this.byFeatureVendorMap = {}, this.bySpecialFeatureVendorMap = {}, Object.keys(this.purposes).forEach(function (t) {
                                i.byPurposeVendorMap[t] = {
                                    legInt: new Set(),
                                    consent: new Set(),
                                    flexible: new Set()
                                };
                            }), Object.keys(this.specialPurposes).forEach(function (t) {
                                i.bySpecialPurposeVendorMap[t] = new Set();
                            }), Object.keys(this.features).forEach(function (t) {
                                i.byFeatureVendorMap[t] = new Set();
                            }), Object.keys(this.specialFeatures).forEach(function (t) {
                                i.bySpecialFeatureVendorMap[t] = new Set();
                            }), Array.isArray(t) || (t = Object.keys(this.fullVendorList).map(function (t) {
                                return +t;
                            })), this.vendorIds = new Set(t), this.vendors_ = t.reduce(function (t, e) {
                                var s = i.vendors_['' + e];
                                return s && void 0 === s.deletedDate && (s.purposes.forEach(function (t) {
                                    i.byPurposeVendorMap[t + ''].consent.add(e);
                                }), s.specialPurposes.forEach(function (t) {
                                    i.bySpecialPurposeVendorMap[t + ''].add(e);
                                }), s.legIntPurposes.forEach(function (t) {
                                    i.byPurposeVendorMap[t + ''].legInt.add(e);
                                }), s.flexiblePurposes && s.flexiblePurposes.forEach(function (t) {
                                    i.byPurposeVendorMap[t + ''].flexible.add(e);
                                }), s.features.forEach(function (t) {
                                    i.byFeatureVendorMap[t + ''].add(e);
                                }), s.specialFeatures.forEach(function (t) {
                                    i.bySpecialFeatureVendorMap[t + ''].add(e);
                                }), t[e] = s), t;
                            }, {});
                        }, i.prototype.getFilteredVendors = function (t, i, e, s) {
                            var n = this, r = t.charAt(0).toUpperCase() + t.slice(1), h = {};
                            return ('purpose' === t && e ? this['by' + r + 'VendorMap'][i + ''][e] : this['by' + (s ? 'Special' : '') + r + 'VendorMap'][i + '']).forEach(function (t) {
                                h[t + ''] = n.vendors[t + ''];
                            }), h;
                        }, i.prototype.getVendorsWithConsentPurpose = function (t) {
                            return this.getFilteredVendors('purpose', t, 'consent');
                        }, i.prototype.getVendorsWithLegIntPurpose = function (t) {
                            return this.getFilteredVendors('purpose', t, 'legInt');
                        }, i.prototype.getVendorsWithFlexiblePurpose = function (t) {
                            return this.getFilteredVendors('purpose', t, 'flexible');
                        }, i.prototype.getVendorsWithSpecialPurpose = function (t) {
                            return this.getFilteredVendors('purpose', t, void 0, !0);
                        }, i.prototype.getVendorsWithFeature = function (t) {
                            return this.getFilteredVendors('feature', t);
                        }, i.prototype.getVendorsWithSpecialFeature = function (t) {
                            return this.getFilteredVendors('feature', t, void 0, !0);
                        }, Object.defineProperty(i.prototype, 'vendors', {
                            get: function () {
                                return this.vendors_;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), i.prototype.narrowVendorsTo = function (t) {
                            this.mapVendors(t);
                        }, Object.defineProperty(i.prototype, 'isReady', {
                            get: function () {
                                return this.isReady_;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), i.prototype.clone = function () {
                            return new i(this.getJson());
                        }, i.isInstanceOf = function (t) {
                            return 'object' == typeof t && 'function' == typeof t.narrowVendorsTo;
                        }, i.LANGUAGE_CACHE = new Map(), i.CACHE = new Map(), i.LATEST_CACHE_KEY = 0, i.DEFAULT_LANGUAGE = 'EN', i.consentLanguages = new u.ConsentLanguages(), i.latestFilename = 'vendor-list.json', i.versionedFilename = 'archives/vendor-list-v[VERSION].json', i.languageFilename = 'purposes-[LANG].json', i;
                    }(a.Cloneable);
                i.GVL = l;
            },
            function (t, i, e) {
                'use strict';
                Object.defineProperty(i, '_', { value: !0 });
                var s = function () {
                    function t() {
                    }
                    return t.absCall = function (t, i, e, s) {
                        return new Promise(function (n, r) {
                            var h = new XMLHttpRequest();
                            h.withCredentials = e, h.addEventListener('load', function () {
                                if (h.readyState == XMLHttpRequest.DONE)
                                    if (h.status >= 200 && h.status < 300) {
                                        var t = h.response;
                                        if ('string' == typeof t)
                                            try {
                                                t = JSON.parse(t);
                                            } catch (t) {
                                            }
                                        n(t);
                                    } else
                                        r(new Error('HTTP Status: ' + h.status + ' response type: ' + h.responseType));
                            }), h.addEventListener('error', function () {
                                r(new Error('error'));
                            }), h.addEventListener('abort', function () {
                                r(new Error('aborted'));
                            }), null === i ? h.open('GET', t, !0) : h.open('POST', t, !0), h.responseType = 'json', h.timeout = s, h.ontimeout = function () {
                                r(new Error('Timeout ' + s + 'ms ' + t));
                            }, h.send(i);
                        });
                    }, t.post = function (t, i, e, s) {
                        return void 0 === e && (e = !1), void 0 === s && (s = 0), this.absCall(t, JSON.stringify(i), e, s);
                    }, t.fetch = function (t, i, e) {
                        return void 0 === i && (i = !1), void 0 === e && (e = 0), this.absCall(t, null, i, e);
                    }, t;
                }();
                i.Json = s;
            },
            function (t, i, e) {
                'use strict';
                var s = e(151), n = s.decodeBitsToIds, r = s.decodeFromBase64;
                t.exports = {
                    decodeConsentString: function (t) {
                        var i = r(t), e = i.version, s = i.cmpId, h = i.vendorListVersion, a = i.purposeIdBitString, o = i.maxVendorId, c = i.created, u = i.lastUpdated, l = i.isRange, d = i.defaultConsent, f = i.vendorIdBitString, p = i.vendorRangeList, b = i.cmpVersion, v = i.consentScreen, m = i.consentLanguage, g = {
                                version: e,
                                cmpId: s,
                                vendorListVersion: h,
                                allowedPurposeIds: n(a),
                                maxVendorId: o,
                                created: c,
                                lastUpdated: u,
                                cmpVersion: b,
                                consentScreen: v,
                                consentLanguage: m
                            };
                        if (l) {
                            var y = p.reduce(function (t, i) {
                                for (var e = i.isRange, s = i.startVendorId, n = i.endVendorId, r = e ? n : s, h = s; h <= r; h += 1)
                                    t[h] = !0;
                                return t;
                            }, {});
                            g.allowedVendorIds = [];
                            for (var w = 1; w <= o; w += 1)
                                (d && !y[w] || !d && y[w]) && -1 === g.allowedVendorIds.indexOf(w) && g.allowedVendorIds.push(w);
                        } else
                            g.allowedVendorIds = n(f);
                        return g;
                    }
                };
            },
            function (t, i, e) {
                'use strict';
                var s = e(152), n = e(154), r = n.versionNumBits, h = n.vendorVersionMap;
                function a(t, i, e) {
                    return parseInt(t.substr(i, e), 2);
                }
                function o(t, i, e) {
                    return new Date(100 * a(t, i, e));
                }
                function c(t) {
                    var i = a(t);
                    return String.fromCharCode(i + 65).toLowerCase();
                }
                function u(t, i, e) {
                    var s = t.substr(i, e);
                    return c(s.slice(0, e / 2)) + c(s.slice(e / 2));
                }
                function l(t) {
                    var i = t.input, e = t.output, s = t.startPosition, n = t.field, r = n.type, h = n.numBits, c = n.decoder, l = n.validator, f = n.listCount;
                    if ('function' == typeof l && !l(e))
                        return { newPosition: s };
                    if ('function' == typeof c)
                        return c(i, e, s);
                    var p, b, v = 'function' == typeof h ? h(e) : h;
                    switch (r) {
                    case 'int':
                        return { fieldValue: a(i, s, v) };
                    case 'bool':
                        return { fieldValue: (p = i, b = s, 1 === parseInt(p.substr(b, 1), 2)) };
                    case 'date':
                        return { fieldValue: o(i, s, v) };
                    case 'bits':
                        return { fieldValue: i.substr(s, v) };
                    case 'list':
                        return function (t, i, e, s, n) {
                            var r = 0;
                            'function' == typeof n ? r = n(i) : 'number' == typeof n && (r = n);
                            for (var h = e, a = [], o = 0; o < r; o += 1) {
                                var c = d({
                                    input: t,
                                    fields: s.fields,
                                    startPosition: h
                                });
                                h = c.newPosition, a.push(c.decodedObject);
                            }
                            return {
                                fieldValue: a,
                                newPosition: h
                            };
                        }(i, e, s, n, f);
                    case 'language':
                        return { fieldValue: u(i, s, v) };
                    default:
                        throw new Error('ConsentString - Unknown field type ' + r + ' for decoding');
                    }
                }
                function d(t) {
                    var i = t.input, e = t.fields, s = t.startPosition, n = void 0 === s ? 0 : s;
                    return {
                        decodedObject: e.reduce(function (t, e) {
                            var s = e.name, r = e.numBits, h = l({
                                    input: i,
                                    output: t,
                                    startPosition: n,
                                    field: e
                                }), a = h.fieldValue, o = h.newPosition;
                            return void 0 !== a && (t[s] = a), void 0 !== o ? n = o : 'number' == typeof r && (n += r), t;
                        }, {}),
                        newPosition: n
                    };
                }
                t.exports = {
                    decodeBitsToIds: function (t) {
                        return t.split('').reduce(function (t, i, e) {
                            return '1' === i && -1 === t.indexOf(e + 1) && t.push(e + 1), t;
                        }, []);
                    },
                    decodeFromBase64: function (t, i) {
                        for (var e = t; e.length % 4 != 0;)
                            e += '=';
                        e = e.replace(/-/g, '+').replace(/_/g, '/');
                        for (var n, o, c = s.decode(e), u = '', l = 0; l < c.length; l += 1) {
                            var f = c.charCodeAt(l).toString(2);
                            u += (n = f, o = 8 - f.length, function (t) {
                                for (var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : '0', e = '', s = 0; s < t; s += 1)
                                    e += i;
                                return e;
                            }(Math.max(0, o)) + n);
                        }
                        return function (t) {
                            var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : h, e = a(t, 0, r);
                            if ('number' != typeof e)
                                throw new Error('ConsentString - Unknown version number in the string to decode');
                            if (!h[e])
                                throw new Error('ConsentString - Unsupported version ' + e + ' in the string to decode');
                            return d({
                                input: t,
                                fields: i[e].fields
                            }).decodedObject;
                        }(u, i);
                    }
                };
            },
            function (t, i, e) {
                (function (t, s) {
                    var n;
                    !function (r) {
                        var h = i, a = (t && t.exports, 'object' == typeof s && s);
                        a.global !== a && a.window;
                        var o = function (t) {
                            this.message = t;
                        };
                        (o.prototype = new Error()).name = 'InvalidCharacterError';
                        var c = function (t) {
                                throw new o(t);
                            }, u = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/', l = /[\t\n\f\r ]/g, d = {
                                encode: function (t) {
                                    t = String(t), /[^\0-\xFF]/.test(t) && c('The string to be encoded contains characters outside of the Latin1 range.');
                                    for (var i, e, s, n, r = t.length % 3, h = '', a = -1, o = t.length - r; ++a < o;)
                                        i = t.charCodeAt(a) << 16, e = t.charCodeAt(++a) << 8, s = t.charCodeAt(++a), h += u.charAt((n = i + e + s) >> 18 & 63) + u.charAt(n >> 12 & 63) + u.charAt(n >> 6 & 63) + u.charAt(63 & n);
                                    return 2 == r ? (i = t.charCodeAt(a) << 8, e = t.charCodeAt(++a), h += u.charAt((n = i + e) >> 10) + u.charAt(n >> 4 & 63) + u.charAt(n << 2 & 63) + '=') : 1 == r && (n = t.charCodeAt(a), h += u.charAt(n >> 2) + u.charAt(n << 4 & 63) + '=='), h;
                                },
                                decode: function (t) {
                                    var i = (t = String(t).replace(l, '')).length;
                                    i % 4 == 0 && (i = (t = t.replace(/==?$/, '')).length), (i % 4 == 1 || /[^+a-zA-Z0-9/]/.test(t)) && c('Invalid character: the string to be decoded is not correctly encoded.');
                                    for (var e, s, n = 0, r = '', h = -1; ++h < i;)
                                        s = u.indexOf(t.charAt(h)), e = n % 4 ? 64 * e + s : s, n++ % 4 && (r += String.fromCharCode(255 & e >> (-2 * n & 6)));
                                    return r;
                                },
                                version: '0.1.0'
                            };
                        void 0 === (n = function () {
                            return d;
                        }.call(i, e, i, t)) || (t.exports = n);
                    }();
                }.call(this, e(153)(t), e(62)));
            },
            function (t, i) {
                t.exports = function (t) {
                    return t.webpackPolyfill || (t.deprecate = function () {
                    }, t.paths = [], t.children || (t.children = []), Object.defineProperty(t, 'loaded', {
                        enumerable: !0,
                        get: function () {
                            return t.l;
                        }
                    }), Object.defineProperty(t, 'id', {
                        enumerable: !0,
                        get: function () {
                            return t.i;
                        }
                    }), t.webpackPolyfill = 1), t;
                };
            },
            function (t, i, e) {
                'use strict';
                t.exports = {
                    versionNumBits: 6,
                    vendorVersionMap: {
                        1: {
                            version: 1,
                            metadataFields: [
                                'version',
                                'created',
                                'lastUpdated',
                                'cmpId',
                                'cmpVersion',
                                'consentScreen',
                                'vendorListVersion'
                            ],
                            fields: [
                                {
                                    name: 'version',
                                    type: 'int',
                                    numBits: 6
                                },
                                {
                                    name: 'created',
                                    type: 'date',
                                    numBits: 36
                                },
                                {
                                    name: 'lastUpdated',
                                    type: 'date',
                                    numBits: 36
                                },
                                {
                                    name: 'cmpId',
                                    type: 'int',
                                    numBits: 12
                                },
                                {
                                    name: 'cmpVersion',
                                    type: 'int',
                                    numBits: 12
                                },
                                {
                                    name: 'consentScreen',
                                    type: 'int',
                                    numBits: 6
                                },
                                {
                                    name: 'consentLanguage',
                                    type: 'language',
                                    numBits: 12
                                },
                                {
                                    name: 'vendorListVersion',
                                    type: 'int',
                                    numBits: 12
                                },
                                {
                                    name: 'purposeIdBitString',
                                    type: 'bits',
                                    numBits: 24
                                },
                                {
                                    name: 'maxVendorId',
                                    type: 'int',
                                    numBits: 16
                                },
                                {
                                    name: 'isRange',
                                    type: 'bool',
                                    numBits: 1
                                },
                                {
                                    name: 'vendorIdBitString',
                                    type: 'bits',
                                    numBits: function (t) {
                                        return t.maxVendorId;
                                    },
                                    validator: function (t) {
                                        return !t.isRange;
                                    }
                                },
                                {
                                    name: 'defaultConsent',
                                    type: 'bool',
                                    numBits: 1,
                                    validator: function (t) {
                                        return t.isRange;
                                    }
                                },
                                {
                                    name: 'numEntries',
                                    numBits: 12,
                                    type: 'int',
                                    validator: function (t) {
                                        return t.isRange;
                                    }
                                },
                                {
                                    name: 'vendorRangeList',
                                    type: 'list',
                                    listCount: function (t) {
                                        return t.numEntries;
                                    },
                                    validator: function (t) {
                                        return t.isRange;
                                    },
                                    fields: [
                                        {
                                            name: 'isRange',
                                            type: 'bool',
                                            numBits: 1
                                        },
                                        {
                                            name: 'startVendorId',
                                            type: 'int',
                                            numBits: 16
                                        },
                                        {
                                            name: 'endVendorId',
                                            type: 'int',
                                            numBits: 16,
                                            validator: function (t) {
                                                return t.isRange;
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                };
            },
            function (t, i) {
                String.prototype.cnx_replaceAll = function (t, i) {
                    return this.split(t).join(i);
                };
            },
            function (t, i, e) {
                'use strict';
                e.r(i);
                var s, n = e(5), r = e(48), h = (e(155), e(0)), a = e(79), o = e(20), c = e(16), u = e(31), l = e(6), d = e(4), f = e(36);
                !function (t) {
                    t.Deprecation = 'deprecation', t.Intervention = 'intervention', t.Crash = 'crash';
                }(s || (s = {}));
                const p = 'HeavyAdIntervention';
                class b {
                    constructor(t, i, e) {
                        this.fe = t, this.co = i, this.uo = e, this.do = !1, this.fo = () => {
                            'hidden' === this.fe.document.visibilityState && this.po();
                        }, this.po = () => {
                            if (this.do || !this.bo)
                                return;
                            const t = this.bo.takeRecords();
                            this.vo(t), this.do = !0;
                        }, this.vo = t => {
                            t.filter(({body: t}) => {
                                var i;
                                return (null === (i = t) || void 0 === i ? void 0 : i.id) === p;
                            }).forEach(() => {
                                this.co.trackHeavyAdIntervention(this.uo);
                            });
                        }, this.mo() && this.ys();
                    }
                    destroy() {
                        this.fe.removeEventListener('pagehide', this.po), this.fe.removeEventListener('visibilitychange', this.fo);
                    }
                    mo() {
                        return !!this.fe.ReportingObserver;
                    }
                    ys() {
                        this.bo = new this.fe.ReportingObserver(t => {
                            this.vo(t);
                        }, {
                            buffered: !0,
                            types: [s.Intervention]
                        }), this.bo.observe(), this.fe.addEventListener('pagehide', this.po), this.fe.addEventListener('visibilitychange', this.fo);
                    }
                }
                class v extends o.a {
                    constructor(t, i, e, s, n, r) {
                        super(), this.mediator = t, this.playerModel = i, this.app = e, this.Hs = s, this.yo = n, this._appSettings = r, this.macroElements = { player: [] }, this.wo = !1, this.Oo = {
                            description: '{{description}}',
                            title: '{{title}}',
                            player: '{{player}}'
                        }, this.xo = null, this.So = 500, this.createExperience(i, r), this.jo = new b(i.global, this.app.services.TrackingService, { heavyAdBlockTypeEnum: h.ProtoHeavyAdBlockTypeEnum.Global }), this.ko = new b(window, this.app.services.TrackingService, { heavyAdBlockTypeEnum: h.ProtoHeavyAdBlockTypeEnum.Script });
                    }
                    subscribeToEvents() {
                        this.subscribe(c.b.Destroy, this.experience, () => {
                            this.destroy();
                        }), this.subscribe(c.b.CanStart, this.experience, () => {
                            this.experience.start();
                        }), this.subscribe(c.c.SessionRendered, this.experience, () => {
                            this.yo.wasPlayerReloaded || this.app.services.TrackingService.trackSessionRendered(this.Hs), this.mediator.publish(this, c.c.SessionRendered);
                        }), this.subscribe(c.c.SessionView, this.experience, () => {
                            this.yo.wasPlayerInView || (this.app.services.TrackingService.trackSessionViewability(), this.mediator.publish(this, c.c.SessionView));
                        }), Object(u.a)(this.experience.events).forEach(t => {
                            this.subscribe(t, this.experience, i => {
                                this.experienceApi.trigger(t, i.payload);
                            });
                        });
                    }
                    updateMacroContent(t, i) {
                        t && t.forEach(t => {
                            t.textContent = i;
                        });
                    }
                    In() {
                        this.playerModel.css && this.app.services.GlobalDomUtilsService.addCssString(this.playerModel.css, `cnx-custom-css-${ this.app.config.appId }`);
                    }
                    _o(t) {
                        return `<cnx>${ t }</cnx>`.replace(/{\{([^}]+)}}/g, '<cnx-span>$&</cnx-span>');
                    }
                    Ao() {
                        if (this.experienceContainer = this.Io(), this.playerModel.html) {
                            const t = this.app.services.GlobalDomUtilsService.createElementByString(this._o(this.playerModel.html));
                            this.Co(t);
                            const i = this.macroElements.player[0];
                            if (!i)
                                throw Error('player macro was not found');
                            i.innerHTML = '', i.parentNode.insertBefore(this.experienceContainer, i), i.parentNode.removeChild(i), Object(l.c)(t.children).forEach(t => {
                                this.playerModel.targetContainer.parentNode.insertBefore(t, this.playerModel.targetContainer);
                            });
                        } else
                            this.playerModel.targetContainer.parentNode.insertBefore(this.experienceContainer, this.playerModel.targetContainer);
                        this.playerModel.targetContainer.parentElement.removeChild(this.playerModel.targetContainer);
                    }
                    Io() {
                        const t = this.app.config.isMobile ? d.g.Mobile : d.g.Desktop;
                        return this.app.services.GlobalDomUtilsService.createElementByString(`<cnx class="${ d.b.MainContainer } ${ t } ${ this.To }"></cnx>`);
                    }
                    Co(t) {
                        Object(l.c)(t.children).forEach(t => {
                            t.children.length > 0 && this.Co(t), Object.keys(this.Oo).forEach(i => {
                                const e = this.Oo[i];
                                t.textContent.indexOf(e) > -1 && this.Po(i, t);
                            });
                        });
                    }
                    Po(t, i) {
                        this.macroElements[t] || (this.macroElements[t] = []), this.macroElements[t].push(i), i.textContent = '';
                    }
                    Mo() {
                        null !== this.xo && (clearInterval(this.xo), this.xo = null);
                    }
                    init(t) {
                        this.In(), this.Ao();
                        const i = this.app.config.device;
                        return this.isSupportedBreakpoint(i) ? (this.subscribeToEvents(), this.experience.Eo(this.playerModel, this.app, this.experienceContainer, t), this.xo = setInterval(() => {
                            this.wo ? this.Mo() : this.app.services.GlobalDomUtilsService.isDetachedFromDOM(this.experienceContainer) && (this.destroy(), Object(n.a)({
                                message: 'player_removed_from_DOM',
                                level: h.ProtoLoggingLevelEnum.INFO
                            }));
                        }, this.So), !0) : (this.destroy(), !1);
                    }
                    getApiMethods() {
                        return this.experienceApi.getApiMethods();
                    }
                    get playerContainer() {
                        return this.experienceContainer;
                    }
                    destroy() {
                        try {
                            f.a.playerDestroyed(), this.wo = !0, this.Mo(), this.app.services.TrackingService.destroy(), this.app.services.ResizeObserver.destroy(), this.app.services.ViewabilityService.destroy(), this.app.services.InteractionService.destroy(), this.experienceApi.setDestroyed(), this.unsubscribeAll(this.experience), this.experience && (this.experience.destroy(), this.experience = null), this.experienceContainer.parentNode && this.experienceContainer.parentNode.removeChild(this.experienceContainer), this.jo.destroy(), this.ko.destroy();
                        } catch (t) {
                            Object(n.a)({
                                callStack: t.stack,
                                level: h.ProtoLoggingLevelEnum.WARNING,
                                message: 'Renderer_destroy',
                                exception: t.message
                            });
                        }
                    }
                }
                const m = {
                    Play: 'play',
                    Pause: 'pause',
                    Mute: 'mute',
                    Unmute: 'unmute',
                    Canplay: 'canplay',
                    Ended: 'ended',
                    Timeupdate: 'timeupdate',
                    Seeking: 'seeking',
                    Seeked: 'seeked',
                    Volumechange: 'volumechange',
                    Durationchange: 'durationchange',
                    Fullscreen: 'fullscreen',
                    LoadedData: 'loadeddata',
                    LoadedMetadata: 'loadedmetadata',
                    Error: 'error'
                };
                var g, y, w;
                !function (t) {
                    t[t.Auto = 0] = 'Auto', t[t.Strict = 1] = 'Strict';
                }(g || (g = {})), function (t) {
                    t[t.PlayingState = 0] = 'PlayingState', t[t.PausedState = 1] = 'PausedState', t[t.PrerollState = 2] = 'PrerollState', t[t.PostrollState = 3] = 'PostrollState', t[t.StoppedState = 4] = 'StoppedState', t[t.ReplayState = 5] = 'ReplayState', t[t.HiddenState = 6] = 'HiddenState', t[t.BufferingState = 7] = 'BufferingState', t[t.LiveStreamStarting = 8] = 'LiveStreamStarting', t[t.LiveStreamEnded = 9] = 'LiveStreamEnded', t[t.LiveStreamStopped = 10] = 'LiveStreamStopped', t[t.LiveStreamNotSupported = 11] = 'LiveStreamNotSupported';
                }(y || (y = {})), function (t) {
                    t.H264 = 'h264', t.Hevc = 'hevc';
                }(w || (w = {}));
                const O = {
                        PlayError: 'playError',
                        NewVideo: 'newVideo',
                        Buffering: 'buffering',
                        Buffered: 'buffered',
                        LevelSwitching: 'levelSwitching',
                        EndOfStream: 'endOfStream',
                        LiveStreamNotPlayable: 'liveNotPlayable'
                    }, x = {
                        Change: 'VideoQualityChanged',
                        CurrentQuality: 'CurrentQuality',
                        Loaded: 'QualityListLoaded'
                    };
                var S;
                !function (t) {
                    t[t.Low144p = 144] = 'Low144p', t[t.Low240p = 240] = 'Low240p', t[t.Medium360p = 360] = 'Medium360p', t[t.Medium480p = 480] = 'Medium480p', t[t.High720p = 720] = 'High720p', t[t.High1080p = 1080] = 'High1080p';
                }(S || (S = {}));
                const j = 720, k = 5000, _ = { NewThumbnail: 'NewThumbnail' };
                var A = Object.assign(Object.assign({}, c.a), {
                    FirstFramePlayed: 'firstFramePlayed',
                    ContentQuartiles: 'contentQuartiles',
                    MediaMetaUpdate: 'mediaMetaUpdate',
                    ChangeVideo: 'changeVideo',
                    VideoQueued: 'videoQueued'
                });
                const I = Object.assign(Object.assign(Object.assign(Object.assign({}, {
                        VideoStarted: 'videoStarted',
                        VideoCompleted25: 'videoCompleted25',
                        VideoCompleted50: 'videoCompleted50',
                        VideoCompleted75: 'videoCompleted75',
                        VideoCompleted100: 'videoCompleted100',
                        NewVideo: 'newVideo'
                    }), { SubtitlesVisibilityChanged: 'subtitlesVisibilityChanged' }), { PlayerClicked: 'playerClicked' }), { GalleryCardClicked: 'galleryCardClicked' }), C = {
                        Collapsed: 'collapsed',
                        AdCycleComplete: 'adCycleComplete'
                    };
                var T = e(2);
                class P {
                    constructor(t, i, e, s) {
                        this.Lo = t, this.Ro = s, this.Bo = this.Do(e, i);
                    }
                    Do(t, i) {
                        return Object.assign({}, t[i] || t[h.ProtoDeviceType.Smartphone]);
                    }
                    updateWidth(t) {
                        const i = this.Fo(t);
                        i !== this.currentBreakpointClass && (Object(T.I)(this.Lo, this.currentBreakpointClass), Object(T.a)(this.Lo, i), this.currentBreakpointClass = i);
                    }
                    Fo(t) {
                        switch (!0) {
                        case t >= this.Bo.xxl:
                            return this.Ro.Xxl;
                        case t >= this.Bo.xl:
                            return this.Ro.Xl;
                        case t >= this.Bo.lg:
                            return this.Ro.Lg;
                        case t >= this.Bo.md:
                            return this.Ro.Md;
                        case t >= this.Bo.sm:
                            return this.Ro.Sm;
                        case t >= this.Bo.xs:
                            return this.Ro.Xs;
                        default:
                            return this.Ro.Xxs;
                        }
                    }
                }
                var M = e(7);
                const E = {
                        xl: 720,
                        lg: 320,
                        md: 204,
                        sm: 142,
                        xs: 0
                    }, L = {
                        [h.ProtoDeviceType.Desktop]: {
                            xl: 468,
                            lg: 388,
                            md: 248,
                            sm: 142,
                            xs: 0
                        },
                        [h.ProtoDeviceType.Tablet]: Object.assign({}, E),
                        [h.ProtoDeviceType.Smartphone]: Object.assign({}, E)
                    }, R = {
                        xl: 720,
                        lg: 320,
                        md: 204,
                        sm: 142,
                        xs: 0
                    }, B = {
                        [h.ProtoDeviceType.Desktop]: {
                            xl: 468,
                            lg: 388,
                            md: 248,
                            sm: 142,
                            xs: 0
                        },
                        [h.ProtoDeviceType.Tablet]: Object.assign({}, R),
                        [h.ProtoDeviceType.Smartphone]: Object.assign({}, R)
                    }, D = 176, F = 160, V = 144, U = 112, $ = {
                        xl: R.xl + D,
                        lg: R.lg + F,
                        md: R.md + V,
                        sm: R.sm + U
                    }, N = {
                        [h.ProtoDeviceType.Desktop]: {
                            xl: 468 + D,
                            lg: 388 + F,
                            md: 248 + V,
                            sm: 142 + U,
                            xs: 0
                        },
                        [h.ProtoDeviceType.Tablet]: Object.assign({}, $),
                        [h.ProtoDeviceType.Smartphone]: Object.assign({}, $)
                    }, H = {
                        lg: 320,
                        md: 204,
                        sm: 0
                    }, q = {
                        [h.ProtoDeviceType.Desktop]: {
                            xl: 468,
                            lg: 388,
                            md: 248,
                            sm: 0
                        },
                        [h.ProtoDeviceType.Tablet]: Object.assign({}, H),
                        [h.ProtoDeviceType.Smartphone]: Object.assign({}, H)
                    }, z = {
                        xxl: 1080,
                        xl: 0
                    }, W = {
                        [h.ProtoDeviceType.Desktop]: {
                            xxl: 720,
                            xl: 0
                        },
                        [h.ProtoDeviceType.Tablet]: Object.assign({}, z),
                        [h.ProtoDeviceType.Smartphone]: Object.assign({}, z)
                    }, G = {
                        [M.ProtoGalleryOrientationEnum.Landscape]: {
                            [M.ProtoGalleryStyleMode.Detailed]: W,
                            [M.ProtoGalleryStyleMode.Visual]: N
                        },
                        [M.ProtoGalleryOrientationEnum.Portrait]: {
                            [M.ProtoGalleryStyleMode.Detailed]: q,
                            [M.ProtoGalleryStyleMode.Visual]: B
                        }
                    };
                var J;
                !function (t) {
                    t[t.CardClicked = 0] = 'CardClicked';
                }(J || (J = {}));
                const Q = {
                        width: 160,
                        height: 90
                    }, X = {
                        width: 80,
                        height: 80
                    }, Y = 3, K = 'EXPLORE MORE';
                class Z {
                    constructor(t, i, e = (() => {
                        return {};
                    })()) {
                        this.Vo = t, this.js = i, this.Uo = 1.2, this.$o = 16, this.No = 'normal', this.Ho = {
                            lines: 0,
                            useNativeClamping: !0
                        }, this.qo = !1, this.Ho = Object.assign(Object.assign({}, this.Ho), e), this.qo = this.zo();
                    }
                    setLines(t) {
                        this.Ho.lines = t;
                    }
                    getClampedText(t) {
                        this.Wo = t.trim(), this.Go = this.js.createElementByString(`<cnx-span style="display:inline-block;width:100%;line-height:inherit;font-family:inherit;font-size:inherit;">${ this.Wo }</cnx-span>`), this.Vo.appendChild(this.Go);
                        let i = 0;
                        try {
                            i = this.Jo();
                        } catch (t) {
                            Object(n.a)({
                                message: 'LineClamp_getMaxLines',
                                exception: t.message,
                                callStack: t.stack,
                                level: h.ProtoLoggingLevelEnum.FATAL
                            });
                        }
                        const e = this.Qo(this.Ho.lines, i), s = this.Xo(e);
                        return Math.ceil(this.Go.getBoundingClientRect().height) - 1 <= s ? (this.Yo(), this.Wo) : this.qo ? void Object(T.N)(this.Vo, {
                            overflow: 'hidden',
                            textOverflow: 'ellipsis',
                            webkitBoxOrient: 'vertical',
                            display: '-webkit-box',
                            webkitLineClamp: e
                        }) : this.Ko(this.Go.firstChild, s);
                    }
                    zo() {
                        return !!this.Ho.useNativeClamping && void 0 !== this.Vo.style.webkitLineClamp;
                    }
                    Xo(t) {
                        return this.Zo(this.Vo) * t + (this.tc(this.Go) + this.tc(this.Vo)) + (this.ic(this.Go) + this.ic(this.Vo));
                    }
                    ec(t) {
                        if (t.getBoundingClientRect) {
                            const {height: i} = t.getBoundingClientRect();
                            if (i > 0)
                                return Math.ceil(i);
                        }
                        const i = t.clientHeight;
                        return i && i > 0 ? Math.ceil(i) : t.parentNode ? this.ec(t.parentNode) : 0;
                    }
                    Jo() {
                        const t = this.ec(this.Vo), i = this.Zo(this.Vo), e = this.tc(this.Go) + this.tc(this.Vo), s = this.ic(this.Go) + this.ic(this.Vo), n = Math.floor((t - e - s) / i + 0.05);
                        return Math.max(n, 0);
                    }
                    sc(t) {
                        const i = this.js.getFontSizePropertyValue(t);
                        return i ? parseInt(i, 10) : this.$o;
                    }
                    Zo(t) {
                        let i = this.js.getLineHeightPropertyValue(t);
                        return i && i !== this.No || (i = `${ this.Uo * this.sc(t) }`), parseInt(i, 10);
                    }
                    tc(t) {
                        if (!t)
                            return 0;
                        const i = this.js.getPaddingTopPropertyValue(t);
                        return parseInt(i, 10) || 0;
                    }
                    ic(t) {
                        if (!t)
                            return 0;
                        const i = this.js.getPaddingBottomPropertyValue(t);
                        return parseInt(i, 10) || 0;
                    }
                    Qo(t, i) {
                        return t > 0 ? 0 === i ? t : Math.min(this.Ho.lines, i) : i;
                    }
                    Ko(t, i, e) {
                        if (!i)
                            return;
                        void 0 === e && (e = t.nodeValue.split(' '));
                        const s = [...e];
                        if (s.length > 1) {
                            return s.pop(), this.nc(t, `${ s.join(' ') }...`), t.parentNode.offsetHeight > i ? this.Ko(t, i, s) : (this.Yo(), `${ s.join(' ') }...`);
                        }
                    }
                    nc(t, i) {
                        t.nodeValue = i;
                    }
                    Yo() {
                        this.Vo.innerHTML = '', this.Go = null;
                    }
                }
                var tt = e(86), it = e.n(tt), et = e(51), st = e.n(et), nt = e(29), rt = e(1), ht = e(10);
                var at = class extends o.a {
                    constructor(t, i, e, s, n) {
                        super(), this.mediator = t, this.mr = i, this.rc = e, this.hc = s, this.Wn = n, this.br = () => {
                            this.Wn.metadata.title && this.ac();
                        }, this.oc = () => {
                            this.mediator.publish(this, J[J.CardClicked], { payload: this.Wn.id });
                        }, this.uc = this.rc.createElementByString(this.lc()), this.dc = this.uc.getElementsByClassName(d.o.CardImage)[0], this.fc = this.uc.getElementsByClassName(d.o.CardText)[0], this.pc = this.uc.getElementsByClassName(d.o.CardTextContainer)[0], this.Wn.titleFont && Object(T.N)(this.pc, { 'font-family': this.Wn.titleFont });
                        const r = this.rc.createElement('img');
                        r.onload = () => {
                            this.dc.appendChild(r);
                        };
                        const h = this.Wn.metadata.getThumbnailUrl(this.bc().width, this.bc().height);
                        if (Object(rt.h)(h) && (r.src = h), r.alt = Object(rt.a)(this.Wn.metadata.altText) ? this.Wn.metadata.altText : '', this.Wn.style === M.ProtoGalleryStyleMode.Detailed && this.Wn.metadata.duration) {
                            const t = this.rc.createElementByString(`<cnx class="cnx-g-card-text-info">${ Object(nt.f)(this.Wn.metadata.duration) }</cnx>`);
                            this.Wn.bodyFont && Object(T.N)(t, { 'font-family': this.Wn.bodyFont }), this.pc.appendChild(t);
                        }
                        this.hc.register(this.uc, this, this.hc), this.subscribe(ht.a[ht.a.Click], this.hc, () => {
                            this.oc();
                        }), this.relay(ht.a[ht.a.Scroll], this.hc, this, this.mediator), this.vc = new Z(this.fc, this.rc, {
                            lines: Y,
                            useNativeClamping: !1
                        }), this.mr.on(this.uc, this.br);
                    }
                    lc() {
                        return this.Wn.style === M.ProtoGalleryStyleMode.Visual ? it.a : st.a;
                    }
                    bc() {
                        return this.Wn.style === M.ProtoGalleryStyleMode.Visual ? Q : X;
                    }
                    ac() {
                        const t = this.vc.getClampedText(this.Wn.metadata.title), i = this.rc.createElementByString(`<cnx-span>${ t }</cnx-span>`);
                        Object(T.d)(i, this.fc);
                    }
                    get $element() {
                        return this.uc;
                    }
                    setActiveState(t) {
                        t ? Object(T.a)(this.uc, d.h.Active) : Object(T.I)(this.uc, d.h.Active);
                    }
                    destroy() {
                        this.uc.removeEventListener('click', this.oc), this.mr.off(this.uc, this.br);
                    }
                    clampLines() {
                        this.ac();
                    }
                };
                var ot = class extends o.a {
                    constructor(t, i, e, s, n) {
                        if (super(), this.mediator = t, this.mr = i, this.rc = e, this.hc = s, this.Wn = n, this.mc = !1, this.Wn.$slot.innerHTML = `<cnx class="${ d.o.CardPlaceholder }"></cnx>`, this.Wn.style === M.ProtoGalleryStyleMode.Detailed) {
                            const t = e.createElementByString(this.gc(st.a));
                            this.Wn.$slot.firstChild.appendChild(t);
                        }
                        this.hc.register(this.Wn.$slot, this.mediator, this), this.relay(ht.a[ht.a.Scroll], this.hc, this, this.mediator);
                    }
                    gc(t) {
                        const i = [...Array(12)].map(() => {
                            return `<cnx-span style='width: ${ 10 + Math.floor(40 * Math.random()) }%'></cnx-span> `;
                        }).reduce((t, i) => {
                            return t + i;
                        }, '');
                        return t.replace('<cnx-span></cnx-span>', i);
                    }
                    setCardData(t) {
                        this.yc = new at(this, this.mr, this.rc, this.hc, {
                            id: this.Wn.id,
                            style: this.Wn.style,
                            metadata: t,
                            titleFont: this.Wn.titleFont,
                            bodyFont: this.Wn.bodyFont
                        }), this.subscribe(J[J.CardClicked], this.yc, ({payload: t}) => {
                            this.mediator.publish(this, J[J.CardClicked], { payload: t });
                        }), this.unsubscribeAll(this.hc), this.relay(ht.a[ht.a.Scroll], this.yc, this, this.mediator), this.yc.setActiveState(this.mc), this.Wn.$slot.innerHTML = '', this.Wn.$slot.appendChild(this.yc.$element);
                    }
                    setActiveState(t) {
                        this.mc = t, this.yc && this.yc.setActiveState(this.mc);
                    }
                    getContainer() {
                        return this.Wn.$slot;
                    }
                    clampLines() {
                        this.yc.clampLines();
                    }
                };
                const ct = 4, ut = 4, lt = 20, dt = 100, ft = 50;
                var pt;
                !function (t) {
                    t.MainContainer = 'cnx-scrollbar', t.Wrapper = 'cnx-scrollbar-wrapper', t.Content = 'cnx-scrollbar-content', t.Horizontal = 'cnx-scrollbar-horizontal', t.Handle = 'cnx-scrollbar-handle', t.PreventSelect = 'cnx-scrollbar-prevent-select', t.ShowOnHover = 'cnx-scrollbar-show-on-hover';
                }(pt || (pt = {}));
                class bt {
                    constructor(t, i = (() => {
                        return {};
                    })()) {
                        if (this.wc = t, this.Wn = i, this.Oc = 0, this.xc = t => {
                                t.preventDefault(), this.Sc = t.pageY, this.jc = t.pageX, Object(T.a)(this.kc, pt.PreventSelect), Object(T.a)(this.fe.document.body, pt.PreventSelect), this.fe.document.addEventListener('mousemove', this._c), this.fe.document.addEventListener('mouseup', this.Ac);
                            }, this._c = t => {
                                const i = this.Wn.horizontal ? t.pageX - this.jc : t.pageY - this.Sc;
                                this.Sc = t.pageY, this.jc = t.pageX, Object(T.M)(this.fe, () => {
                                    this.Wn.horizontal ? this.Ic.scrollLeft += i / this.Cc : this.Ic.scrollTop += i / this.Cc;
                                });
                            }, this.Ac = t => {
                                Object(T.I)(this.kc, pt.PreventSelect), Object(T.I)(this.fe.document.body, pt.PreventSelect), this.fe.document.removeEventListener('mousemove', this._c), this.fe.document.removeEventListener('mouseup', this.Ac);
                            }, this.Tc = t => {
                                if (!this.Wn.horizontal)
                                    return;
                                const i = t.deltaMode ? dt * (t.deltaY < 0 ? -1 : 1) : t.deltaY, e = lt * (Math.floor(i) / 33), s = this.Oc + e;
                                s >= -1 * this.kc.clientWidth && s <= this.Ic.scrollWidth - this.kc.clientWidth && (this.Oc = s), Object(T.M)(this.fe, () => {
                                    return this.Ic.scrollLeft = this.Oc;
                                });
                            }, this.Pc = () => {
                                clearTimeout(this.Mc), this.Mc = setTimeout(() => {
                                    this.Ec();
                                }, ft);
                            }, this.Ec = () => {
                                const t = this.Wn.horizontal ? this.Ic.scrollWidth : this.Ic.scrollHeight, i = this.Wn.horizontal ? this.wc.clientWidth : this.wc.clientHeight;
                                this.Cc = i / t;
                                const e = -1 * (this.wc.clientWidth - (this.kc.clientWidth || ct) - ut), s = this.wc.clientHeight - this.kc.clientHeight - ut;
                                Object(T.M)(this.fe, () => {
                                    if (this.Cc >= 1)
                                        Object(T.u)(this.kc);
                                    else {
                                        if (Object(T.O)(this.kc), this.Wn.horizontal)
                                            return void Object(T.N)(this.kc, {
                                                width: `${ Math.max(100 * this.Cc, 10) }%`,
                                                height: '',
                                                top: `${ s }px`,
                                                right: '',
                                                left: `${ this.Ic.scrollLeft / t * 100 }%`
                                            });
                                        Object(T.N)(this.kc, {
                                            width: '',
                                            height: `${ Math.max(100 * this.Cc, 10) }%`,
                                            top: `${ this.Ic.scrollTop / t * 100 }%`,
                                            right: `${ e }px`,
                                            left: ''
                                        });
                                    }
                                });
                            }, this.fe = Object(T.s)(t), !this.fe)
                            throw new Error('window was not found');
                        this.Lc(), this.kc.addEventListener('mousedown', this.xc), this.Wn.overrideNativeHorizontalScroll && this.Ic.addEventListener('wheel', this.Tc, { passive: !0 }), this.fe.addEventListener('resize', this.Pc), this.Ic.addEventListener('scroll', this.Ec), this.Ic.addEventListener('mouseenter', this.Ec), Object(T.a)(this.wc, pt.MainContainer, this.Wn.horizontal ? pt.Horizontal : void 0, this.Wn.showOnHover ? pt.ShowOnHover : void 0), this.Ec();
                        const e = Object(T.k)(this.wc, this.fe);
                        '0px' === e.height && '0px' !== e.maxHeight && Object(T.N)(this.wc, { height: e.maxHeight });
                    }
                    Lc() {
                        for (this.kc = Object(T.f)(`<cnx class="${ pt.Handle }">`, this.fe), this.Rc = Object(T.f)(`<cnx class="${ pt.Wrapper }">`, this.fe), this.Ic = Object(T.f)(`<cnx class="${ pt.Content }">`, this.fe), this.Rc.appendChild(this.Ic); this.wc.firstChild;)
                            this.Ic.appendChild(this.wc.firstChild);
                        this.wc.appendChild(this.Rc), this.wc.insertAdjacentElement('beforeend', this.kc);
                    }
                    destroy() {
                        for (this.fe.document.removeEventListener('mousemove', this._c), this.fe.document.removeEventListener('mouseup', this.Ac), this.kc.removeEventListener('mousedown', this.xc), this.Ic.removeEventListener('wheel', this.Tc), this.fe.removeEventListener('resize', this.Pc), this.Ic.removeEventListener('scroll', this.Ec), this.Ic.removeEventListener('mouseenter', this.Ec), Object(T.J)(this.kc); this.Ic.firstChild;)
                            this.wc.appendChild(this.Ic.firstChild);
                        Object(T.J)(this.Rc), Object(T.I)(this.wc, pt.MainContainer, pt.Horizontal, pt.ShowOnHover);
                    }
                }
                const vt = t => {
                        return t.clientHeight || t.getBoundingClientRect().height || 0;
                    }, mt = t => {
                        return t.clientWidth || t.getBoundingClientRect().width || 0;
                    }, gt = (t, i, e = (() => {
                        return !1;
                    })()) => {
                        const s = t.offsetTop, n = ((t, i) => {
                                return (parseInt(i.getMarginTopPropertyValue(t), 10) || 0) + (parseInt(i.getMarginBottomPropertyValue(t), 10) || 0);
                            })(t, i), r = vt(t), h = vt(t.parentElement);
                        let a = s;
                        if (e) {
                            const t = Math.floor(h / (r + n)), i = Math.floor(t / 2);
                            a = Math.max(s - i * (r + n), 0);
                        }
                        t.parentElement.scrollTop = a;
                    }, yt = (t, i, e = (() => {
                        return !1;
                    })()) => {
                        const s = t.offsetLeft, n = ((t, i) => {
                                return (parseInt(i.getMarginLeftPropertyValue(t), 10) || 0) + (parseInt(i.getMarginRightPropertyValue(t), 10) || 0);
                            })(t, i), r = mt(t), h = mt(t.parentElement);
                        let a = s;
                        if (e) {
                            const t = Math.floor(h / (r + n)), i = Math.floor(t / 2);
                            a = Math.max(s - i * (r + n), 0);
                        }
                        t.parentElement.scrollLeft = a;
                    };
                class wt extends o.a {
                    constructor(t, i, e, s, n, r, h, a, o) {
                        super(), this.mediator = t, this.mr = i, this.rc = e, this.hc = s, this.Bc = n, this.Dc = r, this.Fc = h, this.Vc = a, this.Uc = [], this.$c = [], this.Nc = null, this.Hc = 0, this.qc = Object(T.p)(this.Bc), this.zc = Object(T.j)(this.Bc);
                        const c = this.Fc === M.ProtoGalleryStyleMode.Detailed ? d.o.StyleDetailed : d.o.StyleVisual;
                        if (Object(T.a)(this.Bc, c), this.Fc === M.ProtoGalleryStyleMode.Detailed && (this.Bc.innerHTML = `<cnx class="${ d.o.ExploreMore }">${ K }</cnx>`), this.Wc = e.createElementByString(`<cnx class="${ d.o.CardRail }"></cnx>`), this.Bc.appendChild(this.Wc), this.Fc === M.ProtoGalleryStyleMode.Detailed) {
                            const t = e.createElementByString(`<cnx class="${ d.o.FadeOut }"></cnx>`);
                            this.Bc.appendChild(t);
                        }
                        this.Gc(o);
                    }
                    start() {
                        this.Jc(), this.Qc();
                    }
                    onResize(t) {
                        this.Xc && (this.Xc.updateWidth(t), this.Yc(), this.Kc());
                    }
                    setCurrentIndex(t) {
                        this.Hc = t, this.Uc.forEach((i, e) => {
                            return i.card.setActiveState(t === e);
                        }), this.Kc();
                    }
                    Gc(t) {
                        t.forEach((t, i) => {
                            const e = this.Zc(i);
                            this.Wc.appendChild(e.getContainer()), this.Uc.push({
                                card: e,
                                videoSource: t
                            }), this.subscribe(J[J.CardClicked], e, ({payload: t}) => {
                                return this.tu(t);
                            }), this.relay(ht.a[ht.a.Scroll], e, this, this.mediator);
                        });
                    }
                    Kc() {
                        if (Object(l.h)(this.$c))
                            return;
                        const t = this.Uc[this.Hc].card.getContainer();
                        this.Vc === M.ProtoGalleryOrientationEnum.Landscape ? gt(t, this.rc, !0) : yt(t, this.rc, !0);
                    }
                    Zc(t) {
                        const i = this.rc.createElementByString(`<cnx class="${ d.o.CardSlot }"></cnx>`);
                        return new ot(this, this.mr, this.rc, this.hc, {
                            id: t,
                            style: this.Fc,
                            $slot: i,
                            titleFont: this.qc,
                            bodyFont: this.zc
                        });
                    }
                    tu(t) {
                        this.mediator.publish(this, A.ChangeVideo, { payload: { videoIndex: t } });
                    }
                    Jc() {
                        this.Uc.forEach(t => {
                            t.videoSource.getMetadata(i => {
                                t.card.setCardData(i), t.card.clampLines();
                            });
                        });
                    }
                    iu() {
                        this.$c.forEach(t => {
                            this.unsubscribeAll(t), this.Wc.removeChild(t.getContainer());
                        }), this.$c = [];
                    }
                    eu() {
                        const t = this.Vc === M.ProtoGalleryOrientationEnum.Portrait ? this.Wc.clientWidth : this.Wc.clientHeight, i = this.Uc[0].card.getContainer(), e = this.Vc === M.ProtoGalleryOrientationEnum.Portrait ? i.clientWidth : i.clientHeight, s = Math.ceil(t / e) + 1 - (this.Uc.length - 1);
                        if (s > this.$c.length - 1)
                            for (let t = 0; t <= s; t++) {
                                const i = this.Zc(t);
                                this.$c.push(i), this.relay(ht.a[ht.a.Scroll], i, this, this.mediator), this.Wc.appendChild(i.getContainer());
                            }
                    }
                    Yc() {
                        this.su() ? (this.iu(), this.nu()) : (this.ru(), this.eu());
                    }
                    nu() {
                        null === this.Nc && (this.Nc = new bt(this.Wc, { horizontal: this.Vc === M.ProtoGalleryOrientationEnum.Portrait }), Object(T.a)(this.Wc, d.h.HasCustomScrollbar));
                    }
                    ru() {
                        null !== this.Nc && (this.Nc.destroy(), this.Nc = null, Object(T.I)(this.Wc, d.h.HasCustomScrollbar));
                    }
                    su() {
                        const t = this.Uc[this.Uc.length - 1].card.getContainer();
                        return this.Vc === M.ProtoGalleryOrientationEnum.Landscape ? t.offsetTop + t.clientHeight > this.Wc.clientHeight : t.offsetLeft + t.clientWidth > this.Wc.clientWidth;
                    }
                    Qc() {
                        const t = this.hu();
                        this.Xc = new P(this.Bc, this.Dc, t, d.r);
                    }
                    hu() {
                        return G[this.Vc][this.Fc];
                    }
                }
                var Ot, xt, St = e(18), jt = e(38), kt = e(24);
                !function (t) {
                    t.enter = 'enterFullscreen', t.exit = 'exitFullscreen';
                }(Ot || (Ot = {}));
                class _t {
                    constructor(t, i, e, s) {
                        if (this.mediator = t, this.rc = i, this.Zn = s, this.au = !1, this.ou = 1000, this.cu = !0, this.uu = !1, this.lu = () => {
                                this.au && this.du();
                            }, this.fu = t => {
                                this.au ? null !== this.fullscreenElement ? this.du() : this.pu() : this.mediator.publish(this, Ot.exit);
                            }, this.pu = () => {
                                this.uu = !1, this.bu.reject(), this.au = !1, clearTimeout(this.vu);
                            }, this.mu = s && s === St.b.Ios ? e.getElementsByTagName('video')[0] : e, !this.mu)
                            throw new Error('element is missing');
                        try {
                            const t = this.gu();
                            if (null == t)
                                return void (this.cu = !1);
                            this.yu = t.keys, this.wu = t.name, this.Ou();
                        } catch (t) {
                            this.cu = !1, Object(n.a)({
                                message: 'Fullscreen init failed',
                                exception: t.message,
                                callStack: t.stack,
                                level: h.ProtoLoggingLevelEnum.FATAL
                            });
                        }
                    }
                    gu() {
                        let t;
                        return t = this.Zn === St.b.Ios ? this.rc.getFullscreenKeys(this.mu) : this.rc.getFullscreenKeys();
                    }
                    get fullscreenElement() {
                        return this.rc.getDocumentProperty(this.yu.fullscreenElement);
                    }
                    get fullscreenEnabled() {
                        return this.rc.getDocumentProperty(this.yu.fullscreenEnabled);
                    }
                    enterFullScreen() {
                        if (this.cu) {
                            this.bu = new jt.a(), this.au = !0, clearTimeout(this.vu), this.vu = setTimeout(this.pu, this.ou);
                            try {
                                this.mu[this.yu.requestFullscreen]();
                            } catch (t) {
                                this.pu();
                            }
                            return this.bu.promise;
                        }
                    }
                    exitFullScreen() {
                        try {
                            this.rc.exitFullscreen(this.yu.exitFullscreen, this.Zn === St.b.Ios ? this.mu : void 0);
                        } catch (t) {
                            Object(n.a)({
                                message: 'fullscreen_exit',
                                exception: t.message,
                                callStack: t.stack,
                                level: h.ProtoLoggingLevelEnum.WARNING
                            });
                        }
                        this.uu = !1;
                    }
                    Ou() {
                        this.wu === kt.d.Moz || this.wu === kt.d.Ms ? (this.rc.addEventListenerOnGlobal(this.yu.fullscreenchange, this.fu), this.rc.addEventListenerOnGlobal(this.yu.fullscreenerror, this.pu)) : (this.mu.addEventListener(this.yu.fullscreenchange, this.fu), this.mu.addEventListener(this.yu.fullscreenerror, this.pu)), this.Zn === St.b.Ios && (this.mu.addEventListener('webkitbeginfullscreen', this.lu), this.mu.addEventListener('webkitendfullscreen', this.fu));
                    }
                    xu() {
                        this.wu === kt.d.Moz || this.wu === kt.d.Ms ? (this.rc.removeEventListenerOnGlobal(this.yu.fullscreenchange, this.fu), this.rc.removeEventListenerOnGlobal(this.yu.fullscreenerror, this.pu)) : (this.mu.removeEventListener(this.yu.fullscreenchange, this.fu), this.mu.removeEventListener(this.yu.fullscreenerror, this.pu)), this.Zn === St.b.Ios && (this.mu.removeEventListener('webkitbeginfullscreen', this.lu), this.mu.removeEventListener('webkitendfullscreen', this.fu));
                    }
                    du() {
                        this.uu = !0, this.mediator.publish(this, Ot.enter), this.bu.resolve(), this.au = !1, clearTimeout(this.vu);
                    }
                    get isFullscreen() {
                        return this.uu;
                    }
                    destroy() {
                        this.isFullscreen && this.exitFullScreen(), this.xu(), this.bu && this.bu.isPending && this.bu.reject();
                    }
                }
                !function (t) {
                    t[t.Play = 0] = 'Play', t[t.Pause = 1] = 'Pause', t[t.Replay = 2] = 'Replay', t[t.Volume = 3] = 'Volume', t[t.Mute = 4] = 'Mute', t[t.Unmute = 5] = 'Unmute', t[t.Seek = 6] = 'Seek', t[t.DraggingStart = 7] = 'DraggingStart', t[t.DraggingStopped = 8] = 'DraggingStopped', t[t.SeekingStart = 9] = 'SeekingStart', t[t.SeekingStopped = 10] = 'SeekingStopped', t[t.Expand = 11] = 'Expand', t[t.Collapse = 12] = 'Collapse', t[t.Quality = 13] = 'Quality', t[t.Close = 14] = 'Close', t[t.Next = 15] = 'Next', t[t.Prev = 16] = 'Prev', t[t.Settings = 17] = 'Settings', t[t.CaptionOn = 18] = 'CaptionOn', t[t.CaptionOff = 19] = 'CaptionOff', t[t.CaptionUpdate = 20] = 'CaptionUpdate', t[t.VolumeHoverStart = 21] = 'VolumeHoverStart', t[t.VolumeHoverStopped = 22] = 'VolumeHoverStopped', t[t.OverlayClick = 23] = 'OverlayClick', t[t.UIHideStart = 24] = 'UIHideStart', t[t.UIShowStart = 25] = 'UIShowStart', t[t.UIEndShowHide = 26] = 'UIEndShowHide', t[t.AboutClick = 27] = 'AboutClick', t[t.ContextClick = 28] = 'ContextClick', t[t.SettingsMenu = 29] = 'SettingsMenu', t[t.HoverStart = 30] = 'HoverStart', t[t.HoverEnd = 31] = 'HoverEnd', t[t.StateChanged = 32] = 'StateChanged', t[t.RebindComponent = 33] = 'RebindComponent', t[t.SkipAd = 34] = 'SkipAd', t[t.LogoClicked = 35] = 'LogoClicked', t[t.ContextMenuOpen = 36] = 'ContextMenuOpen', t[t.ContextMenuClose = 37] = 'ContextMenuClose';
                }(xt || (xt = {}));
                var At, It, Ct, Tt = e(13), Pt = e(3);
                !function (t) {
                    t.EnterStart = 'enterStart', t.EnterStop = 'enterStop', t.ExitStart = 'exitStart', t.ExitStop = 'exitStop';
                }(At || (At = {})), function (t) {
                    t[t.DirectionIn = 0] = 'DirectionIn', t[t.DirectionOut = 1] = 'DirectionOut', t[t.FadeIn = 2] = 'FadeIn';
                }(It || (It = {})), function (t) {
                    t.Float = 'float', t.Embed = 'embed';
                }(Ct || (Ct = {}));
                const Mt = 400, Et = 1000, Lt = 20, Rt = 0.5;
                class Bt {
                    constructor(t, i, e, s, n, r = (() => {
                        return 0;
                    })()) {
                        this.Su = t, this.Wn = i, this.Lo = e, this.Dc = s, this.js = n, this.ju = r, this.ku = 0, this._u = void 0, this.Au = null, this.Iu = !1, this.Cu = 500, this.Tu = () => {
                            this._u && this.Pu();
                        }, this.Mu = () => {
                            if (this.Wn.width = this.Eu.clientWidth, this.Lu(), this._u) {
                                const t = !1;
                                this.Ru(t);
                            }
                        }, this.Lu = () => {
                            this.Bu() ? !this.Du || this._u || this.Iu ? this.Fu() : this.Vu() : this._u && this.Uu();
                        }, this.$u = t => {
                            if (this.Nu(t.propertyName))
                                switch (this.transitionState) {
                                case It.DirectionIn:
                                    this.transitionState = void 0, this.Hu();
                                    break;
                                case It.DirectionOut:
                                    this.transitionState = void 0, this.qu();
                                    break;
                                case It.FadeIn:
                                    this.transitionState = void 0, this.zu();
                                }
                        }, this.Wu();
                    }
                    get transitionState() {
                        return this.Gu;
                    }
                    set transitionState(t) {
                        this.Gu === It.FadeIn && this.Ju(d.m.FadeInBase, d.m.FadeIn), this.Gu = t;
                    }
                    Qu(...t) {
                        Object(T.a)(this.Lo, ...t);
                    }
                    Ju(...t) {
                        Object(T.I)(this.Lo, ...t);
                    }
                    Fu() {
                        this.Dc !== h.ProtoDeviceType.Smartphone && (this.Lo.style.width = `${ this.Wn.width }px`);
                        const t = this.Lo.getBoundingClientRect().width;
                        this.Lo.style.height = this.Wn.getHeight(t);
                    }
                    Xu() {
                        return Object(l.g)(this.Dc, this.Wn.floatingDeviceMode);
                    }
                    Yu() {
                        this.js.addEventListenerOnGlobal('scroll', this.Tu);
                    }
                    Pu() {
                        this.Eu && (this.Ku(), this.Zu < this.Wn.floatingGutterY ? this.tl(this.Wn.floatingGutterY) : this.tl(this.Zu));
                    }
                    il() {
                        this.Eu = this.js.querySelector(this.Wn.pageElement), this.Eu && (clearInterval(this.Au), this.Wn.width = this.Eu.clientWidth, this.Lu(), this.Su.on(this.Eu, this.Mu), this.Su.on(this.js.getGlobalClosestTop().topFrame.document.body, this.Mu));
                    }
                    Ku() {
                        switch (this.Wn.appendLocation) {
                        case h.ProtoFloatingAppendLocationEnum.Above:
                            this.Zu = this.Eu.getBoundingClientRect().top - this.Lo.offsetHeight - this.Wn.floatingYAxisPadding;
                            break;
                        case h.ProtoFloatingAppendLocationEnum.Below:
                            this.Zu = this.Eu.getBoundingClientRect().top + this.Eu.offsetHeight + this.Wn.floatingYAxisPadding;
                            break;
                        case h.ProtoFloatingAppendLocationEnum.Within:
                            this.Zu = this.Eu.getBoundingClientRect().top;
                        }
                    }
                    el() {
                        this.Au = setInterval(() => {
                            this.il();
                        }, this.Cu), this.il();
                    }
                    sl() {
                        return this.Wn.floatingPosition === h.ProtoFloatingFixedPositionMode.Element;
                    }
                    Nu(t) {
                        switch (this.transitionState) {
                        case It.DirectionIn:
                        case It.DirectionOut:
                            if ('right' === t || 'left' === t)
                                return !0;
                            break;
                        case It.FadeIn:
                            if ('opacity' === t)
                                return !0;
                        }
                        return !1;
                    }
                    nl() {
                        this.Lo.style.top = '', this.Lo.style.bottom = '', this.Lo.style.left = '', this.Lo.style.right = '', this.Lo.style.width = '', this.Lo.style.height = '', this.Lo.style.transform = '';
                    }
                    qu() {
                        this._u = !1, this.Ju(d.n.MainClass, d.n.TransitionClass, this.Wn.positionClass), this.nl(), this.rl();
                    }
                    hl() {
                        this.Wn.isPositionedTop ? (this.Lo.style.top = `${ this.Wn.floatingGutterY }px`, this.Lo.style.bottom = 'auto') : this.Wn.isPositionedBottom && (this.Lo.style.top = 'auto', this.Lo.style.bottom = `${ this.Wn.floatingGutterY }px`);
                    }
                    tl(t) {
                        this.Lo.style.transform = `translateY(${ t }px)`;
                    }
                    al(t) {
                        t ? this.Qu(d.n.TransitionClass) : this.Ju(d.n.TransitionClass);
                    }
                    ol(t, i = (() => {
                        return !1;
                    })(), e = (() => {
                        return !1;
                    })()) {
                        this.al(i), e || this.Wn.isPositionedLeft ? (this.Lo.style.left = `${ t }px`, this.Lo.style.right = 'auto') : (this.Lo.style.left = 'auto', this.Lo.style.right = `${ t }px`);
                    }
                    Bu() {
                        return Object(T.s)(this.Lo).document.body.getBoundingClientRect().width >= this.ju;
                    }
                    Vu() {
                        if (this.Bu() && (!this.sl() || this.Eu && (!this.Eu || 0 !== this.Eu.clientWidth)))
                            if (this._u = !0, this.transitionState = It.DirectionIn, this.Qu(d.n.MainClass, this.Wn.positionClass), this.Lu(), this.sl() ? (this.Lo.style.top = '0px', this.cl(), this.ol(this.ku, !1, !0), this.Pu()) : (this.hl(), this.ol(this.ku)), this.ul(), Object(T.i)(this.Lo), this.Eu) {
                                const t = !0;
                                this.Ru(t);
                            } else
                                this.ol(this.Wn.floatingGutterX, !0);
                    }
                    cl() {
                        this.Eu && (this.js.getElementCoordinates(this.Eu).clientX < this.js.getBodyDimensions().width / 2 ? (this.Wn.isPositionedLeft = !0, this.Wn.isPositionedRight = !1) : (this.Wn.isPositionedLeft = !1, this.Wn.isPositionedRight = !0), this.Wu());
                    }
                    Wu() {
                        this.sl() && this.Wn.isPositionedRight ? this.ku = this.js.getBodyDimensions().width + (this.Wn.floatingWidth || Et) + Lt : this.ku = -((this.Wn.floatingWidth || Et) + Lt);
                    }
                    Ru(t) {
                        let i;
                        this.cl(), i = this.js.getElementCoordinates(this.Eu).clientX, this.Wn.isPositionedLeft ? i += this.Wn.floatingGutterX : i -= this.Wn.floatingGutterX, this.ol(i, t, !0);
                    }
                    Uu(t = (() => {
                        return !0;
                    })()) {
                        let i;
                        t && (this.transitionState = It.DirectionOut), this.ll(), i = this.sl(), this.ol(this.ku, t, i), t || this.qu();
                    }
                    dl() {
                        this.Lo.addEventListener('transitionend', this.$u), this.Su.on(this.Lo, this.Lu), this.sl() && (this.el(), this.Yu());
                    }
                    fl() {
                        this.Su.off(this.Lo, this.Lu), this.Lo.removeEventListener('transitionend', this.$u), this.Eu && (this.Su.off(this.Eu, this.Mu), this.Su.off(this.js.getGlobalClosestTop().topFrame.document.body, this.Mu), this.js.removeEventListenerOnGlobal('scroll', this.Tu), clearInterval(this.Au));
                    }
                    get isInFloating() {
                        return this._u;
                    }
                }
                class Dt extends Bt {
                    constructor(t, i, e, s, n, r, a, o = (() => {
                        return 0;
                    })()) {
                        super(e, n, s, r, a, o), this.mediator = t, this.pl = i, this.bl = !0, this.vl = !0, this.ml = !1, this.Du = !1, this.gl = t => {
                            const i = this.pl.getIsTabInFocus();
                            t && this.isInFloating && (this.Du = !1, this.Uu()), this.bl && this.Wn.floatingMode === h.ProtoPlayerFloatingMode.AfterInView && t && (this.bl = !1), !t && !this.bl && this.vl && i && (this.Du = !0, super.Vu());
                        }, this.Fu = () => {
                            this.isInFloating && super.Fu();
                        };
                    }
                    Uu() {
                        const t = !this.ml;
                        super.Uu(t);
                    }
                    ll() {
                        this.mediator.publish(this, At.ExitStart);
                    }
                    rl() {
                        this.yl();
                    }
                    ul() {
                        this.mediator.publish(this, At.EnterStart);
                    }
                    yl() {
                        this.transitionState = It.FadeIn, this.Ju(d.m.FadeIn), this.Qu(d.m.FadeInBase), Object(T.i)(this.Lo), this.Qu(d.m.FadeIn);
                    }
                    Hu() {
                        this.mediator.publish(this, At.EnterStop);
                    }
                    zu() {
                        this.Ju(d.m.FadeInBase, d.m.FadeIn), this.mediator.publish(this, At.ExitStop), this.Iu && super.fl();
                    }
                    wl() {
                        this.pl.on(this.Lo.parentElement, this.gl, { threshold: Rt });
                    }
                    Ol() {
                        this.pl.off(this.Lo.parentElement, this.gl);
                    }
                    start() {
                        this.Xu() && (super.dl(), this.Wn.floatingMode === h.ProtoPlayerFloatingMode.OnPageLoad && (this.bl = !1), this.wl(), this.gl(this.pl.check({
                            element: this.Lo.parentElement,
                            threshold: Rt
                        })));
                    }
                    canFloat() {
                        return this.Xu() && this.Wn.floatingMode !== h.ProtoPlayerFloatingMode.Off;
                    }
                    destroy() {
                        this.isInFloating ? (this.qu(), this.Iu = !0) : super.fl(), this.Ol();
                    }
                    get enabled() {
                        return this.vl;
                    }
                    set enabled(t) {
                        this.vl = t;
                    }
                    fullscreenStateChange(t) {
                        this.ml = t, t ? this.Ol() : this.wl(), this.gl(t);
                    }
                }
                class Ft extends Bt {
                    constructor(t, i, e, s, n, r, h = (() => {
                        return 0;
                    })()) {
                        super(i, s, e, n, r, h), this.mediator = t, this.Du = !0;
                    }
                    ul() {
                    }
                    Hu() {
                        this.mediator.publish(this, At.EnterStop);
                    }
                    ll() {
                    }
                    rl() {
                    }
                    zu() {
                    }
                    start() {
                        this.Xu() && (super.dl(), super.Vu());
                    }
                }
                const Vt = {
                        DetachedFromDom: 'detachedFromDom',
                        AdSlotResized: 'adSlotResized'
                    }, Ut = {
                        DetachedFromDom: 'detachedFromDom',
                        AdsEnabled: 'adsEnabled'
                    }, $t = {
                        MidRollCapped: 'midRollCapped',
                        TotalAdBreakLengthExpired: 'totalAdBreakLengthExpired',
                        EnableAds: 'enableAds',
                        DisableAds: 'disableAds',
                        ForceStopAdSlot: 'ForceStopAdSlot',
                        ForceStopAdPod: 'ForceStopAdPod',
                        AdOpportunity: 'adOpportunity',
                        AdPodRemainingTime: 'AdPodRemainingTime'
                    };
                var Nt, Ht = e(26), qt = e(11);
                !function (t) {
                    t[t.FirstQuartile = 0] = 'FirstQuartile', t[t.SecondQuartile = 1] = 'SecondQuartile', t[t.ThirdQuartile = 2] = 'ThirdQuartile', t[t.FourthQuartile = 3] = 'FourthQuartile';
                }(Nt || (Nt = {}));
                var zt = function (t, i) {
                    return (zt = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (t, i) {
                        t.__proto__ = i;
                    } || function (t, i) {
                        for (var e in i)
                            i.hasOwnProperty(e) && (t[e] = i[e]);
                    })(t, i);
                };
                function Wt(t, i) {
                    function e() {
                        this.constructor = t;
                    }
                    zt(t, i), t.prototype = null === i ? Object.create(i) : (e.prototype = i.prototype, new e());
                }
                function Gt(t) {
                    return 'function' == typeof t;
                }
                var Jt = !1, Qt = {
                        Promise: void 0,
                        set useDeprecatedSynchronousErrorHandling(t) {
                            t && new Error().stack;
                            Jt = t;
                        },
                        get useDeprecatedSynchronousErrorHandling() {
                            return Jt;
                        }
                    };
                function Xt(t) {
                    setTimeout(function () {
                        throw t;
                    }, 0);
                }
                var Yt = {
                        closed: !0,
                        next: function (t) {
                        },
                        error: function (t) {
                            if (Qt.useDeprecatedSynchronousErrorHandling)
                                throw t;
                            Xt(t);
                        },
                        complete: function () {
                        }
                    }, Kt = function () {
                        return Array.isArray || function (t) {
                            return t && 'number' == typeof t.length;
                        };
                    }();
                function Zt(t) {
                    return null !== t && 'object' == typeof t;
                }
                var ti = function () {
                        function t(t) {
                            return Error.call(this), this.message = t ? t.length + ' errors occurred during unsubscription:\n' + t.map(function (t, i) {
                                return i + 1 + ') ' + t.toString();
                            }).join('\n  ') : '', this.name = 'UnsubscriptionError', this.errors = t, this;
                        }
                        return t.prototype = Object.create(Error.prototype), t;
                    }(), ii = function () {
                        function t(t) {
                            this.closed = !1, this.Sl = null, this.jl = null, t && (this.kl = !0, this.Or = t);
                        }
                        return t.prototype.unsubscribe = function () {
                            var i;
                            if (!this.closed) {
                                var e = this.Sl, s = this.kl, n = this.Or, r = this.jl;
                                if (this.closed = !0, this.Sl = null, this.jl = null, e instanceof t)
                                    e.remove(this);
                                else if (null !== e)
                                    for (var h = 0; h < e.length; ++h) {
                                        e[h].remove(this);
                                    }
                                if (Gt(n)) {
                                    s && (this.Or = void 0);
                                    try {
                                        n.call(this);
                                    } catch (t) {
                                        i = t instanceof ti ? ei(t.errors) : [t];
                                    }
                                }
                                if (Kt(r)) {
                                    h = -1;
                                    for (var a = r.length; ++h < a;) {
                                        var o = r[h];
                                        if (Zt(o))
                                            try {
                                                o.unsubscribe();
                                            } catch (t) {
                                                i = i || [], t instanceof ti ? i = i.concat(ei(t.errors)) : i.push(t);
                                            }
                                    }
                                }
                                if (i)
                                    throw new ti(i);
                            }
                        }, t.prototype.add = function (i) {
                            var e = i;
                            if (!i)
                                return t.EMPTY;
                            switch (typeof i) {
                            case 'function':
                                e = new t(i);
                            case 'object':
                                if (e === this || e.closed || 'function' != typeof e.unsubscribe)
                                    return e;
                                if (this.closed)
                                    return e.unsubscribe(), e;
                                if (!(e instanceof t)) {
                                    var s = e;
                                    (e = new t()).jl = [s];
                                }
                                break;
                            default:
                                throw new Error('unrecognized teardown ' + i + ' added to Subscription.');
                            }
                            var n = e.Sl;
                            if (null === n)
                                e.Sl = this;
                            else if (n instanceof t) {
                                if (n === this)
                                    return e;
                                e.Sl = [
                                    n,
                                    this
                                ];
                            } else {
                                if (-1 !== n.indexOf(this))
                                    return e;
                                n.push(this);
                            }
                            var r = this.jl;
                            return null === r ? this.jl = [e] : r.push(e), e;
                        }, t.prototype.remove = function (t) {
                            var i = this.jl;
                            if (i) {
                                var e = i.indexOf(t);
                                -1 !== e && i.splice(e, 1);
                            }
                        }, t.EMPTY = function (t) {
                            return t.closed = !0, t;
                        }(new t()), t;
                    }();
                function ei(t) {
                    return t.reduce(function (t, i) {
                        return t.concat(i instanceof ti ? i.errors : i);
                    }, []);
                }
                var si = function () {
                        return 'function' == typeof Symbol ? Symbol('rxSubscriber') : '@@rxSubscriber_' + Math.random();
                    }(), ni = function (t) {
                        function i(e, s, n) {
                            var r = t.call(this) || this;
                            switch (r.syncErrorValue = null, r.syncErrorThrown = !1, r.syncErrorThrowable = !1, r.isStopped = !1, arguments.length) {
                            case 0:
                                r.destination = Yt;
                                break;
                            case 1:
                                if (!e) {
                                    r.destination = Yt;
                                    break;
                                }
                                if ('object' == typeof e) {
                                    e instanceof i ? (r.syncErrorThrowable = e.syncErrorThrowable, r.destination = e, e.add(r)) : (r.syncErrorThrowable = !0, r.destination = new ri(r, e));
                                    break;
                                }
                            default:
                                r.syncErrorThrowable = !0, r.destination = new ri(r, e, s, n);
                            }
                            return r;
                        }
                        return Wt(i, t), i.prototype[si] = function () {
                            return this;
                        }, i.create = function (t, e, s) {
                            var n = new i(t, e, s);
                            return n.syncErrorThrowable = !1, n;
                        }, i.prototype.next = function (t) {
                            this.isStopped || this._l(t);
                        }, i.prototype.error = function (t) {
                            this.isStopped || (this.isStopped = !0, this.Al(t));
                        }, i.prototype.complete = function () {
                            this.isStopped || (this.isStopped = !0, this.Il());
                        }, i.prototype.unsubscribe = function () {
                            this.closed || (this.isStopped = !0, t.prototype.unsubscribe.call(this));
                        }, i.prototype._l = function (t) {
                            this.destination.next(t);
                        }, i.prototype.Al = function (t) {
                            this.destination.error(t), this.unsubscribe();
                        }, i.prototype.Il = function () {
                            this.destination.complete(), this.unsubscribe();
                        }, i.prototype.Cl = function () {
                            var t = this.Sl;
                            return this.Sl = null, this.unsubscribe(), this.closed = !1, this.isStopped = !1, this.Sl = t, this;
                        }, i;
                    }(ii), ri = function (t) {
                        function i(i, e, s, n) {
                            var r, h = t.call(this) || this;
                            h.Tl = i;
                            var a = h;
                            return Gt(e) ? r = e : e && (r = e.next, s = e.error, n = e.complete, e !== Yt && (Gt((a = Object.create(e)).unsubscribe) && h.add(a.unsubscribe.bind(a)), a.unsubscribe = h.unsubscribe.bind(h))), h.Pl = a, h._l = r, h.Al = s, h.Il = n, h;
                        }
                        return Wt(i, t), i.prototype.next = function (t) {
                            if (!this.isStopped && this._l) {
                                var i = this.Tl;
                                Qt.useDeprecatedSynchronousErrorHandling && i.syncErrorThrowable ? this.Ml(i, this._l, t) && this.unsubscribe() : this.El(this._l, t);
                            }
                        }, i.prototype.error = function (t) {
                            if (!this.isStopped) {
                                var i = this.Tl, e = Qt.useDeprecatedSynchronousErrorHandling;
                                if (this.Al)
                                    e && i.syncErrorThrowable ? (this.Ml(i, this.Al, t), this.unsubscribe()) : (this.El(this.Al, t), this.unsubscribe());
                                else if (i.syncErrorThrowable)
                                    e ? (i.syncErrorValue = t, i.syncErrorThrown = !0) : Xt(t), this.unsubscribe();
                                else {
                                    if (this.unsubscribe(), e)
                                        throw t;
                                    Xt(t);
                                }
                            }
                        }, i.prototype.complete = function () {
                            var t = this;
                            if (!this.isStopped) {
                                var i = this.Tl;
                                if (this.Il) {
                                    var e = function () {
                                        return t.Il.call(t.Pl);
                                    };
                                    Qt.useDeprecatedSynchronousErrorHandling && i.syncErrorThrowable ? (this.Ml(i, e), this.unsubscribe()) : (this.El(e), this.unsubscribe());
                                } else
                                    this.unsubscribe();
                            }
                        }, i.prototype.El = function (t, i) {
                            try {
                                t.call(this.Pl, i);
                            } catch (t) {
                                if (this.unsubscribe(), Qt.useDeprecatedSynchronousErrorHandling)
                                    throw t;
                                Xt(t);
                            }
                        }, i.prototype.Ml = function (t, i, e) {
                            if (!Qt.useDeprecatedSynchronousErrorHandling)
                                throw new Error('bad call');
                            try {
                                i.call(this.Pl, e);
                            } catch (i) {
                                return Qt.useDeprecatedSynchronousErrorHandling ? (t.syncErrorValue = i, t.syncErrorThrown = !0, !0) : (Xt(i), !0);
                            }
                            return !1;
                        }, i.prototype.Or = function () {
                            var t = this.Tl;
                            this.Pl = null, this.Tl = null, t.unsubscribe();
                        }, i;
                    }(ni);
                var hi = function () {
                    return 'function' == typeof Symbol && Symbol.observable || '@@observable';
                }();
                function ai(t) {
                    return t;
                }
                function oi(t) {
                    return 0 === t.length ? ai : 1 === t.length ? t[0] : function (i) {
                        return t.reduce(function (t, i) {
                            return i(t);
                        }, i);
                    };
                }
                var ci = function () {
                    function t(t) {
                        this.Ll = !1, t && (this.Rl = t);
                    }
                    return t.prototype.lift = function (i) {
                        var e = new t();
                        return e.source = this, e.operator = i, e;
                    }, t.prototype.subscribe = function (t, i, e) {
                        var s = this.operator, n = function (t, i, e) {
                                if (t) {
                                    if (t instanceof ni)
                                        return t;
                                    if (t[si])
                                        return t[si]();
                                }
                                return t || i || e ? new ni(t, i, e) : new ni(Yt);
                            }(t, i, e);
                        if (s ? n.add(s.call(n, this.source)) : n.add(this.source || Qt.useDeprecatedSynchronousErrorHandling && !n.syncErrorThrowable ? this.Rl(n) : this.Bl(n)), Qt.useDeprecatedSynchronousErrorHandling && n.syncErrorThrowable && (n.syncErrorThrowable = !1, n.syncErrorThrown))
                            throw n.syncErrorValue;
                        return n;
                    }, t.prototype.Bl = function (t) {
                        try {
                            return this.Rl(t);
                        } catch (i) {
                            Qt.useDeprecatedSynchronousErrorHandling && (t.syncErrorThrown = !0, t.syncErrorValue = i), !function (t) {
                                for (; t;) {
                                    var i = t, e = i.closed, s = i.destination, n = i.isStopped;
                                    if (e || n)
                                        return !1;
                                    t = s && s instanceof ni ? s : null;
                                }
                                return !0;
                            }(t) ? console.warn(i) : t.error(i);
                        }
                    }, t.prototype.forEach = function (t, i) {
                        var e = this;
                        return new (i = (ui(i)))(function (i, s) {
                            var n;
                            n = e.subscribe(function (i) {
                                try {
                                    t(i);
                                } catch (t) {
                                    s(t), n && n.unsubscribe();
                                }
                            }, s, i);
                        });
                    }, t.prototype.Rl = function (t) {
                        var i = this.source;
                        return i && i.subscribe(t);
                    }, t.prototype[hi] = function () {
                        return this;
                    }, t.prototype.pipe = function () {
                        for (var t = [], i = 0; i < arguments.length; i++)
                            t[i] = arguments[i];
                        return 0 === t.length ? this : oi(t)(this);
                    }, t.prototype.toPromise = function (t) {
                        var i = this;
                        return new (t = (ui(t)))(function (t, e) {
                            var s;
                            i.subscribe(function (t) {
                                return s = t;
                            }, function (t) {
                                return e(t);
                            }, function () {
                                return t(s);
                            });
                        });
                    }, t.create = function (i) {
                        return new t(i);
                    }, t;
                }();
                function ui(t) {
                    if (t || (t = Qt.Promise || Promise), !t)
                        throw new Error('no Promise impl found');
                    return t;
                }
                var li = function (t) {
                        function i(i, e) {
                            var s = t.call(this, i, e) || this;
                            return s.scheduler = i, s.work = e, s.pending = !1, s;
                        }
                        return Wt(i, t), i.prototype.schedule = function (t, i) {
                            if (void 0 === i && (i = 0), this.closed)
                                return this;
                            this.state = t;
                            var e = this.id, s = this.scheduler;
                            return null != e && (this.id = this.recycleAsyncId(s, e, i)), this.pending = !0, this.delay = i, this.id = this.id || this.requestAsyncId(s, this.id, i), this;
                        }, i.prototype.requestAsyncId = function (t, i, e) {
                            return void 0 === e && (e = 0), setInterval(t.flush.bind(t, this), e);
                        }, i.prototype.recycleAsyncId = function (t, i, e) {
                            if (void 0 === e && (e = 0), null !== e && this.delay === e && !1 === this.pending)
                                return i;
                            clearInterval(i);
                        }, i.prototype.execute = function (t, i) {
                            if (this.closed)
                                return new Error('executing a cancelled action');
                            this.pending = !1;
                            var e = this.Dl(t, i);
                            if (e)
                                return e;
                            !1 === this.pending && null != this.id && (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
                        }, i.prototype.Dl = function (t, i) {
                            var e = !1, s = void 0;
                            try {
                                this.work(t);
                            } catch (t) {
                                e = !0, s = !!t && t || new Error(t);
                            }
                            if (e)
                                return this.unsubscribe(), s;
                        }, i.prototype.Or = function () {
                            var t = this.id, i = this.scheduler, e = i.actions, s = e.indexOf(this);
                            this.work = null, this.state = null, this.pending = !1, this.scheduler = null, -1 !== s && e.splice(s, 1), null != t && (this.id = this.recycleAsyncId(i, t, null)), this.delay = null;
                        }, i;
                    }(function (t) {
                        function i(i, e) {
                            return t.call(this) || this;
                        }
                        return Wt(i, t), i.prototype.schedule = function (t, i) {
                            return void 0 === i && (i = 0), this;
                        }, i;
                    }(ii)), di = function () {
                        function t(i, e) {
                            void 0 === e && (e = t.now), this.SchedulerAction = i, this.now = e;
                        }
                        return t.prototype.schedule = function (t, i, e) {
                            return void 0 === i && (i = 0), new this.SchedulerAction(this, t).schedule(e, i);
                        }, t.now = function () {
                            return Date.now();
                        }, t;
                    }(), fi = new (function (t) {
                        function i(e, s) {
                            void 0 === s && (s = di.now);
                            var n = t.call(this, e, function () {
                                return i.delegate && i.delegate !== n ? i.delegate.now() : s();
                            }) || this;
                            return n.actions = [], n.active = !1, n.scheduled = void 0, n;
                        }
                        return Wt(i, t), i.prototype.schedule = function (e, s, n) {
                            return void 0 === s && (s = 0), i.delegate && i.delegate !== this ? i.delegate.schedule(e, s, n) : t.prototype.schedule.call(this, e, s, n);
                        }, i.prototype.flush = function (t) {
                            var i = this.actions;
                            if (this.active)
                                i.push(t);
                            else {
                                var e;
                                this.active = !0;
                                do {
                                    if (e = t.execute(t.state, t.delay))
                                        break;
                                } while (t = i.shift());
                                if (this.active = !1, e) {
                                    for (; t = i.shift();)
                                        t.unsubscribe();
                                    throw e;
                                }
                            }
                        }, i;
                    }(di))(li);
                function pi(t, i) {
                    var e;
                    return void 0 === t && (t = 0), void 0 === i && (i = fi), (Kt(e = t) || !(e - parseFloat(e) + 1 >= 0) || t < 0) && (t = 0), i && 'function' == typeof i.schedule || (i = fi), new ci(function (e) {
                        return e.add(i.schedule(bi, t, {
                            subscriber: e,
                            counter: 0,
                            period: t
                        })), e;
                    });
                }
                function bi(t) {
                    var i = t.subscriber, e = t.counter, s = t.period;
                    i.next(e), this.schedule({
                        subscriber: i,
                        counter: e + 1,
                        period: s
                    }, s);
                }
                const vi = 100;
                class mi {
                    static setTimeout(t, i = (() => {
                        return 0;
                    })()) {
                        return this.Fl || this.Vl(), this.Ul(t, i, !0);
                    }
                    static setInterval(t, i = (() => {
                        return 0;
                    })()) {
                        return this.Fl || this.Vl(), this.Ul(t, i, !1);
                    }
                    static clearTimeout(t) {
                        this.$l.delete(t);
                    }
                    static clearInterval(t) {
                        this.$l.delete(t);
                    }
                    static Vl() {
                        this.Fl = pi(vi), this.Fl.subscribe(() => {
                            return this.Nl();
                        });
                    }
                    static Hl(t) {
                        try {
                            t.callback();
                        } catch (t) {
                            Object(n.a)({
                                message: 'TimerService_error',
                                callStack: t.stack,
                                exception: t.message,
                                throttle: 1,
                                level: h.ProtoLoggingLevelEnum.INFO
                            });
                        }
                    }
                    static Nl() {
                        const t = new Date().getTime(), i = [];
                        for (const [e, s] of this.$l)
                            t - s.startTime < s.duration * (s.intervalTimesCalled + 1) || (this.Hl(s), s.isTimeout ? i.push(e) : s.intervalTimesCalled++);
                        for (const t of i)
                            this.$l.delete(t);
                    }
                    static Ul(t, i, e) {
                        const s = ++this.ql;
                        return this.$l.set(s, {
                            startTime: new Date().getTime(),
                            isTimeout: e,
                            callback: t,
                            duration: i,
                            intervalTimesCalled: 0
                        }), s;
                    }
                }
                mi.$l = new Map(), mi.ql = 0;
                var gi, yi, wi = e(15), Oi = function () {
                        function t() {
                            return Error.call(this), this.message = 'object unsubscribed', this.name = 'ObjectUnsubscribedError', this;
                        }
                        return t.prototype = Object.create(Error.prototype), t;
                    }(), xi = function (t) {
                        function i(i, e) {
                            var s = t.call(this) || this;
                            return s.subject = i, s.subscriber = e, s.closed = !1, s;
                        }
                        return Wt(i, t), i.prototype.unsubscribe = function () {
                            if (!this.closed) {
                                this.closed = !0;
                                var t = this.subject, i = t.observers;
                                if (this.subject = null, i && 0 !== i.length && !t.isStopped && !t.closed) {
                                    var e = i.indexOf(this.subscriber);
                                    -1 !== e && i.splice(e, 1);
                                }
                            }
                        }, i;
                    }(ii), Si = function (t) {
                        function i(i) {
                            var e = t.call(this, i) || this;
                            return e.destination = i, e;
                        }
                        return Wt(i, t), i;
                    }(ni), ji = function (t) {
                        function i() {
                            var i = t.call(this) || this;
                            return i.observers = [], i.closed = !1, i.isStopped = !1, i.hasError = !1, i.thrownError = null, i;
                        }
                        return Wt(i, t), i.prototype[si] = function () {
                            return new Si(this);
                        }, i.prototype.lift = function (t) {
                            var i = new ki(this, this);
                            return i.operator = t, i;
                        }, i.prototype.next = function (t) {
                            if (this.closed)
                                throw new Oi();
                            if (!this.isStopped)
                                for (var i = this.observers, e = i.length, s = i.slice(), n = 0; n < e; n++)
                                    s[n].next(t);
                        }, i.prototype.error = function (t) {
                            if (this.closed)
                                throw new Oi();
                            this.hasError = !0, this.thrownError = t, this.isStopped = !0;
                            for (var i = this.observers, e = i.length, s = i.slice(), n = 0; n < e; n++)
                                s[n].error(t);
                            this.observers.length = 0;
                        }, i.prototype.complete = function () {
                            if (this.closed)
                                throw new Oi();
                            this.isStopped = !0;
                            for (var t = this.observers, i = t.length, e = t.slice(), s = 0; s < i; s++)
                                e[s].complete();
                            this.observers.length = 0;
                        }, i.prototype.unsubscribe = function () {
                            this.isStopped = !0, this.closed = !0, this.observers = null;
                        }, i.prototype.Bl = function (i) {
                            if (this.closed)
                                throw new Oi();
                            return t.prototype.Bl.call(this, i);
                        }, i.prototype.Rl = function (t) {
                            if (this.closed)
                                throw new Oi();
                            return this.hasError ? (t.error(this.thrownError), ii.EMPTY) : this.isStopped ? (t.complete(), ii.EMPTY) : (this.observers.push(t), new xi(this, t));
                        }, i.prototype.asObservable = function () {
                            var t = new ci();
                            return t.source = this, t;
                        }, i.create = function (t, i) {
                            return new ki(t, i);
                        }, i;
                    }(ci), ki = function (t) {
                        function i(i, e) {
                            var s = t.call(this) || this;
                            return s.destination = i, s.source = e, s;
                        }
                        return Wt(i, t), i.prototype.next = function (t) {
                            var i = this.destination;
                            i && i.next && i.next(t);
                        }, i.prototype.error = function (t) {
                            var i = this.destination;
                            i && i.error && this.destination.error(t);
                        }, i.prototype.complete = function () {
                            var t = this.destination;
                            t && t.complete && this.destination.complete();
                        }, i.prototype.Rl = function (t) {
                            return this.source ? this.source.subscribe(t) : ii.EMPTY;
                        }, i;
                    }(ji);
                class _i {
                    constructor(t = (() => {
                        return 0;
                    })(), i = (() => {
                        return 1000;
                    })(), e = (() => {
                        return 1;
                    })()) {
                        this.timerDuration = t, this.zl = i, this.Wl = e, this.Gl = 0, this.Jl = null, this.Ql = !1, this.Yl = !1, this.Kl = new ji(), this.Zl = new ji(), this.td = new ji(), this.ed = [
                            {
                                event: Nt.FirstQuartile,
                                quartile: 1
                            },
                            {
                                event: Nt.SecondQuartile,
                                quartile: 2
                            },
                            {
                                event: Nt.ThirdQuartile,
                                quartile: 3
                            },
                            {
                                event: Nt.FourthQuartile,
                                quartile: 4
                            }
                        ], this.sd = null, this.nd = () => {
                            this.rd(), this.Kl.next(), this.hd(), this.od = new Date().getTime();
                        }, t || this.disable();
                    }
                    start() {
                        this.Yl = !0, null === this.Jl && this.ud();
                    }
                    stop() {
                        this.Yl = !1, null !== this.Jl && (this.rd(), this.ld());
                    }
                    reset(t) {
                        t && (this.timerDuration = t), this.Gl = 0, this.Ql = !1, this.sd = null, (null !== this.Jl || this.Yl) && (this.ld(), this.ud());
                    }
                    get timeElapsed() {
                        return this.Gl;
                    }
                    get timeRemaining() {
                        return this.timerDuration - this.Gl;
                    }
                    disable() {
                        this.Ql = !0, this.ld();
                    }
                    get onTimeUpdate() {
                        return this.Kl.asObservable();
                    }
                    get onTimeElapsed() {
                        return this.Zl.asObservable();
                    }
                    get onQuartile() {
                        return this.td.asObservable();
                    }
                    rd() {
                        this.Gl += new Date().getTime() - this.od;
                    }
                    ud() {
                        this.Ql || (this.hd(), this.od = new Date().getTime(), this.Jl = mi.setInterval(this.nd, this.zl));
                    }
                    ld() {
                        mi.clearInterval(this.Jl), this.Jl = null;
                    }
                    dd() {
                        this.disable(), this.Zl.next(), this.fd(this.Gl, this.timerDuration, this.Wl), this.Gl = 0;
                    }
                    hd() {
                        this.Gl / qt.f >= this.timerDuration / qt.f && this.dd();
                    }
                    fd(t, i, e) {
                        const s = Object(wi.f)(t / qt.f, e);
                        this.pd(s, i);
                    }
                    pd(t, i) {
                        const e = Math.floor(Object(wi.e)(0, i, 0, 4, t));
                        this.sd <= e && (this.ed.forEach(({
                            event: t,
                            quartile: i
                        }) => {
                            i === e && this.td.next(t);
                        }), this.sd++);
                    }
                }
                function Ai(t = (() => {
                    return [];
                })()) {
                    t.forEach(t => {
                        return t.unsubscribe();
                    });
                }
                !function (t) {
                    t[t.Unknown = 0] = 'Unknown', t[t.TimeoutBetweenAds = 1] = 'TimeoutBetweenAds';
                }(gi || (gi = {}));
                class Ii extends o.a {
                    constructor(t, i, e, s) {
                        super(), this.mediator = t, this.controlData = e, this.app = s, this.bd = 0, this.vd = 0, this.gd = null, this.yd = new Map(), this.currentPlayerAdSlot = M.ProtoAdSlotsEnum.PreRoll, this.wd = {
                            stopped: !1,
                            viewability: !1,
                            inImpression: !1,
                            forceDisable: !1,
                            zeroDimension: !1,
                            isAppBackgrounded: !1,
                            inAppRecyclerViewViewability: !1
                        }, this.firstAdBreakStarted = !1, this.Od = !1, this.viewabilityStateChanged(i), this.onResize(this.controlData.playerDimensions.width, this.controlData.playerDimensions.height), this.controlData.totalAdBreakLength && (this.xd = new _i(this.controlData.totalAdBreakLength), this.yd.set(this.xd, [this.xd.onTimeElapsed.subscribe(() => {
                                this.mediator.publish(this, $t.TotalAdBreakLengthExpired);
                            })]));
                    }
                    Sd() {
                        return this.vd >= this.controlData.numberOfMidRolls && -1 !== this.controlData.numberOfMidRolls;
                    }
                    jd(t) {
                        if (t)
                            return t.stop(), Ai(this.yd.get(t)), this.yd.delete(t), null;
                    }
                    kd() {
                        if (this.Od) {
                            this.Od = !1;
                            const t = {
                                [h.ProtoAdSlotsEnum.PreRoll]: h.ProtoAdBreakTypeEnum.PreRoll,
                                [h.ProtoAdSlotsEnum.MidRoll]: h.ProtoAdBreakTypeEnum.MidRoll,
                                [h.ProtoAdSlotsEnum.PostRoll]: h.ProtoAdBreakTypeEnum.PostRoll
                            };
                            this.mediator.publish(this, $t.AdOpportunity, { payload: { adBreakType: t[this.currentPlayerAdSlot] } });
                        }
                        this.mediator.publish(this, $t.EnableAds), this.xd && this.xd.start();
                    }
                    canEnableAds() {
                        return this.wd.stopped || this.wd.viewability || this.wd.inImpression || this.wd.forceDisable || this.wd.zeroDimension || this.wd.isAppBackgrounded || this.wd.inAppRecyclerViewViewability ? {
                            enableAds: !1,
                            disableReason: gi.Unknown
                        } : this.currentPlayerAdSlot === M.ProtoAdSlotsEnum.MidRoll && this.Sd() ? {
                            enableAds: !1,
                            disableReason: gi.Unknown
                        } : this.currentPlayerAdSlot !== M.ProtoAdSlotsEnum.MidRoll && this.bd > 0 ? {
                            enableAds: !1,
                            disableReason: gi.Unknown
                        } : {
                            enableAds: !0,
                            disableReason: gi.Unknown
                        };
                    }
                    toggleEnableAds() {
                        const t = this.canEnableAds();
                        t.enableAds ? this.kd() : (this.mediator.publish(this, $t.DisableAds, { payload: t.disableReason }), this.xd && !this.wd.inImpression && this.xd.stop());
                    }
                    startAds() {
                        this.wd.stopped = !1, this.toggleEnableAds();
                    }
                    forceRecheck() {
                        this.toggleEnableAds();
                    }
                    onAdImpression(t) {
                        this.currentPlayerAdSlot === M.ProtoAdSlotsEnum.MidRoll && (this.firstAdBreakStarted || (this.firstAdBreakStarted = !0)), this.wd.inImpression = !0, this.toggleEnableAds(), this._d(), this.Id();
                        const i = this.Cd(t.payload.adSkipMode, t.payload.adDuration);
                        i > 0 && (this.gd = setTimeout(() => {
                            this.mediator.publish(this, $t.ForceStopAdSlot);
                        }, i * qt.f));
                    }
                    Id() {
                        this.controlData.maxAdPodDuration && !this.Td && (this.Td = new _i(this.controlData.maxAdPodDuration), this.Td.start(), this.yd.set(this.Td, [
                            this.Td.onTimeElapsed.subscribe(() => {
                                this.mediator.publish(this, $t.ForceStopAdPod);
                            }),
                            this.Td.onTimeUpdate.subscribe(() => {
                                const t = this.Td.timeRemaining;
                                this.mediator.publish(this, $t.AdPodRemainingTime, { payload: { remainingTime: t } });
                            })
                        ]));
                    }
                    _d() {
                        this.controlData.maxAdSlotDuration && !this.Pd && (this.Pd = new _i(this.controlData.maxAdSlotDuration), this.Pd.start(), this.yd.set(this.Pd, [this.Pd.onTimeElapsed.subscribe(() => {
                                this.mediator.publish(this, $t.ForceStopAdSlot);
                            })]));
                    }
                    Cd(t, i) {
                        switch (this.controlData.playerAdsSkippability) {
                        case h.ProtoPlayerAdSkippability.IfLongerThan:
                            if ((t === h.ProtoAdSkipMode.Never || t === h.ProtoAdSkipMode.IfLongerThan31Sec) && !i)
                                return this.controlData.adsMustBeSkippableIfLongerThan;
                            if (t === h.ProtoAdSkipMode.Never && i > this.controlData.adsMustBeSkippableIfLongerThan)
                                return this.controlData.adsMustBeSkippableIfLongerThan;
                            break;
                        case h.ProtoPlayerAdSkippability.NoRestrictions:
                            if (t === h.ProtoAdSkipMode.IfLongerThan31Sec && !i)
                                return Ht.d;
                        }
                        return 0;
                    }
                    onAdFinished(t, i = (() => {
                        return !1;
                    })()) {
                        this.Pd = this.jd(this.Pd), i || (this.Td = this.jd(this.Td), this.currentPlayerAdSlot === M.ProtoAdSlotsEnum.MidRoll ? this.vd++ : this.bd++), this.Sd() && !i && this.mediator.publish(this, $t.MidRollCapped), t && (this.Od = !0), this.wd.inImpression = !1, i ? this.kd() : this.toggleEnableAds(), clearTimeout(this.gd);
                    }
                    onAdPause() {
                        this.Td && this.Td.stop(), this.Pd && this.Pd.stop(), this.xd && this.xd.stop();
                    }
                    onAdPlay() {
                        this.Td && this.Td.start(), this.Pd && this.Pd.start(), this.xd && this.xd.start();
                    }
                    onStop() {
                        this.currentPlayerAdSlot = null, this.wd.stopped = !0, this.toggleEnableAds();
                    }
                    onAdStateChange(t, i, e) {
                        this.controlData.maxAdSlotDuration = i.maxAdSlotDuration, this.controlData.maxAdPodDuration = i.maxAdPodDuration, t === this.currentPlayerAdSlot && t === M.ProtoAdSlotsEnum.MidRoll || (null === t && this.Ed === M.ProtoAdSlotsEnum.MidRoll || (this.Od = !0), t !== M.ProtoAdSlotsEnum.MidRoll && (this.bd = 0, this.firstAdBreakStarted = !1), this.currentPlayerAdSlot = t, this.Ed = t, this.startAds());
                    }
                    contentChanged() {
                        this.vd = 0, this.firstAdBreakStarted = !1, this.toggleEnableAds();
                    }
                    viewabilityStateChanged(t, i = (() => {
                        return !1;
                    })(), e = (() => {
                        return !1;
                    })()) {
                        this.Ld = t, this.controlData.viewabilityPolicy === M.ProtoAdViewabilityPolicy.Strict && (this.wd.viewability = !t), e || this.toggleEnableAds();
                    }
                    setToggleAdsReason(t) {
                        this.wd.isAppBackgrounded = t.isAppBackgrounded, this.wd.inAppRecyclerViewViewability = t.inAppRecyclerViewViewability, this.toggleEnableAds();
                    }
                    disableAdvertising() {
                        this.wd.forceDisable = !0, this.toggleEnableAds();
                    }
                    enableAdvertising() {
                        this.wd.forceDisable = !1, this.toggleEnableAds();
                    }
                    destroy() {
                        this.xd && this.xd.disable(), clearTimeout(this.gd), this.Pd = this.jd(this.Pd), this.Td = this.jd(this.Td);
                    }
                    get inView() {
                        return this.Ld;
                    }
                    onResize(t, i) {
                        this.wd.zeroDimension = 0 === t || 0 === i, this.toggleEnableAds();
                    }
                }
                !function (t) {
                    t[t.Portrait = 0] = 'Portrait', t[t.Landscape = 1] = 'Landscape';
                }(yi || (yi = {}));
                var Ci = yi;
                const Ti = 1.3;
                class Pi {
                    constructor(t) {
                        this.urlSuffixerService = t, this.Rd = {}, this.Bd = [];
                    }
                    getImage(t, i, e, s, n = (() => {
                        return '';
                    })(), r = (() => {
                        return !1;
                    })()) {
                        return this.Dd = t, this.Fd = Object(rt.h)(i) ? i : '', this.Vd = e, this.Ud = s, this.lr = n, this.$d = r, this.Nd();
                    }
                    Nd() {
                        const t = this.Hd();
                        if (t)
                            return t;
                        const i = this.Dd + this.lr, e = new Image();
                        return e.src = this.urlSuffixerService.appendParamsToUrl(i), e.alt = this.Fd, this.Rd[this.Dd] = this.Rd[this.Dd] || {}, this.Rd[this.Dd][this.Vd] = this.Rd[this.Dd][this.Vd] || {}, this.Rd[this.Dd][this.Vd][this.Ud] = this.Rd[this.Dd][this.Vd][this.Ud] || {}, this.Rd[this.Dd][this.Vd][this.Ud][this.lr] = e, e;
                    }
                    Hd() {
                        const t = this.qd();
                        if (t)
                            return t;
                        if (!this.$d)
                            return;
                        this.zd();
                        const i = this.Wd();
                        if (i)
                            return i;
                        const e = this.Gd();
                        return e || void 0;
                    }
                    zd() {
                        const t = [];
                        if (!this.Rd[this.Dd])
                            return void (this.Bd = []);
                        const i = this.Rd[this.Dd], e = this.Vd > this.Ud ? Ci.Landscape : Ci.Portrait;
                        Object.keys(i).forEach(s => {
                            const n = parseInt(s, 10);
                            Object.keys(i[s]).filter(t => {
                                return !!i[s][t];
                            }).forEach(i => {
                                const s = parseInt(i, 10);
                                if ((n > s ? Ci.Landscape : Ci.Portrait) !== e)
                                    return;
                                const r = {
                                    area: n * s,
                                    img: this.Jd(this.Dd, n, s)
                                };
                                t.push(r);
                            });
                        }), this.Bd = [...t];
                    }
                    Jd(t, i, e) {
                        if (this.Rd[t] && this.Rd[t][i] && this.Rd[t][i][e])
                            return this.Rd[t][i][e][Object.keys(this.Rd[t][i][e])[0]];
                    }
                    qd() {
                        return this.Rd[this.Dd] && this.Rd[this.Dd][this.Vd] && this.Rd[this.Dd][this.Vd][this.Ud] && this.Rd[this.Dd][this.Vd][this.Ud][this.lr];
                    }
                    Wd() {
                        if (0 === this.Bd.length)
                            return;
                        const t = this.Vd * this.Ud, i = this.Bd.filter(({area: i}) => {
                                return i > t;
                            }).sort((t, i) => {
                                return t.area - i.area;
                            });
                        return 0 !== i.length ? i[0].img : void 0;
                    }
                    Gd() {
                        if (0 === this.Bd.length)
                            return;
                        const t = this.Vd * this.Ud, i = this.Bd.filter(({area: i}) => {
                                return i < t && t / i <= Ti;
                            }).sort((t, i) => {
                                return i.area - t.area;
                            });
                        return 0 !== i.length ? i[0].img : void 0;
                    }
                }
                var Mi = e(43);
                class Ei {
                    constructor(t) {
                        this.Qd = t, this.Xd = {
                            breakType: h.ProtoAdBreakTypeEnum.None,
                            currentPodNumber: 0,
                            maxAdSlotDuration: 0,
                            maxAdPodDuration: 0,
                            totalNumberOfAdSlots: 0
                        }, this.Yd = null;
                    }
                    setNewBreak(t) {
                        this.Qd.forEach(i => {
                            i.types.forEach(e => {
                                (function (t, i) {
                                    let e = !1;
                                    switch (t) {
                                    case h.ProtoAdBreakTypeEnum.PreRoll:
                                        e = i === h.ProtoAdSlotsEnum.PreRoll;
                                        break;
                                    case h.ProtoAdBreakTypeEnum.MidRoll:
                                        e = i === h.ProtoAdSlotsEnum.MidRoll;
                                        break;
                                    case h.ProtoAdBreakTypeEnum.PostRoll:
                                        e = i === h.ProtoAdSlotsEnum.PostRoll;
                                    }
                                    return e;
                                }(e, t) && (this.Xd.currentPodNumber = i.numberOfAdSlots, this.Xd.maxAdSlotDuration = i.maxAdSlotDuration, this.Xd.maxAdPodDuration = i.maxAdPodDuration, this.Xd.totalNumberOfAdSlots = i.numberOfAdSlots));
                            });
                        });
                    }
                    adStarted() {
                        this.Kd(), 0 === this.Xd.currentPodNumber && (this.Xd.currentPodNumber = this.Xd.totalNumberOfAdSlots), this.Xd.currentPodNumber--;
                    }
                    endPod() {
                        this.Kd(), this.Xd.currentPodNumber = 0;
                    }
                    enterPodTimeout(t) {
                        this.Kd(), this.Yd = setTimeout(() => {
                            this.Kd(), t();
                        }, k);
                    }
                    isInAdPod() {
                        return this.Xd.currentPodNumber > 0;
                    }
                    isCurrentBreakInPod() {
                        return this.Xd.totalNumberOfAdSlots > 1;
                    }
                    getMaxAdSlotDuration() {
                        return this.Xd.maxAdSlotDuration;
                    }
                    getMaxAdPodDuration() {
                        return this.Xd.maxAdPodDuration;
                    }
                    getMaxAdSlotPossibleDuration() {
                        let t = 0;
                        for (let i = 0; i < this.Qd.length; i++) {
                            if (0 === this.Qd[i].maxAdSlotDuration)
                                return 0;
                            t = Math.max(t, this.Qd[i].maxAdSlotDuration);
                        }
                        return t;
                    }
                    getCurrentSlotIndex() {
                        return this.Xd.totalNumberOfAdSlots - this.Xd.currentPodNumber;
                    }
                    getNextSlotIndex() {
                        const t = this.getCurrentSlotIndex();
                        return this.Xd.totalNumberOfAdSlots > t ? t + 1 : 1;
                    }
                    getTotalNumberOfSlots() {
                        return this.Xd.totalNumberOfAdSlots;
                    }
                    isInPodTimeout() {
                        return !!this.Yd;
                    }
                    Kd() {
                        clearTimeout(this.Yd), this.Yd = null;
                    }
                }
                var Li = e(8), Ri = e(47);
                const Bi = ['com.accuweather.android'], Di = 0.05 * qt.f;
                class Fi extends o.a {
                    constructor(t, i, e, s) {
                        super(), this.mediator = t, this.Hs = i, this._appSettings = e, this.Zd = s, this.tf = 0.01, this.if = 0.5, this.ef = 2000, this.sf = 0, this.nf = !1, this.rf = !1, this.hf = !1, this.af = !1, this.cf = !1, this.uf = !1, this.Ld = !1, this.Oh = h.ProtoAdSlotsEnum.PreRoll, this.uu = !1, this.lf = !1, this.df = !1, this.ff = !1, this.pf = !1, this.bf = !1, this.vf = !1, this.mf = {
                            [Pt.b.AdRemainingTimeChange]: t => {
                                var i;
                                this.pf && this.app.config.isInAppAndroid && (null === (i = this.adHandler) || void 0 === i || i.pause());
                            },
                            [Pt.b.AdImpression]: t => {
                                this.gf.onAdImpression(t), this.yf(), this.mediator.publish(this, Tt.b.AdImpression, t);
                                const {
                                    adSourceData: i,
                                    customAdData: e
                                } = t.payload;
                                this.wf(i, e);
                            },
                            [Pt.b.AdStopped]: t => {
                                this.mediator.publish(this, Tt.b.AdStopped, t), this.Of(), this.xf(), this.app.services.EventsStorageService.emitAdStopped(), this.Ld && this.Sf();
                            },
                            [Pt.b.AdError]: t => {
                                this.adHandler.inImpression && this.Of(), this.mediator.publish(this, Tt.b.AdError, t), this.app.services.EventsStorageService.emitAdError();
                            },
                            [Pt.b.AdSkipped]: t => {
                                this.mediator.publish(this, Tt.b.AdSkipped, t), this.app.services.EventsStorageService.emitAdSkipped();
                                this.floatingModule && (this.floatingModule.enabled = !0), this.Of(!0), this.xf(), this.Ld && this.Sf();
                            },
                            [Pt.b.AdPaused]: t => {
                                this.gf.onAdPause(), this.app.services.TrackingService.setSessionPlayback(!1), this.app.services.EventsStorageService.emitAdPaused(), this.mediator.publish(this, Tt.b.AdPause, t);
                            },
                            [Pt.b.AdPlaying]: t => {
                                this.gf.onAdPlay(), this.app.services.TrackingService.setSessionPlayback(!0), this.app.services.EventsStorageService.emitAdPlaying(), this.mediator.publish(this, Tt.b.AdPlay, t);
                            },
                            [Pt.b.AdVideoFirstQuartile]: t => {
                                this.mediator.publish(this, Tt.b.AdCompleted25, t), this.app.services.EventsStorageService.emitAdVideoFirstQuartile();
                            },
                            [Pt.b.AdVideoMidpoint]: t => {
                                this.mediator.publish(this, Tt.b.AdCompleted50, t), this.app.services.EventsStorageService.emitAdVideoMidpoint();
                            },
                            [Pt.b.AdVideoThirdQuartile]: t => {
                                this.mediator.publish(this, Tt.b.AdCompleted75, t), this.app.services.EventsStorageService.emitAdVideoThirdQuartile();
                            },
                            [Pt.b.AdVideoComplete]: t => {
                                this.mediator.publish(this, Tt.b.AdCompleted100, t), this.app.services.EventsStorageService.emitAdVideoComplete();
                            },
                            [Pt.b.AdClickThru]: t => {
                                this.mediator.publish(this, Tt.b.AdClick, t), this.app.services.EventsStorageService.emitAdClickThru();
                            },
                            [Pt.b.AdInteraction]: () => {
                                this.app.services.EventsStorageService.emitAdInteraction();
                            },
                            [Pt.b.AdUserAcceptInvitation]: () => {
                                this.app.services.EventsStorageService.emitAdInteraction();
                            },
                            [Pt.b.AdUserClose]: () => {
                                this.app.services.EventsStorageService.emitAdInteraction();
                            },
                            [Pt.b.AdUserMinimize]: () => {
                                this.app.services.EventsStorageService.emitAdInteraction();
                            },
                            [Pt.b.AdVideoStart]: t => {
                                const {adSourceData: i} = t.payload, e = {
                                        duration: i && i.length,
                                        mediaPlayerVolume: this.getVolume()
                                    };
                                this.app.services.EventsStorageService.emitAdVideoStart(e);
                            },
                            [Pt.b.AdLoaded]: t => {
                                var i;
                                const {adLoadedData: e} = t.payload;
                                (null === (i = e) || void 0 === i ? void 0 : i.skipOffset) < 0 && (e.skipOffset = void 0);
                                const s = this.jf(e);
                                this.app.services.EventsStorageService.emitAdLoaded(s);
                            },
                            [Pt.b.AdVolumeChange]: () => {
                                this.app.services.EventsStorageService.emitAdVolumeChange();
                            }
                        }, this.kf = t => {
                            return i => {
                                const e = this.mf[t];
                                e && e(i);
                            };
                        }, this._f = t => {
                            this.lf = t, t && (this.app.services.ViewabilityService.off(this.$playerContainer, this._f), this.Af());
                        }, this.If = t => {
                            t && this.adHandler && !this.ff && setTimeout(() => {
                                this.adHandler.resumeWithoutUserInteraction();
                            }, Di);
                        }, this.Cf = () => {
                            !this.rf && this.Tf() && (this.mediator.publish(this, c.b.CanStart), this.app.services.ResizeObserver.off(this.$experienceContainer, this.Cf));
                        }, this.Pf = ({
                            payload: {
                                playback: t,
                                isFullscreenClose: i
                            }
                        }) => {
                            this.floatingModule && Object(rt.a)(t) && !i && (this.floatingModule.enabled = t);
                        }, this.Mf = () => {
                            this.Ef(1);
                        }, this.Lf = () => {
                            this.Ef(0);
                        }, this.Rf = t => {
                            this.Pf(t);
                            const {playback: i} = t.payload;
                            Object(rt.a)(i) && (i ? (this.app.services.EventsStorageService.emitAdPlay(), this.ff = !1) : (this.app.services.EventsStorageService.emitAdPause(), this.ff = !0));
                        }, this.Bf = new Pi(s);
                    }
                    Df() {
                    }
                    wf(t, i) {
                        this.app.services.EventsStorageService.emitAdImpression(t, i);
                    }
                    xf() {
                        this.app.services.EventsStorageService.emitAdComplete();
                    }
                    Ff() {
                    }
                    Sf() {
                    }
                    Vf() {
                    }
                    Uf() {
                    }
                    $f() {
                    }
                    Nf() {
                    }
                    Hf() {
                    }
                    qf(t) {
                        const i = { state: t };
                        this.app.services.EventsStorageService.emitAdStateChange(i);
                    }
                    zf() {
                        const {
                                clientWidth: t,
                                clientHeight: i
                            } = this.$playerContainer, e = {
                                width: t,
                                height: i
                            };
                        this.app.services.EventsStorageService.emitPlayerResized(e);
                    }
                    Wf() {
                        this.app.services.EventsStorageService.emitOnEnterFullscreen();
                    }
                    Gf() {
                        this.app.services.EventsStorageService.emitOnExitFullscreen();
                    }
                    Jf() {
                        this.app.services.EventsStorageService.emitOnPlayerCollapsed();
                    }
                    Qf() {
                        this.app.services.EventsStorageService.emitOnPlayerExpanded();
                    }
                    Xf(t) {
                        this.Yf(t), this.Kf(t), this.Zf(t), this.Oh = t, this.tp(t);
                    }
                    Kf(t) {
                        this.adHandler && this.adHandler.adStateChange(t, this.ep.getMaxAdSlotDuration());
                    }
                    Zf(t) {
                        this.gf.onAdStateChange(t, {
                            maxAdPodDuration: this.ep.getMaxAdPodDuration(),
                            maxAdSlotDuration: this.ep.getMaxAdSlotDuration()
                        });
                    }
                    Yf(t) {
                        this.ep.setNewBreak(t);
                    }
                    tp(t) {
                        this.qf(Mi.b[t]);
                    }
                    sp() {
                        this.adHandler && this.adHandler.contentChanged(), this.gf.contentChanged();
                    }
                    np() {
                        this.adHandler = this.rp(), this.ap(), this.relay(Tt.b.ImpressionPrice, this.adHandler, this, this.mediator), this.relay(Tt.b.ImpressionRevenue, this.adHandler, this, this.mediator), this.subscribe(c.b.UserInteraction, this.adHandler, this.Rf), this.subscribe(Vt.DetachedFromDom, this.adHandler, () => {
                            this.app.services.GlobalDomUtilsService.isDetachedFromDOM(this.$experienceContainer) ? this.triggerDestroy() : (this.unsubscribeAll(this.adHandler), this.adHandler.destroy(), this.adHandler = null, Object(n.a)({
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                message: 'only_adHandler_destroyed',
                                sendMaxLog: !1,
                                throttle: 1
                            }));
                        });
                        const t = () => {
                            this.app.services.TrackingService.setAdStart(), this.df = !0, this.ff = !1, this.Af(), this.unsubscribe(Ut.AdsEnabled, this.adHandler, t);
                        };
                        this.subscribe(Ut.AdsEnabled, this.adHandler, t), this.subscribe(Vt.AdSlotResized, this.adHandler, ({
                            payload: {
                                width: t,
                                height: i
                            }
                        }) => {
                            this.gf.onResize(t, i);
                        });
                    }
                    ap() {
                        Object.keys(Pt.b).forEach(t => {
                            this.subscribe(Pt.b[t], this.adHandler, i => {
                                const e = Pt.b[t];
                                this.kf(e)(i), this.mediator.publish(this, e, i);
                            });
                        });
                    }
                    Of(t = (() => {
                        return !1;
                    })()) {
                        let i = this.ep.isInAdPod();
                        t && (i = !1, this.ep.endPod()), this.gf.onAdFinished(this.adHandler.inImpression, i), this.op(), this.cp.isCloseButton && this.adHandler && this.adHandler.firstAdShown && (this.cp.closeButtonMode !== h.ProtoPlayerCloseButtonMode.OnHoverAfterFirstAd || Object(T.t)(this.$playerContainer, d.g.CloseHover) || Object(T.a)(this.$playerContainer, d.g.CloseHover), this.cp.floatingSettings.floatingCloseButtonMode !== h.ProtoPlayerCloseButtonMode.OnHoverAfterFirstAd || Object(T.t)(this.$playerContainer, d.g.CloseFloatHover) || Object(T.a)(this.$playerContainer, d.g.CloseFloatHover));
                    }
                    yf() {
                        this.ep.adStarted(), this.adHandler.show();
                    }
                    op() {
                        this.adHandler.hide();
                    }
                    up(t) {
                        this.adHandler.enterAdPodLoadingState(), this.ep.enterPodTimeout(() => {
                            this.ep.endPod(), t();
                        });
                    }
                    lp() {
                        Object(T.i)(this.$playerContainer), this.gf = this.dp(), this.subscribe($t.EnableAds, this.gf, () => {
                            this.adHandler && this.adHandler.enableAds();
                        }), this.subscribe($t.DisableAds, this.gf, t => {
                            this.adHandler && this.adHandler.disableAds(t.payload);
                        }), this.subscribe($t.ForceStopAdSlot, this.gf, () => {
                            this.adHandler && this.adHandler.stopAd('forceStopAdSlot');
                        }), this.subscribe($t.ForceStopAdPod, this.gf, () => {
                            if (this.adHandler)
                                if (this.adHandler.inImpression)
                                    this.ep.endPod(), this.adHandler.stopAd('forceStopAdPod');
                                else {
                                    const t = !0;
                                    this.Of(t);
                                }
                        }), this.subscribe($t.AdPodRemainingTime, this.gf, t => {
                            this.adHandler && this.adHandler.updatePodRemainingTime(t.payload.remainingTime);
                        }), this.subscribe($t.AdOpportunity, this.gf, t => {
                            var i;
                            const e = t.payload.adBreakType, s = null === (i = this.adHandler) || void 0 === i ? void 0 : i.getAdContainerWidth(), n = {
                                    adBreak: e,
                                    playerWidth: Object(rt.a)(s) ? s : this.$playerContainer.clientWidth
                                };
                            this.app.services.TrackingService.trackAdOpportunity(n), this.adHandler && this.adHandler.newAdOpportunity();
                        });
                    }
                    fp() {
                        this.app.services.ViewabilityService.on(this.$playerContainer, this._f, {
                            threshold: this.if,
                            callbackDelay: this.ef
                        }), this.app.services.ViewabilityService.on(this.$playerContainer, (t, i) => {
                            return this.gl(t, i);
                        }, { threshold: this.tf }), this.app.services.ViewabilityService.subscribe(Tt.e.OmidViewabilityThreshold, t => {
                            this.mediator.publish(this, Tt.e.OmidViewabilityThreshold, { payload: { threshold: t } });
                        }), this.app.config.os.os === St.b.Ios && this.app.services.PageFocusService.on(this.If);
                    }
                    Af() {
                        this.lf && this.df && this.mediator.publish(this, c.c.SessionView);
                    }
                    gl(t, i = (() => {
                        return !1;
                    })()) {
                        var e;
                        const {isRecyclerViewIntegration: s} = this.app.config;
                        this.gf.setToggleAdsReason({
                            isAppBackgrounded: i,
                            inAppRecyclerViewViewability: s && !t
                        }), this.app.config.isInApp && (i ? (this.pf = !0, this.vf ? this.bf = !0 : this.bf = !1, this.pp = this.getVolume(), this.setVolume(0), null === (e = this.adHandler) || void 0 === e || e.disableAds(gi.Unknown), this.pause()) : (this.pp && (this.setVolume(this.pp), this.pp = null), this.pf && (this.pf = !1, this.bf || this.play()))), this.Ld = t, this.mediator.publish(this, Tt.b.IsViewable, { payload: t }), this.gf.viewabilityStateChanged(this.checkFloatingViewability(t), this.ep.isInAdPod(), this.ep.isInPodTimeout()), this.app.services.TrackingService.setSessionViewability(t);
                    }
                    checkFloatingViewability(t) {
                        const i = this.app.services.ViewabilityService.getIsTabInFocus();
                        return !(t || !this.floatingModule || !this.floatingModule.isInFloating || !i) || t;
                    }
                    uh() {
                        const t = this.$playerContainer.clientWidth, i = this.$playerContainer.clientHeight;
                        if (this.adHandler) {
                            const e = this.uu ? Pt.a.Fullscreen : Pt.a.Normal;
                            this.adHandler.resizeAd(t, i, e);
                        } else
                            this.gf.onResize(t, i);
                        this.breakPointsHandler.updateWidth(t), setTimeout(() => {
                            this.mediator.publish(this, Tt.b.SizeChanged, {
                                payload: {
                                    width: t,
                                    height: i
                                }
                            }), this.bp();
                        });
                    }
                    bp() {
                        this.uu || this.zf();
                    }
                    vp() {
                        this.app.services.ResizeObserver.on(this.$playerContainer, () => {
                            this.uh();
                        });
                    }
                    mp() {
                        this.uu = !0, this.app.services.InteractionService.disableScrollEvent(), this.Wf(), this.adHandler && this.adHandler.setVastViewMode(Pt.a.Fullscreen);
                    }
                    gp() {
                        this.uu = !1, this.app.services.InteractionService.enableScrollEvent(), this.Gf(), this.adHandler && this.adHandler.setVastViewMode(Pt.a.Normal);
                    }
                    yp() {
                        const t = `<cnx class='${ d.c }'></cnx>`, i = this.app.services.GlobalDomUtilsService.createElementByString(t);
                        return this.wp(i), i;
                    }
                    wp(t) {
                        Object(T.N)(t, { 'padding-bottom': `${ this.Op() }%` });
                    }
                    Op() {
                        return this.cp.playerSize.ratioHeight / this.cp.playerSize.ratioWidth * 100;
                    }
                    xp() {
                        this.subscribe(At.EnterStart, this.floatingModule, () => {
                            this.mediator.publish(this, Tt.c.PlayerFloatChanged, { payload: Ct.Float });
                        }), this.subscribe(At.ExitStop, this.floatingModule, () => {
                            this.mediator.publish(this, Tt.c.PlayerFloatChanged, { payload: Ct.Embed });
                        }), this.subscribe(At.EnterStop, this.floatingModule, () => {
                            this.gl(!0);
                        });
                    }
                    Sp() {
                        this.floatingModule = new Dt(this, this.app.services.ViewabilityService, this.app.services.ResizeObserver, this.$playerContainer, this.cp.floatingSettings, this.app.config.device, this.app.services.GlobalDomUtilsService, this.jp), this.xp(), this.floatingModule.start();
                    }
                    kp() {
                        const t = new Ft(this, this.app.services.ResizeObserver, this.$experienceContainer, this.cp.floatingSettings, this.app.config.device, this.app.services.GlobalDomUtilsService);
                        this.subscribe(At.EnterStop, t, () => {
                            this.app.services.ViewabilityService.triggerRecheck(this.$playerContainer);
                        }), t.start();
                    }
                    setNewVolume(t) {
                        this.adHandler && this.adHandler.setVolume(t);
                    }
                    _p() {
                        this.Ap(), this.adHandler && this.Cp(this.adHandler);
                    }
                    Cp(t) {
                        this.subscribe(c.b.UserInteraction, t, ({
                            payload: {volume: t}
                        }) => {
                            t && this.Tp();
                        });
                    }
                    ih(t) {
                        this.mediator.publish(this, Tt.b.VolumeChanged, { payload: t }), this.app.services.EventsStorageService.emitVolumeChange(t);
                    }
                    Ef(t) {
                        this.getVolume() !== t && this.setNewVolume(t);
                    }
                    Ap() {
                        this.nf = !0, this.$playerContainer.addEventListener('mouseover', this.Mf), this.$playerContainer.addEventListener('mouseout', this.Lf);
                    }
                    Tp() {
                        this.nf && (this.nf = !1, this.$playerContainer.removeEventListener('mouseover', this.Mf), this.$playerContainer.removeEventListener('mouseout', this.Lf));
                    }
                    Pp() {
                        this.breakPointsHandler = new P(this.$playerContainer, this.app.config.device, this.Mp, this.Ep), this.breakPointsHandler.updateWidth(this.$playerContainer.clientWidth);
                    }
                    Lp() {
                        if (this.cp.isCloseButton) {
                            switch (this.subscribe(xt[xt.Close], this.adHandler, () => {
                                    this.handleClose();
                                }), this.cp.closeButtonMode) {
                            case h.ProtoPlayerCloseButtonMode.AlwaysOn:
                                Object(T.a)(this.$playerContainer, d.g.CloseOn);
                                break;
                            case h.ProtoPlayerCloseButtonMode.Off:
                                Object(T.a)(this.$playerContainer, d.g.CloseOff);
                                break;
                            case h.ProtoPlayerCloseButtonMode.OnHover:
                                Object(T.a)(this.$playerContainer, d.g.CloseHover);
                            }
                            switch (this.cp.floatingSettings.floatingCloseButtonMode) {
                            case h.ProtoPlayerCloseButtonMode.AlwaysOn:
                                Object(T.a)(this.$playerContainer, d.g.CloseFloatOn);
                                break;
                            case h.ProtoPlayerCloseButtonMode.Off:
                                Object(T.a)(this.$playerContainer, d.g.CloseFloatOff);
                                break;
                            case h.ProtoPlayerCloseButtonMode.OnHover:
                                Object(T.a)(this.$playerContainer, d.g.CloseFloatHover);
                            }
                        }
                    }
                    jf(t) {
                        const {skipOffset: i} = t;
                        return {
                            isAutoPlay: this.cp.playbackMode === h.ProtoPlayerPlaybackModeEnum.Autoplay,
                            skipOffset: i,
                            isSkippable: Object(rt.d)(i)
                        };
                    }
                    Rp() {
                        this.df = !0, this.app.services.TrackingService.setContentStart(), this.Af();
                    }
                    Tf() {
                        const {
                            clientWidth: t,
                            clientHeight: i
                        } = this.$experienceContainer;
                        return !Object(wi.d)({
                            width: t,
                            height: i
                        }) || this.Bp();
                    }
                    Bp() {
                        return Bi.includes(this.app.config.bundleID);
                    }
                    Dp(t) {
                        try {
                            const {
                                    display: i,
                                    width: e,
                                    height: s,
                                    flex: n,
                                    maxWidth: r,
                                    minWidth: h
                                } = this.app.services.GlobalDomUtilsService.getComputedStyle(t), {
                                    width: a,
                                    height: o
                                } = t.getBoundingClientRect(), c = {
                                    display: i,
                                    compWidth: e,
                                    boundWidth: a,
                                    compHeight: s,
                                    boundHeight: o,
                                    flex: n,
                                    maxWidth: r,
                                    minWidth: h
                                };
                            return {
                                type: t.nodeName,
                                styles: JSON.stringify(c)
                            };
                        } catch (t) {
                            return { err: 'BaseExperience_getElementInfo_error' };
                        }
                    }
                    Fp() {
                        if (!Object(Li.k)([
                                95,
                                5
                            ]))
                            return;
                        const t = {
                            parent: this.Dp(this.$experienceContainer.parentElement),
                            main: this.Dp(this.$experienceContainer)
                        };
                        Object(n.a)({
                            message: 'BaseExperience_invalid_dimensions',
                            level: h.ProtoLoggingLevelEnum.INFO,
                            exception: JSON.stringify(t)
                        });
                    }
                    Vp() {
                        this.ep = new Ei(this.cp.adBreaks);
                    }
                    Eo(t, i, e, s) {
                        this.cp = t, this.app = i, this.$experienceContainer = e, s && s(), this.Df(), this.app.services.ViewabilityService.setViewableThreshold(this.sf), this.generateHTML(), this.Vp(), this.app.services.ResizeObserver.on(this.$experienceContainer, this.Cf), this.Tf() ? this.mediator.publish(this, c.b.CanStart) : this.Fp();
                    }
                    start() {
                        this.rf = !0, Object(T.a)(this.$experienceContainer, d.b.MainContainerFlex), this.mediator.publish(this, c.c.SessionRendered), this.Pp(), this.vp(), this.cp.floatingSettings.floatingMode === h.ProtoPlayerFloatingMode.Always ? this.kp() : (this.zf(), this.Sp()), this.fp(), this.cp.lineItemSettings.lineItems.length > 0 && !this.cp.disableAdvertising && !this.Hs && this.np(), this.app.config.isMobile || this.cp.soundMode !== h.ProtoPlayerSoundMode.Hover || this._p(), this.cp.isCloseButton && this.Lp(), this.lp(), this.Hs || Ri.a.detectUsingScript().then(t => {
                            t && (this.app.services.TrackingService.trackSessionAdBlocker(h.ProtoAdBlockDetectionTypeEnum.Network), this.gf.disableAdvertising());
                        });
                    }
                    play() {
                        this.adHandler && this.adHandler.inImpression && this.adHandler.play();
                    }
                    pause() {
                        this.adHandler && this.adHandler.inImpression && this.adHandler.pause();
                    }
                    setVolume(t) {
                        this.setNewVolume(t), this.Tp();
                    }
                    getSize() {
                        return {
                            width: this.$experienceContainer.clientWidth,
                            height: this.$experienceContainer.clientHeight
                        };
                    }
                    setSize(t, i) {
                        Object(wi.d)({
                            width: t,
                            height: i
                        }) || Object(T.N)(this.$experienceContainer, {
                            width: `${ t }px`,
                            height: `${ i }px`
                        });
                    }
                    setCustomMacros(t) {
                        this.app.services.MacrosService.addExtraMacros(t);
                    }
                    isViewable() {
                        return this.app.services.ViewabilityService.check({
                            element: this.$playerContainer,
                            threshold: this.tf
                        });
                    }
                    setViewableThreshold(t) {
                        this.app ? this.app.services.ViewabilityService.setViewableThreshold(t) : this.sf = t;
                    }
                    setAmpUserConsent(t) {
                        this.app.services.UserManagerService.setAmpUserConsent(t);
                    }
                    triggerDestroy() {
                        this.app.services.EventsStorageService.destroy(), this.mediator.publish(this, c.b.Destroy);
                    }
                    disableAdvertising() {
                        this.gf.disableAdvertising();
                    }
                    enableAdvertising() {
                        this.gf.enableAdvertising();
                    }
                    destroy() {
                        this.adHandler && this.adHandler.destroy(), this.gf && this.gf.destroy(), this.floatingModule && (this.floatingModule.destroy(), this.floatingModule = null);
                    }
                }
                var Vi = e(14);
                const Ui = 140, $i = 80;
                class Ni {
                    static getScaledImageUrl(t, i, e, s, n) {
                        if (t && !Object(wi.d)({
                                width: i,
                                height: e
                            }))
                            return Object(rt.e)(n) && (i = Object(wi.c)(i, n), e = Object(wi.c)(e, n)), s.appendParamsToUrl(`${ t }${ Ni.getScaledImageQueryParams(i, e) }`.trim());
                    }
                    static getScaledImageQueryParams(t, i) {
                        return Object(wi.d)({
                            width: t,
                            height: i
                        }) ? '' : `?width=${ t }&height=${ i }&fit=bounds`;
                    }
                    static getSmartCroppedImageUrl(t, i, e, s) {
                        return Object(rt.h)(t) || (t = Vi.a.endPoints.base.image), Object(wi.d)({
                            width: i,
                            height: e
                        }) && (i = Ui, e = $i), s.appendParamsToUrl(`${ t }${ Ni.getSmartCroppedImageQueryParams(i, e) }`);
                    }
                    static getSmartCroppedImageQueryParams(t, i) {
                        return Object(wi.d)({
                            width: t,
                            height: i
                        }) ? '' : `?crop=${ t }:${ i },smart&width=${ t }&height=${ i }&format=jpeg&quality=60&fit=crop`;
                    }
                }
                class Hi {
                    constructor(t) {
                        this.context = t;
                    }
                    onClick() {
                    }
                    canTransitionToState(t) {
                        return !0;
                    }
                    enterState() {
                        this.initState(), this.context.currentState = this;
                    }
                }
                var qi, zi, Wi;
                function Gi(t, i, e, s) {
                    t.style.top = `${ function (t, i, e, s, n) {
                        let r = i - s.clientY;
                        const h = s.clientY + s.height - i;
                        n.alignTop && r > t.offsetHeight ? r -= t.offsetHeight : !n.alignTop && h < t.offsetHeight ? r -= t.offsetHeight - h : (r += e) + t.offsetHeight > s.height && (r = s.height - t.offsetHeight);
                        return r;
                    }(t, i.clientY, i.height, e, s) }px`, t.style.left = `${ function (t, i, e, s) {
                        const n = s.distanceFromMargin ? s.distanceFromMargin : 0;
                        let r = Math.ceil(i) - Math.ceil(e.clientX), h = i, a = h + t.offsetWidth;
                        const o = e.clientX + e.width;
                        if (s.alignMiddle) {
                            const i = t.offsetWidth / 2;
                            r -= Math.ceil(i), h -= i, a -= i;
                        }
                        if (s.alignMiddle || s.forceRight)
                            return e.clientX > h ? r = 0 + n : o < a && (r -= Math.ceil(a) - Math.ceil(o) + n), r;
                        a > o && (r -= t.offsetWidth);
                        return r;
                    }(t, i.clientX, e, s) }px`;
                }
                !function (t) {
                    t[t.PlayButton = 0] = 'PlayButton', t[t.BigPlayButton = 1] = 'BigPlayButton', t[t.VolumeButton = 2] = 'VolumeButton', t[t.VolumeProgress = 3] = 'VolumeProgress', t[t.VolumeControls = 4] = 'VolumeControls', t[t.ExpandButton = 5] = 'ExpandButton', t[t.SettingsButton = 6] = 'SettingsButton', t[t.CaptionButton = 7] = 'CaptionButton', t[t.CaptionComponent = 8] = 'CaptionComponent', t[t.CastButton = 9] = 'CastButton', t[t.ShareButton = 10] = 'ShareButton', t[t.UpNextButton = 11] = 'UpNextButton', t[t.UpNextBox = 12] = 'UpNextBox', t[t.PreviousButton = 13] = 'PreviousButton', t[t.LogoComponent = 14] = 'LogoComponent', t[t.LogoOutstream = 15] = 'LogoOutstream', t[t.MoreButton = 16] = 'MoreButton', t[t.ElapsedTimeLabel = 17] = 'ElapsedTimeLabel', t[t.TotalDurationLabel = 18] = 'TotalDurationLabel', t[t.ProgressBar = 19] = 'ProgressBar', t[t.QualityMenu = 20] = 'QualityMenu', t[t.QueStateOverlay = 21] = 'QueStateOverlay', t[t.Loader = 22] = 'Loader', t[t.ContextMenu = 23] = 'ContextMenu', t[t.ElementsSettingsMenu = 24] = 'ElementsSettingsMenu', t[t.CloseButton = 25] = 'CloseButton', t[t.SkipAdButton = 26] = 'SkipAdButton', t[t.AdLoadingScreen = 27] = 'AdLoadingScreen', t[t.CtaButton = 28] = 'CtaButton', t[t.PlayspaceProgressBar = 29] = 'PlayspaceProgressBar', t[t.PlayspaceSettingsMenu = 30] = 'PlayspaceSettingsMenu', t[t.ClickToPlayButton = 31] = 'ClickToPlayButton', t[t.SlideTitle = 32] = 'SlideTitle', t[t.SkipAd = 33] = 'SkipAd', t[t.TopTitle = 34] = 'TopTitle', t[t.TopLogo = 35] = 'TopLogo', t[t.TopSlideTitle = 36] = 'TopSlideTitle', t[t.TopStoryTitle = 37] = 'TopStoryTitle', t[t.TextLabel = 38] = 'TextLabel', t[t.LivePoster = 39] = 'LivePoster', t[t.LiveIcon = 40] = 'LiveIcon';
                }(qi || (qi = {})), function (t) {
                    t[t.Top = 1] = 'Top', t[t.Bottom = 2] = 'Bottom', t[t.Right = 4] = 'Right', t[t.Left = 8] = 'Left', t[t.Middle = 16] = 'Middle';
                }(zi || (zi = {}));
                class Ji extends o.a {
                    constructor(t, i, e, s, n) {
                        super(), this.mediator = t, this.js = i, this.hc = e, this.Qn = n, this.Bc = i.createElementByString(s);
                    }
                    getContainer() {
                        return this.Bc;
                    }
                    getCoordinates(t) {
                        const i = this.js.getElementCoordinates(this.Bc);
                        return this.Qn && t ? ((t & zi.Top) === zi.Top && (i.clientY -= this.Bc.clientHeight), (t & zi.Right) === zi.Right && (i.clientX += this.Bc.clientWidth)) : i.clientX += i.width / 2, i;
                    }
                    showComponent(t = (() => {
                        return !1;
                    })()) {
                        if (!this.Bc || !this.Bc.parentElement)
                            return;
                        const i = Object(T.t)(this.Bc.parentElement, 'cnx-ui-btn') ? this.Bc.parentElement : this.Bc;
                        t && Object(T.B)(i) ? Object(T.g)(i) : Object(T.O)(i);
                    }
                    hideComponent(t = (() => {
                        return !1;
                    })()) {
                        if (!this.Bc || !this.Bc.parentElement)
                            return;
                        const i = Object(T.t)(this.Bc.parentElement, 'cnx-ui-btn') ? this.Bc.parentElement : this.Bc;
                        t && !Object(T.B)(i) ? Object(T.h)(i, () => {
                            return Object(T.u)(i);
                        }) : Object(T.u)(i);
                    }
                    destroy() {
                        this.Bc.innerHTML = '', this.Bc.style.display = 'none', this.hc.unregisterAll(this);
                    }
                }
                class Qi extends Ji {
                    constructor(t, i, e, s, n) {
                        super(t, i, e, s, n), this.eventList = [
                            ht.a[ht.a.Scroll],
                            ht.a[ht.a.Click]
                        ], this.Up = t => {
                            this.onInteractionHandler(t);
                        }, this.onBeforeClick = t => {
                            t.stopPropagation();
                        }, this.onClick = t => {
                            this.onInteractionHandler(t), this.onClickHandler(t);
                        };
                    }
                    onInteractionHandler(t) {
                        t.stopPropagation();
                    }
                    onClickHandler(t) {
                    }
                    initComponent() {
                        const t = {
                            interactionstart: this.onBeforeClick,
                            interaction: this.Up,
                            click: this.onClick
                        };
                        this.hc.register(this.Bc, this, this.hc, t), this.Qn && (this.subscribe(ht.a[ht.a.Click], this.hc, () => {
                            this.onClickHandler();
                        }), this.relay(ht.a[ht.a.Scroll], this.hc, this, this.mediator));
                    }
                    destroy() {
                        this.unsubscribeAll(this.hc), super.destroy();
                    }
                }
                class Xi extends Qi {
                    constructor() {
                        super(...arguments), this.onClick = t => {
                            this.onInteractionHandler(t), this.onClickHandler(), this.addBoomEffect();
                        };
                    }
                    addBoomEffect() {
                        Object(T.a)(this.Bc, 'cnx-boom'), this.Bc.getClientRects(), Object(T.a)(this.Bc, 'cnx-boom-anim');
                        const t = i => {
                            'transform' === i.propertyName && (Object(T.I)(this.Bc, 'cnx-boom'), Object(T.I)(this.Bc, 'cnx-boom-anim'), this.Bc.removeEventListener('transitionend', t));
                        };
                        this.Bc.addEventListener('transitionend', t);
                    }
                    initComponent() {
                        super.initComponent(), this.Bc.appendChild(this.js.createElementByString('<cnx class="cnx-boom-elem"></cnx>'));
                    }
                }
                class Yi extends Xi {
                    constructor() {
                        super(...arguments), this.eventList = [
                            xt[xt.HoverStart],
                            xt[xt.HoverEnd],
                            ...this.eventList
                        ], this.onStartHover = () => {
                            Object(T.a)(this.Bc, d.h.HoverStart), Object(T.a)(this.Bc, d.h.HoverEnd), this.mediator.publish(this, xt[xt.HoverStart]);
                        }, this.onEndHover = () => {
                            Object(T.I)(this.Bc, d.h.HoverEnd), this.mediator.publish(this, xt[xt.HoverEnd]);
                        };
                    }
                    initComponent() {
                        super.initComponent(), this.Qn ? (this.Bc.addEventListener('touchstart', this.onStartHover, { passive: !0 }), this.Bc.addEventListener('touchend', this.onEndHover), this.Bc.addEventListener('touchcancel', this.onEndHover)) : (this.Bc.addEventListener('mouseenter', this.onStartHover), this.Bc.addEventListener('mouseleave', this.onEndHover));
                    }
                    destroy() {
                        this.Qn ? (this.Bc.removeEventListener('touchstart', this.onStartHover), this.Bc.removeEventListener('touchend', this.onEndHover), this.Bc.removeEventListener('touchcancel', this.onEndHover)) : (this.Bc.removeEventListener('mouseenter', this.onStartHover), this.Bc.removeEventListener('mouseleave', this.onEndHover)), super.destroy();
                    }
                    onInteractionHandler(t) {
                        this.onEndHoverClick();
                    }
                    onEndHoverClick() {
                        Object(T.I)(this.Bc, d.h.HoverEnd), Object(T.I)(this.Bc, d.h.HoverStart);
                    }
                }
                !function (t) {
                    t[t.Play = 0] = 'Play', t[t.Pause = 1] = 'Pause';
                }(Wi || (Wi = {}));
                class Ki extends Yi {
                    constructor(t, i, e, s, n) {
                        super(t, i, e, s, n), this.$p = !1, this.eventList = [
                            xt[xt.Play],
                            xt[xt.Pause],
                            xt[xt.Replay],
                            xt[xt.StateChanged],
                            ...this.eventList
                        ], this.Np = 'Play', this.Hp = 'Pause', this.setState(Wi.Pause);
                    }
                    onClickHandler() {
                        this.zt === Wi.Pause ? this.mediator.publish(this, xt[xt.Pause]) : this.$p ? this.mediator.publish(this, xt[xt.Replay]) : this.mediator.publish(this, xt[xt.Play]);
                    }
                    qp() {
                    }
                    toggleReplay(t) {
                        this.$p = t;
                    }
                    setState(t) {
                        this.zt !== t && (this.zt = t, this.qp(), this.mediator.publish(this, xt[xt.StateChanged]));
                    }
                    get tooltip() {
                        return this.zt === Wi.Play ? this.Np : this.Hp;
                    }
                }
                class Zi extends Hi {
                    initState() {
                        this.context.$uiContainer.classList.add(d.j.Playing);
                        const t = this.context.getComponent(qi.PlayButton);
                        t && t.setState(Wi.Pause);
                        const i = this.context.getComponent(qi.BigPlayButton);
                        i && i.setState(Wi.Pause);
                    }
                    exitState() {
                        this.context.$uiContainer.classList.remove(d.j.Playing);
                    }
                }
                class te extends Zi {
                    constructor() {
                        super(...arguments), this.zp = 100;
                    }
                    Wp() {
                        if (this.elapsedTimeoutId || !this.context.duration)
                            return;
                        const t = Date.now();
                        this.elapsedTimeoutId = setTimeout(() => {
                            this.context.elapsedTime += (Date.now() - t) / 1000;
                            const i = this.context.getComponent(qi.ProgressBar);
                            i && i.setProgress(Object(wi.e)(0, this.context.duration, 0, 100, this.context.elapsedTime)), this.elapsedTimeoutId = null, this.Wp();
                        }, this.zp);
                    }
                    initState() {
                        super.initState(), this.context.duration && this.Wp();
                    }
                    exitState() {
                        super.exitState(), this.context.duration && (clearTimeout(this.elapsedTimeoutId), this.elapsedTimeoutId = null);
                    }
                }
                class ie extends Hi {
                    initState() {
                        this.context.$uiContainer.classList.add(d.j.Paused);
                        const t = this.context.getComponent(qi.PlayButton);
                        t && t.setState(Wi.Play);
                        const i = this.context.getComponent(qi.BigPlayButton);
                        i && i.setState(Wi.Play);
                    }
                    exitState() {
                        this.context.$uiContainer.classList.remove(d.j.Paused);
                    }
                }
                class ee extends ie {
                    initState() {
                        super.initState();
                    }
                    exitState() {
                        super.exitState();
                    }
                }
                class se {
                    constructor(t, i) {
                        this.Gp = t, this.js = i, this.Jp = /\[\[([0-9]+)]]/g, this.Qp = [], this.Xp = [], this.Yp = this.js.createElementByString(this.Kp(this.Gp));
                    }
                    Zp(t) {
                        return `<cnx class="pl_${ t }"></cnx>`;
                    }
                    Kp(t) {
                        return t.replace(this.Jp, (t, i) => {
                            return this.Qp.push(parseInt(i, 10)), this.Zp(i);
                        });
                    }
                    tb(t, i) {
                        return this.Xp.some(i => {
                            return i.slotName === t;
                        }) ? null : this.Xp.some(t => {
                            return t.component === i;
                        }) ? null : this.Yp.getElementsByClassName(`pl_${ t }`)[0];
                    }
                    getComponentList() {
                        return this.Qp;
                    }
                    getRenderedDom() {
                        return this.Yp;
                    }
                    registerSlot(t, i) {
                        const e = this.tb(t, i);
                        if (null !== e) {
                            const s = i.getContainer();
                            return e.parentNode.replaceChild(s, e), this.Xp.push({
                                component: i,
                                slotName: t
                            }), !0;
                        }
                        return !1;
                    }
                    initComponents() {
                        this.Xp.forEach(t => {
                            return t.component.initComponent();
                        });
                    }
                }
                class ne extends o.a {
                    constructor(t, i, e) {
                        super(), this.globalDomUtilsService = t, this.templateString = i, this.componentFactory = e, this.ib = {}, this.eb = new se(i, t), this.addComponents();
                    }
                    addComponents() {
                        this.eb.getComponentList().forEach(t => {
                            const i = this.componentFactory.createComponent(t, this);
                            this.registerComponent(t, i);
                        });
                    }
                    registerComponent(t, i) {
                        this.eb.registerSlot(t, i), this.ib[t] = i, this.sb(i);
                    }
                    sb(t) {
                        t.eventList.forEach(i => {
                            this.subscribe(i, t, e => {
                                i === xt[xt.RebindComponent] && this.rebindComponentEvents(t), this.handleComponentEvent(i, e, t);
                            });
                        });
                    }
                    rebindComponentEvents(t) {
                        t && (this.unsubscribeAll(t), this.sb(t));
                    }
                    getComponent(t) {
                        return this.ib[t];
                    }
                    destroy() {
                        Object.keys(this.ib).forEach(t => {
                            this.ib[t].destroy();
                        });
                    }
                }
                class re extends ne {
                    constructor(t, i, e, s, n) {
                        super(e, s, n), this.mediator = t, this.$container = i, this.componentFactory = n, this.$uiContainer = this.eb.getRenderedDom(), i.appendChild(this.$uiContainer), this.eb.initComponents();
                    }
                    changeState(t) {
                        const i = this.rb[t];
                        i !== this.currentState && this.currentState.canTransitionToState(i) && (this.currentState.exitState(i), i.enterState());
                    }
                    hide() {
                        Object(T.a)(this.$uiContainer, d.h.DisplayNone);
                    }
                    show() {
                        Object(T.I)(this.$uiContainer, d.h.DisplayNone);
                    }
                    destroy() {
                        super.destroy(), this.$uiContainer.parentNode.removeChild(this.$uiContainer);
                    }
                }
                var he, ae = e(87), oe = e.n(ae);
                class ce {
                    constructor(t, i) {
                        this.hb = t, this.js = i, this.ab = [], this.ob = {
                            top: 12,
                            bottom: 24,
                            margin: 4
                        }, this.cb = !1;
                    }
                    ub() {
                        this.lb = this.js.getElementCoordinates(this.hb.parentElement);
                    }
                    fb(t, i) {
                        t.getElementsByClassName('cnx-tooltip-text')[0].innerHTML = i;
                    }
                    pb(t) {
                        if (!t || !t.tooltip || this.cb)
                            return;
                        if (this.ab.find(i => {
                                return i.component === t;
                            }))
                            return;
                        const i = this.js.createElementByString(oe.a);
                        this.fb(i, t.tooltip), this.ub();
                        const e = t.getCoordinates();
                        let s = !1;
                        const {
                                clientY: n,
                                height: r
                            } = e, {
                                clientY: h,
                                height: a
                            } = this.js.getElementCoordinates(this.hb);
                        n <= h + a / 2 - r ? e.clientY += this.ob.top : (e.clientY -= this.ob.bottom, s = !0), this.hb.appendChild(i), Gi(i, e, this.lb, {
                            alignMiddle: !0,
                            alignTop: s,
                            forceRight: !0,
                            distanceFromMargin: this.ob.margin
                        }), Object(T.i)(i), Object(T.a)(i, d.q.OpacityInTransition), this.ab.push({
                            component: t,
                            domElement: i
                        });
                    }
                    bb(t) {
                        if (!t.tooltip)
                            return;
                        const i = this.ab.find(i => {
                            return i.component === t;
                        });
                        if (!i)
                            return;
                        const e = i.domElement;
                        this.hb.removeChild(e), this.ab = this.ab.filter(i => {
                            return i.component !== t;
                        });
                    }
                    vb(t) {
                        if (!t.tooltip)
                            return;
                        const i = this.ab.find(t => {
                            return t.component === this.mb;
                        });
                        i && this.fb(i.domElement, t.tooltip);
                    }
                    gb() {
                        this.mb = null, this.ab.forEach(t => {
                            return this.bb(t.component);
                        });
                    }
                    setDistanceValues(t) {
                        this.ob = Object.assign(Object.assign({}, this.ob), t);
                    }
                    hoverStart(t) {
                        this.mb = t, this.pb(t);
                    }
                    hoverEnd(t) {
                        this.mb = null, this.bb(t);
                    }
                    stateChanged(t) {
                        this.mb === t && this.vb(t);
                    }
                    disableTooltips() {
                        this.cb = !0, this.gb();
                    }
                    enableTooltips() {
                        this.cb = !1, this.pb(this.mb);
                    }
                }
                !function (t) {
                    t[t.expand = 0] = 'expand', t[t.collapse = 1] = 'collapse';
                }(he || (he = {}));
                class ue extends Yi {
                    constructor() {
                        super(...arguments), this.eventList = [
                            xt[xt.Expand],
                            xt[xt.Collapse],
                            ...this.eventList
                        ], this.yb = 'Full Screen', this.wb = 'Exit Full Screen';
                    }
                    onClickHandler() {
                        switch (this.zt) {
                        case he.collapse:
                            this.mediator.publish(this, xt[xt.Expand]);
                            break;
                        case he.expand:
                            this.mediator.publish(this, xt[xt.Collapse]);
                            break;
                        default:
                            this.mediator.publish(this, xt[xt.Expand]);
                        }
                    }
                    qp() {
                        this.Bc && (this.zt === he.expand ? this.Bc.classList.add(d.h.Active) : this.Bc.classList.remove(d.h.Active));
                    }
                    setState(t) {
                        this.zt !== t && (this.zt = t, this.qp());
                    }
                    get tooltip() {
                        return this.zt === he.expand ? this.wb : this.yb;
                    }
                }
                class le extends re {
                    constructor(t, i, e, s, n) {
                        super(t, i, e, s, n), this.Ob = new ce(this.$uiContainer, e);
                    }
                    handleComponentEvent(t, i, e) {
                        let s = e;
                        switch (i.payload && i.payload.targetComponent && (s = i.payload.targetComponent), t) {
                        case xt[xt.HoverStart]:
                            this.Ob.hoverStart(s);
                            break;
                        case xt[xt.HoverEnd]:
                            this.Ob.hoverEnd(s);
                            break;
                        case xt[xt.StateChanged]:
                            this.Ob.stateChanged(s);
                        }
                    }
                    updateDuration(t, i) {
                        if (!Object(T.t)(this.$uiContainer, d.g.ShowControls))
                            return;
                        const e = this.getComponent(qi.ElapsedTimeLabel), s = this.getComponent(qi.TotalDurationLabel), n = this.getComponent(qi.ProgressBar);
                        if (e && e.setTime(t), s && s.setTime(i), n) {
                            const e = 0, s = i, r = 0, h = 100;
                            n.setProgress(Object(wi.e)(e, s, r, h, t));
                        }
                    }
                    updateVolume(t) {
                    }
                    expand() {
                        this.getComponent(qi.ExpandButton).setState(he.expand);
                    }
                    collapse() {
                        this.getComponent(qi.ExpandButton).setState(he.collapse);
                    }
                }
                class de extends Yi {
                    constructor() {
                        super(...arguments), this.eventList = [
                            xt[xt.Settings],
                            ...this.eventList
                        ], this.xb = 'Settings';
                    }
                    onClickHandler() {
                        this.mediator.publish(this, xt[xt.Settings]);
                    }
                    toggleHDFlag(t) {
                        t ? Object(T.a)(this.Bc, d.h.Active) : Object(T.I)(this.Bc, d.h.Active);
                    }
                    get tooltip() {
                        return this.xb;
                    }
                }
                var fe = e(88), pe = e.n(fe);
                class be extends Yi {
                    constructor(t, i, e, s, n, r = (() => {
                        return !1;
                    })(), h) {
                        super(t, i, e, s, h), this.Sb = n, this.isActive = r;
                    }
                    onClickHandler() {
                        this.isActive = !this.isActive, this.onStateChange();
                    }
                    get isActive() {
                        return this.zt;
                    }
                    set isActive(t) {
                        this.zt = t, this.zt ? Object(T.a)(this.Bc, this.Sb) : Object(T.I)(this.Bc, this.Sb);
                    }
                }
                class ve extends be {
                    constructor() {
                        super(...arguments), this.eventList = [
                            xt[xt.CaptionOn],
                            xt[xt.CaptionOff],
                            xt[xt.StateChanged],
                            ...this.eventList
                        ], this.jb = 'Subtitles On', this.kb = 'Subtitles Off';
                    }
                    onStateChange() {
                        this.mediator.publish(this, this.isActive ? xt[xt.CaptionOn] : xt[xt.CaptionOff]), this.mediator.publish(this, xt[xt.StateChanged]);
                    }
                    get tooltip() {
                        return this.isActive ? this.kb : this.jb;
                    }
                }
                var me = e(52), ge = e.n(me), ye = e(89), we = e.n(ye);
                class Oe extends Qi {
                    constructor() {
                        super(...arguments), this.Ld = !1, this.eventList = [xt[xt.Next]];
                    }
                    onClickHandler() {
                        this.mediator.publish(this, xt[xt.Next]);
                    }
                    show() {
                        this.Ld = !0, this.Bc.classList.add('cnx-fade-in-up-next');
                    }
                    hide() {
                        this.Ld = !1, this.Bc.classList.remove('cnx-fade-in-up-next');
                    }
                    isInView() {
                        return this.Ld;
                    }
                    updateCard(t, i) {
                        const e = this.Bc.getElementsByTagName('img')[0];
                        e.setAttribute('src', t), e.style.display = 'none', e.onload = () => {
                            e.style.display = 'block';
                        }, this.Bc.getElementsByClassName('cnx-up-next-box-text')[0].innerHTML = Object(rt.h)(i) ? i : '';
                    }
                }
                class xe extends Ji {
                    constructor(t, i, e, s, n) {
                        super(t, i, e, s), this.settings = n, this.eventList = [], this._b = 144, this.Ab = 36;
                    }
                    createLogo() {
                        let t = this.js.createElement('img');
                        t.onload = () => {
                            t = this.resizeLogo(t), this.Bc.appendChild(t);
                        }, t.src = this.settings.logoUrl, t.alt = '';
                    }
                    resizeLogo(t) {
                        const i = t.naturalWidth, e = t.naturalHeight;
                        if (!i || !e)
                            return t;
                        if (this.settings.logoPosition === M.ProtoLogoPositionMode.ControlBar)
                            t.style.setProperty('height', `${ this.Ab }px`, 'important'), t.style.setProperty('width', `${ this.Ab }px`, 'important');
                        else {
                            const s = i / e;
                            this.Ab * s > this._b ? (t.style.setProperty('width', `${ this._b }px`, 'important'), t.style.setProperty('height', 'auto', 'important')) : (t.style.setProperty('width', 'auto', 'important'), t.style.setProperty('height', `${ this.Ab }px`, 'important'));
                        }
                        return t;
                    }
                    initComponent() {
                        try {
                            this.createLogo();
                        } catch (t) {
                            Object(n.a)({
                                message: 'LogoComponent_createLogo',
                                exception: t.message,
                                callStack: t.stack,
                                level: h.ProtoLoggingLevelEnum.FATAL
                            });
                        }
                    }
                }
                class Se extends Ji {
                    constructor() {
                        super(...arguments), this.eventList = [];
                    }
                    initComponent() {
                        this.Ib = this.Bc.getElementsByTagName('cnx-span')[0];
                    }
                    setTime(t) {
                        isNaN(t) || 'number' != typeof t ? Object(T.a)(this.Bc, d.h.Invisible) : (this.Ib.innerHTML = Object(nt.f)(t), Object(T.I)(this.Bc, d.h.Invisible));
                    }
                }
                var je = e(58), ke = e.n(je);
                class _e extends Ji {
                    constructor(t, i, e, s, n = (() => {
                        return !1;
                    })()) {
                        super(t, i, e, s, n), this.Cb = 0, this.Tb = null, this.Pb = 0, this.Mb = 0, this.Eb = 100, this.cacheDomElements();
                    }
                    cacheDomElements() {
                        this.Lb = this.Bc.getElementsByClassName('cnx-progress-fill')[0], this.Wc = this.Bc.getElementsByClassName('cnx-progress-rail')[0];
                    }
                    cacheWidths() {
                        this.Cb = this.fixedRailWidth ? this.fixedRailWidth : this.Wc.getBoundingClientRect().width, this.Tb = this.Wc.getBoundingClientRect().left;
                    }
                    updateUi(t) {
                        const i = this.getComputedTranslation(t);
                        this.Pb = i, this.Lb.style.transform = `translateX(${ i }px)`;
                    }
                    isValidTranslation() {
                        return this.Pb >= 0 && this.Pb <= this.Cb;
                    }
                    getComputedTranslation(t) {
                        return t < 0 ? 0 : t > this.Cb ? this.Cb : t;
                    }
                    setProgress(t) {
                        this.cacheWidths();
                        const i = this.getComputedTranslation(Object(wi.e)(0, 100, 0, this.Cb, t));
                        this.updateUi(i);
                    }
                    disableTransition() {
                        Object(T.a)(this.Bc, d.h.NoTransition);
                    }
                    enableTransition() {
                        Object(T.I)(this.Bc, d.h.NoTransition);
                    }
                    Rb(t) {
                        this.disableTransition(), this.setProgress(t), Object(T.i)(this.Lb), this.enableTransition();
                    }
                    forceStartState() {
                        this.Rb(this.Mb);
                    }
                    forceEndState() {
                        this.Rb(this.Eb);
                    }
                    initComponent() {
                        this.cacheWidths();
                    }
                    destroy() {
                        super.destroy();
                    }
                }
                class Ae extends _e {
                    constructor(t, i, e, s, n = (() => {
                        return !1;
                    })()) {
                        super(t, i, e, s, n), this.Bb = 0, this.Nh = null, this.Db = !1, this.eventList = [
                            xt[xt.DraggingStart],
                            xt[xt.DraggingStopped]
                        ], this.Fb = t => {
                            this.cacheWidths(), this.Vb(this.Ub(t)), this.Qn ? this.Bc.addEventListener(this.$b, this.Nb) : this.js.addEventListenerOnGlobal(this.$b, this.Nb), this.onDragStart();
                        }, this.Nb = t => {
                            null === this.Nh && (this.Db || (this.Db = !0, this.disableTransition()), this.Nh = this.js.requestAnimationFrameHelper(() => {
                                const i = this.Hb + (this.Ub(t) - this.qb);
                                this.isValidTranslation() && this.zb(i), this.Nh = null;
                            }));
                        }, this.Wb = t => {
                            t.stopPropagation(), this.Qn ? this.Bc.removeEventListener(this.$b, this.Nb) : this.js.removeEventListenerOnGlobal(this.$b, this.Nb), this.Db = !1, this.enableTransition(), this.onDragEnd();
                        }, this.$b = n ? 'touchmove' : 'mousemove';
                    }
                    cacheDomElements() {
                        super.cacheDomElements(), this.Gb = this.Bc.getElementsByClassName('cnx-progress-handle')[0];
                    }
                    cacheWidths() {
                        super.cacheWidths(), this.Bb = this.Gb.getBoundingClientRect().width / 2;
                    }
                    updateUi(t) {
                        super.updateUi(t);
                        const i = this.getComputedTranslation(t);
                        this.Gb.style.transform = `translateX(${ i - this.Bb }px)`;
                    }
                    onDragEnd() {
                        this.mediator.publish(this, xt[xt.DraggingStopped]);
                    }
                    onDragStart() {
                        this.mediator.publish(this, xt[xt.DraggingStart]);
                    }
                    Ub(t) {
                        return this.Qn ? t.touches.item(0).clientX : t.clientX;
                    }
                    Vb(t) {
                        this.Hb = t - this.Tb, this.qb = t, this.zb(this.Hb);
                    }
                    zb(t) {
                        if (this.isValidTranslation()) {
                            const i = this.getComputedTranslation(t), e = 0, s = this.Cb, n = 0, r = 100;
                            this.updateUi(i), this.onProgressChange(Object(wi.e)(e, s, n, r, i));
                        }
                    }
                    setProgress(t) {
                        super.setProgress(t);
                    }
                    initComponent() {
                        super.initComponent();
                        const t = {
                            interactionstart: this.Fb,
                            interactionend: this.Wb
                        };
                        this.hc.register(this.Bc, this, this.hc, t);
                    }
                    destroy() {
                        super.destroy();
                    }
                }
                class Ie extends Ae {
                    constructor(t, i, e, s, n = (() => {
                        return !1;
                    })()) {
                        super(t, i, e, s, n), this.Jb = !1, this.Qb = t => {
                            Object(T.a)(this.Bc, d.h.HoverEnd), this.Jb = !0;
                        }, this.Xb = t => {
                            const i = this.getComputedTranslation(t.clientX - this.Tb);
                            this.Yb.style.transform = `translateX(${ i }px)`;
                        }, this.Kb = t => {
                            this.Yb.style.transform = 'translateX(0)', this.Jb = !1, this.Zb();
                        }, this.eventList = this.eventList.concat([
                            xt[xt.Seek],
                            xt[xt.SeekingStart],
                            xt[xt.SeekingStopped]
                        ]);
                    }
                    onProgressChange(t) {
                        this.mediator.publish(this, xt[xt.Seek], { payload: t - 0.1 });
                    }
                    onDragEnd() {
                        super.onDragEnd(), this.mediator.publish(this, xt[xt.SeekingStopped]), this.Zb();
                    }
                    onDragStart() {
                        super.onDragStart(), this.mediator.publish(this, xt[xt.SeekingStart]);
                    }
                    Zb() {
                        this.Jb || this.Db || Object(T.I)(this.Bc, d.h.HoverEnd);
                    }
                    initComponent() {
                        super.initComponent(), this.Bc.addEventListener('mousemove', this.Xb), this.Bc.addEventListener('mouseenter', this.Qb), this.Bc.addEventListener('mouseleave', this.Kb), this.Yb = this.Bc.getElementsByClassName('cnx-progress-follow')[0];
                    }
                    hide() {
                        Object(T.u)(this.Bc);
                    }
                    show() {
                        Object(T.O)(this.Bc);
                    }
                    destroy() {
                        super.destroy(), this.Bc.removeEventListener('mousemove', this.Xb), this.Bc.removeEventListener('mouseenter', this.Qb), this.Bc.removeEventListener('mouseleave', this.Kb);
                    }
                }
                var Ce = e(90), Te = e.n(Ce);
                class Pe extends Ji {
                    constructor() {
                        super(...arguments), this.eventList = [];
                    }
                    initComponent() {
                        this.hide();
                    }
                    show() {
                        Object(T.O)(this.Bc);
                    }
                    hide() {
                        Object(T.u)(this.Bc);
                    }
                }
                var Me, Ee = e(91), Le = e.n(Ee), Re = e(53), Be = e.n(Re), De = e(92), Fe = e.n(De);
                !function (t) {
                    t[t.SimpleMenuItem = 0] = 'SimpleMenuItem', t[t.ToggleMenuItem = 1] = 'ToggleMenuItem', t[t.SubmenuMenuItem = 2] = 'SubmenuMenuItem';
                }(Me || (Me = {}));
                class Ve extends Ji {
                    constructor(t, i, e, s, n, r, h, a) {
                        super(t, i, e, s, a), this.eventName = n, this.tv = r, this.ev = h, this.sv = [], this.eventList = [
                            xt[xt.RebindComponent],
                            ht.a[ht.a.HoldStart],
                            ht.a[ht.a.HoldEnd],
                            xt[xt.ContextMenuOpen],
                            xt[xt.ContextMenuClose]
                        ], this.nv = !1, this.rv = 10, this.hv = t => {
                            this.av.removeChild(t.target), this.av.style.width = `${ this.Bc.clientWidth }px`;
                        }, this.close = t => {
                            t && Object(Li.h)(t.target, d.g.ContextController, this.rv) || !1 !== this.isOpen && (this.nv && (this.mediator.publish(this, ht.a[ht.a.HoldEnd]), Object(T.I)(this.ev, d.h.OnHold), this.nv = !1), this.isOpen = !1, this.mediator.publish(this, xt[xt.ContextMenuClose]), Object(T.a)(this.Bc, d.h.Invisible), this.hc.removeGlobalActions(this.Bc), this.closeAllSubmenuItems());
                        }, this.close(), this.cacheCoordinates(), this.eventList.push(this.eventName), this.av = this.Bc.getElementsByClassName(d.k.Container)[0], this.ov = this.js.createElementByString(`<cnx class="${ d.k.Items }"></cnx>`), this.av.appendChild(this.ov), Object(T.a)(this.av, d.g.ContextController);
                    }
                    addNewItemsEvent(t) {
                        const i = t.filter(t => {
                            return !Object(l.g)(t, this.eventList);
                        });
                        i.length > 0 && (this.eventList = [
                            ...this.eventList,
                            ...i
                        ], this.mediator.publish(this, xt[xt.RebindComponent], { payload: this.tv }));
                    }
                    cacheCoordinates() {
                        this.lb = this.js.getElementCoordinates(this.ev);
                    }
                    positionContextMenu(t) {
                        this.cacheCoordinates(), Gi(this.Bc, t, this.lb, {
                            alignMiddle: this.alignMiddle,
                            alignTop: this.alignTop,
                            forceRight: this.forceRight
                        });
                    }
                    cv(t) {
                        switch (t.type) {
                        case Me.SimpleMenuItem:
                            this.close();
                            break;
                        case Me.SubmenuMenuItem:
                            this.uv(t);
                        }
                    }
                    sendEvent(t, i) {
                        this.mediator.publish(this, t, i);
                    }
                    uv(t) {
                        const i = this.Bc.clientWidth;
                        t.isOpen ? (t.$menuContainer.addEventListener('transitionend', this.hv), this.ov.style.left = '0px', t.$menuContainer.style.left = '0px') : (t.$menuContainer.removeEventListener('transitionend', this.hv), this.av.style.width = `${ 2 * i }px`, this.av.appendChild(t.$menuContainer), Object(T.i)(this.av), this.ov.style.left = `${ -i }px`, t.$menuContainer.style.left = `${ -i }px`), t.isOpen = !t.isOpen;
                    }
                    closeAllSubmenuItems() {
                        this.sv.forEach(t => {
                            t.type === Me.SubmenuMenuItem && t.isOpen && this.uv(t);
                        });
                    }
                    buildContextMenu(t) {
                        let i = [];
                        this.ov.innerHTML = '', this.av.style.width = `${ this.Bc.clientWidth }px`, this.sv.forEach(t => {
                            return this.unsubscribeAll(t);
                        }), this.sv = t, this.sv.forEach(t => {
                            i = [
                                ...i,
                                ...t.eventList
                            ], t.eventList.forEach(i => {
                                return this.subscribe(i, t, e => {
                                    this.cv(t), this.sendEvent(i, e);
                                });
                            }), t.initComponent(), this.ov.appendChild(t.getContainer());
                        }), this.addNewItemsEvent(i);
                    }
                    getAnchorCoordinatesTo(t) {
                        var i;
                        return null === (i = t) || void 0 === i ? void 0 : i.getCoordinates();
                    }
                    open(t, i = (() => {
                        return !1;
                    })()) {
                        i && (this.nv = i, this.mediator.publish(this, ht.a[ht.a.HoldStart]), Object(T.a)(this.ev, d.h.OnHold)), this.isOpen = !0, this.mediator.publish(this, xt[xt.ContextMenuOpen]), this.positionContextMenu(t);
                        const e = { interactionend: this.close };
                        this.hc.addGlobalActions(this.Bc, e), Object(T.I)(this.Bc, d.h.Invisible);
                    }
                }
                class Ue extends Qi {
                    constructor(t, i, e, s, n) {
                        super(t, i, e, Ue.getTemplate(n), s), this.mediator = t, this.mc = !1, this.type = Me.SimpleMenuItem, this.eventList = [], this.event = n.activeEvent, this.name = n.name, n.eventList ? this.eventList = n.eventList : this.eventList.push(this.event), this.lv = this.Bc.getElementsByClassName(d.k.ItemTitle)[0], this.dv = this.Bc.getElementsByClassName(d.k.ItemIcon)[0];
                    }
                    static getTemplate(t) {
                        const i = `<cnx class="${ d.k.ItemIcon }">${ t.icon }</cnx>`, e = `<cnx class="${ d.k.ItemExtra }">${ t.label }</cnx>`;
                        return `<cnx class="${ d.k.ClickOption }">\n                    ${ t.icon ? i : '' }\n                    <cnx class="${ d.k.ItemTitle }">${ t.name }</cnx>\n                    ${ t.label ? e : '' }\n                </cnx>`;
                    }
                    onClickHandler(t) {
                        this.mediator.publish(this, this.event);
                    }
                    changeItemName(t) {
                        this.lv.innerHTML = t;
                    }
                    changeItemIcon(t) {
                        this.dv.innerHTML = t;
                    }
                    get isActive() {
                        return this.mc;
                    }
                    set isActive(t) {
                        this.mc = t, this.mc ? Object(T.a)(this.Bc, d.h.Active, d.f.AccentColor) : Object(T.I)(this.Bc, d.h.Active, d.f.AccentColor);
                    }
                }
                var $e = e(54), Ne = e.n($e), He = e(21);
                class qe extends Ve {
                    constructor() {
                        super(...arguments), this.alignMiddle = !1, this.alignTop = !1, this.forceRight = !0;
                    }
                    fv() {
                        const t = He.a.version ? `V${ He.a.version }` : 'dev', i = [new Ue(this, this.js, this.hc, this.Qn, {
                                    activeEvent: xt[xt.AboutClick],
                                    name: 'About Connatix',
                                    icon: Ne.a,
                                    label: t
                                })];
                        this.buildContextMenu(i);
                    }
                    initComponent() {
                        this.fv();
                    }
                    onResize() {
                        this.cacheCoordinates(), this.close();
                    }
                }
                class ze extends be {
                    constructor(t, i, e, s, n) {
                        super(t, i, e, ze.getTemplate(n), d.h.Active, n.defaultState, s), this.mediator = t, this.eventList = [], this.type = Me.ToggleMenuItem, {
                            eventOn: this.pv,
                            eventOff: this.bv
                        } = n, this.eventList.push(this.pv, this.bv);
                    }
                    static getTemplate(t) {
                        const i = `<cnx class="${ d.k.ItemIcon }">${ t.icon }</cnx>`;
                        return `<cnx class="${ d.k.ToggleOption } ${ t.defaultState ? d.h.Active : '' }">\n                    ${ t.icon ? i : '' }\n                    <cnx class="${ d.k.ItemTitle }">${ t.name }</cnx>\n                    <cnx class="${ d.k.ItemExtra }">\n                        <cnx class="cnx-cm-toggle-switch">\n                            <cnx class="cnx-cm-slider ${ d.f.AccentColor }"></cnx>\n                        </cnx>\n                    </cnx>\n                </cnx>`;
                    }
                    onStateChange() {
                        this.mediator.publish(this, this.isActive ? this.pv : this.bv);
                    }
                    get tooltip() {
                        return '';
                    }
                }
                const We = {
                    ContextAbout: 'About Connatix',
                    ContextQuality: 'Video Settings',
                    ContextCaption: 'Closed Caption'
                };
                class Ge extends Ve {
                    constructor(t, i, e, s, n, r, h, a, o, c = (() => {
                        return !0;
                    })()) {
                        super(t, i, e, s, n, r, h, o), this.alignMiddle = !1, this.alignTop = !1, this.forceRight = !1, this.vv = [new Ue(this, this.js, this.hc, this.Qn, {
                                activeEvent: xt[xt.AboutClick],
                                name: We.ContextAbout,
                                icon: Ne.a,
                                label: He.a.version ? `V${ He.a.version }` : 'dev'
                            })], this.mv = new ze(this, this.js, this.hc, this.Qn, {
                            eventOff: xt[xt.CaptionOff],
                            eventOn: xt[xt.CaptionOn],
                            defaultState: c,
                            name: We.ContextCaption,
                            icon: ge.a
                        }), this.gv = [this.mv], this.yv = a;
                    }
                    wv() {
                        let t = this.vv;
                        this.yv === d.r.Lg && (t = [
                            ...this.gv,
                            ...this.vv
                        ]), this.buildContextMenu(t);
                    }
                    initComponent() {
                        this.wv();
                    }
                    onResize(t, i) {
                        this.isOpen && this.positionContextMenu(t), this.yv !== i ? (this.yv = i, this.closeAllSubmenuItems(), this.wv()) : this.yv = i;
                    }
                    toggleCaptionState(t) {
                        this.mv.isActive !== t && (this.mv.isActive = t);
                    }
                    hideCaptionOption() {
                        this.mv.hideComponent();
                    }
                    showCaptionOption() {
                        this.mv.showComponent();
                    }
                    getAnchorCoordinatesTo(t) {
                        let i = zi.Right;
                        return this.yv !== d.r.Xl && this.yv !== d.r.Xxl && (i |= zi.Top), t.getCoordinates(i);
                    }
                }
                function Je(t) {
                    try {
                        return Object.keys(t).reduce((i, e) => {
                            return Object.assign(Object.assign({}, i), { [e]: Object(rt.h)(t[e]) && t[e].includes('%%') ? void 0 : t[e] });
                        }, {});
                    } catch (i) {
                        return Object(n.a)({
                            message: 'sanitizeDfpMacros_error',
                            exception: i.message,
                            callStack: i.stack,
                            level: h.ProtoLoggingLevelEnum.WARNING
                        }), Object.keys(t).reduce((i, e) => {
                            return Object.assign(Object.assign({}, i), { [e]: Object(rt.h)(t[e]) && t[e].indexOf('%%') > -1 ? void 0 : t[e] });
                        }, {});
                    }
                }
                class Qe extends Ji {
                    constructor() {
                        super(...arguments), this.eventList = [];
                    }
                    initComponent() {
                        this.Ov = this.Bc.getElementsByClassName(d.e.CaptionContainer)[0];
                    }
                    updateCaptions(t) {
                        var i, e;
                        this.Ov.innerHTML = t && t.text ? (i = t.text, e = '<br>', i.replace(/(?:\r\n|\r|\n)/g, e)) : '';
                    }
                }
                var Xe = e(93), Ye = e.n(Xe);
                class Ke extends xe {
                    constructor() {
                        super(...arguments), this.xv = 'cnx-logo-height', this.Sv = 'cnx-logo-width';
                    }
                    createLogo() {
                        this.Bc.onload = () => {
                            this.Bc.style.visibility = 'visible', this.resizeLogo(this.Bc);
                        }, this.Bc.style.visibility = 'hidden', this.Bc.src = this.settings.logoUrl;
                    }
                    resizeLogo(t) {
                        const i = t.naturalWidth, e = t.naturalHeight;
                        return i && e ? (i > e ? Object(T.a)(t, this.Sv) : Object(T.a)(t, this.xv), t) : t;
                    }
                }
                var Ze = e(94), ts = e.n(Ze), is = e(95), es = e.n(is);
                class ss extends Ae {
                    constructor(t, i, e, s, n = (() => {
                        return !1;
                    })()) {
                        super(t, i, e, s, n), this.jv = 80, this.fixedRailWidth = this.jv, this.eventList.push(xt[xt.Volume]);
                    }
                    onProgressChange(t) {
                        this.mediator.publish(this, xt[xt.Volume], { payload: t });
                    }
                }
                var ns = e(96), rs = e.n(ns), hs = e(97), as = e.n(hs);
                function os(t, i, e) {
                    const s = e ? g[g.Auto] : i.height.toString();
                    t.forEach(t => {
                        return t.name.indexOf(s) > -1 ? t.isActive = !0 : t.isActive = !1;
                    });
                    const n = t.find(t => {
                        return g[t.event] === g.Auto;
                    });
                    if (e) {
                        const e = t.find(t => {
                            return t.event === i.height.toString();
                        });
                        if (e) {
                            const t = `${ n.name } (${ e.name })`;
                            n.changeItemName(t);
                        }
                    } else
                        n.changeItemName(n.name);
                }
                class cs extends Ve {
                    constructor() {
                        super(...arguments), this.alignMiddle = !0, this.alignTop = !0, this.forceRight = !1, this.kv = [], this._v = {
                            height: 360,
                            quality: g.Auto
                        }, this.Av = !0;
                    }
                    sendEvent(t) {
                        this.Av = g[t] === g.Auto, this.mediator.publish(this, this.eventName, {
                            payload: {
                                height: this.Av ? this._v.height : parseInt(t, 10),
                                quality: this.Av ? g.Auto : g.Strict
                            }
                        });
                    }
                    initComponent() {
                    }
                    createQualityMenu(t) {
                        this.kv = [], this.Iv = t, this.Iv.forEach(t => {
                            this.kv.push(new Ue(this, this.js, this.hc, this.Qn, {
                                name: `${ t.videoHeight }p`,
                                activeEvent: t.videoHeight.toString(),
                                label: t.isHD ? 'HD' : void 0
                            }));
                        }), this.kv.push(new Ue(this, this.js, this.hc, this.Qn, {
                            name: g[g.Auto],
                            activeEvent: g[g.Auto]
                        })), os(this.kv, this._v, this.Av), this.buildContextMenu(this.kv);
                    }
                    onResize(t) {
                        this.cacheCoordinates(), this.isOpen && this.positionContextMenu(t);
                    }
                    updateQuality(t) {
                        Object(l.h)(this.Iv) && (this.Av = t.quality === g.Auto, this._v.quality = t.quality, this._v.height = Object(wi.b)(t.height, this.Iv.map(t => {
                            return t.videoHeight;
                        })), os(this.kv, this._v, this.Av));
                    }
                }
                var us = e(98), ls = e.n(us);
                class ds extends Ji {
                    constructor() {
                        super(...arguments), this.eventList = [];
                    }
                    initComponent() {
                        this.hide();
                    }
                    show() {
                        Object(T.O)(this.Bc), Object(T.i)(this.Bc), Object(T.a)(this.Bc, d.h.Active);
                    }
                    hide() {
                        Object(T.I)(this.Bc, d.h.Active), Object(T.u)(this.Bc);
                    }
                }
                class fs extends Yi {
                    constructor(t, i, e, s, n, r, h) {
                        super(t, i, e, s, n), this.tooltip = h, this.Cv = qi[r], this.eventList.push(this.Cv);
                    }
                    onClickHandler() {
                        this.mediator.publish(this, this.Cv);
                    }
                }
                class ps extends Qi {
                    constructor(t, i, e, s, n, r, h) {
                        super(t, i, e, s, n), this.tooltip = h, this.eventList = [], this.Cv = qi[r], this.eventList.push(this.Cv);
                    }
                    onClickHandler() {
                        this.mediator.publish(this, this.Cv);
                    }
                }
                class bs {
                    constructor(t, i, e, s) {
                        this.js = t, this.hc = i, this.Qn = e, this.Tv = new Map(), Object.keys(s).forEach(t => {
                            return this.Pv(qi[t], s[t]);
                        });
                    }
                    getButton(t, i) {
                        const {
                            isHoverable: e,
                            template: s,
                            tooltip: n
                        } = this.Mv(t);
                        return e ? new fs(i, this.js, this.hc, s, this.Qn, t, n) : new ps(i, this.js, this.hc, s, this.Qn, t, n);
                    }
                    isGeneralComponent(t) {
                        return this.Tv.has(t);
                    }
                    Mv(t) {
                        return this.Tv.get(t);
                    }
                    Pv(t, i) {
                        this.Tv.set(t, i);
                    }
                }
                var vs = e(99), ms = e.n(vs);
                function gs(t, i, e = (() => {
                    return !0;
                })()) {
                    return e ? `\n            <cnx class="cnx-icon-button cnx-button-${ qi[t].toLowerCase() } cnx-ui-btn-hoverable">\n                <cnx class="cnx-btn-container">\n                    ${ i }\n                </cnx>\n            </cnx>\n        `.trim() : `<cnx class="cnx-button-${ qi[t].toLowerCase() }">${ i }</cnx>`;
                }
                var ys = e(59), ws = e.n(ys), Os = e(100), xs = e.n(Os);
                var Ss = {
                    [qi[qi.MoreButton]]: {
                        template: gs(qi.MoreButton, xs.a),
                        tooltip: 'More',
                        isHoverable: !0
                    },
                    [qi[qi.CloseButton]]: {
                        template: gs(qi.CloseButton, ms.a),
                        tooltip: 'Close Player',
                        isHoverable: !0
                    },
                    [qi[qi.UpNextButton]]: {
                        template: gs(qi.UpNextButton, ws.a),
                        tooltip: 'Next',
                        isHoverable: !0
                    },
                    [qi[qi.PreviousButton]]: {
                        template: gs(qi.PreviousButton, ws.a),
                        tooltip: 'Previous',
                        isHoverable: !0
                    }
                };
                const js = 'Ad';
                class ks extends Yi {
                    constructor() {
                        super(...arguments), this.eventList = [
                            xt[xt.SkipAd],
                            ...this.eventList
                        ], this.Ev = -1, this.Lv = -1;
                    }
                    initComponent() {
                        super.initComponent(), this.hideComponent(), this.Rv = this.Bc.getElementsByTagName('cnx-span')[0], this.Rv.innerHTML = js, this.Bv = this.Bc.querySelectorAll(`.${ d.p.Timer } svg`)[0];
                    }
                    setSecondsUntilSkip(t) {
                        this.Ev = Math.ceil(t), this.Lv = -1, this.Ev > 0 && Object(T.N)(this.Bv, { 'animation-duration': this.Ev + 's' });
                    }
                    tickDown(t) {
                        const i = this.Ev - Math.floor(t);
                        if (i < 0 || 0 === this.Lv)
                            return;
                        const e = Object(T.t)(this.Bc, d.p.InTimer);
                        this.Lv = i, 0 === this.Lv ? (e && Object(T.I)(this.Bc, d.p.InTimer), this.Rv.innerHTML = js) : (e || Object(T.a)(this.Bc, d.p.InTimer), this.Rv.innerHTML = `in ${ this.Lv }s`);
                    }
                    get tooltip() {
                    }
                    onClickHandler() {
                        0 === this.Lv && this.mediator.publish(this, xt[xt.SkipAd]);
                    }
                }
                var _s = e(101), As = e.n(_s), Is = e(102), Cs = e.n(Is);
                const Ts = 'Loading ad';
                class Ps extends Ji {
                    constructor() {
                        super(...arguments), this.eventList = [];
                    }
                    initComponent() {
                        this.Dv = this.Bc.getElementsByClassName(d.a.BackgroundImg)[0], this.Fv = this.Bc.getElementsByClassName(d.a.Icon)[0], this.Fv.innerHTML = Cs.a, this.Vv = this.Bc.getElementsByClassName(d.a.ButtonContainer)[0];
                        const t = this.Bc.getElementsByClassName(d.a.Button)[0];
                        this.Uv = this.js.createElementByString(`<a class="${ d.a.Wrapper }" href="#">`), this.Uv.target = kt.c.Blank, this.Uv.appendChild(t), this.Vv.innerHTML = '', this.Vv.appendChild(this.Uv), this.$v = this.Bc.getElementsByClassName(d.a.InfoContainer)[0], this.Nv = this.Bc.getElementsByClassName(d.a.FallbackContainer)[0], this.Hv = this.Bc.getElementsByClassName(d.a.SlotCountText)[0];
                    }
                    setBackgroundImg(t) {
                        Object(rt.h)(t) ? (Object(T.I)(this.Dv, d.h.DisplayNone), this.Dv.src = t) : Object(T.a)(this.Dv, d.h.DisplayNone);
                    }
                    setClickUrl(t) {
                        if (!Object(rt.h)(t))
                            return Object(T.O)(this.Nv), void Object(T.u)(this.$v);
                        Object(T.O)(this.$v), Object(T.u)(this.Nv), this.Uv.href = t;
                    }
                    setFallbackText(t, i) {
                        const e = t || 1, s = i || 1;
                        this.Hv.innerHTML = `${ Ts } ${ e }/${ s }`;
                    }
                }
                var Ms, Es = e(103), Ls = e.n(Es);
                class Rs {
                    constructor(t, i, e, s = (() => {
                        return {};
                    })(), n = (() => {
                        return {};
                    })()) {
                        this.js = t, this.hc = i, this.Bc = e, this.Wn = s, this.qv = {
                            [qi.PlayButton]: t => {
                                return this.zv(!1, t);
                            },
                            [qi.BigPlayButton]: t => {
                                return this.zv(!0, t);
                            },
                            [qi.VolumeProgress]: t => {
                                return new ss(t, this.js, this.hc, rs.a);
                            },
                            [qi.ExpandButton]: t => {
                                return new ue(t, this.js, this.hc, as.a, this.Wn.isMobile);
                            },
                            [qi.QualityMenu]: t => {
                                return new cs(t, this.js, this.hc, ls.a, xt[xt.Quality], qi.QualityMenu, this.Bc, this.Wn.isMobile);
                            },
                            [qi.Loader]: t => {
                                return new ds(t, this.js, this.hc, Be.a);
                            },
                            [qi.SkipAdButton]: t => {
                                return new ks(t, this.js, this.hc, As.a, this.Wn.isMobile);
                            },
                            [qi.AdLoadingScreen]: t => {
                                return new Ps(t, this.js, this.hc, Ls.a);
                            }
                        }, this.zv = (t, i) => {
                            return new Ki(i, this.js, this.hc, function (t = (() => {
                                return !1;
                            })()) {
                                return `\n    <cnx class="cnx-icon-button cnx-ui-btn-hoverable ${ t ? 'cnx-button-big-play' : '' }">\n        <cnx class="cnx-btn-container">\n            <cnx class="cnx-play-icon">${ ts.a }</cnx>\n            <cnx class="cnx-pause-icon">${ es.a }</cnx>\n        </cnx>\n    </cnx>\n`.trim();
                            }(t), this.Wn.isMobile);
                        }, this.Wv = t => {
                            return i => {
                                const e = this.qv[t];
                                if (e)
                                    return e(i);
                            };
                        }, this.Gv = new bs(this.js, this.hc, this.Wn.isMobile, Object.assign(Object.assign({}, Ss), n));
                    }
                    createComponent(t, i) {
                        const e = this.Wv(t)(i);
                        return e || (this.Gv.isGeneralComponent(t) ? this.Gv.getButton(t, i) : void 0);
                    }
                }
                !function (t) {
                    t[t.Mute = 0] = 'Mute', t[t.Unmute = 1] = 'Unmute';
                }(Ms || (Ms = {}));
                class Bs extends Yi {
                    constructor(t, i, e, s, n, r) {
                        super(t, i, e, s, r), this.eventList = [
                            xt[xt.Mute],
                            xt[xt.Unmute],
                            xt[xt.StateChanged],
                            ...this.eventList
                        ], this.Jv = 'Mute', this.Qv = 'Unmute', this.zt = n;
                    }
                    onClickHandler() {
                        this.zt === Ms.Mute ? (this.mediator.publish(this, xt[xt.Unmute]), this.setState(Ms.Unmute)) : (this.mediator.publish(this, xt[xt.Mute]), this.setState(Ms.Mute));
                    }
                    qp() {
                        this.zt === Ms.Mute ? Object(T.L)(this.Bc, 'cnx-sound-on', 'cnx-sound-off') : Object(T.L)(this.Bc, 'cnx-sound-off', 'cnx-sound-on');
                    }
                    get tooltip() {
                        return this.zt === Ms.Mute ? this.Qv : this.Jv;
                    }
                    initComponent() {
                        super.initComponent(), this.qp();
                    }
                    setState(t) {
                        this.zt !== t && (this.zt = t, this.qp(), this.mediator.publish(this, xt[xt.StateChanged]));
                    }
                    setVolume(t) {
                        t > 0 ? this.setState(Ms.Unmute) : this.setState(Ms.Mute);
                    }
                }
                class Ds extends ne {
                    constructor(t, i, e, s) {
                        super(i, e, s), this.mediator = t, this.Bc = this.eb.getRenderedDom();
                    }
                    getContainer() {
                        return this.Bc;
                    }
                    initComponent() {
                        this.eb.initComponents();
                    }
                    showComponent() {
                        Object(T.O)(this.Bc);
                    }
                    hideComponent() {
                        Object(T.u)(this.Bc);
                    }
                }
                class Fs extends Ds {
                    constructor(t, i, e, s) {
                        super(t, i, e, s), this.Xv = null, this.eventList = [
                            xt[xt.Volume],
                            xt[xt.VolumeHoverStart],
                            xt[xt.VolumeHoverStopped],
                            xt[xt.DraggingStopped],
                            xt[xt.DraggingStart],
                            xt[xt.HoverStart],
                            xt[xt.HoverEnd],
                            xt[xt.StateChanged]
                        ], this.Yv = 0.2, this.Kv = 600, this.Zv = !1, this.tm = t => {
                            clearTimeout(this.Xv), Object(T.a)(this.Bc, 'cnx-mod-hover'), this.mediator.publish(this, xt[xt.VolumeHoverStart]);
                        }, this.im = () => {
                            this.Zv || (null !== this.Xv && clearTimeout(this.Xv), this.Xv = setTimeout(() => {
                                Object(T.I)(this.Bc, 'cnx-mod-hover'), this.mediator.publish(this, xt[xt.VolumeHoverStopped]);
                            }, this.Kv));
                        }, this.em = this.Yv, this.nm = this.getComponent(qi.VolumeButton), this.rm = this.getComponent(qi.VolumeProgress);
                    }
                    handleComponentEvent(t, i, e) {
                        let s;
                        switch (t) {
                        case xt[xt.Volume]:
                            s = i.payload / 100, this.hm(s), this.am(i.payload);
                            break;
                        case xt[xt.Mute]:
                            s = 0, this.setVolumeProgress(0);
                            break;
                        case xt[xt.Unmute]:
                            s = this.em, this.setVolumeProgress(100 * this.em);
                            break;
                        case xt[xt.DraggingStopped]:
                            this.Zv = !1, this.mediator.publish(this, xt[xt.DraggingStopped]), this.im();
                            break;
                        case xt[xt.DraggingStart]:
                            this.Zv = !0, this.mediator.publish(this, xt[xt.DraggingStart]);
                            break;
                        case xt[xt.HoverStart]:
                            this.mediator.publish(this, xt[xt.HoverStart], { payload: { targetComponent: e } });
                            break;
                        case xt[xt.HoverEnd]:
                            this.mediator.publish(this, xt[xt.HoverEnd], { payload: { targetComponent: e } });
                            break;
                        case xt[xt.StateChanged]:
                            this.mediator.publish(this, xt[xt.StateChanged], { payload: { targetComponent: e } });
                        }
                        void 0 !== s && this.om(s);
                    }
                    hm(t) {
                        t < this.Yv ? this.em = this.Yv : this.em = t;
                    }
                    om(t) {
                        this.mediator.publish(this, xt[xt.Volume], { payload: t });
                    }
                    am(t) {
                        0 === t ? this.nm.setState(Ms.Mute) : this.nm.setState(Ms.Unmute);
                    }
                    setVolumeProgress(t) {
                        this.rm.setProgress(t);
                    }
                    initComponent() {
                        super.initComponent(), this.Bc.addEventListener('mouseenter', this.tm), this.Bc.addEventListener('mouseleave', this.im);
                    }
                    setVolume(t) {
                        const i = 100 * t;
                        this.am(i), this.setVolumeProgress(i);
                    }
                    destroy() {
                        super.destroy(), this.Bc.removeEventListener('mouseenter', this.tm), this.Bc.removeEventListener('mouseleave', this.im);
                    }
                }
                var Vs = `\n    <cnx class="cnx-volume-container">\n        <cnx class="cnx-ui-btn cnx-volume-btn">\n            [[${ qi.VolumeButton }]]\n        </cnx>\n        <cnx class="cnx-volume-bar">\n            [[${ qi.VolumeProgress }]]\n        </cnx>\n    </cnx>\n`.trim(), Us = e(104), $s = e.n(Us), Ns = e(105), Hs = e.n(Ns);
                var qs = {
                        [qi[qi.ShareButton]]: {
                            template: gs(qi.ShareButton, Hs.a),
                            tooltip: 'Share',
                            isHoverable: !0
                        },
                        [qi[qi.CastButton]]: {
                            template: gs(qi.CastButton, $s.a),
                            tooltip: 'Cast',
                            isHoverable: !0
                        }
                    }, zs = e(106), Ws = e.n(zs), Gs = e(107), Js = e.n(Gs), Qs = e(108), Xs = e.n(Qs);
                const Ys = 90 * qt.g, Ks = 'This live stream will start shortly', Zs = 'This live stream is not currently available. Please check again shortly', tn = 'Live stream not supported by browser';
                class en extends Ji {
                    constructor() {
                        super(...arguments), this.eventList = [], this.cm = null;
                    }
                    initComponent() {
                        this.um = this.js.createElementByString('<img/>'), this.Bc.appendChild(this.um), this.lm = this.Bc.getElementsByTagName('cnx-span')[0], this.dm = this.Bc.getElementsByClassName('cnx-live-message')[0], this.fm = this.Bc.getElementsByClassName('cnx-live-icon')[0];
                    }
                    setPosterSrc(t) {
                        Object(rt.h)(t) && (this.um.src = t);
                    }
                    setPosterAltText(t) {
                        this.um.alt = t;
                    }
                    setIconToStarting() {
                        this.fm.innerHTML = `${ Js.a }`;
                    }
                    setIconToEnded() {
                        this.fm.innerHTML = `${ Xs.a }`;
                    }
                    setMessageToStarting() {
                        this.pm(Ks);
                    }
                    setMessageToEnded() {
                        this.pm(Zs);
                    }
                    setMessageToNotSupported() {
                        this.pm(tn);
                    }
                    handleDelayedStart(t) {
                        Object(rt.e)(Date.parse(t)) && (this.bm = new Date(t), this.vm() > 0 && (this.mm(), clearInterval(this.cm), this.cm = setInterval(() => {
                            this.mm();
                        }, qt.f * qt.g)));
                    }
                    showMessage() {
                        Object(T.O)(this.fm), Object(T.O)(this.dm);
                    }
                    hideMessage() {
                        Object(T.u)(this.fm), Object(T.u)(this.dm);
                    }
                    show() {
                        Object(T.O)(this.Bc), Object(T.a)(this.Bc, d.h.Active);
                    }
                    hide() {
                        Object(T.I)(this.Bc, d.h.Active), Object(T.u)(this.Bc);
                    }
                    destroy() {
                        super.destroy(), clearInterval(this.cm);
                    }
                    mm() {
                        const t = this.vm();
                        if (t > 0) {
                            const i = this.gm(t);
                            this.pm(`Live in ${ i }`);
                        } else
                            this.pm(Ks), clearInterval(this.cm), this.cm = null;
                    }
                    vm() {
                        return (Math.max(this.bm.getTime(), Date.now()) - Date.now()) / qt.f;
                    }
                    gm(t) {
                        const i = t >= Ys ? Math.round(t / (qt.g * qt.c)) : Math.ceil(t / qt.g);
                        return `${ i } ${ t >= Ys ? 'hours' : `minute${ 1 === i ? '' : 's' }` }`;
                    }
                    pm(t) {
                        this.lm.innerHTML = t;
                    }
                }
                var sn = e(109), nn = e.n(sn);
                class rn extends Ji {
                    constructor() {
                        super(...arguments), this.eventList = [];
                    }
                    initComponent() {
                        this.hideComponent();
                    }
                }
                var hn, an = e(110), on = e.n(an);
                class cn extends Rs {
                    constructor(t, i, e, s, n) {
                        super(t, i, e, s, qs), this.js = t, this.Bc = e, this.Wn = s, this.ym = n, this.wm = {
                            [qi.VolumeControls]: t => {
                                return new Fs(t, this.js, Vs, this);
                            },
                            [qi.VolumeButton]: t => {
                                return new Bs(t, this.js, this.hc, Ws.a, Ms.Mute, this.Wn.isMobile);
                            },
                            [qi.SettingsButton]: t => {
                                return new de(t, this.js, this.hc, pe.a, this.Wn.isMobile);
                            },
                            [qi.CaptionButton]: t => {
                                return new ve(t, this.js, this.hc, ge.a, d.h.Active, this.Wn.closedCaptionDefault, this.Wn.isMobile);
                            },
                            [qi.UpNextBox]: t => {
                                return new Oe(t, this.js, this.hc, we.a, this.Wn.isMobile);
                            },
                            [qi.LogoComponent]: t => {
                                if (!Object(rt.a)(this.Wn.logoUrl) && !Object(rt.a)(this.Wn.logoPosition))
                                    throw new Error('custom logo is undefined');
                                return new xe(t, this.js, this.hc, '<cnx class="cnx-logo"></cnx>', {
                                    logoUrl: this.Wn.logoUrl,
                                    logoPosition: this.Wn.logoPosition
                                });
                            },
                            [qi.LogoOutstream]: t => {
                                if (!Object(rt.a)(this.Wn.logoUrl) && !Object(rt.a)(this.Wn.logoPosition))
                                    throw new Error('outstream logo undefined');
                                return new Ke(t, this.js, this.hc, '<img class="cnx-home-screen-logo" />', { logoUrl: this.Wn.logoUrl });
                            },
                            [qi.LivePoster]: t => {
                                return new en(t, this.js, this.hc, nn.a);
                            },
                            [qi.LiveIcon]: t => {
                                return new rn(t, this.js, this.hc, on.a);
                            },
                            [qi.ElapsedTimeLabel]: t => {
                                return new Se(t, this.js, this.hc, ke.a);
                            },
                            [qi.TotalDurationLabel]: t => {
                                return new Se(t, this.js, this.hc, ke.a);
                            },
                            [qi.ProgressBar]: t => {
                                return new Ie(t, this.js, this.hc, Te.a, this.Wn.isMobile);
                            },
                            [qi.QueStateOverlay]: t => {
                                return new Pe(t, this.js, this.hc, Be.a);
                            },
                            [qi.ContextMenu]: t => {
                                return new qe(t, this.js, this.hc, Le.a, xt[xt.ContextClick], qi.ContextMenu, this.Bc, this.Wn.isMobile);
                            },
                            [qi.ElementsSettingsMenu]: t => {
                                return new Ge(t, this.js, this.hc, Fe.a, xt[xt.SettingsMenu], qi.ElementsSettingsMenu, this.Bc, this.ym, this.Wn.isMobile, this.Wn.closedCaptionDefault);
                            },
                            [qi.CaptionComponent]: t => {
                                return new Qe(t, this.js, this.hc, Ye.a);
                            }
                        }, this.Om = t => {
                            return i => {
                                const e = this.wm[t];
                                if (e)
                                    return e(i);
                            };
                        };
                    }
                    createComponent(t, i) {
                        return this.Om(t)(i) || super.createComponent(t, i);
                    }
                }
                !function (t) {
                    t.InPod = 'cnx-ad-in-pod', t.AdMarkerInPodTextContainer = 'cnx-ad-marker-text', t.CardImage = 'cnx-ad-card-image', t.CardTitle = 'cnx-ad-card-title', t.AdUiContent = 'cnx-ui-ad-content';
                }(hn || (hn = {}));
                class un extends le {
                    constructor(t, i, e, s, n, r, h = (() => {
                        return {};
                    })(), a) {
                        super(t, n, i, r, a || new cn(i, s, n, h)), this.mediator = t, this.globalDomUtilsService = i, this.pl = e, this.$container = n, this.settings = h, this.rb = {
                            [y.PlayingState]: new te(this),
                            [y.PausedState]: new ee(this)
                        }, this.xm = 0, this.Nh = null, this.jm = t => {
                            Object(T.Q)(this.$uiContainer, d.g.UiInView, t);
                        }, this.Ob.setDistanceValues({
                            top: 4,
                            bottom: 4
                        }), this.rb[y.PausedState].enterState(), this.km = this.$container.querySelector(`.${ hn.CardImage }`), this._m = this.$container.querySelector(`.${ hn.CardTitle }`), this.Am = this.$container.querySelector(`.${ hn.AdUiContent }`);
                    }
                    handleComponentEvent(t, i, e) {
                        switch (super.handleComponentEvent(t, i, e), t) {
                        case xt[xt.Volume]:
                            this.mediator.publish(this, xt[xt.Volume], i);
                            break;
                        case xt[xt.Mute]:
                            this.mediator.publish(this, xt[xt.Mute]);
                            break;
                        case xt[xt.Unmute]:
                            this.mediator.publish(this, xt[xt.Unmute]);
                            break;
                        case qi[qi.CloseButton]:
                            this.mediator.publish(this, xt[xt.Close]);
                            break;
                        case xt[xt.Expand]:
                            this.mediator.publish(this, xt[xt.Expand]);
                            break;
                        case xt[xt.Collapse]:
                            this.mediator.publish(this, xt[xt.Collapse]);
                            break;
                        default:
                            this.mediator.publish(this, t, i);
                        }
                    }
                    updateDuration(t) {
                        const i = this.getComponent(qi.ProgressBar), e = this.getComponent(qi.TotalDurationLabel), s = this.getComponent(qi.SkipAdButton);
                        !t && s && (s.setSecondsUntilSkip(0), s.tickDown(0)), t || !i ? (this.elapsedTime = 0, this.duration = t, i && i.setProgress(Object(wi.e)(0, t, 0, 100, 0)), e && e.setTime(t), this.Im(this.xm)) : i.setProgress(100);
                    }
                    updateVolume(t) {
                        const i = this.getComponent(qi.VolumeControls), e = this.getComponent(qi.VolumeButton);
                        i && i.setVolume(t), e && e.setVolume(t);
                    }
                    get elapsedTime() {
                        return this.xm;
                    }
                    set elapsedTime(t) {
                        this.xm = t, this.Im(this.xm);
                    }
                    showSkipAdButton(t) {
                        const i = this.getComponent(qi.SkipAdButton);
                        i && (i.showComponent(), i.setSecondsUntilSkip(t));
                    }
                    hideSkipAdButton() {
                        const t = this.getComponent(qi.SkipAdButton);
                        t && t.hideComponent();
                    }
                    addPodAdMarker(t, i) {
                        Object(T.a)(this.$uiContainer, hn.InPod), Object(l.c)(this.$uiContainer.getElementsByClassName(hn.AdMarkerInPodTextContainer)).forEach(e => {
                            e.innerHTML = `${ t + 1 }/${ i }`;
                        });
                    }
                    removeAddPodAdMarker() {
                        Object(T.I)(this.$uiContainer, hn.InPod);
                    }
                    Im(t) {
                        const i = this.getComponent(qi.ElapsedTimeLabel);
                        i && i.setTime(t);
                        const e = this.getComponent(qi.SkipAdButton);
                        e && e.tickDown(t);
                    }
                    hideAdLoadingScreen() {
                        const t = this.getComponent(qi.AdLoadingScreen);
                        t && t.hideComponent(), Object(T.I)(this.$container, d.g.PodLoadingScreen);
                    }
                    showAdLoadingScreen(t, i, e, s) {
                        const n = this.getComponent(qi.AdLoadingScreen);
                        n && (n.showComponent(), n.setBackgroundImg(t), n.setClickUrl(i), n.setFallbackText(e, s), Object(T.a)(this.$container, d.g.PodLoadingScreen));
                    }
                    hideAdMarker() {
                        const t = this.$container.querySelector('.cnx-ad-marker');
                        Object(T.u)(t);
                    }
                    hideProgressBar() {
                        this.getComponent(qi.ProgressBar).hideComponent();
                    }
                    setContinueReadingCard(t) {
                        this.km.style.backgroundImage = `url("${ t.imageSrc }")`, this._m.innerHTML = t.title;
                    }
                    cardHasData() {
                        return Object(rt.h)(this.km.style.backgroundImage) && Object(rt.h)(this._m.innerHTML);
                    }
                    showContinueReadingCard(t) {
                        Object(T.a)(this.$container, d.g.AdShowCard), null === this.Nh && (this.Nh = this.globalDomUtilsService.requestAnimationFrameHelper(() => {
                            this.Nh = null, Object(T.N)(t, { height: `${ this.Am.clientHeight }px` });
                        }));
                    }
                    hideContinueReadingCard(t) {
                        Object(T.I)(this.$container, d.g.AdShowCard), Object(T.K)(t, 'height');
                    }
                    show() {
                        super.show(), this.pl.on(this.$uiContainer, this.jm, { threshold: 0.5 });
                    }
                    hide() {
                        super.hide();
                        Object(T.Q)(this.$uiContainer, d.g.UiInView, !1), this.pl.off(this.$uiContainer, this.jm);
                    }
                    expand() {
                        this.getComponent(qi.ExpandButton).setState(he.expand);
                    }
                    collapse() {
                        this.getComponent(qi.ExpandButton).setState(he.collapse);
                    }
                }
                var ln = e(111), dn = e.n(ln);
                class fn {
                    constructor(t) {
                        this.showExpandButton = t;
                    }
                    get template() {
                        return `\n            <cnx class="cnx-ui cnx-ui-ad">\n                <cnx class="cnx-ui-ad-content ${ this.showExpandButton ? 'cnx-ad-fs' : '' }">\n                    <cnx class="cnx-ad-marker">\n                        <cnx class="cnx-ad-marker-svg">${ dn.a }</cnx>\n                        <cnx class="cnx-ad-marker-text">1/1</cnx>\n                    </cnx>\n                    <cnx class="cnx-ad-close-button cnx-ui-btn">[[${ qi.CloseButton }]]</cnx>\n                    <cnx class="cnx-ad-buttons">\n                        <cnx class="cnx-ad-play-button cnx-ui-btn">[[${ qi.PlayButton }]]</cnx>\n                        <cnx class="cnx-ad-volume-controls">[[${ qi.VolumeControls }]]</cnx>\n                        <cnx class="cnx-ad-volume-button cnx-ui-btn">[[${ qi.VolumeButton }]]</cnx>\n                    </cnx>\n                    [[${ qi.SkipAdButton }]]\n                    ${ this.getExpandTemplate() }\n                    <cnx class="cnx-ad-progress-bar">[[${ qi.ProgressBar }]]</cnx>\n                </cnx>\n                <cnx class="cnx-ad-card">\n                    <svg class="${ hn.CardImage }" viewBox="0 0 16 9" />\n                    <cnx class="cnx-ad-card-text">\n                        <cnx>Continue watching</cnx>\n                        <cnx class="${ hn.CardTitle }"></cnx>\n                        <cnx>after the ad</cnx>\n                    </cnx>\n                </cnx>\n                [[${ qi.AdLoadingScreen }]]\n            </cnx>\n        `.trim();
                    }
                    getExpandTemplate() {
                        return this.showExpandButton ? `<cnx class="cnx-ad-expand-button cnx-ui-btn cnx-hide-on-volume-hover cnx-d-sm-none">[[${ qi.ExpandButton }]]</cnx>` : '';
                    }
                }
                var pn = e(19);
                const bn = 72, vn = 4, mn = 150, gn = 270;
                class yn extends o.a {
                    constructor(t, i, e, s, n, r, h) {
                        super(), this.mediator = t, this.jr = i, this.Cm = e, this.Tm = s, this.Pm = n, this.Mm = r, this.Zd = h, this.Em = [], this.firstAdShown = !1, this.Hr = !1, this.Lm = 0, this.Rm = !0, this.Bm = !1, this.Dm = !1, this.Fm = Pt.a.Normal, this.Vm = this.getNewAdManager(), this.subscribe(Ut.AdsEnabled, this.Vm, () => {
                            this.mediator.publish(this, Ut.AdsEnabled);
                        });
                    }
                    Um(t, i, e) {
                        this.Vm.initAd(t, i, this.Fm, 1, e, [{
                                container: this.$m,
                                width: t,
                                height: i,
                                type: h.ProtoAdType.Video
                            }]);
                    }
                    Nm() {
                        this.Hm.showSkipAdButton(this.jr.skipAdAfter);
                    }
                    qm(t) {
                        const i = this.Vm.getCurrentAdClickTrackingProperties();
                        i && this.Mm.services.TrackingService.trackAdClick(Object.assign(Object.assign({}, i), { type: t }));
                    }
                    zm(t) {
                        if (t.payload.adLoadedData.skipOffset && t.payload.adLoadedData.skipOffset >= 0)
                            return !1;
                        const i = this.Vm.getAdDuration();
                        switch (this.jr.adSkippability) {
                        case h.ProtoPlayerAdSkippability.IfLongerThan:
                            if (t.payload.adSkipMode === h.ProtoAdSkipMode.IfLongerThan31Sec && (i < this.jr.adsMustBeSkippableIfLongerThan || !i) || t.payload.adSkipMode === h.ProtoAdSkipMode.Never)
                                return !1;
                            break;
                        case h.ProtoPlayerAdSkippability.NoRestrictions:
                            if (t.payload.adSkipMode === h.ProtoAdSkipMode.Never || t.payload.adSkipMode === h.ProtoAdSkipMode.IfLongerThan31Sec && (i < Ht.d || !i))
                                return !1;
                        }
                        return !0;
                    }
                    Wm(t) {
                        this.Em.filter(i => {
                            return i !== t;
                        }).forEach(t => {
                            Object(T.a)(t, d.h.Hide);
                        });
                    }
                    Gm() {
                        this.Em.forEach(t => {
                            Object(T.I)(t, d.h.Hide);
                        });
                    }
                    updateFilterConfig(t) {
                        this.Vm.updateFilterConfig(t);
                    }
                    Jm() {
                        this.Dm = !1, this.Hm.hideAdLoadingScreen();
                    }
                    Qm() {
                        this.Hm.hideSkipAdButton();
                    }
                    Xm() {
                        let t;
                        Object.keys(Pt.b).forEach(i => {
                            this.subscribe(Pt.b[i], this.Vm, e => {
                                switch (t = !1, Pt.b[i]) {
                                case Pt.b.AdLoaded:
                                    const s = e;
                                    this.Bm = this.zm(e), this.Bm && (s.payload.adLoadedData.skipOffset = this.jr.skipAdAfter);
                                    break;
                                case Pt.b.AdPaused:
                                    this.Hm.changeState(y.PausedState);
                                    break;
                                case Pt.b.AdPlaying:
                                    this.Hm.changeState(y.PlayingState);
                                    break;
                                case Pt.b.AdImpression:
                                    this.Ym(e);
                                    break;
                                case Pt.b.AdSkipped:
                                    this.qm(h.ProtoAdClickTypeEnum.AdSkipClick), this.Gm(), t = !0;
                                    break;
                                case Pt.b.AdStopped:
                                case Pt.b.AdError:
                                    this.Gm(), t = !0;
                                    break;
                                case Pt.b.AdClickThru:
                                    this.qm(h.ProtoAdClickTypeEnum.AdClickThrough);
                                }
                                this.Rm && this.mediator.publish(this, Pt.b[i], e), this.Rm = !0, t && (this.Hr = !1, this.Hm.changeState(y.PausedState));
                            });
                        }), this.subscribe(xt[xt.Volume], this.Hm, ({payload: t}) => {
                            this.setVolume(t), this.qm(h.ProtoAdClickTypeEnum.VolumeClick);
                        }), this.subscribe(xt[xt.Play], this.Hm, () => {
                            this.qm(h.ProtoAdClickTypeEnum.PlayClick), this.play();
                        }), this.subscribe(xt[xt.Pause], this.Hm, () => {
                            this.qm(h.ProtoAdClickTypeEnum.PauseClick), this.pause();
                        }), this.subscribe(xt[xt.Close], this.Hm, () => {
                            this.mediator.publish(this, c.b.UserInteraction, { payload: { playback: !1 } }), this.mediator.publish(this, xt[xt.Close]);
                        }), this.subscribe(xt[xt.Mute], this.Hm, () => {
                            this.setVolume(0), this.qm(h.ProtoAdClickTypeEnum.MuteClick);
                        }), this.subscribe(xt[xt.Unmute], this.Hm, () => {
                            this.setVolume(1), this.qm(h.ProtoAdClickTypeEnum.UnmuteClick);
                        }), this.subscribe(Ut.DetachedFromDom, this.Vm, () => {
                            this.mediator.publish(this, Vt.DetachedFromDom);
                        }), this.relay(Tt.b.ImpressionPrice, this.Vm, this, this.mediator), this.relay(Tt.b.ImpressionRevenue, this.Vm, this, this.mediator);
                    }
                    Ym(t) {
                        this.Qm(), this.updateContinueReadingCard(), t.payload.adDuration = this.Vm.getAdDuration(), t.payload.adDuration || this.firstAdShown || this.show(), this.firstAdShown = !0, this.Hr = !0, this.Bm && this.Nm(), this.Hm.updateDuration(t.payload.adDuration), this.Hm.changeState(y.PlayingState), this.Km = t.payload.clickThroughUrl, this.Wm(t.payload.selectedAdSlot), this.Pm.getTotalNumberOfSlots() > 1 ? this.Hm.addPodAdMarker(this.Pm.getCurrentSlotIndex(), this.Pm.getTotalNumberOfSlots()) : this.Hm.removeAddPodAdMarker();
                    }
                    Zm(t) {
                        this.Cm.appendChild(t);
                    }
                    tg(t = (() => {
                        return '';
                    })()) {
                        return this.Mm.services.GlobalDomUtilsService.createElementByString(`<div class= "cnx-ad-container cnx-full-height ${ t }"></div>`);
                    }
                    ig() {
                        this.$m = this.tg(), this.Zm(this.$m), this.Em.push(this.$m);
                    }
                    eg(t = (() => {
                        return !1;
                    })()) {
                        const i = (e = this.jr, s = this.Mm.config, {
                            logoUrl: e.logoUrl,
                            isMobile: s.isMobile,
                            closeButtonMode: e.closeButtonMode,
                            floatingCloseButtonMode: e.floatingSettings.floatingCloseButtonMode,
                            isCloseButton: e.isCloseButton,
                            uiComponentsVisibility: e.uiComponentsVisibility,
                            sharingDestinations: e.sharingDestinations
                        });
                        var e, s;
                        this.Hm = new un(this, this.Mm.services.GlobalDomUtilsService, this.Mm.services.ViewabilityService, this.Mm.services.InteractionService, this.Cm, new fn(t).template, i), this.Hm.hide();
                    }
                    start(t, i, e, s = (() => {
                        return !1;
                    })()) {
                        try {
                            this.eg(s), this.ig(), this.Um(t, i, e), this.setVolume(e), this.Xm();
                        } catch (t) {
                            Object(n.a)({
                                callStack: t.stack,
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                exception: t.message,
                                message: 'adhandler_start'
                            });
                        }
                    }
                    getVolume() {
                        return this.Lm;
                    }
                    hide() {
                        Object(T.I)(this.Cm, d.g.Ad, d.g.AdOverlayType), this.Hm.hide();
                    }
                    show() {
                        const t = [d.g.Ad], i = this.Vm.getCurrentAdType();
                        i === h.ProtoAdType.Overlay && t.push(d.g.AdOverlayType), this.sg = i, Object(T.a)(this.Cm, ...t), this.Hm.show(), this.Hm.updateVolume(this.Lm), this.Jm();
                    }
                    getAdContainerWidth() {
                        return this.Vm.getAdContainerWidth();
                    }
                    setVolume(t) {
                        this.Lm = t, this.Vm.setAdVolume(t), this.Hm && this.Hm.updateVolume(t), this.mediator.publish(this, c.b.UserInteraction, { payload: { volume: !0 } }), this.mediator.publish(this, xt[xt.Volume], { payload: { volume: t } });
                    }
                    resizeAd(t, i, e) {
                        this.setVastViewMode(e), this.updateContinueReadingCard(), this.mediator.publish(this, Vt.AdSlotResized, {
                            payload: {
                                width: t,
                                height: i
                            }
                        });
                    }
                    adStateChange(t, i) {
                        this.Vm.onAdStateChange(t, i);
                    }
                    contentChanged() {
                        this.Vm.onContentChange();
                    }
                    get inImpression() {
                        return this.Hr;
                    }
                    get adInWin() {
                        return this.Vm.adInWin;
                    }
                    get inAdPodLoadingState() {
                        return this.Dm;
                    }
                    resumeWithoutUserInteraction() {
                        this.Vm.resumeAd(!1);
                    }
                    play() {
                        this.Vm.resumeAd(!0), this.mediator.publish(this, c.b.UserInteraction, { payload: { playback: !0 } });
                    }
                    ng(t) {
                        if (Object(pn.b)('cnxShowAdCard', this.Mm.config.pageUrl))
                            return !0;
                        let i = !1;
                        if (t.adType === h.ProtoAdType.Video) {
                            const e = this.Cm.clientWidth * (t.heightRatio / t.widthRatio);
                            i = this.Cm.clientHeight - e >= bn + vn;
                        }
                        return t.adType === h.ProtoAdType.Overlay && (i = this.Cm.clientHeight - t.height >= bn + vn), i;
                    }
                    updateContinueReadingCard() {
                        const t = this.Vm.getAdMediaSize();
                        Object(rt.a)(t) && (this.ng(this.Vm.getAdMediaSize()) ? this.Hm.showContinueReadingCard(this.$m) : this.Hm.hideContinueReadingCard(this.$m));
                    }
                    setContinueReadingCard(t) {
                        this.Hm.setContinueReadingCard({
                            imageSrc: Ni.getSmartCroppedImageUrl(t.imageSrc, gn, mn, this.Zd),
                            title: t.title
                        });
                    }
                    pause() {
                        this.Vm.pauseAd(!0), this.mediator.publish(this, c.b.UserInteraction, { payload: { playback: !1 } });
                    }
                    stopAd(t) {
                        const i = () => {
                            this.mediator.publish(this, Pt.b.AdStopped), this.Rm = !1;
                        };
                        this.Vm && this.inImpression ? (i(), this.Vm.stopAd(t)) : this.inAdPodLoadingState && i();
                    }
                    skipAd() {
                        this.Vm && this.inImpression ? this.Vm.skipAd() : this.Dm && (this.mediator.publish(this, Pt.b.AdSkipped), this.Jm());
                    }
                    userInteraction(t) {
                        this.Vm.userInteraction(t);
                    }
                    enableAds() {
                        this.Vm.enableAds();
                    }
                    enterAdPodLoadingState() {
                        this.Dm = !0;
                        const {
                            width: t,
                            height: i
                        } = this.Vm.getLastAdSlot(this.sg);
                        this.Hm.showAdLoadingScreen(Ni.getSmartCroppedImageUrl(this.rg, t, i, this.Zd), this.Km, this.Pm.getNextSlotIndex(), this.Pm.getTotalNumberOfSlots());
                    }
                    setAdLoadingBackgroundUrl(t) {
                        this.rg = t;
                    }
                    updatePodRemainingTime(t) {
                        this.Vm.updatePodRemainingTime(t);
                    }
                    newAdOpportunity() {
                        this.Vm.newAdOpportunity();
                    }
                    disableAds(t) {
                        this.Vm.disableAds(t);
                    }
                    setVastViewMode(t) {
                        this.Fm = t, this.Vm.setVastViewMode(t);
                    }
                    destroy() {
                        var t, i, e;
                        null === (t = this.Vm) || void 0 === t || t.disableAds(gi.Unknown), null === (i = this.Hm) || void 0 === i || i.destroy(), null === (e = this.Vm) || void 0 === e || e.destroy();
                    }
                }
                var wn, On = e(28);
                !function (t) {
                    t.AppNexus = 'appnexus', t.DistrictM = 'districtm', t.IndexExchange = 'ix', t.Lkqd = 'lkqd', t.OneVideo = 'oneVideo', t.OpenX = 'openx', t.Pubmatic = 'pubmatic', t.RhythmOne = 'rhythmone', t.Rubicon = 'rubicon', t.SpotX = 'spotx', t.Telaria = 'telaria', t.MediaNet = 'medianet', t.Adman = 'adman', t.IronSource = 'ironsource', t.Undertone = 'undertone', t.SynacorMedia = 'synacormedia', t.AmxRTB = 'amx', t.Smaato = 'smaato', t.SmartAdServer = 'smartadserver';
                }(wn || (wn = {}));
                const xn = {
                        [wn.Lkqd]: On.c.Lkqd,
                        [wn.RhythmOne]: On.c.RhythmOne,
                        [wn.Telaria]: On.c.Telaria,
                        [wn.IronSource]: On.c.IronSource,
                        [wn.Undertone]: On.c.Undertone,
                        [wn.SynacorMedia]: On.c.SynacorMedia
                    }, Sn = [
                        wn.AppNexus,
                        wn.DistrictM,
                        wn.IndexExchange,
                        wn.OneVideo,
                        wn.OpenX,
                        wn.Pubmatic,
                        wn.RhythmOne,
                        wn.Rubicon,
                        wn.SpotX,
                        wn.Telaria,
                        wn.MediaNet,
                        wn.Adman,
                        wn.IronSource,
                        wn.Undertone,
                        wn.AmxRTB,
                        wn.Smaato,
                        wn.SmartAdServer
                    ], jn = [
                        wn.AppNexus,
                        wn.DistrictM,
                        wn.IndexExchange,
                        wn.OneVideo,
                        wn.OpenX,
                        wn.Pubmatic,
                        wn.RhythmOne,
                        wn.Rubicon,
                        wn.SpotX,
                        wn.Telaria,
                        wn.MediaNet,
                        wn.Adman,
                        wn.AmxRTB,
                        wn.Smaato,
                        wn.SmartAdServer
                    ], kn = [
                        wn.OneVideo,
                        wn.IndexExchange,
                        wn.Rubicon,
                        wn.Pubmatic,
                        wn.SpotX,
                        wn.AppNexus,
                        wn.DistrictM,
                        wn.OpenX,
                        wn.MediaNet,
                        wn.Adman,
                        wn.IronSource,
                        wn.Undertone,
                        wn.SynacorMedia,
                        wn.AmxRTB,
                        wn.Smaato,
                        wn.SmartAdServer
                    ], _n = 'https://prebid.adnxs.com/pbc/v1/cache', An = 180, In = '//cds.connatix.com/p/plugins/prebid4.43.0-1.js', Cn = [
                        'video/mp4',
                        'video/webm',
                        'application/javascript',
                        'video/ogg',
                        'video/mpeg'
                    ], Tn = {
                        VAST_1: 1,
                        VAST_2: 2,
                        VAST_3: 3,
                        VAST_1_WRAPPER: 4,
                        VAST_2_WRAPPER: 5,
                        VAST_3_WRAPPER: 6,
                        VAST_4: 7,
                        VAST_4_WRAPPER: 8
                    }, Pn = 1, Mn = {
                        VPAID_1: 1,
                        VPAID_2: 2
                    }, En = 2, Ln = 41;
                function Rn(t) {
                    return (t + Ln) * En;
                }
                function Bn(t) {
                    return t / En - Ln;
                }
                class Dn {
                    constructor() {
                        this.hg = Date.now(), this.ag = { advertiser: {} };
                    }
                    addPrebid(t) {
                        Object(rt.a)(this.ag.advertiser[t]) || this.og(t), this.ag.advertiser[t].prebidData.push({ timestamp: Date.now() });
                    }
                    addBid(t, i) {
                        Object(rt.a)(this.ag.advertiser[t]) || this.og(t), this.ag.advertiser[t].bidsFloorPriceList.push({
                            timestamp: Date.now(),
                            floorPrice: i
                        });
                    }
                    addImpression(t, i) {
                        Object(rt.a)(this.ag.advertiser[t]) || this.og(t), this.ag.advertiser[t].impressionRevenueList.push({
                            timestamp: Date.now(),
                            obfuscatedPrice: i
                        });
                    }
                    shouldRequestLineItem(t) {
                        const i = Date.now();
                        return !(this.cg(i, 3) && this.ug(t, i, 5) < -0.5 && this.dg(t, i, 3) >= 11.5 && this.fg(t, i, 10, 0.1) < 0.35);
                    }
                    cg(t, i) {
                        return t - this.hg >= i * qt.e;
                    }
                    ug(t, i, e) {
                        const s = this.ag.advertiser[t];
                        if (!Object(rt.a)(s))
                            return -1;
                        const n = this.pg(s.impressionRevenueList, i, e).map(t => {
                            return t.obfuscatedPrice;
                        });
                        let r = 0;
                        return Object(l.h)(n) && (r = n.reduce((t, i) => {
                            return t + Rn(i);
                        })), this.bg(r);
                    }
                    dg(t, i, e) {
                        const s = this.ag.advertiser[t];
                        if (!Object(rt.a)(s))
                            return -1;
                        const n = this.pg(s.prebidData, i, e).length;
                        return this.bg(n);
                    }
                    fg(t, i, e, s) {
                        const n = this.ag.advertiser[t];
                        if (!Object(rt.a)(n))
                            return -1;
                        const r = this.pg(n.impressionRevenueList, i, e).map(t => {
                                return t.floorPrice;
                            }), h = this.vg(r, s);
                        return this.bg(h);
                    }
                    pg(t, i, e) {
                        const s = i - qt.f, n = i - e * qt.e, r = [];
                        for (let i = t.length - 1; i >= 0 && t[i].timestamp >= n; i--)
                            t[i].timestamp <= s && r.push(t[i]);
                        return r;
                    }
                    bg(t) {
                        return 0 === t ? -1 : t;
                    }
                    og(t) {
                        this.ag.advertiser[t] = {
                            prebidData: [],
                            bidsFloorPriceList: [],
                            impressionRevenueList: []
                        };
                    }
                    vg(t, i) {
                        if (0 === t.length)
                            return 0;
                        if (i <= 0)
                            return t[0];
                        if (i >= 1)
                            return t[t.length - 1];
                        const e = ((t = t.sort((t, i) => {
                                return t - i;
                            })).length - 1) * i, s = Math.floor(e), n = s + 1, r = e % 1;
                        return n >= t.length ? t[s] : t[s] * (1 - r) + t[n] * r;
                    }
                }
                class Fn {
                    constructor() {
                        this.mg = new Set();
                    }
                    addPlatformCappedLineItemIdList(t) {
                        t.forEach(t => {
                            Object(rt.h)(t) && this.mg.add(t);
                        });
                    }
                    isLineItemPlatformCapped({
                        advertiserLineItemId: t,
                        publisherLineItemId: i
                    }) {
                        return this.mg.has(t) || this.mg.has(i);
                    }
                }
                class Vn {
                    constructor() {
                        this.gg = new ji(), this.yg = new ji(), this.wg = new ji(), this.Og = new ji(), this.xg = new ji(), this.Sg = new ji(), this.callingLineItems = [], this.bids = [], this.bidsLoading = [], this.bidsReady = [], this.bidStarted = null;
                    }
                    get onBid() {
                        return this.gg.asObservable();
                    }
                    get onBidConsumed() {
                        return this.yg.asObservable();
                    }
                    get onBidLoadingConsumed() {
                        return this.wg.asObservable();
                    }
                    get onBidReady() {
                        return this.Og.asObservable();
                    }
                    get onBidStarted() {
                        return this.xg.asObservable();
                    }
                    get onBidReadyConsumed() {
                        return this.Sg.asObservable();
                    }
                    getAllBids() {
                        const t = this.bidStarted ? [this.bidStarted] : [];
                        return [
                            ...this.getAllBidsExceptStartedBid(),
                            ...t
                        ];
                    }
                    getAllBidsExceptStartedBid() {
                        return [
                            ...this.bids,
                            ...this.bidsLoading,
                            ...this.bidsReady
                        ];
                    }
                    addBid(t) {
                        this.bids.push(t), this.gg.next(t);
                    }
                    moveBidToLoading(t) {
                        this.bidsLoading.push(t), this.consumeBid(t);
                    }
                    moveBidToReady(t) {
                        this.bidsReady.push(t), this.consumeBidLoading(t), this.Og.next(t);
                    }
                    moveBidToStarted(t) {
                        this.bidStarted = t, this.consumeBidReady(t), this.xg.next(t);
                    }
                    consumeBid(t) {
                        Object(l.k)(this.bids, t), this.yg.next(t);
                    }
                    consumeBidLoading(t) {
                        Object(l.k)(this.bidsLoading, t), this.wg.next(t);
                    }
                    consumeBidReady(t) {
                        Object(l.k)(this.bidsReady, t);
                    }
                    consumeBidStarted(t) {
                        this.bidStarted = null, this.Sg.next(t);
                    }
                }
                class Un {
                    constructor() {
                        this.creativeView = [], this.start = [], this.firstQuartile = [], this.midpoint = [], this.thirdQuartile = [], this.impression = [], this.complete = [], this.mute = [], this.unmute = [], this.pause = [], this.rewind = [], this.resume = [], this.fullscreen = [], this.exitFullscreen = [], this.expand = [], this.collapse = [], this.close = [], this.closeLinear = [], this.acceptInvitationLinear = [], this.acceptInvitation = [], this.skip = [], this.progress = [], this.playerExpand = [], this.playerCollapse = [], this.adExpand = [], this.adCollapse = [], this.fullScreen = [], this.canPlayThrough = [], this.stalled = [], this.waiting = [], this.otherAdInteraction = [];
                    }
                }
                class $n {
                    constructor(t) {
                        this.clickTrackings = [], this.customClicks = [], this.errorUrls = [], this.impressions = [], this.trackingEvents = new Un(), t.inLine ? this.jg(t.inLine) : this.kg(t.wrapper);
                    }
                    jg(t) {
                        this._g(t.errors), this.Ag(t.impressions), this.Ig(t.creatives);
                    }
                    kg(t) {
                        this._g(t.errors), this.Ag(t.impressions), this.Ig(t.creatives);
                    }
                    Cg(t) {
                        this.Tg(t.trackingEvents), this.Pg(t.videoClicks);
                    }
                    Pg(t) {
                        t && (this.Mg(t.clickTrackings), this.Eg(t.customClicks));
                    }
                    Mg(t) {
                        this.clickTrackings.push(...t);
                    }
                    Eg(t) {
                        this.customClicks.push(...t);
                    }
                    Tg(t) {
                        t.forEach(t => {
                            try {
                                this.trackingEvents[t.name].push(t.uri);
                            } catch (i) {
                                Object(n.a)({
                                    message: 'AdManager_VastResponse_tracker',
                                    exception: `${ t.name }`,
                                    callStack: i.stack,
                                    level: h.ProtoLoggingLevelEnum.INFO
                                });
                            }
                        });
                    }
                    Ig(t) {
                        t.forEach(t => {
                            t.linear && this.Cg(t.linear);
                        });
                    }
                    _g(t) {
                        this.errorUrls.push(...t);
                    }
                    Ag(t) {
                        this.impressions.push(...t);
                    }
                }
                const Nn = {
                    [h.ProtoTrackerTriggerType.Impression]: 'adImpression',
                    [h.ProtoTrackerTriggerType.Complete25Pc]: 'adQuartileFirst',
                    [h.ProtoTrackerTriggerType.Complete50Pc]: 'adQuartileSecond',
                    [h.ProtoTrackerTriggerType.Complete75Pc]: 'adQuartileThird',
                    [h.ProtoTrackerTriggerType.ViewCompletion]: 'adQuartileFourth',
                    [h.ProtoTrackerTriggerType.VideoClick]: 'adClick',
                    [h.ProtoTrackerTriggerType.Pause]: 'adPause',
                    [h.ProtoTrackerTriggerType.Resume]: 'adResume',
                    [h.ProtoTrackerTriggerType.Mute]: 'adMute',
                    [h.ProtoTrackerTriggerType.Unmute]: 'adUnmute'
                };
                class Hn {
                    constructor() {
                        this.adError = [], this.adWin = [], this.adImpression = [], this.adStarted = [], this.adVideoStart = [], this.adQuartileFirst = [], this.adQuartileSecond = [], this.adQuartileThird = [], this.adQuartileFourth = [], this.adClick = [], this.adPause = [], this.adResume = [], this.adSkip = [], this.adMute = [], this.adUnmute = [], this.adUserClose = [], this.adUserAcceptInvitation = [], this.adUserMinimize = [];
                    }
                    static track(t, i, e, s) {
                        if (!Array.isArray(t))
                            return;
                        const {
                                width: n,
                                height: r
                            } = s.adContainerState.get(e.adType), {adBreakType: a} = s.adBreakState, {
                                mediaDescription: o,
                                mediaDuration: c,
                                mediaId: u,
                                mediaUrl: l,
                                mediaTitle: d
                            } = s.media;
                        t.forEach(t => {
                            if (t.url)
                                try {
                                    const s = i.replace(t.url, e.vendorId, {
                                        adMacros: {
                                            adWidth: n,
                                            adHeight: r,
                                            adPostion: a
                                        },
                                        mediaMacros: {
                                            mediaDescription: o,
                                            mediaDuration: c,
                                            mediaId: u,
                                            mediaUrl: l,
                                            mediaTitle: d
                                        }
                                    });
                                    switch (t.type) {
                                    case h.ProtoTrackerType.Image:
                                        Object(Li.l)([s], window);
                                        break;
                                    case h.ProtoTrackerType.Javascript:
                                        Object(T.x)({ src: s }, window.document.head, window);
                                    }
                                } catch (t) {
                                }
                        });
                    }
                }
                function qn(t, i) {
                    t.forEach(t => {
                        return function (t, i) {
                            (function (t, i) {
                                return i[Nn[t]];
                            }(t.trigger, i).push({
                                type: t.type,
                                url: t.url
                            }));
                        }(t, i);
                    });
                }
                function zn(t) {
                    return {
                        type: h.ProtoTrackerType.Image,
                        url: t
                    };
                }
                function Wn(t) {
                    return t.map(t => {
                        return zn(t);
                    });
                }
                var Gn;
                !function (t) {
                    t[t.HandlingSdkUrl = 0] = 'HandlingSdkUrl', t[t.NetworkRequestUrl = 1] = 'NetworkRequestUrl', t[t.XmlInvalidString = 2] = 'XmlInvalidString', t[t.XmlParseGeneral = 3] = 'XmlParseGeneral', t[t.XmlInvalidTree = 4] = 'XmlInvalidTree', t[t.XmlInvalidAd = 5] = 'XmlInvalidAd', t[t.XmlAdaptorWrapperLimit = 6] = 'XmlAdaptorWrapperLimit', t[t.HTMLUnknownMimeType = 7] = 'HTMLUnknownMimeType', t[t.ImaAdsManagerInit = 8] = 'ImaAdsManagerInit', t[t.ImaVastEmptyResponse = 9] = 'ImaVastEmptyResponse', t[t.ImaRequestException = 10] = 'ImaRequestException', t[t.ImaTimeout = 11] = 'ImaTimeout', t[t.ImaInvalidResponse = 12] = 'ImaInvalidResponse';
                }(Gn || (Gn = {}));
                const Jn = {
                    [Gn.HandlingSdkUrl]: h.ConnatixNoBidReasonEnum.CsRequestException,
                    [Gn.NetworkRequestUrl]: h.ConnatixNoBidReasonEnum.CsRequestException,
                    [Gn.XmlInvalidString]: h.ConnatixNoBidReasonEnum.CsEmptyResponse,
                    [Gn.XmlParseGeneral]: h.ConnatixNoBidReasonEnum.CsInvalidResponse,
                    [Gn.XmlInvalidTree]: h.ConnatixNoBidReasonEnum.CsInvalidResponse,
                    [Gn.XmlInvalidAd]: h.ConnatixNoBidReasonEnum.CsInvalidResponse,
                    [Gn.XmlAdaptorWrapperLimit]: h.ConnatixNoBidReasonEnum.CsInvalidResponse,
                    [Gn.HTMLUnknownMimeType]: h.ConnatixNoBidReasonEnum.CsInvalidResponse,
                    [Gn.ImaAdsManagerInit]: h.ConnatixNoBidReasonEnum.CsRequestException,
                    [Gn.ImaVastEmptyResponse]: h.ConnatixNoBidReasonEnum.CsInvalidResponse,
                    [Gn.ImaRequestException]: h.ConnatixNoBidReasonEnum.CsRequestException,
                    [Gn.ImaTimeout]: h.ConnatixNoBidReasonEnum.Timeout,
                    [Gn.ImaInvalidResponse]: h.ConnatixNoBidReasonEnum.CsInvalidResponse
                };
                var Qn, Xn, Yn = e(9);
                !function (t) {
                    t.VOLUME_DETECTED = 'volume_detected', t.MALWARE_DETECTED = 'malware_detected', t.BADURI_DETECTED = 'baduri_detected';
                }(Qn || (Qn = {})), function (t) {
                    t[t.None = 0] = 'None', t[t.Mute = 1] = 'Mute', t[t.ScrollHijack = 2] = 'ScrollHijack', t[t.MemoryLeak = 4] = 'MemoryLeak', t[t.Malware = 8] = 'Malware', t[t.All = 15] = 'All';
                }(Xn || (Xn = {}));
                const Kn = '2.0';
                class Zn {
                    constructor() {
                        this.Rg = new ji();
                    }
                    get onVpaidEvent() {
                        return this.Rg.asObservable();
                    }
                    handshakeVersion(t = (() => {
                        return Kn;
                    })()) {
                        return '2.0';
                    }
                }
                var tr, ir;
                !function (t) {
                    t[t.Win = 0] = 'Win', t[t.AdLoaded = 1] = 'AdLoaded', t[t.AdStarted = 2] = 'AdStarted', t[t.AdImpression = 3] = 'AdImpression';
                }(tr || (tr = {}));
                class er {
                    constructor(t) {
                        this.Bg = t, this.Dg = new Map(), Object(rt.a)(this.Bg.settings.bidLifecycle) || (this.Bg.settings.bidLifecycle = {});
                    }
                    onTrackingLifecycleEvent(t) {
                        switch (this.Dg.set(t, Date.now()), t) {
                        case tr.AdLoaded:
                            this.Fg();
                            break;
                        case tr.AdImpression:
                            this.Vg();
                        }
                    }
                    Fg() {
                        this.Bg.settings.bidLifecycle.winToAdLoadedTime = this.Ug;
                    }
                    Vg() {
                        this.Bg.settings.bidLifecycle.startAdToImpressionTime = this.$g;
                    }
                    get $g() {
                        return this.Dg.get(tr.AdImpression) && this.Dg.get(tr.AdStarted) ? this.Dg.get(tr.AdImpression) - this.Dg.get(tr.AdStarted) : 0;
                    }
                    get Ug() {
                        return this.Dg.get(tr.AdLoaded) && this.Dg.get(tr.Win) ? this.Dg.get(tr.AdLoaded) - this.Dg.get(tr.Win) : 0;
                    }
                }
                function sr(t) {
                    return [
                        t - (t - t % 100),
                        t - t % 100
                    ];
                }
                function nr(t, i = (() => {
                    return !1;
                })()) {
                    if (i)
                        return Math.random();
                    const {
                        successRate: e,
                        cpm: s,
                        priority: n
                    } = t;
                    let r = 0 === e ? Math.random() : e;
                    return r = 1, 1 * s + Ht.f * n;
                }
                function rr(t) {
                    switch (t.creativeType) {
                    case h.ProtoCreativeTypeEnum.Tam:
                    case h.ProtoCreativeTypeEnum.TamDeal:
                    case h.ProtoCreativeTypeEnum.Rtb:
                        return Rn(t.obfuscatedPrice);
                    case h.ProtoCreativeTypeEnum.HeaderBidder:
                        return t.cpm;
                    default:
                        return t.floorPrice;
                    }
                }
                !function (t) {
                    t.IMPRESSION_TIMEOUT = 'IMPRESSION_TIMEOUT', t.VIEWABLE_IMPRESSION_TIMEOUT = 'VIEWABLE_IMPRESSION_TIMEOUT', t.SKIP_AD_TIMEOUT = 'SKIP_AD_TIMEOUT', t.STOP_AD_TIMEOUT = 'STOP_AD_TIMEOUT', t.AD_LOADED_TIMEOUT = 'AD_LOADED_TIMEOUT';
                }(ir || (ir = {}));
                const hr = 500, ar = 'cnx-ad-bid-slot-selected', or = 'Connatix Ad';
                class cr extends Zn {
                    constructor(t) {
                        super(), this.settings = t, this.Ng = null, this.Hg = null, this.qg = null, this.zg = null, this.Wg = void 0, this.Gg = !1, this.Iu = !1, this.Jg = !1, this.Qg = !1, this.Xg = null, this.jl = [], this.Yg = new ji(), this.Kg = () => {
                            this.Zg({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.Timeout }
                            }), this.ty();
                        }, this.iy = () => {
                            this.ey(), this.sy(ir.VIEWABLE_IMPRESSION_TIMEOUT).clearTimeout(), this.settings.viewabilityService.off(this.Ng, this.ny);
                        }, this.ny = t => {
                            const i = this.sy(ir.VIEWABLE_IMPRESSION_TIMEOUT);
                            t ? i.timeoutHandle.timeoutId || i.setTimeout() : i.clearTimeout();
                        }, this.hy = () => {
                            this.Zg({ type: Pt.b.AdSkipped }), this.ty();
                        }, this.ay = () => {
                            this.Zg({
                                type: Pt.b.AdStopped,
                                payload: { shouldTrackPostBid: !0 }
                            }), this.ty();
                        }, this.oy = () => {
                            this.Zg({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.TimeoutLoaded }
                            }), this.ty();
                        }, this.sy = t => {
                            const i = this.uy[t];
                            return {
                                timeoutHandle: i,
                                setTimeout: () => {
                                    i.timeoutId = mi.setTimeout(() => {
                                        i.callback();
                                    }, i.timeout);
                                },
                                clearTimeout: () => {
                                    null !== i.timeoutId && (mi.clearTimeout(i.timeoutId), i.timeoutId = null);
                                }
                            };
                        }, this.creativeId = this.settings.externalCreativeId, this.ly = `cnx-ad-bid-slot-id-${ this.settings.requestMetadata.data.cnxBidId }`, this.py = `cnx-ad-slot-${ this.settings.id }`;
                        const {adType: i} = this.settings.adManagerLineItem.protoLineItem;
                        this.uy = {
                            [ir.IMPRESSION_TIMEOUT]: {
                                callback: this.Kg,
                                timeout: 25000,
                                timeoutId: null
                            },
                            [ir.VIEWABLE_IMPRESSION_TIMEOUT]: {
                                callback: this.iy,
                                timeout: i === M.ProtoAdType.Video ? Ht.b : Ht.a,
                                timeoutId: null
                            },
                            [ir.SKIP_AD_TIMEOUT]: {
                                callback: this.hy,
                                timeout: 500,
                                timeoutId: null
                            },
                            [ir.STOP_AD_TIMEOUT]: {
                                callback: this.ay,
                                timeout: 500,
                                timeoutId: null
                            },
                            [ir.AD_LOADED_TIMEOUT]: {
                                callback: this.oy,
                                timeout: 25000,
                                timeoutId: null
                            }
                        }, this.Zd = t.urlSuffixerService;
                    }
                    getPrice() {
                        const {
                            advertiserLineItemId: t,
                            creativeType: i,
                            floorPrice: e,
                            lineItemPriority: s
                        } = this.settings.adManagerLineItem.protoLineItem;
                        return rr({
                            lineItemId: t,
                            bidId: this.settings.id,
                            creativeType: i,
                            floorPrice: e,
                            obfuscatedPrice: this.settings.obfuscatedPrice,
                            successRate: this.settings.successRate,
                            priority: s,
                            cpm: this.settings.cpm
                        });
                    }
                    skipAd() {
                        this.sy(ir.SKIP_AD_TIMEOUT).setTimeout();
                    }
                    stopAd(t) {
                        this.sy(ir.STOP_AD_TIMEOUT).setTimeout();
                    }
                    startAd() {
                        this.Qg && Object(n.a)({
                            message: 'AdManager_ABaseBidAdaptor_samebid',
                            exception: 'startAd',
                            callStack: `adv:${ this.settings.adManagerLineItem.protoLineItem.advertiserLineItemId } bidid: ${ this.py }`,
                            level: h.ProtoLoggingLevelEnum.FATAL
                        }), this.Qg = !0, this.sy(ir.IMPRESSION_TIMEOUT).setTimeout();
                    }
                    initAd(t, i, e, s, r, a, o) {
                        this.Jg && Object(n.a)({
                            message: 'AdManager_ABaseBidAdaptor_samebid',
                            exception: 'initAd',
                            callStack: `adv:${ this.settings.adManagerLineItem.protoLineItem.advertiserLineItemId } bidid: ${ this.py }`,
                            level: h.ProtoLoggingLevelEnum.FATAL
                        }), this.Jg = !0, this.sy(ir.AD_LOADED_TIMEOUT).setTimeout(), this.by(o), this.vy = new er(this), this.vy.onTrackingLifecycleEvent(tr.Win);
                    }
                    setAdVolume(t) {
                        this.Hg.volume = t, Object(T.R)(this.Hg, t), t <= 0 ? this.settings.adEnforcer.start(Xn.Mute) : this.settings.adEnforcer.stop(Xn.Mute);
                    }
                    get impressionStarted() {
                        return this.Gg;
                    }
                    get creativeId() {
                        return this.Wg;
                    }
                    set creativeId(t) {
                        Object(rt.h)(this.creativeId) || (this.Wg = t);
                    }
                    get onAdViewableImpression() {
                        return this.Yg.asObservable();
                    }
                    my(t) {
                        let i;
                        Object(rt.d)(t.payload.skipOffset) && (i = t.payload.skipOffset);
                        const e = {
                            type: Pt.b.AdLoaded,
                            payload: {
                                adLoadedData: { skipOffset: i },
                                adSkipMode: this.settings.adManagerLineItem.protoLineItem.skipMode
                            }
                        };
                        return this.settings.adLoadedPayload = e, e;
                    }
                    gy(t) {
                        return {
                            type: Pt.b.AdImpression,
                            payload: {
                                adSkipMode: this.settings.adManagerLineItem.protoLineItem.skipMode,
                                adSourceData: {
                                    moatTrackingEnabled: this.settings.adManagerLineItem.protoLineItem.moatTrackingEnabled,
                                    creativeId: this.settings.adManagerLineItem.protoLineItem.cnxCreativeId,
                                    adId: this.settings.adManagerLineItem.protoLineItem.advertiserLineItemId,
                                    length: this.getAdDuration(),
                                    adVideoUrl: this.adVideoUrl,
                                    name: or
                                },
                                customAdData: {
                                    ADVERTISER: this.settings.requestMetadata.data.rtbAdomain,
                                    CREATIVE_ID: this.creativeId,
                                    CAMPAIGN_ID: this.settings.requestMetadata.data.rtbCampainId
                                }
                            }
                        };
                    }
                    yy(t) {
                        return {
                            type: Pt.b.AdVideoStart,
                            payload: {
                                adSkipMode: this.settings.adManagerLineItem.protoLineItem.skipMode,
                                adSourceData: {
                                    moatTrackingEnabled: this.settings.adManagerLineItem.protoLineItem.moatTrackingEnabled,
                                    creativeId: this.settings.adManagerLineItem.protoLineItem.cnxCreativeId,
                                    adId: this.settings.adManagerLineItem.protoLineItem.advertiserLineItemId,
                                    length: this.getAdDuration(),
                                    name: or
                                },
                                customAdData: {
                                    ADVERTISER: this.settings.requestMetadata.data.rtbAdomain,
                                    CREATIVE_ID: this.creativeId,
                                    CAMPAIGN_ID: this.settings.requestMetadata.data.rtbCampainId
                                }
                            }
                        };
                    }
                    Zg(t) {
                        if (this.wy(t))
                            switch (t.type) {
                            case Pt.b.AdLoaded:
                                this.vy.onTrackingLifecycleEvent(tr.AdLoaded), this.sy(ir.AD_LOADED_TIMEOUT).clearTimeout(), this.Rg.next(this.my(t));
                                break;
                            case Pt.b.AdImpression:
                                this.vy.onTrackingLifecycleEvent(tr.AdImpression), this.sy(ir.IMPRESSION_TIMEOUT).clearTimeout(), this.Oy(), Object(T.a)(this.qg, ar), this.Rg.next(this.gy(t)), this.Gg = !0;
                                break;
                            case Pt.b.AdVideoStart:
                                this.vy.onTrackingLifecycleEvent(tr.AdStarted), this.Rg.next(this.yy(t));
                                break;
                            case Pt.b.AdStopped:
                            case Pt.b.AdSkipped:
                            case Pt.b.AdError:
                                this.Iu && Object(n.a)({
                                    message: 'AdManager_ABaseBidAdaptor_double_destroy',
                                    exception: this.settings.adManagerLineItem.protoLineItem.advertiserLineItemId,
                                    level: h.ProtoLoggingLevelEnum.WARNING
                                }), this.fl(), this.Rg.next(t);
                                break;
                            default:
                                this.Rg.next(t);
                            }
                        else
                            this.Zg({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.InvalidVpaidEvent }
                            });
                    }
                    by(t) {
                        this.zg = this.xy(), this.qg = this.zg.slotsContainer, Object(T.a)(this.qg, this.ly), this.Ng = this.zg.adSlot, this.Ng.id = this.py, this.qg.id = this.settings.bidSlotId, this.Hg = this.zg.videoSlot, this.Hg.volume = t, Object(T.R)(this.Hg, t), this.settings.adEnforcer.registerContainer(this.qg, this.py), this.jl.push(this.settings.adEnforcer.onEnforcerEvent.subscribe(t => {
                            this.Sy(t);
                        })), this.settings.adEnforcer.start(Xn.All);
                    }
                    xy() {
                        return this.settings.adSlotContainerRecycler.requestAdSlot(this.settings.adContainer);
                    }
                    fl() {
                        this.Iu = !0, Object(T.I)(this.qg, ar), Object(T.I)(this.qg, this.ly), this.Ng.removeAttribute('id'), this.qg.removeAttribute('id'), Ai(this.jl), this.ty(), this.settings.adEnforcer.deregisterContainer(this.qg), this.settings.viewabilityService.off(this.Ng, this.ny), null !== this.Xg && mi.clearTimeout(this.Xg), this.jy();
                    }
                    jy() {
                        this.Xg = mi.setTimeout(() => {
                            this.settings.adSlotContainerRecycler.destroyAdSlot(this.zg);
                        }, hr);
                    }
                    ey() {
                        const {
                            advertiserLineItemId: t,
                            publisherLineItemId: i
                        } = this.settings.adManagerLineItem.protoLineItem;
                        this.Yg.next({
                            advertiserLineItemId: t,
                            publisherLineItemId: i,
                            rtbSeatId: this.settings.requestMetadata.data.rtbSeatId,
                            dspId: this.settings.requestMetadata.data.dspId
                        });
                    }
                    Oy() {
                        const t = Ht.e, i = this.Ng;
                        this.settings.viewabilityService.on(i, this.ny, { threshold: t }), this.ny(this.settings.viewabilityService.check({
                            threshold: t,
                            element: i
                        }));
                    }
                    ty() {
                        Object.keys(this.uy).forEach(t => {
                            this.sy(t).clearTimeout();
                        });
                    }
                    wy(t) {
                        return !(!this.Gg && (t.type === Pt.b.AdStopped || t.type === Pt.b.AdSkipped));
                    }
                    Sy(t) {
                        if (t.detectedContainer !== this.qg)
                            return;
                        let i;
                        switch (t.type) {
                        case Qn.BADURI_DETECTED:
                            i = 'AdManager_enforcer_BadUri';
                            break;
                        case Qn.MALWARE_DETECTED:
                            i = 'AdManager_enforcer_malware', this.Zg({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.EnforcementMalware }
                            });
                            break;
                        case Qn.VOLUME_DETECTED:
                            i = 'AdManager_enforcer_soundBlock', this.Zg({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.EnforcementVolume }
                            });
                        }
                        Object(n.a)({
                            message: i,
                            exception: t.message,
                            level: h.ProtoLoggingLevelEnum.WARNING
                        });
                    }
                    ky(t, i, e) {
                        var s, r;
                        const a = this.settings.adManagerLineItem.protoLineItem.advertiserLineItemId, o = this.creativeId;
                        Object(n.a)({
                            message: `AdManager_${ t }_${ i }`,
                            exception: `advertiserLineItemId:${ a }_creativeId:${ o }_errorMessage:${ null === (s = e) || void 0 === s ? void 0 : s.message }`,
                            callStack: null === (r = e) || void 0 === r ? void 0 : r.stack,
                            throttle: 5,
                            level: h.ProtoLoggingLevelEnum.WARNING,
                            sendMaxLog: !0
                        });
                    }
                }
                var ur = e(44);
                class lr extends Zn {
                    constructor(t, i, e, s, n, r, h) {
                        super(), this._y = t, this.Zn = i, this.Ay = e, this.Iy = s, this.Cy = n, this.Ty = r, this.Py = h, this.My = new ji(), this.Ey = t => {
                            if (!this.Ly(t))
                                return;
                            let i = '';
                            try {
                                i = t.getError().getMessage() + '_' + t.getError().getErrorCode() + '_' + t.getError().getVastErrorCode();
                            } catch (t) {
                            }
                            this.Rg.next({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.ImaError + '_' + i }
                            });
                        }, this.Ry = t => {
                            const i = this._y.AdEvent.Type;
                            switch (t.type) {
                            case i.CLICK:
                                this.Rg.next({
                                    type: Pt.b.AdClickThru,
                                    payload: {}
                                });
                                break;
                            case i.LOADED:
                                this.ah(t);
                                break;
                            case i.IMPRESSION:
                                const e = {
                                    adsManager: this.Cy,
                                    adContainer: this.By,
                                    viewMode: this.Dy(this.Fy),
                                    adTag: this.Iy
                                };
                                this.Rg.next({ type: Pt.b.AdVideoStart }), this.Rg.next({
                                    type: Pt.b.AdImpression,
                                    payload: { imaMetadata: e }
                                });
                                break;
                            case i.STARTED:
                                this.Rg.next({ type: Pt.b.AdStarted });
                                break;
                            case i.FIRST_QUARTILE:
                                this.Rg.next({ type: Pt.b.AdVideoFirstQuartile });
                                break;
                            case i.MIDPOINT:
                                this.Rg.next({ type: Pt.b.AdVideoMidpoint });
                                break;
                            case i.THIRD_QUARTILE:
                                this.Rg.next({ type: Pt.b.AdVideoThirdQuartile });
                                break;
                            case i.COMPLETE:
                                this.Rg.next({ type: Pt.b.AdVideoComplete }), this.Rg.next({
                                    type: Pt.b.AdStopped,
                                    payload: { shouldTrackPostBid: !0 }
                                });
                                break;
                            case i.ALL_ADS_COMPLETED:
                                break;
                            case i.DURATION_CHANGE:
                                this.Rg.next({ type: Pt.b.AdDurationChange });
                                break;
                            case i.PAUSED:
                                this.Rg.next({ type: Pt.b.AdPaused });
                                break;
                            case i.RESUMED:
                                this.Rg.next({ type: Pt.b.AdPlaying });
                                break;
                            case i.LINEAR_CHANGED:
                                this.Rg.next({ type: Pt.b.AdLinearChange });
                                break;
                            case i.SKIPPABLE_STATE_CHANGED:
                                this.Rg.next({ type: Pt.b.AdSkippableStateChange });
                                break;
                            case i.SKIPPED:
                                this.Rg.next({ type: Pt.b.AdSkipped });
                                break;
                            case i.VOLUME_CHANGED:
                                this.Rg.next({ type: Pt.b.AdVolumeChange });
                                break;
                            case i.USER_CLOSE:
                                this.Rg.next({ type: Pt.b.AdUserClose });
                                break;
                            case i.LOG:
                                this.Rg.next({ type: Pt.b.AdLog });
                            }
                        }, this.Vy();
                    }
                    get onCreativeReceived() {
                        return this.My.asObservable();
                    }
                    initAd(t, i, e, s, n, r) {
                        this.By = r.slot, this.Uy = r.videoSlot, this.Fy = e || Pt.a.Normal;
                        try {
                            this.Cy.setVolume(0), this.Cy.init(t, i, this.Dy(this.Fy));
                        } catch (t) {
                            this.Rg.next({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.ImaManagerInit }
                            });
                        }
                    }
                    startAd() {
                        try {
                            this.Cy.start();
                        } catch (t) {
                            this.Rg.next({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.WrapperStartAdError + `_${ t.message }` }
                            });
                        }
                    }
                    stopAd(t) {
                        this.Cy.stop(), this.Rg.next({
                            type: Pt.b.AdStopped,
                            payload: { shouldTrackPostBid: !0 }
                        });
                    }
                    resizeAd(t, i, e) {
                        this.Cy.resize(t, i, this.Dy(e));
                    }
                    pauseAd() {
                        this.Cy.pause();
                    }
                    resumeAd() {
                        this.Cy.resume(), this.Zn === St.b.Ios && Object(T.z)(this.Uy);
                    }
                    expandAd() {
                        this.Cy.expand();
                    }
                    collapseAd() {
                        this.Cy.collapse();
                    }
                    skipAd() {
                        this.Cy.skip();
                    }
                    getAdRemainingTime() {
                        return this.Cy.getRemainingTime() || 0;
                    }
                    getAdDuration() {
                        return this.$y ? this.$y.getDuration() : 0;
                    }
                    getAdVolume() {
                        return this.Cy.getVolume();
                    }
                    getAdMediaWidth() {
                        return this.$y ? this.$y.getVastMediaWidth() : 0;
                    }
                    getAdMediaHeight() {
                        return this.$y ? this.$y.getVastMediaHeight() : 0;
                    }
                    setAdVolume(t) {
                        this.Cy.setVolume(t);
                    }
                    getMediaFile() {
                        return this.$y ? this.$y.getMediaUrl() : void 0;
                    }
                    Vy() {
                        this.Ay.addEventListener(this._y.AdErrorEvent.Type.AD_ERROR, this.Ey), this.Cy.addEventListener(this._y.AdErrorEvent.Type.AD_ERROR, this.Ey), Object.keys(this._y.AdEvent.Type).forEach(t => {
                            this.Cy.addEventListener(this._y.AdEvent.Type[t], this.Ry, !1);
                        });
                    }
                    Ny() {
                        this.Ay.removeEventListener(this._y.AdErrorEvent.Type.AD_ERROR, this.Ey), this.Cy.removeEventListener(this._y.AdErrorEvent.Type.AD_ERROR, this.Ey), Object.keys(this._y.AdEvent.Type).forEach(t => {
                            this.Cy.removeEventListener(this._y.AdEvent.Type[t], this.Ry, !1);
                        });
                    }
                    Dy(t) {
                        return t === Pt.a.Fullscreen ? this._y.ViewMode.FULLSCREEN : this._y.ViewMode.NORMAL;
                    }
                    Ly(t) {
                        const i = t.getUserRequestContext();
                        return !i || i.id === this.Ty.id;
                    }
                    ah(t) {
                        this.$y = t.getAd(), this.My.next(this.$y.getCreativeId());
                        let i = -1, e = '';
                        try {
                            i = this.$y.getSkipTimeOffset();
                            const s = t.getAdData().clickThroughUrl;
                            e = Object(rt.h)(s) ? s : void 0;
                        } catch (t) {
                        }
                        Object(ur.b)(this.Py, e).then(t => {
                            t ? this.Rg.next({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.DomainBlocked }
                            }) : this.Rg.next({
                                type: Pt.b.AdLoaded,
                                payload: { skipOffset: i }
                            });
                        });
                    }
                    destroy() {
                        try {
                            this.Ny(), setTimeout(() => {
                                this.Cy.destroy();
                            });
                        } catch (t) {
                        }
                    }
                }
                const dr = {
                        ImaObjectNotFound: Yn.c.ImaObjectNotFound,
                        ImaScriptFailure: Yn.c.ImaScriptFailure
                    }, fr = '//imasdk.googleapis.com/js/sdkloader/ima3.js';
                class pr {
                    static preloadImaSdk(t) {
                        Object(T.G)(fr, t);
                    }
                    static fetchImaSdk(t, i) {
                        return new Promise((e, s) => {
                            const r = pr.Hy(t);
                            if (r)
                                return void e(r);
                            const a = i && 1 === Object(Li.k)([
                                95,
                                5
                            ]);
                            Object(T.x)({ src: fr }, t.document.head, t, () => {
                                const i = pr.Hy(t);
                                i ? e(i) : (a && Object(n.a)({
                                    message: 'AdManager_ImaIntegrator_no_image_object_found_after_loading_script',
                                    level: h.ProtoLoggingLevelEnum.FATAL,
                                    throttle: 2,
                                    sendMaxLog: !1
                                }), s(dr.ImaObjectNotFound));
                            }, () => {
                                s(dr.ImaScriptFailure);
                            }, a, 'AdManager_ImaIntegrator_unable_to_insert_ima_sdk_script');
                        });
                    }
                    static Hy(t) {
                        return t.google && t.google.ima;
                    }
                }
                class br extends cr {
                    constructor(t) {
                        super(t), this.settings = t, this.zg = null, this.adMediaType = 'ima', this.adSourceType = h.ProtoAdsourceTypeEnum.Ima, this.qy = [], this.zg = this.settings.imaAdSlotContainer, this.zy = new lr(this.settings.imaSdk, this.settings.os, this.settings.imaAdsLoader, this.settings.url, this.settings.imaAdsManager, this.settings.requestAdsContext, this.settings.adManagerLineItem.protoLineItem.publisherLineItemId);
                    }
                    initAd(t, i, e, s, n, r, h) {
                        try {
                            super.initAd(t, i, e, s, n, r, h), this.settings.adManagerLineItem.protoLineItem.moatTrackingEnabled && this.Wy(), this.qy.push(this.zy.onVpaidEvent.subscribe(t => {
                                this.Zg(t);
                            }), this.zy.onCreativeReceived.subscribe(t => {
                                this.creativeId = t;
                            })), this.zy.initAd(t, i, e, s, n, {
                                slot: this.Ng,
                                videoSlot: this.Hg
                            });
                        } catch (t) {
                            this.Rg.next({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.AdaptorInitAdError + `_${ t.message }` }
                            });
                        }
                    }
                    startAd() {
                        try {
                            super.startAd(), this.zy.startAd();
                        } catch (t) {
                            this.Rg.next({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.AdaptorStartAdError + `_${ t.message }` }
                            });
                        }
                    }
                    stopAd(t) {
                        try {
                            super.stopAd(t), this.zy.stopAd(t);
                        } catch (t) {
                            this.ky('ImaBidAdaptor', 'stopAd', t);
                        }
                    }
                    resizeAd(t, i, e) {
                        try {
                            this.zy.resizeAd(t, i, e);
                        } catch (t) {
                            this.ky('ImaBidAdaptor', 'resizeAd', t);
                        }
                    }
                    pauseAd() {
                        try {
                            this.zy.pauseAd();
                        } catch (t) {
                            this.ky('ImaBidAdaptor', 'pauseAd', t);
                        }
                    }
                    resumeAd() {
                        try {
                            this.zy.resumeAd();
                        } catch (t) {
                            this.ky('ImaBidAdaptor', 'resumeAd', t);
                        }
                    }
                    expandAd() {
                        try {
                            this.zy.expandAd();
                        } catch (t) {
                            this.ky('ImaBidAdaptor', 'expandAd', t);
                        }
                    }
                    collapseAd() {
                        try {
                            this.zy.collapseAd();
                        } catch (t) {
                            this.ky('ImaBidAdaptor', 'collapseAd', t);
                        }
                    }
                    skipAd() {
                        try {
                            super.skipAd(), this.zy.skipAd();
                        } catch (t) {
                            this.ky('ImaBidAdaptor', 'skipAd', t);
                        }
                    }
                    getAdRemainingTime() {
                        try {
                            return this.zy.getAdRemainingTime();
                        } catch (t) {
                            return this.ky('ImaBidAdaptor', 'getAdRemainingTime', t), 0;
                        }
                    }
                    getAdDuration() {
                        try {
                            return this.zy && this.zy.getAdDuration() || this.settings.adManagerLineItem.protoLineItem.duration;
                        } catch (t) {
                            return this.ky('ImaBidAdaptor', 'getAdDuration', t), 0;
                        }
                    }
                    getAdVolume() {
                        try {
                            return this.zy.getAdVolume();
                        } catch (t) {
                            return this.ky('ImaBidAdaptor', 'getAdVolume', t), 0;
                        }
                    }
                    getAdMediaSize() {
                        return {
                            width: this.zy.getAdMediaWidth(),
                            height: this.zy.getAdMediaHeight()
                        };
                    }
                    setAdVolume(t) {
                        try {
                            super.setAdVolume(t), this.zy.setAdVolume(t);
                        } catch (t) {
                            this.ky('ImaBidAdaptor', 'setAdVolume', t);
                        }
                    }
                    get adVideoUrl() {
                        return this.zy.getMediaFile();
                    }
                    get declaredDurationInSeconds() {
                        return this.zy.getAdDuration();
                    }
                    gy(t) {
                        const i = super.gy(t);
                        return i.payload.adSourceData.imaMetadata = t.payload.imaMetadata, i;
                    }
                    xy() {
                        return this.zg;
                    }
                    jy() {
                        this.settings.adSlotContainerRecycler.recycleAdSlot(this.zg);
                    }
                    Wy() {
                        pr.fetchImaSdk(this.settings.globalDomUtilsService.getGlobalClosestTop().topFrame, !1);
                    }
                    fl() {
                        try {
                            super.fl(), Ai(this.qy), this.zy.destroy();
                        } catch (t) {
                            this.ky('ImaBidAdaptor', '_destroy', t);
                        }
                    }
                }
                const vr = 25;
                class mr {
                    constructor(t, i, e, s, n, r, h) {
                        this._y = t, this.Ay = i, this.Vd = e, this.Ud = s, this.Iy = n, this.Uy = r, this.We = h, this.Gy = new ji(), this.Jy = new ji(), this.Qy = { id: Object(Li.c)() }, this.Cy = null, this.Ey = t => {
                            if (!this.Ly(t))
                                return;
                            switch (t.getError().getErrorCode()) {
                            case this._y.AdError.ErrorCode.VAST_EMPTY_RESPONSE:
                                this.Xy(Gn.ImaVastEmptyResponse);
                                break;
                            case this._y.AdError.ErrorCode.VAST_WRAPPER_ERROR:
                            case this._y.AdError.ErrorCode.VAST_MALFORMED_RESPONSE:
                                this.Xy(Gn.ImaInvalidResponse);
                                break;
                            default:
                                this.Xy(Gn.ImaRequestException);
                            }
                        }, this.Yy = t => {
                            this.Ly(t) && (this.Cy = t.getAdsManager(this.Uy, { loadVideoTimeout: vr * qt.f }), this.Ky(), this.Gy.next({
                                imaAdsManager: this.Cy,
                                requestAdsContext: this.Qy
                            }));
                        }, this.Ay.addEventListener(this._y.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, this.Yy), this.Ay.addEventListener(this._y.AdErrorEvent.Type.AD_ERROR, this.Ey);
                    }
                    get onSuccess() {
                        return this.Gy.asObservable();
                    }
                    get onError() {
                        return this.Jy.asObservable();
                    }
                    loadAd() {
                        const t = new this._y.AdsRequest();
                        t.adTagUrl = this.Iy, t.linearAdSlotWidth = t.nonLinearAdSlotWidth = this.Vd, t.linearAdSlotHeight = t.nonLinearAdSlotHeight = this.Ud, t.pageUrl = this.We, this.Ay.requestAds(t, this.Qy);
                    }
                    Xy(t) {
                        this.Jy.next(t);
                    }
                    Ky() {
                        this.Ay.removeEventListener(this._y.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, this.Yy), this.Ay.removeEventListener(this._y.AdErrorEvent.Type.AD_ERROR, this.Ey);
                    }
                    Ly(t) {
                        const i = t.getUserRequestContext();
                        return !i || i.id === this.Qy.id;
                    }
                    destroy() {
                        var t;
                        try {
                            this.Ky(), null === (t = this.Cy) || void 0 === t || t.destroy();
                        } catch (t) {
                        }
                    }
                }
                const gr = 25000;
                class yr {
                    constructor(t) {
                        this.settings = t, this.Zy = !1, this.tw = [], this.metrics = { created: new Date().getTime() };
                    }
                    fetchBid() {
                        this.metrics.fetchStart = new Date().getTime(), this.iw = this.settings.adSlotContainerRecycler.requestAdSlotIma(this.settings.adContainer);
                        const t = new Promise((t, i) => {
                                setTimeout(() => {
                                    i(Gn.ImaTimeout);
                                }, gr);
                            }), i = this.ew(this.iw);
                        return Promise.race([
                            i,
                            t
                        ]).then(t => {
                            return this.metrics.fetchEnd = new Date().getTime(), this.Zy = !0, this.sw && Ai(this.tw), t;
                        }).catch(t => {
                            throw this.metrics.fetchEnd = new Date().getTime(), this.Zy = !0, this.sw && (Ai(this.tw), this.sw.destroy(), this.settings.adSlotContainerRecycler.recycleAdSlot(this.iw)), t;
                        });
                    }
                    ew(t) {
                        return t.fetchImaDependencies().then(t => {
                            return this.nw = t, this.rw(t);
                        }).then(t => {
                            return this.hw(t);
                        }).catch(t => {
                            throw Object(rt.a)(t) ? t : Gn.ImaRequestException;
                        });
                    }
                    rw(t) {
                        return this.Zy ? Promise.reject() : new Promise((i, e) => {
                            const s = this.aw();
                            this.sw = new mr(t.imaSdk, t.imaAdsLoader, s.width, s.height, this.settings.url, this.iw.videoSlot, this.settings.pageUrl), this.tw.push(this.sw.onSuccess.subscribe(t => {
                                i(t);
                            }), this.sw.onError.subscribe(t => {
                                e(t);
                            })), this.sw.loadAd();
                        });
                    }
                    aw() {
                        return this.settings.callingState.adContainerState.get(this.settings.adManagerLineItem.protoLineItem.adType);
                    }
                    hw(t) {
                        return new br({
                            id: this.settings.id,
                            adManagerLineItem: this.settings.adManagerLineItem,
                            trackers: this.settings.trackersInformation,
                            url: this.settings.url,
                            requestMetadata: this.settings.requestMetadata,
                            callingState: this.settings.callingState,
                            adContainer: this.settings.adContainer,
                            globalDomUtilsService: this.settings.globalDomUtilsService,
                            viewabilityService: this.settings.viewabilityService,
                            cpm: this.settings.cpm,
                            obfuscatedPrice: this.settings.obfuscatedPrice,
                            adEnforcer: this.settings.adEnforcer,
                            successRate: this.settings.successRate,
                            os: this.settings.os,
                            adSlotContainerRecycler: this.settings.adSlotContainerRecycler,
                            externalCreativeId: this.settings.creativeId,
                            imaSdk: this.nw.imaSdk,
                            imaAdsLoader: this.nw.imaAdsLoader,
                            imaAdsManager: t.imaAdsManager,
                            requestAdsContext: t.requestAdsContext,
                            imaAdSlotContainer: this.iw,
                            bidSlotId: this.settings.bidSlotId,
                            pageUrl: this.settings.pageUrl,
                            urlSuffixerService: this.settings.urlSuffixerService
                        });
                    }
                }
                function wr(t, i) {
                    t.sort((t, i) => {
                        return t.width === i.width ? t.bitrate - i.bitrate : t.width - i.width;
                    });
                    for (let e = 0; e < t.length; e++)
                        if (t[e].width >= i)
                            return t[e - 1] || t[e];
                    return t[t.length - 1];
                }
                const Or = () => {
                    return `cnx_bid_slot_${ Object(Li.c)() }`;
                };
                var xr = e(17);
                const Sr = xr && xr.isSupported(), jr = t => {
                        return t.canPlayType('application/vnd.apple.mpegurl');
                    }, kr = {
                        enableWorker: !1,
                        capLevelToPlayerSize: !0,
                        cnxRenderWindow: window,
                        maxBufferSize: 5000000,
                        maxBufferLength: 5,
                        maxMaxBufferLength: 10,
                        liveBackBufferLength: 0
                    };
                class _r {
                    constructor(t, i, e, s) {
                        this.ow = t, this.cw = i, this.rc = e, this.uw = s, this.lw = [], this.dw = (t, i) => {
                            if (i.fatal)
                                switch (i.type) {
                                case xr.ErrorTypes.NETWORK_ERROR:
                                    if (i.details === xr.ErrorDetails.MANIFEST_PARSING_ERROR || i.details === xr.ErrorDetails.MANIFEST_LOAD_ERROR)
                                        return void this.fw();
                                    this.pw.startLoad();
                                    break;
                                case xr.ErrorTypes.MEDIA_ERROR:
                                    this.pw.recoverMediaError();
                                    break;
                                default:
                                    this.fw();
                                }
                        }, this.vw = () => {
                            this.pw.off(xr.Events.MEDIA_ATTACHED, this.vw), this.pw.loadSource(this.ow), this.pw.once(xr.Events.MANIFEST_PARSED, this.mw);
                        }, this.mw = () => {
                            this.pw.off(xr.Events.MANIFEST_PARSED, this.mw), this.gw(), this.uw.forceMaxLevel && this.yw(), this.uw.forceResolutionHeight && this.ww(this.uw.forceResolutionHeight), this.Ow();
                        }, (this.uw.forceMaxLevel || this.uw.forceResolutionHeight) && (kr.capLevelToPlayerSize = !1);
                    }
                    start(t, i) {
                        this.Ow = t, this.fw = i, Sr ? (this.pw = this.rc.initHls(kr), this.xw()) : this.fw();
                    }
                    destroy() {
                        this.pw && (this.pw.destroy(), this.pw = null);
                    }
                    xw() {
                        this.pw.on(xr.Events.ERROR, this.dw), this.pw.attachMedia(this.cw), this.pw.once(xr.Events.MEDIA_ATTACHED, this.vw);
                    }
                    yw() {
                        const t = this.pw.levels.length - 1;
                        this.Sw(t);
                    }
                    ww(t) {
                        const i = this.lw.find(i => {
                            return i.height === t;
                        });
                        i && this.Sw(i.level);
                    }
                    Sw(t) {
                        this.pw.currentLevel = t, this.pw.startLevel = t, this.pw.nextLevel = t;
                    }
                    gw() {
                        this.pw.levels.forEach((t, i) => {
                            this.lw.push({
                                level: i,
                                height: t.height
                            });
                        });
                    }
                }
                var Ar = e(49);
                const Ir = {
                    domain: 'huffpost',
                    resolutionHeight: 540
                };
                class Cr extends Zn {
                    constructor(t, i, e, s, r, a, o, c, l = (() => {
                        return !1;
                    })(), d) {
                        super(), this.js = t, this.jw = i, this.Uy = e, this.Zn = s, this.kw = r, this._w = a, this.Aw = o, this.Iw = c, this.Cw = l, this.er = d, this.Tw = !1, this.pageFocus = new Ar.a(this.js), this.Pw = Object(u.a)(m), this.Mw = !1, this.Ew = !0, this.Lw = !1, this.Rw = [
                            {
                                event: Pt.b.AdVideoStart,
                                position: 0
                            },
                            {
                                event: Pt.b.AdVideoFirstQuartile,
                                position: 25
                            },
                            {
                                event: Pt.b.AdVideoMidpoint,
                                position: 50
                            },
                            {
                                event: Pt.b.AdVideoThirdQuartile,
                                position: 75
                            },
                            {
                                event: Pt.b.AdVideoComplete,
                                position: 100
                            }
                        ], this.Bw = this.Rw[0], this.Dw = t => {
                            try {
                                switch (t.type) {
                                case m.Pause:
                                    if (this._w && !this.Ew)
                                        return void (this.Ew = !0);
                                    this.Mw = !1;
                                    break;
                                case m.Play:
                                    if (!this.Mw && this.Cw)
                                        return void this.Uy.pause();
                                    break;
                                case m.Canplay:
                                case m.Durationchange:
                                    this.Fw();
                                    break;
                                case m.Timeupdate:
                                    this.Vw();
                                    break;
                                case m.Error:
                                    this.Rg.next({
                                        type: Pt.b.AdError,
                                        payload: { errorMessage: Yn.c.VastVideoTagEventError }
                                    });
                                    break;
                                case 'click':
                                    this.Rg.next({
                                        type: Pt.b.AdClickThru,
                                        payload: {}
                                    });
                                }
                            } catch (t) {
                                Object(n.a)({
                                    level: h.ProtoLoggingLevelEnum.FATAL,
                                    callStack: t.stack,
                                    message: 'AdManager_VastIntegrator_onVideoEvent',
                                    exception: t.message,
                                    throttle: 10,
                                    sendMaxLog: !1
                                });
                            }
                        };
                    }
                    initAd(t, i, e, s, n, r) {
                        try {
                            this.Uy = r.videoSlot, this.width = t, this.height = i, this.Uw(this.kw, this.Uy.parentElement), this.resizeAd(t, i, e), this.addVideoEvents(this.Uy), this.Iw && Sr ? this.$w() : (this.Uy.setAttribute('src', this.jw), this.Uy.setAttribute('preload', 'metadata'), this.Uy.load()), this.pageFocus.isDocumentVisible() || this.Fw();
                        } catch (t) {
                            this.Rg.next({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.WrapperInitAdError + `_${ t.message }` }
                            });
                        }
                    }
                    startAd() {
                        try {
                            Object(T.a)(this.Uy, 'cnx-ad-video-slot'), this.Mw = !0, this.pageFocus.isDocumentVisible() ? this.Uy.play().then(() => {
                                this.Rg.next({ type: Pt.b.AdStarted }), this.Rg.next({
                                    type: Pt.b.AdImpression,
                                    payload: {}
                                });
                            }).catch(t => {
                                this.Rg.next({
                                    type: Pt.b.AdError,
                                    payload: { errorMessage: Yn.c.VastPlayPromiseReject }
                                });
                            }) : (this.Rg.next({ type: Pt.b.AdStarted }), this.Rg.next({
                                type: Pt.b.AdImpression,
                                payload: {}
                            }), this.Uy.play());
                        } catch (t) {
                            this.Rg.next({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.WrapperStartAdError + `_${ t.message }` }
                            });
                        }
                    }
                    stopAd(t) {
                        this.Cw && this.Uy.pause(), 'videoComplete' === t && this._w ? this.Rg.next({
                            type: Pt.b.AdStopped,
                            payload: { shouldTrackPostBid: !1 }
                        }) : this.Rg.next({
                            type: Pt.b.AdStopped,
                            payload: { shouldTrackPostBid: !0 }
                        });
                    }
                    resizeAd(t, i, e) {
                        Object(T.N)(this.Uy, {
                            width: `${ t }px`,
                            height: `${ i }px`
                        }), this.Rg.next({ type: Pt.b.AdSizeChange });
                    }
                    pauseAd() {
                        this.Mw = !1, this.Aw && void 0 === this.Bw && (this.Bw = this.Rw[0]), this.Uy.pause(), this.Rg.next({ type: Pt.b.AdPaused });
                    }
                    resumeAd() {
                        this._w && void 0 === this.Bw && (this.Bw = this.Rw[0]), this.Mw = !0, this.Uy.play(), this.Zn === St.b.Ios && Object(T.z)(this.Uy), this.Rg.next({ type: Pt.b.AdPlaying });
                    }
                    expandAd() {
                    }
                    collapseAd() {
                    }
                    skipAd() {
                        this.Rg.next({ type: Pt.b.AdSkipped });
                    }
                    getAdRemainingTime() {
                        return this.Uy.duration - this.Uy.currentTime;
                    }
                    getAdDuration() {
                        return this.Uy.duration ? this.Uy.duration : 0;
                    }
                    getAdVolume() {
                        return this.Uy.volume;
                    }
                    setAdVolume(t) {
                        this.Uy.volume = t;
                    }
                    getAdMediaWidth() {
                        return this.Uy.videoWidth;
                    }
                    getAdMediaHeight() {
                        return this.Uy.videoHeight;
                    }
                    destroy() {
                        if (!this.Aw && !this._w)
                            try {
                                Object(T.I)(this.Uy, 'cnx-ad-video-slot'), this.Nw(this.Uy), this.Uy.removeAttribute('src'), this.Hw && (this.Hw.destroy(), this.Hw = null);
                            } catch (t) {
                                Object(n.a)({
                                    level: h.ProtoLoggingLevelEnum.WARNING,
                                    message: 'AdManager_VastIntegrator_destroyAd',
                                    exception: t.message,
                                    callStack: t.stack
                                });
                            }
                    }
                    $w() {
                        let t = { forceMaxLevel: !0 };
                        this.er && this.er.indexOf(Ir.domain) > -1 && (t = {
                            forceMaxLevel: !1,
                            forceResolutionHeight: Ir.resolutionHeight
                        }), this.Hw = new _r(this.jw, this.Uy, this.js, t), this.Hw.start(() => {
                            this.Fw();
                        }, () => {
                            this.Rg.next({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.CnxMediaSrcNotSupported }
                            });
                        });
                    }
                    Uw(t, i) {
                        this.qw = this.js.createElement('a'), t && (this.qw.href = t, this.qw.target = '_blank'), Object(T.a)(this.qw, 'cnx-ad-slot'), i.appendChild(this.qw), this.qw.addEventListener('click', this.Dw);
                    }
                    addVideoEvents(t) {
                        this.Pw.forEach(i => {
                            t.addEventListener(i, this.Dw);
                        }), this.qw && this.qw.addEventListener('click', this.Dw);
                    }
                    Nw(t) {
                        this.Pw.forEach(i => {
                            t.removeEventListener(i, this.Dw);
                        }), this.qw && this.qw.removeEventListener('click', this.Dw);
                    }
                    Fw() {
                        this.Tw || (this.Tw = !0, this.Rg.next({
                            type: Pt.b.AdLoaded,
                            payload: {}
                        }));
                    }
                    Vw() {
                        this.Rg.next({ type: Pt.b.AdRemainingTimeChange });
                        const t = Object(wi.e)(0, this.Uy.duration, 0, 100, this.Uy.currentTime);
                        if (this.Bw && t >= this.Bw.position) {
                            this.Lw || this.Rg.next({ type: this.Bw.event });
                            const t = this.Bw;
                            this.Bw = this.Rw[this.Rw.indexOf(this.Bw) + 1], t.event === Pt.b.AdVideoComplete && (this.Ew = !1, this.stopAd('videoComplete'), this.Lw = !0);
                        }
                    }
                }
                var Tr;
                !function (t) {
                    t.errorIframe = 'Error creating iframe';
                }(Tr || (Tr = {}));
                const Pr = 'cnxProxyTask', Mr = `\n    window.${ Pr } = function(task) {\n        setTimeout(function(){\n            task();\n        }, 0);\n    }\n`;
                class Er {
                    static executeAsync(t, i) {
                        this.zw(t)(i);
                    }
                    static Ww(t) {
                        return !!t[Pr];
                    }
                    static zw(t) {
                        return this.Ww(t) || this.Gw(t), t[Pr];
                    }
                    static Gw(t) {
                        const i = t.document.head;
                        Object(T.w)(i, t, Mr);
                    }
                }
                class Lr {
                    constructor(t, i, e) {
                        this.js = t, this.co = i, this.kh = e;
                    }
                    Jw(t, i, e) {
                        let s = !1;
                        return n => {
                            n.contentWindow && !s && (s = !0, this.Qw(n, this.Xw(t, i), e));
                        };
                    }
                    Yw(t, i, e, s, n) {
                        return this.Kw(t, this.Jw(i, e, s), n);
                    }
                    Kw(t, i, e) {
                        const s = this.js.createElement('iframe', e);
                        return s.allow = 'autoplay', s.src = 'javascript:false', s.srcdoc = '', s.width = '100%', s.height = '100%', s.style.position = 'absolute', s.style.left = '0', s.style.top = '0', s.style.margin = '0px', s.style.padding = '0px', s.style.border = '0px', s.style.width = '100%', s.style.height = '100%', s.setAttribute('SCROLLING', 'NO'), s.onload = () => {
                            i(s);
                        }, t.appendChild(s), i(s), s;
                    }
                    Qw(t, i, e) {
                        const s = Object(T.s)(t);
                        Er.executeAsync(s, () => {
                            try {
                                const e = t.contentWindow && t.contentWindow.document;
                                e.open(), e.write(i);
                            } catch (i) {
                                this.Zw(t, i), t = null;
                            }
                            e(t);
                        });
                    }
                    Xw(t, i) {
                        return Object.keys(i).forEach(function (e) {
                            let s;
                            s = 'object' == typeof s ? JSON.stringify(i[e]) : i[e], t = t.replace(new RegExp(`{{${ e }}}`, 'g'), s);
                        }), t;
                    }
                    loadIframe(t) {
                        const i = '<!DOCTYPE html><html lang="en"><head>' + (t.customHead ? t.customHead : '') + '<meta charset="UTF-8"></head><body style="margin:0;padding:0">' + (t.customHtml ? t.customHtml : '') + '<script type="text/javascript">window.postMessage(\'{"event": "ready", "id": "{{iframeID}}"}\', \'*\');</script></body></html>', e = 'cnx-iframe_' + Object(Li.c)();
                        return new Promise((s, n) => {
                            this.tO = this.Yw(t.container, i, { iframeID: e }, i => {
                                if (null === i)
                                    return void n(Tr.errorIframe);
                                const r = t => {
                                    let h;
                                    try {
                                        h = JSON.parse(t.data);
                                    } catch (t) {
                                        return;
                                    }
                                    h.id === e && (i.contentWindow ? (i.contentWindow.document.close(), i.contentWindow.removeEventListener('message', r), s({ iframe: i })) : n('The Iframe is no longer in the DOM'));
                                };
                                try {
                                    i.contentWindow.addEventListener('message', r);
                                    const {
                                        advertiserLineItemId: e,
                                        heavyAdBlockTypeEnum: s
                                    } = t.customReportingLog;
                                    this.iO = new b(this.tO.contentWindow, this.co, {
                                        advertiserLineItemId: e,
                                        heavyAdBlockTypeEnum: s
                                    });
                                } catch (t) {
                                    this.Zw(i, t), n('Iframe callback error');
                                }
                            }, this.kh);
                        });
                    }
                    get iframe() {
                        return this.tO;
                    }
                    destroy() {
                        this.iO.destroy(), this.tO = null;
                    }
                    Zw(t, i) {
                        this.js.isDetachedFromDOM(t) ? Object(n.a)({
                            message: 'iframeLoader_(inDom_false)',
                            exception: i.message,
                            callStack: i.stack,
                            level: h.ProtoLoggingLevelEnum.WARNING,
                            sendMaxLog: !1,
                            throttle: 1
                        }) : Object(n.a)({
                            message: 'iframeLoader_(inDom_true)',
                            exception: i.message,
                            callStack: i.stack,
                            level: h.ProtoLoggingLevelEnum.WARNING,
                            logJsonState: !0,
                            sendMaxLog: !1,
                            throttle: 1
                        }), Object(T.J)(t);
                    }
                }
                class Rr {
                    constructor(t, i, e, s, n) {
                        this.eO = t, this.js = i, this.co = e, this.Xn = s, this.sO = n, this.nO = {
                            bodyTamplate: `<div class="ad-element" id="cnx-ad-element"></div><script type="text/javascript" src="${ this.eO }"><\/script>'\n        <script type="text/javascript">\n            window.Object.defineProperty(Object.prototype, 'cnxInnerTag', { enumerable: !1, writable: !0, value: '${ this.Xn }' });\n            window.Object.defineProperty(Function.prototype, 'cnxInnerTag',\n            { enumerable: !1, writable: !0, value: '${ this.Xn }' });\n            cnxtimeouts = [];\n            cnxintervals = [];\n            oldSetTimeout = setTimeout;\n            setTimeout = function (e, t) { var n = oldSetTimeout.apply(null, arguments); return cnxtimeouts.push(n), n };\n            oldSetInterval = setInterval;\n            setInterval = function (e, t) { var n = oldSetInterval.apply(null, arguments); return cnxintervals.push(n), n };\n            clearAll = function () {\n                setTimeout = function () { };\n                setInterval = function () { };\n                for (var e = 0; e < cnxtimeouts.length; e++) {\n                    clearTimeout(cnxtimeouts[e]);\n                }\n                for (e = 0; e < cnxintervals.length; e++) {\n                    clearInterval(cnxintervals[e]);\n                }\n            };\n        <\/script>`,
                            headTamplate: ' <style>\n            html,\n            body,\n            .ad-element {\n                width: 100%;\n                height: 100%;\n            }\n            </style>'
                        }, this.rO = new Lr(this.js, this.co);
                    }
                    hO(t) {
                        return this.rO.loadIframe({
                            customHead: this.nO.headTamplate,
                            customHtml: this.nO.bodyTamplate,
                            container: t,
                            customReportingLog: {
                                heavyAdBlockTypeEnum: h.ProtoHeavyAdBlockTypeEnum.VpaidIframe,
                                advertiserLineItemId: this.sO
                            }
                        });
                    }
                    loadAdUnitIframe(t) {
                        return new Promise((i, e) => {
                            this.hO(t).then(t => {
                                t.adContainer = t.iframe.contentWindow.document.querySelector('.ad-element'), i(t);
                            }).catch(t => {
                                e(t);
                            });
                        });
                    }
                    destroyAdUnit() {
                        var t, i;
                        try {
                            const e = this.rO.iframe.contentWindow.clearAll;
                            e && e();
                        } catch (e) {
                            Object(n.a)({
                                message: 'AdManager_VPAIClient_destroyAdUnit',
                                exception: null === (t = e) || void 0 === t ? void 0 : t.message,
                                callStack: null === (i = e) || void 0 === i ? void 0 : i.stack,
                                level: h.ProtoLoggingLevelEnum.WARNING,
                                throttle: 2,
                                sendMaxLog: !0
                            });
                        }
                        this.rO.destroy(), this.rO = null;
                    }
                }
                var Br;
                !function (t) {
                    t[t.handshakeVersion = 0] = 'handshakeVersion', t[t.initAd = 1] = 'initAd', t[t.startAd = 2] = 'startAd', t[t.stopAd = 3] = 'stopAd', t[t.skipAd = 4] = 'skipAd', t[t.resizeAd = 5] = 'resizeAd', t[t.pauseAd = 6] = 'pauseAd', t[t.resumeAd = 7] = 'resumeAd', t[t.expandAd = 8] = 'expandAd', t[t.collapseAd = 9] = 'collapseAd', t[t.subscribe = 10] = 'subscribe', t[t.unsubscribe = 11] = 'unsubscribe';
                }(Br || (Br = {}));
                class Dr extends Zn {
                    constructor(t, i, e, s, r, a, o) {
                        super(), this.jw = t, this.js = i, this.co = e, this.aO = s, this.sO = r, this.Wg = a, this.Zn = o, this.oO = [], this.cO = new Set(), this.uO = new Set(), this.lO = (t, i, e) => {
                            const s = {
                                url: t,
                                playerHandles: e
                            };
                            this.dO(Pt.b.AdClickThru, s);
                        }, this.dO = (t, i) => {
                            if (this.uO.add(t), !this.cO.has(t))
                                return t !== Pt.b.AdImpression || this.uO.has(Pt.b.AdLoaded) ? void this.fO(t, i) : (Object(n.a)({
                                    message: 'AdManager_AdVpaidWrapper_ImpressionBeforeAdLoaded',
                                    exception: `advertiserLineItemId:${ this.sO }_creativeId:${ this.Wg }_vpaidSrc:${ this.jw }`,
                                    callStack: JSON.stringify(Object(l.d)(this.uO)),
                                    throttle: 1000,
                                    level: h.ProtoLoggingLevelEnum.WARNING,
                                    sendMaxLog: !0
                                }), this.cO.add(Pt.b.AdLoaded), void this.fO(Pt.b.AdLoaded, i));
                        }, this.fO = (t, i) => {
                            switch (t) {
                            case Pt.b.AdError:
                                this.Rg.next({
                                    type: Pt.b.AdError,
                                    payload: { errorMessage: Object(rt.g)(i) ? i : JSON.stringify(i) }
                                });
                                break;
                            case Pt.b.AdLoaded:
                                this.Rg.next({
                                    type: Pt.b.AdLoaded,
                                    payload: { skipOffset: Object(rt.f)(i) ? i.skipOffset : void 0 }
                                });
                                break;
                            case Pt.b.AdImpression:
                                this.Rg.next({
                                    type: Pt.b.AdImpression,
                                    payload: {}
                                });
                                break;
                            case Pt.b.AdClickThru:
                                this.Rg.next({
                                    type: Pt.b.AdClickThru,
                                    payload: Object(rt.f)(i) ? i : {}
                                });
                                break;
                            default:
                                this.Rg.next({ type: Pt.b[t] });
                            }
                        };
                    }
                    initAd(t, i, e, s, n, r) {
                        try {
                            this.Vd = t, this.Ud = i, this.Fy = e, this.pO = s, this.bO = n, this.vO = r, this.mO = new Rr(this.jw, this.js, this.co, this.aO, this.sO), this.gO = this.mO.loadAdUnitIframe(r.slot).then(t => {
                                this.yO(t);
                            }).catch(t => {
                                this.Rg.next({
                                    type: Pt.b.AdError,
                                    payload: { errorMessage: Yn.c.VpaidOnLoad }
                                });
                            });
                        } catch (t) {
                            this.Rg.next({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.VpaidOnLoad }
                            });
                        }
                    }
                    startAd() {
                        try {
                            this.uO.has(Pt.b.AdImpression) && !this.cO.has(Pt.b.AdImpression) && (Object(n.a)({
                                message: 'AdManager_AdVpaidWrapper_brokenImpressionHandle',
                                exception: `advertiserLineItemId:${ this.sO }_creativeId:${ this.Wg }_vpaidSrc:${ this.jw }`,
                                callStack: JSON.stringify(Object(l.d)(this.uO)),
                                throttle: 1000,
                                level: h.ProtoLoggingLevelEnum.WARNING,
                                sendMaxLog: !0
                            }), this.cO.add(Pt.b.AdImpression), this.Rg.next({
                                type: Pt.b.AdImpression,
                                payload: {}
                            })), this.wO.startAd();
                        } catch (t) {
                            this.Rg.next({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.WrapperStartAdError }
                            });
                        }
                    }
                    stopAd(t) {
                        var i;
                        null === (i = this.gO) || void 0 === i || i.then(() => {
                            this.wO ? this.wO.stopAd(t) : Object(n.a)({
                                message: 'stopAd',
                                exception: t,
                                level: h.ProtoLoggingLevelEnum.WARNING
                            });
                        });
                    }
                    resizeAd(t, i, e) {
                        this.wO.resizeAd(t, i, e);
                    }
                    pauseAd() {
                        this.wO.pauseAd();
                    }
                    resumeAd() {
                        this.wO.resumeAd(), this.Zn === St.b.Ios && Object(T.z)(this.vO.videoSlot);
                    }
                    expandAd() {
                        this.wO.expandAd();
                    }
                    collapseAd() {
                        this.wO.collapseAd();
                    }
                    skipAd() {
                        this.wO.skipAd();
                    }
                    getAdRemainingTime() {
                        return this.wO.getAdRemainingTime();
                    }
                    getAdDuration() {
                        var t;
                        return null === (t = this.wO) || void 0 === t ? void 0 : t.getAdDuration();
                    }
                    getAdVolume() {
                        return this.wO.getAdVolume();
                    }
                    setAdVolume(t) {
                        this.wO.setAdVolume(t);
                    }
                    destroy() {
                        var t;
                        this.OO(), this.oO.length = 0, this.wO = null, null === (t = this.mO) || void 0 === t || t.destroyAdUnit();
                    }
                    yO(t) {
                        const i = t.iframe.contentWindow.getVPAIDAd;
                        if ('function' == typeof i) {
                            const e = i();
                            this.wO = e, this.ap(), this.xO(e) ? e.initAd(this.Vd, this.Ud, this.Fy, this.pO, this.bO, {
                                slot: t.adContainer,
                                videoSlot: this.vO.videoSlot
                            }) : this.Rg.next({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.VpaidInvalid }
                            });
                        } else
                            this.Rg.next({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.VpaidGetVpaidAdError }
                            });
                    }
                    ap() {
                        Object.keys(Pt.b).forEach(t => {
                            let i = this.dO.bind(this, Pt.b[t]);
                            Pt.b[t] === Pt.b.AdClickThru && (i = this.lO), this.oO.push({
                                handler: i,
                                event: t
                            }), this.wO.subscribe(i, t);
                        });
                    }
                    OO() {
                        this.oO.forEach(t => {
                            this.wO.unsubscribe(t.handler, t.event);
                        });
                    }
                    xO(t) {
                        return Object.keys(Object(l.f)(Br)).every(i => {
                            return Object(rt.b)(t[Br[i]]);
                        });
                    }
                }
                const Fr = 'video/mp4';
                class Vr extends cr {
                    constructor(t) {
                        super(t), this.settings = t, this.adSourceType = h.ProtoAdsourceTypeEnum.Unknown, this.SO = [], this.creativeId = t.vastResponse.creativeId;
                    }
                    initAd(t, i, e, s, n, r, a) {
                        try {
                            super.initAd(t, i, e, s, n, r, a), Object(ur.b)(this.settings.adManagerLineItem.protoLineItem.publisherLineItemId, this.settings.vastResponse.clickThrough).then(n => {
                                if (n)
                                    return void this.Zg({
                                        type: Pt.b.AdError,
                                        payload: { errorMessage: Yn.c.DomainBlocked }
                                    });
                                if (this.jO = this.kO(t, this.Hg), null === this.jO)
                                    return void this.Zg({
                                        type: Pt.b.AdError,
                                        payload: { errorMessage: Yn.c.VastUnsupportedMedia }
                                    });
                                this.adMediaType = this.jO.type, this.jO.getMediaFileType() === Yn.d.Video ? (this._O = new Cr(this.settings.globalDomUtilsService, this.jO.src, this.Hg, this.settings.os, this.settings.vastResponse.clickThrough, this.settings.loopAdWhenFinished), this.adSourceType = h.ProtoAdsourceTypeEnum.VastMedia) : (this._O = new Dr(this.jO.src, this.settings.globalDomUtilsService, this.settings.trackingService, this.py, this.settings.adManagerLineItem.protoLineItem.advertiserLineItemId, this.creativeId, this.settings.os), this.adSourceType = h.ProtoAdsourceTypeEnum.Vpaid), this.SO.push(this._O.onVpaidEvent.subscribe(t => {
                                    if (t.type === Pt.b.AdLoaded && (t.payload.skipOffset = this.settings.vastResponse.skipoffset), t.type === Pt.b.AdClickThru) {
                                        this.AO = t.payload.url;
                                        const i = t.payload.url || this.settings.vastResponse.clickThrough;
                                        i && t.payload.playerHandles && this.settings.globalDomUtilsService.open(i, kt.c.Blank);
                                    }
                                    this.Zg(t);
                                }));
                                const r = {
                                    AdParameters: this.settings.vastResponse.adParameters,
                                    adParameters: this.settings.vastResponse.adParameters
                                };
                                this._O.initAd(t, i, e, s, r, {
                                    slot: this.Ng,
                                    videoSlot: this.Hg
                                });
                            }).catch(t => {
                                return this.IO(t);
                            });
                        } catch (t) {
                            this.IO(t);
                        }
                    }
                    startAd() {
                        try {
                            super.startAd(), this._O.startAd();
                        } catch (t) {
                            this.Rg.next({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.AdaptorStartAdError + `_${ t.message }` }
                            });
                        }
                    }
                    stopAd(t) {
                        super.stopAd(t), this._O ? this._O.stopAd(t) : Object(n.a)({
                            message: 'stopAd',
                            exception: t,
                            level: h.ProtoLoggingLevelEnum.WARNING
                        });
                    }
                    resizeAd(t, i, e) {
                        try {
                            this._O.resizeAd(t, i, e);
                        } catch (t) {
                            this.ky('VastBidAdaptor', 'resizeAd', t);
                        }
                    }
                    pauseAd() {
                        try {
                            this._O.pauseAd();
                        } catch (t) {
                            this.ky('VastBidAdaptor', 'pauseAd', t);
                        }
                    }
                    resumeAd() {
                        try {
                            this._O.resumeAd();
                        } catch (t) {
                            this.ky('VastBidAdaptor', 'resumeAd', t);
                        }
                    }
                    expandAd() {
                        try {
                            this._O.expandAd();
                        } catch (t) {
                            this.ky('VastBidAdaptor', 'expandAd', t);
                        }
                    }
                    collapseAd() {
                        try {
                            this._O.collapseAd();
                        } catch (t) {
                            this.ky('VastBidAdaptor', 'collapseAd', t);
                        }
                    }
                    skipAd() {
                        try {
                            super.skipAd(), this._O.skipAd();
                        } catch (t) {
                            this.ky('VastBidAdaptor', 'skipAd', t);
                        }
                    }
                    getAdRemainingTime() {
                        try {
                            return this._O.getAdRemainingTime();
                        } catch (t) {
                            return this.ky('VastBidAdaptor', 'getAdRemainingTime', t), 0;
                        }
                    }
                    getAdDuration() {
                        try {
                            return this._O && this._O.getAdDuration() || Math.round(this.settings.vastResponse.duration / qt.f);
                        } catch (t) {
                            return this.ky('VastBidAdaptor', 'getAdDuration', t), 0;
                        }
                    }
                    getAdVolume() {
                        try {
                            return this._O.getAdVolume();
                        } catch (t) {
                            return this.ky('VastBidAdaptor', 'getAdVolume', t), 0;
                        }
                    }
                    getAdMediaSize() {
                        let t = 0, i = 0;
                        return this._O instanceof Cr ? (t = this._O.getAdMediaWidth(), i = this._O.getAdMediaHeight()) : (t = this.jO.width, i = this.jO.height), {
                            width: t,
                            height: i
                        };
                    }
                    setAdVolume(t) {
                        try {
                            super.setAdVolume(t), this._O.setAdVolume(t);
                        } catch (t) {
                            this.ky('VastBidAdaptor', 'setAdVolume', t);
                        }
                    }
                    get adVideoUrl() {
                        var t;
                        return null === (t = this.jO) || void 0 === t ? void 0 : t.src;
                    }
                    get declaredDurationInSeconds() {
                        return this.settings.vastResponse.duration / qt.f;
                    }
                    yy(t) {
                        const i = super.yy(t);
                        return this.CO(i);
                    }
                    gy(t) {
                        const i = super.gy(t);
                        return this.CO(i);
                    }
                    fl() {
                        var t;
                        if (!this.settings.loopAdWhenFinished)
                            try {
                                super.fl(), Ai(this.SO), null === (t = this._O) || void 0 === t || t.destroy();
                            } catch (t) {
                                this.ky('VastBidAdaptor', '_destroy', t);
                            }
                    }
                    CO(t) {
                        var i;
                        return t.payload.adSourceData.name = null === (i = this.settings.vastResponse) || void 0 === i ? void 0 : i.adTitle, t.payload.clickThroughUrl = this.AO || this.settings.vastResponse.clickThrough, t;
                    }
                    TO(t, i) {
                        return t.filter(t => {
                            return t.getMediaFileType() === Yn.d.Video && i.canPlayType(t.type);
                        });
                    }
                    kO(t, i) {
                        const e = this.TO(this.settings.vastResponse.mediaFiles, i), s = e.filter(t => {
                                return t.type === Fr;
                            });
                        if (s.length)
                            return wr(s, t);
                        if (e.length)
                            return wr(e, t);
                        const n = this.settings.vastResponse.mediaFiles.filter(t => {
                            return t.getMediaFileType() === Yn.d.Javascript;
                        });
                        return n.length ? wr(n, t) : null;
                    }
                    IO(t) {
                        this.Rg.next({
                            type: Pt.b.AdError,
                            payload: { errorMessage: Yn.c.AdaptorInitAdError + `_${ t.message }` }
                        });
                    }
                }
                var Ur, $r;
                !function (t) {
                    function i(t) {
                        return /^\s*$/.test(t) ? null : /^(?:true|false)$/i.test(t) ? 'true' === t.toLowerCase() : isFinite(t) ? parseFloat(t) : isFinite(Date.parse(t)) ? new Date(t) : 'string' == typeof t ? t.trim() : t;
                    }
                    t.JXONTree = function t(e) {
                        let s = 0, n = '';
                        if (this.keyAttributes || (this.keyAttributes = {}), e.hasChildNodes()) {
                            for (let i, s, r, h = 0; h < e.childNodes.length; h++)
                                ((i = e.childNodes.item(h)).nodeType - 1 | 1) === Node.TEXT_NODE ? n += i.nodeType === Node.TEXT_NODE ? i.nodeValue.trim() : i.nodeValue : 1 !== i.nodeType || i.prefix || (s = i.nodeName.toLowerCase(), r = new t(i), this.hasOwnProperty(s) ? (this[s].constructor !== Array && (this[s] = [this[s]]), this[s].push(r)) : this[s] = r);
                            this.keyValue = n ? i(n) : null;
                        }
                        if (void 0 === e.hasAttributes ? e.attributes.length > 0 : e.hasAttributes()) {
                            let t;
                            for (; s < e.attributes.length; s++)
                                t = e.attributes.item(s), this.keyAttributes[t.name.toLowerCase()] = i(t.value.trim());
                        }
                    }, t.getKeyValue = function (t) {
                        if (t && t.keyValue)
                            return t.keyValue;
                    }, t.decodeXMLText = function (t) {
                        if ('string' == typeof t)
                            return t.replace(/&apos;/g, '\'').replace(/&quot;/g, '"').replace(/&gt;/g, '>').replace(/&lt;/g, '<').replace(/&amp;/g, '&');
                    };
                }(Ur || (Ur = {}));
                class Nr {
                    constructor(t) {
                        this.PO = [
                            'text/javascript',
                            'text/javascript1.0',
                            'text/javascript1.2',
                            'text/javascript1.4',
                            'text/jscript',
                            'application/javascript',
                            'application/x-javascript',
                            'text/ecmascript',
                            'text/ecmascript1.0',
                            'text/ecmascript1.2',
                            'text/ecmascript1.4',
                            'text/livescript',
                            'application/ecmascript',
                            'application/x-ecmascript'
                        ], this.MO = 'VPAID', this.delivery = void 0, this.type = void 0, this.width = 0, this.height = 0, this.codec = void 0, this.id = void 0, this.bitrate = void 0, this.minBitrate = void 0, this.maxBitrate = void 0, this.scalable = void 0, this.maintainAspectRatio = void 0, this.apiFramework = void 0, this.src = void 0, this.delivery = t.keyAttributes.delivery, this.type = t.keyAttributes.type, this.width = t.keyAttributes.width, this.height = t.keyAttributes.height, this.codec = t.keyAttributes.codec, this.id = t.keyAttributes.id, this.bitrate = t.keyAttributes.bitrate, this.minBitrate = t.keyAttributes.minbitrate, this.maxBitrate = t.keyAttributes.maxbitrate, this.scalable = t.keyAttributes.scalable, this.maintainAspectRatio = t.keyAttributes.maintainaspectratio, this.apiFramework = t.keyAttributes.apiframework, this.src = Ur.getKeyValue(t);
                    }
                    isSupported() {
                        return !('application/x-shockwave-flash' === this.type || 'video/x-flv' === this.type);
                    }
                    getMediaFileType() {
                        return this.apiFramework === this.MO || Object(l.g)(this.type, this.PO) ? Yn.d.Javascript : Yn.d.Video;
                    }
                }
                class Hr {
                    constructor(t, i) {
                        this.name = t.keyAttributes.event, this.uri = Ur.getKeyValue(t), 'progress' === this.name && (this.offset = Object(nt.e)(t.keyAttributes.offset, i));
                    }
                }
                class qr {
                    constructor(t) {
                        this.clickThrough = void 0, this.clickTrackings = [], this.customClicks = [], this.clickThrough = Ur.getKeyValue(t.clickthrough), this.clickTrackings = this.EO(Object(l.m)(t.clicktracking)), this.customClicks = this.EO(Object(l.m)(t.customclick));
                    }
                    EO(t) {
                        const i = [];
                        return void 0 !== t[0] && t.forEach(t => {
                            i.push(Ur.getKeyValue(t));
                        }), i;
                    }
                }
                class zr {
                    constructor(t) {
                        this.duration = void 0, this.mediaFiles = [], this.trackingEvents = [], this.skipoffset = void 0, this.videoClicks = void 0, this.duration = Object(nt.a)(Ur.getKeyValue(t.duration)), this.skipoffset = Object(nt.e)(t.keyAttributes.skipoffset, this.duration), t.mediafiles && (this.mediaFiles = this.LO(Object(l.m)(t.mediafiles.mediafile))), t.trackingevents && (this.trackingEvents = this.RO(Object(l.m)(t.trackingevents.tracking))), t.videoclicks && (this.videoClicks = new qr(t.videoclicks)), t.adparameters && (this.adParameters = Ur.getKeyValue(t.adparameters), t.adparameters['@xmlEncoded'] && (this.adParameters = Ur.decodeXMLText(this.adParameters)));
                    }
                    RO(t) {
                        const i = [];
                        return void 0 !== t[0] && t.forEach(t => {
                            i.push(new Hr(t, this.duration));
                        }), i;
                    }
                    LO(t) {
                        const i = [];
                        return void 0 !== t[0] && t.forEach(t => {
                            const e = new Nr(t);
                            e.isSupported() && i.push(e);
                        }), i;
                    }
                    isSupported() {
                        return !0;
                    }
                }
                class Wr {
                    constructor(t) {
                        this.id = void 0, this.sequence = void 0, this.adId = void 0, this.linear = void 0, this.id = t.keyAttributes.id, this.sequence = t.keyAttributes.sequence, this.adId = t.keyAttributes.adid, t.linear && (this.linear = new zr(t.linear));
                    }
                    isSupported() {
                        return !0;
                    }
                }
                !function (t) {
                    function i(t) {
                        const i = [];
                        return void 0 !== t[0] && t.forEach(t => {
                            i.push(Ur.getKeyValue(t));
                        }), i;
                    }
                    t.parseImpressions = function (t) {
                        return i(t);
                    }, t.parseCretives = function (t) {
                        const i = [];
                        return t.forEach(t => {
                            i.push(new Wr(t));
                        }), i;
                    }, t.parseErrors = function (t) {
                        return i(t);
                    };
                }($r || ($r = {}));
                class Gr {
                    constructor(t) {
                        var i;
                        this.description = void 0, this.advertiser = void 0, this.surveys = void 0, this.errors = void 0, this.pricing = void 0, this.extensions = void 0, this.adTitle = Ur.getKeyValue(t.adtitle), this.adSystem = Ur.getKeyValue(t.adsystem), this.impressions = $r.parseImpressions(Object(l.m)(t.impression)), this.creatives = (null === (i = t.creatives) || void 0 === i ? void 0 : i.creative) ? $r.parseCretives(Object(l.m)(t.creatives.creative)) : [], this.description = Ur.getKeyValue(t.description), this.advertiser = Ur.getKeyValue(t.advertiser), this.surveys = Ur.getKeyValue(t.survey), this.errors = $r.parseErrors(Object(l.m)(t.error)), this.pricing = Ur.getKeyValue(t.pricing), this.extensions = Ur.getKeyValue(t.extensions);
                    }
                    isSupported() {
                        return !0;
                    }
                }
                class Jr {
                    constructor(t) {
                        var i;
                        this.adSystem = void 0, this.impressions = [], this.VASTAdTagURI = void 0, this.creatives = [], this.errors = void 0, this.extensions = void 0, this.fallowAdditionalWrappers = void 0, this.allowMultipleAds = void 0, this.fallbackOnNoAd = void 0, this.adSystem = Ur.getKeyValue(t.adSystem), this.impressions = $r.parseImpressions(Object(l.m)(t.impression)), this.VASTAdTagURI = Ur.getKeyValue(t.vastadtaguri), this.creatives = (null === (i = t.creatives) || void 0 === i ? void 0 : i.creative) ? $r.parseCretives(Object(l.m)(t.creatives.creative)) : [], this.errors = $r.parseErrors(Object(l.m)(t.error)), this.extensions = t.extensions, this.fallowAdditionalWrappers = !t.keyAttributes.followadditionalwrappers || t.keyAttributes.followadditionalwrappers, this.allowMultipleAds = t.keyAttributes.allowmultipleads, this.fallbackOnNoAd = t.keyAttributes.fallbackonnoad;
                    }
                }
                class Qr {
                    constructor(t) {
                        Array.isArray(t) ? this.BO(t) : this.DO(t);
                    }
                    isSupported() {
                        return !0;
                    }
                    DO(t) {
                        this.id = t.keyAttributes.id, this.sequence = t.keyAttributes.sequence, t.inline ? this.inLine = new Gr(t.inline) : t.wrapper && (this.wrapper = new Jr(t.wrapper));
                    }
                    BO(t) {
                        const i = t.filter(t => {
                            const i = this.FO(t).filter(t => {
                                return t.linear;
                            });
                            return !!Object(l.h)(i);
                        });
                        Object(l.h)(i) && this.DO(i[0]);
                    }
                    FO(t) {
                        return t.inline ? Object(l.m)(t.inline.creatives.creative) : t.wrapper ? Object(l.m)(t.wrapper.creatives.creative) : [];
                    }
                }
                class Xr {
                    constructor(t = (() => {
                        return 2;
                    })()) {
                        this.VO = t;
                    }
                    parseVastXml(t) {
                        try {
                            if (!this.UO(t))
                                return {
                                    error: !0,
                                    errorReason: Gn.XmlInvalidString
                                };
                            const i = new DOMParser().parseFromString(t, 'application/xml'), e = new Ur.JXONTree(i.documentElement);
                            if (!this.$O(e, this.VO))
                                return {
                                    error: !0,
                                    errorReason: Gn.XmlInvalidTree
                                };
                            const s = new Qr(e.ad);
                            return this.NO(s) ? {
                                error: !1,
                                result: s
                            } : {
                                error: !0,
                                errorReason: Gn.XmlInvalidAd
                            };
                        } catch (t) {
                            return {
                                error: !0,
                                errorReason: Gn.XmlParseGeneral
                            };
                        }
                    }
                    UO(t) {
                        return Object(rt.h)(t);
                    }
                    $O(t, i) {
                        if (!t.ad)
                            return !1;
                        const e = parseInt(t.keyAttributes.version, 10);
                        return !(e && e < i);
                    }
                    NO(t) {
                        const i = t.wrapper, e = t.inLine;
                        if (!e && !i)
                            return !1;
                        if (i && !i.VASTAdTagURI)
                            return !1;
                        if (!i) {
                            if (![...e.creatives].filter(t => {
                                    var i, e;
                                    return null === (e = null === (i = t) || void 0 === i ? void 0 : i.linear) || void 0 === e ? void 0 : e.mediaFiles.length;
                                }).length)
                                return !1;
                        }
                        return !0;
                    }
                }
                class Yr {
                    constructor(t) {
                        this.mediaFiles = [], this.adTitle = void 0, this.adParameters = void 0, this.clickThrough = void 0, this.creativeId = void 0, t.forEach(t => {
                            t.inLine ? (this.adTitle = t.inLine.adTitle, this.Ig(t.inLine.creatives)) : t.wrapper && this.Ig(t.wrapper.creatives);
                        });
                    }
                    Cg(t) {
                        this.duration = t.duration, this.HO(t.mediaFiles), this.qO(t.skipoffset), this.zO(t.adParameters), t.videoClicks && t.videoClicks.clickThrough && this.Uw(t.videoClicks.clickThrough);
                    }
                    zO(t) {
                        this.adParameters = t;
                    }
                    qO(t) {
                        this.skipoffset = t;
                    }
                    HO(t) {
                        this.mediaFiles = [
                            ...this.mediaFiles,
                            ...t
                        ];
                    }
                    Uw(t) {
                        this.clickThrough = t;
                    }
                    Ig(t) {
                        t.forEach(t => {
                            t.linear && (this.creativeId = t.id, this.Cg(t.linear));
                        });
                    }
                }
                const Kr = 2, Zr = 10;
                class th {
                    constructor(t) {
                        this.settings = t, this.metrics = { created: new Date().getTime() }, this.settings.vastAdsChain || (this.settings.vastAdsChain = []), void 0 === this.settings.maxWrapperLimit && (this.settings.maxWrapperLimit = Zr);
                    }
                    fetchBid() {
                        return this.metrics.fetchStart = new Date().getTime(), this.WO(this.settings.xml).then(t => {
                            return this.metrics.fetchEnd = new Date().getTime(), t;
                        }).catch(t => {
                            throw this.metrics.fetchEnd = new Date().getTime(), t;
                        });
                    }
                    WO(t) {
                        return new Promise((i, e) => {
                            const s = new Xr(Kr).parseVastXml(t);
                            !0 !== s.error ? (this.GO(s.result), i(this.JO(s.result))) : e(s.errorReason);
                        });
                    }
                    JO(t) {
                        return new Promise((i, e) => {
                            if (t.wrapper) {
                                this.settings.maxWrapperLimit <= 0 && e(Gn.XmlAdaptorWrapperLimit);
                                const s = this.settings.maxWrapperLimit - 1;
                                i(new rh({
                                    id: this.settings.id,
                                    adManagerLineItem: this.settings.adManagerLineItem,
                                    trackersInformation: this.settings.trackersInformation,
                                    maxWrapperLimit: s,
                                    url: t.wrapper.VASTAdTagURI,
                                    replaceTrackingMacros: !1,
                                    requestMetadata: this.settings.requestMetadata,
                                    callingState: this.settings.callingState,
                                    adMacroReplacer: this.settings.adMacroReplacer,
                                    adContainer: this.settings.adContainer,
                                    globalDomUtilsService: this.settings.globalDomUtilsService,
                                    viewabilityService: this.settings.viewabilityService,
                                    trackingService: this.settings.trackingService,
                                    cpm: this.settings.cpm,
                                    obfuscatedPrice: this.settings.obfuscatedPrice,
                                    adEnforcer: this.settings.adEnforcer,
                                    requestWithCredentials: this.settings.requestWithCredentials,
                                    successRate: this.settings.successRate,
                                    os: this.settings.os,
                                    adSlotContainerRecycler: this.settings.adSlotContainerRecycler,
                                    creativeId: this.settings.creativeId,
                                    bidSlotId: this.settings.bidSlotId,
                                    loopAdWhenFinished: this.settings.loopAdWhenFinished,
                                    pageUrl: this.settings.pageUrl,
                                    urlSuffixerService: this.settings.urlSuffixerService
                                }).fetchBid());
                            } else {
                                i(new Vr({
                                    id: this.settings.id,
                                    adManagerLineItem: this.settings.adManagerLineItem,
                                    trackers: this.settings.trackersInformation,
                                    vastResponse: new Yr(this.settings.vastAdsChain),
                                    requestMetadata: this.settings.requestMetadata,
                                    callingState: this.settings.callingState,
                                    adContainer: this.settings.adContainer,
                                    globalDomUtilsService: this.settings.globalDomUtilsService,
                                    trackingService: this.settings.trackingService,
                                    viewabilityService: this.settings.viewabilityService,
                                    cpm: this.settings.cpm,
                                    obfuscatedPrice: this.settings.obfuscatedPrice,
                                    adEnforcer: this.settings.adEnforcer,
                                    successRate: this.settings.successRate,
                                    os: this.settings.os,
                                    adSlotContainerRecycler: this.settings.adSlotContainerRecycler,
                                    externalCreativeId: this.settings.creativeId,
                                    bidSlotId: this.settings.bidSlotId,
                                    loopAdWhenFinished: this.settings.loopAdWhenFinished,
                                    urlSuffixerService: this.settings.urlSuffixerService
                                }));
                            }
                        });
                    }
                    GO(t) {
                        !function (t, i) {
                            const e = new $n(t);
                            i.adError.push(...Wn(e.errorUrls)), i.adImpression.push(...Wn(e.impressions)), i.adClick.push(...Wn(e.clickTrackings)), i.adMute.push(...Wn(e.trackingEvents.mute)), i.adPause.push(...Wn(e.trackingEvents.pause)), i.adQuartileFirst.push(...Wn(e.trackingEvents.firstQuartile)), i.adQuartileSecond.push(...Wn(e.trackingEvents.midpoint)), i.adQuartileThird.push(...Wn(e.trackingEvents.thirdQuartile)), i.adQuartileFourth.push(...Wn(e.trackingEvents.complete)), i.adResume.push(...Wn(e.trackingEvents.resume)), i.adSkip.push(...Wn(e.trackingEvents.skip)), i.adStarted.push(...Wn(e.trackingEvents.creativeView)), i.adVideoStart.push(...Wn([...e.trackingEvents.start])), i.adUnmute.push(...i.adUnmute, ...Wn(e.trackingEvents.unmute)), i.adUserAcceptInvitation.push(...Wn([
                                ...e.trackingEvents.acceptInvitation,
                                ...e.trackingEvents.acceptInvitationLinear
                            ])), i.adUserClose.push(...Wn(e.trackingEvents.close)), i.adUserMinimize.push(...i.adUserMinimize, ...Wn([
                                ...e.trackingEvents.collapse,
                                ...e.trackingEvents.playerCollapse,
                                ...e.trackingEvents.adCollapse
                            ]));
                        }(t, this.settings.trackersInformation), this.settings.vastAdsChain.push(t);
                    }
                }
                var ih, eh = e(23);
                !function (t) {
                    t[t.None = 0] = 'None', t[t.Ima = 1] = 'Ima';
                }(ih || (ih = {}));
                const sh = { [ih.Ima]: '.g.doubleclick.net' }, nh = !0;
                class rh {
                    constructor(t) {
                        this.settings = t, void 0 === this.settings.requestWithCredentials && (this.settings.requestWithCredentials = nh), this.metrics = { created: new Date().getTime() };
                    }
                    fetchBid() {
                        return this.metrics.fetchStart = new Date().getTime(), this.QO(this.settings.url).then(t => {
                            return t.fetchBid();
                        }).then(t => {
                            return this.metrics.fetchEnd = new Date().getTime(), t;
                        }).catch(t => {
                            throw this.metrics.fetchEnd = new Date().getTime(), t;
                        });
                    }
                    XO(t) {
                        let i = ih.None;
                        return Object.keys(sh).forEach(e => {
                            -1 !== t.indexOf(sh[e]) && (i = parseInt(e, 10));
                        }), i;
                    }
                    QO(t) {
                        const i = this.YO(t);
                        switch (this.XO(t)) {
                        case ih.None:
                            return this.KO(i);
                        case ih.Ima:
                            return this.ZO(i);
                        default:
                            return Promise.reject(Gn.HandlingSdkUrl);
                        }
                    }
                    ZO(t) {
                        return Promise.resolve(new yr({
                            url: t,
                            id: this.settings.id,
                            adManagerLineItem: this.settings.adManagerLineItem,
                            trackersInformation: this.settings.trackersInformation,
                            replaceTrackingMacros: !1,
                            requestMetadata: this.settings.requestMetadata,
                            callingState: this.settings.callingState,
                            adContainer: this.settings.adContainer,
                            globalDomUtilsService: this.settings.globalDomUtilsService,
                            viewabilityService: this.settings.viewabilityService,
                            cpm: this.settings.cpm,
                            obfuscatedPrice: this.settings.obfuscatedPrice,
                            adEnforcer: this.settings.adEnforcer,
                            successRate: this.settings.successRate,
                            os: this.settings.os,
                            adSlotContainerRecycler: this.settings.adSlotContainerRecycler,
                            creativeId: this.settings.creativeId,
                            bidSlotId: this.settings.bidSlotId,
                            pageUrl: this.settings.pageUrl,
                            urlSuffixerService: this.settings.urlSuffixerService
                        }));
                    }
                    KO(t) {
                        return eh.a.fetchXMLRequest(t, this.settings.requestWithCredentials).catch(() => {
                            return !1 === this.settings.requestWithCredentials ? Promise.reject(Gn.NetworkRequestUrl) : eh.a.fetchXMLRequest(t, !1);
                        }).catch(() => {
                            return Promise.reject(Gn.NetworkRequestUrl);
                        }).then(t => {
                            return new th({
                                id: this.settings.id,
                                adManagerLineItem: this.settings.adManagerLineItem,
                                trackersInformation: this.settings.trackersInformation,
                                vastAdsChain: this.settings.vastAdsChain,
                                xml: t,
                                replaceTrackingMacros: !1,
                                requestMetadata: this.settings.requestMetadata,
                                callingState: this.settings.callingState,
                                adMacroReplacer: this.settings.adMacroReplacer,
                                adContainer: this.settings.adContainer,
                                globalDomUtilsService: this.settings.globalDomUtilsService,
                                viewabilityService: this.settings.viewabilityService,
                                trackingService: this.settings.trackingService,
                                cpm: this.settings.cpm,
                                obfuscatedPrice: this.settings.obfuscatedPrice,
                                adEnforcer: this.settings.adEnforcer,
                                requestWithCredentials: this.settings.requestWithCredentials,
                                successRate: this.settings.successRate,
                                os: this.settings.os,
                                adSlotContainerRecycler: this.settings.adSlotContainerRecycler,
                                creativeId: this.settings.creativeId,
                                bidSlotId: this.settings.bidSlotId,
                                loopAdWhenFinished: this.settings.loopAdWhenFinished,
                                pageUrl: this.settings.pageUrl,
                                urlSuffixerService: this.settings.urlSuffixerService
                            });
                        });
                    }
                    YO(t) {
                        const {
                                width: i,
                                height: e
                            } = this.settings.callingState.adContainerState.get(this.settings.adManagerLineItem.protoLineItem.adType), s = {
                                adHeight: e,
                                adWidth: i,
                                adPostion: this.settings.callingState.adBreakState.adBreakType
                            }, n = {
                                mediaDescription: this.settings.callingState.media.mediaDescription,
                                mediaDuration: this.settings.callingState.media.mediaDuration,
                                mediaId: this.settings.callingState.media.mediaId,
                                mediaTitle: this.settings.callingState.media.mediaTitle,
                                mediaUrl: this.settings.callingState.media.mediaUrl
                            };
                        return this.settings.adMacroReplacer.replace(t, this.settings.adManagerLineItem.protoLineItem.vendorId, {
                            adMacros: s,
                            mediaMacros: n
                        });
                    }
                }
                class hh {
                    constructor(t = (() => {
                        return {};
                    })()) {
                        this.data = t, Object(rt.h)(this.data.cnxBidId) || (this.data.cnxBidId = Object(Li.c)());
                    }
                }
                var ah = e(32);
                function oh(t, i) {
                    return t.find(t => {
                        return t.adManagerLineItem.protoLineItem.advertiserLineItemId === i;
                    }).adManagerLineItem;
                }
                function ch(t) {
                    const i = [];
                    return t.callers.forEach(t => {
                        const e = t.settings.requestMetadata.data.requestedFloorPriceIndex;
                        void 0 === e || Object(l.g)(e, i) || i.push(e);
                    }), t.bids.forEach(t => {
                        const e = t.settings.requestMetadata.data.requestedFloorPriceIndex;
                        void 0 === e || Object(l.g)(e, i) || i.push(e);
                    }), i;
                }
                function uh(t) {
                    return [
                        h.ProtoCreativeTypeEnum.Tam,
                        h.ProtoCreativeTypeEnum.TamDeal,
                        h.ProtoCreativeTypeEnum.Rtb,
                        h.ProtoCreativeTypeEnum.HeaderBidder
                    ].includes(t);
                }
                class lh {
                    constructor(t, i, e, s, n) {
                        this.tx = t, this.ex = i, this.sO = e, this.js = s, this.co = n, this.sx = 'div-cnx-display', this.nx = new ji(), this.Jy = new ji();
                    }
                    get onDisplayAd() {
                        return this.nx.asObservable();
                    }
                    get onError() {
                        return this.Jy.asObservable();
                    }
                    initializeAd(t, i) {
                        try {
                            this.Ng = t, this.rO = new Lr(this.js, this.co);
                            let e = '';
                            this.tx === Yn.b.Html && (e = this.ex);
                            const s = this.hx(this.Ng, i);
                            this.rO.loadIframe({
                                customHead: '<style>html, body {position:relative;width:100%;height:100%}#' + this.sx + '{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}#' + this.sx + '{border:3px solid white}#' + this.sx + ' iframe{display:block}</style>',
                                customHtml: '<div id="' + this.sx + '">' + e + '</div>',
                                container: s,
                                customReportingLog: {
                                    heavyAdBlockTypeEnum: h.ProtoHeavyAdBlockTypeEnum.OverlayIframe,
                                    advertiserLineItemId: this.sO
                                }
                            }).then(t => {
                                this.ax = t.iframe;
                                const i = this.ax.contentWindow;
                                if (this.ox = i.document.getElementById(this.sx), this.tx === Yn.b.Javascript && Object(T.w)(this.ox, i, this.ex), '' === this.ax.contentWindow.document.head.innerHTML) {
                                    const t = 'html, body {position:relative;width:100%;height:100%;margin:0;border:0}';
                                    this.ux(t);
                                }
                                Object(T.F)(this.ax.contentWindow, 'AdHtmlWrapper'), this.nx.next();
                            }).catch(t => {
                                this.Jy.next(Yn.c.DisplayIntegratorIframeLoad);
                            });
                        } catch (t) {
                            this.Jy.next(Yn.c.WrapperInitAdError);
                        }
                    }
                    getAdMediaWidth() {
                        return this.ox.clientWidth;
                    }
                    getAdMediaHeight() {
                        return this.ox.clientHeight;
                    }
                    destroy() {
                        this.ax && this.Ng && Object(T.J)(this.ax), this.rO && (this.rO.destroy(), this.rO = null);
                    }
                    hx(t, i) {
                        if (!i.width || !i.height)
                            return t;
                        const e = this.js.createElementByString(`<div class="cnx-iframe-container" style="width: ${ i.width }px; height: ${ i.height }px"></div>`);
                        return this.Ng.appendChild(e), e;
                    }
                    ux(t) {
                        const i = this.ax.contentWindow.document.createElement('style'), e = this.ax.contentWindow.document.createTextNode(t);
                        i.appendChild(e), this.ax.contentWindow.document.head.appendChild(i);
                    }
                }
                const dh = {
                    [Nt.FirstQuartile]: Pt.b.AdVideoFirstQuartile,
                    [Nt.SecondQuartile]: Pt.b.AdVideoMidpoint,
                    [Nt.ThirdQuartile]: Pt.b.AdVideoThirdQuartile,
                    [Nt.FourthQuartile]: Pt.b.AdVideoComplete
                };
                class fh extends cr {
                    constructor(t) {
                        super(t), this.settings = t, this.adMediaType = 'displayHtml', this.adSourceType = h.ProtoAdsourceTypeEnum.Unknown, this.lx = 'html', this.zl = 500, this.Wl = 1, this.px = [];
                        const i = this.settings.adManagerLineItem.protoLineItem.overlayTime * qt.f;
                        this.bx = new _i(i, this.zl, this.Wl), this.px.push(this.bx.onTimeUpdate.subscribe(() => {
                            this.Zg({ type: Pt.b.AdRemainingTimeChange });
                        }), this.bx.onTimeElapsed.subscribe(() => {
                            this.stopAd('htmlTimerElapsed');
                        }), this.bx.onQuartile.subscribe(t => {
                            this.Zg({
                                type: dh[t],
                                payload: {}
                            });
                        }));
                    }
                    get adVideoUrl() {
                        return this.lx;
                    }
                    get declaredDurationInSeconds() {
                        return this.settings.adManagerLineItem.protoLineItem.overlayTime;
                    }
                    initAd(t, i, e, s, n, r, h) {
                        try {
                            super.initAd(t, i, e, s, n, r, h), this.Vd = t, this.Ud = i, this.Zg({
                                type: Pt.b.AdLoaded,
                                payload: {}
                            });
                        } catch (t) {
                            this.Zg({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.AdaptorInitAdError + `_${ t.message }` }
                            });
                        }
                    }
                    startAd() {
                        try {
                            super.startAd(), this.bx.start(), this.vx = new lh(this.settings.mime, this.settings.html, this.settings.adManagerLineItem.protoLineItem.advertiserLineItemId, this.settings.globalDomUtilsService, this.settings.trackingService), this.px.push(this.vx.onDisplayAd.subscribe(() => {
                                this.Zg({ type: Pt.b.AdStarted }), this.Zg({ type: Pt.b.AdVideoStart }), this.Zg({
                                    type: Pt.b.AdImpression,
                                    payload: {}
                                });
                            }), this.vx.onError.subscribe(t => {
                                this.Zg({
                                    type: Pt.b.AdError,
                                    payload: { errorMessage: t }
                                }), this.bx.stop();
                            })), this.vx.initializeAd(this.Ng, {
                                width: this.Vd,
                                height: this.Ud
                            });
                        } catch (t) {
                            this.Zg({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.AdaptorStartAdError + `_${ t.message }` }
                            });
                        }
                    }
                    stopAd(t) {
                        try {
                            super.stopAd(t), this.bx.stop(), this.Zg({
                                type: Pt.b.AdStopped,
                                payload: { shouldTrackPostBid: !0 }
                            });
                        } catch (t) {
                            this.ky('HtmlBidAdaptor', 'stopAd', t);
                        }
                    }
                    skipAd() {
                        try {
                            super.skipAd(), this.Zg({ type: Pt.b.AdSkipped });
                        } catch (t) {
                            this.ky('HtmlBidAdaptor', 'skipAd', t);
                        }
                    }
                    pauseAd() {
                        try {
                            this.bx.stop(), this.Zg({ type: Pt.b.AdPaused });
                        } catch (t) {
                            this.ky('HtmlBidAdaptor', 'pauseAd', t);
                        }
                    }
                    resumeAd() {
                        try {
                            this.bx.start(), this.Zg({ type: Pt.b.AdPlaying });
                        } catch (t) {
                            this.ky('HtmlBidAdaptor', 'resumeAd', t);
                        }
                    }
                    collapseAd() {
                    }
                    expandAd() {
                    }
                    getAdDuration() {
                        return this.bx.timerDuration / qt.f;
                    }
                    getAdRemainingTime() {
                        return this.bx.timeRemaining / qt.f;
                    }
                    getAdVolume() {
                        return 0;
                    }
                    getAdMediaSize() {
                        return {
                            width: this.vx.getAdMediaWidth(),
                            height: this.vx.getAdMediaHeight()
                        };
                    }
                    setAdVolume(t) {
                    }
                    resizeAd(t, i, e) {
                        this.Vd = t, this.Ud = i;
                    }
                    fl() {
                        var t;
                        try {
                            super.fl(), this.bx.stop(), Ai(this.px), null === (t = this.vx) || void 0 === t || t.destroy();
                        } catch (t) {
                            this.ky('HtmlBidAdaptor', '_destroy', t);
                        }
                    }
                }
                class ph {
                    constructor(t) {
                        this.settings = t, this.metrics = { created: new Date().getTime() };
                    }
                    fetchBid() {
                        if (this.metrics.fetchStart = new Date().getTime(), !this.mx(this.settings.mime))
                            return Promise.reject(Gn.HTMLUnknownMimeType);
                        const t = new fh({
                            id: this.settings.id,
                            adManagerLineItem: this.settings.adManagerLineItem,
                            trackers: this.settings.trackersInformation,
                            html: this.settings.html,
                            mime: this.settings.mime,
                            minDimensions: this.settings.dimensions,
                            requestMetadata: this.settings.requestMetadata,
                            callingState: this.settings.callingState,
                            globalDomUtilsService: this.settings.globalDomUtilsService,
                            trackingService: this.settings.trackingService,
                            viewabilityService: this.settings.viewabilityService,
                            adContainer: this.settings.adContainer,
                            cpm: this.settings.cpm,
                            obfuscatedPrice: this.settings.obfuscatedPrice,
                            adEnforcer: this.settings.adEnforcer,
                            successRate: this.settings.successRate,
                            os: this.settings.os,
                            adSlotContainerRecycler: this.settings.adSlotContainerRecycler,
                            externalCreativeId: this.settings.creativeId,
                            bidSlotId: this.settings.bidSlotId,
                            urlSuffixerService: this.settings.urlSuffixerService
                        });
                        return this.metrics.fetchEnd = new Date().getTime(), Promise.resolve(t);
                    }
                    mx(t) {
                        return Object.keys(Yn.b).some(i => {
                            return Yn.b[i] === t;
                        });
                    }
                }
                const bh = 'cnxRtbTest';
                class vh {
                    constructor(t, i, e, s, n, r, h, a) {
                        this.gx = t, this.yx = i, this.Mm = e, this.wx = s, this.Ox = n, this.xx = r, this.Sx = h, this.jx = a, this.kx = 0, this._x = new Map();
                    }
                    request(t) {
                        const {
                                width: i,
                                height: e
                            } = t.callingState.adContainerState.get(h.ProtoAdType.Video), s = this.Ax(i, e), r = this.Ix(t);
                        return !s || Object.keys(r.lineItems).length <= 0 ? Promise.resolve({
                            bids: [],
                            noBids: []
                        }) : this.Cx(r).then(i => {
                            return this.Tx(i, t);
                        }).catch(t => {
                            return Object(n.a)({
                                message: 'RtbCallAggregator',
                                exception: t.message,
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                sendMaxLog: !0
                            }), {
                                bids: [],
                                noBids: []
                            };
                        });
                    }
                    destroy() {
                    }
                    Tx(t, i) {
                        const e = {
                            bids: [],
                            noBids: []
                        };
                        return t.lineItemResponses.forEach(s => {
                            const n = oh(i.lineItemRequestDataList, s.id);
                            Object(rt.e)(s.cachedFloorPrice) && this._x.set(s.id, s.cachedFloorPrice), s.bids.forEach(s => {
                                const r = this.Px(s, n, t, i.callingState);
                                r && e.bids.push(r);
                            }), s.noBids.forEach(i => {
                                e.noBids.push(this.Mx(i, n, t));
                            });
                        }), e;
                    }
                    Mx(t, i, e) {
                        return {
                            lineItem: i,
                            requestMetadata: new hh({
                                requestedFloorPrice: t.requestedFloorPrice,
                                requestedFloorPriceIndex: t.floorPriceFactorIndex,
                                rtbRequestNumber: this.kx,
                                syncedUser: t.syncedUser,
                                partnerCustomHeaders: t.partnerCustomHeaders,
                                partnerReason: t.partnerReason,
                                requestTrackingHandledByServer: !0
                            }),
                            reason: t.connatixReason
                        };
                    }
                    Px(t, i, e, s) {
                        let n = t;
                        const r = this.Ex(n, i), a = new hh({
                                requestedFloorPrice: n.requestedFloorPrice,
                                requestedFloorPriceIndex: n.floorPriceFactorIndex,
                                syncedUser: n.syncedUser,
                                rtbRequestNumber: this.kx,
                                encryptedPrice: n.encryptedPrice,
                                dspId: n.dspId,
                                rtbAdomain: n.adomain,
                                rtbSeatId: n.seatId,
                                rtbCampainId: n.campaignId,
                                cnxBidId: n.cnxBidId,
                                requestTrackingHandledByServer: !0,
                                logAuctionInformation: n.logAuctionInformation
                            }), o = Or();
                        switch (i.protoLineItem.adType) {
                        case h.ProtoAdType.Video:
                            return new th({
                                id: Object(Li.c)(),
                                adManagerLineItem: i,
                                replaceTrackingMacros: !0,
                                trackersInformation: r,
                                xml: n.vastTag,
                                bidSlotId: o,
                                requestMetadata: a,
                                callingState: s,
                                adMacroReplacer: this.wx,
                                adContainer: this.Ox.get(i.protoLineItem.adType),
                                globalDomUtilsService: this.Mm.services.GlobalDomUtilsService,
                                viewabilityService: this.Mm.services.ViewabilityService,
                                trackingService: this.Mm.services.TrackingService,
                                obfuscatedPrice: n.gtkpbp,
                                adEnforcer: this.Sx,
                                creativeId: n.creativeId,
                                successRate: n.successRate,
                                os: this.Mm.config.os.os,
                                adSlotContainerRecycler: this.jx,
                                pageUrl: this.Mm.config.pageUrl,
                                urlSuffixerService: this.Mm.services.UrlSuffixerService
                            });
                        case h.ProtoAdType.Overlay:
                            return new ph({
                                id: Object(Li.c)(),
                                adManagerLineItem: i,
                                dimensions: {
                                    width: n.width,
                                    height: n.height
                                },
                                html: n.vastTag,
                                mime: n.mime,
                                bidSlotId: o,
                                replaceTrackingMacros: !0,
                                requestMetadata: a,
                                trackersInformation: r,
                                callingState: s,
                                adContainer: this.Ox.get(i.protoLineItem.adType),
                                globalDomUtilsService: this.Mm.services.GlobalDomUtilsService,
                                viewabilityService: this.Mm.services.ViewabilityService,
                                trackingService: this.Mm.services.TrackingService,
                                obfuscatedPrice: n.gtkpbp,
                                adEnforcer: this.Sx,
                                creativeId: n.creativeId,
                                successRate: n.successRate,
                                os: this.Mm.config.os.os,
                                adSlotContainerRecycler: this.jx,
                                urlSuffixerService: this.Mm.services.UrlSuffixerService
                            });
                        }
                    }
                    Ex(t, i) {
                        const e = new Hn();
                        qn(i.protoLineItem.trackers, e);
                        const s = [
                            ...t.billingNoticeUrlList,
                            t.adQualityCheckUrl
                        ].filter(t => {
                            return Object(rt.h)(t);
                        }).map(t => {
                            return zn(t);
                        });
                        return e.adImpression.push(...s), Object(rt.h)(t.winNoticeUrl) && e.adWin.push(zn(t.winNoticeUrl)), e;
                    }
                    Lx(t, i) {
                        if (t.protoLineItem.adType === h.ProtoAdType.Overlay) {
                            const e = i.adContainerState.get(h.ProtoAdType.Video), s = i.adContainerState.get(t.protoLineItem.adType);
                            if (e.height !== s.height || e.width !== s.width)
                                return {
                                    width: s.width,
                                    height: s.height
                                };
                        }
                        return null;
                    }
                    Rx(t, i) {
                        const e = {};
                        return t.filter(t => {
                            return this.xx.shouldRequestLineItem(t.adManagerLineItem.protoLineItem.advertiserLineItemId);
                        }).forEach(t => {
                            var s, n;
                            const r = t.adManagerLineItem, h = this.Lx(r, i);
                            let a;
                            this._x.has(r.protoLineItem.advertiserLineItemId) && (a = this._x.get(r.protoLineItem.advertiserLineItemId)), e[r.protoLineItem.advertiserLineItemId] = {
                                availableRequests: t.maxAvailableRequests,
                                gdprConsent: this.Mm.services.UserManagerService.isConsent(r.protoLineItem.vendorId),
                                cachedFloorPrice: a,
                                ignoredFloorPriceFactorIndexes: ch(r),
                                publisherLineItemId: r.protoLineItem.publisherLineItemId,
                                slotHeight: null === (s = h) || void 0 === s ? void 0 : s.height,
                                slotWidth: null === (n = h) || void 0 === n ? void 0 : n.width
                            };
                        }), e;
                    }
                    Ix(t) {
                        const {
                            width: i,
                            height: e,
                            viewability: s
                        } = t.callingState.adContainerState.get(h.ProtoAdType.Video);
                        return {
                            metadata: this.Mm.services.TrackingService.getMetadataModel(),
                            gdprCompliant: this.Mm.services.UserManagerService.isGDPR(),
                            gdprConsentData: this.Mm.services.UserManagerService.getConsentPayload(),
                            soundOn: t.callingState.sound,
                            videoHeight: e,
                            videoWidth: i,
                            testMode: 'true' === Object(pn.b)(bh, this.Mm.config.pageUrl),
                            explorationMode: this.Mm.config.explorationMode,
                            viewability: s,
                            outstream: this.gx,
                            domainURL: this.Mm.config.domainURL,
                            isClickToPlay: t.callingState.clickToPlay,
                            appVersion: this.Mm.config.appVersion,
                            deviceID: this.Mm.services.UserManagerService.getDeviceId(),
                            isCcpaBlockingUserInfo: !this.Mm.services.UserManagerService.isSellUserAllowed(),
                            usPrivacyString: this.Mm.services.UserManagerService.getUsPrivacyString(),
                            adSkippability: this.yx.adSkippability,
                            skipAdAfter: this.yx.skipAdAfter,
                            gdprConsentMode: this.Mm.services.UserManagerService.gdprConsentMode,
                            customMacros: this.Mm.services.MacrosService.getExtraMacros(),
                            maxAdDuration: t.maxAdDuration,
                            lineItems: this.Rx(t.lineItemRequestDataList, t.callingState),
                            maxBidPrice: t.maxBidPrice,
                            adsMustBeSkippableIfLongerThan: this.yx.adsMustBeSkippableIfLongerThan
                        };
                    }
                    Cx(t) {
                        return this.kx++, eh.a.sendProtoRequest({
                            endpoint: Vi.a.endPoints.api.rtb,
                            ProtoRequest: h.ProtoRtbRequest,
                            ProtoResponse: h.ProtoRtbResponse,
                            requestData: t,
                            queryParams: { [ah.b]: He.a.version },
                            logError: !1
                        });
                    }
                    Ax(t, i) {
                        return 0 !== t && 0 !== i || (Object(n.a)({
                            message: 'AdManager_BidderCaller_dimensions',
                            exception: `width:${ t }_height:${ i }_destroyed:${ f.a.isPlayerDestroyed() }`,
                            throttle: 5,
                            level: h.ProtoLoggingLevelEnum.FATAL,
                            sendMaxLog: !0
                        }), !1);
                    }
                }
                var mh = e(22), gh = e(37);
                const yh = [
                    gh.a.P1,
                    gh.a.P2,
                    gh.a.P4,
                    gh.a.P7,
                    gh.a.P8
                ];
                class wh {
                    constructor(t) {
                        this.Da = t;
                    }
                    Bx(t, i) {
                        let e = [];
                        switch (i) {
                        case mh.a.CmpApi:
                            e = Sn;
                            break;
                        case mh.a.TcfApi:
                            e = jn;
                        }
                        return Object(l.g)(t, e);
                    }
                    Dx(t) {
                        const i = this.Da.getGdprConsentApiType();
                        if (this.Bx(t, i))
                            return !0;
                        const e = xn[t] || '';
                        return this.Da.isConsent(e, yh);
                    }
                    Fx(t) {
                        return !!Object(l.g)(t, kn) || !!this.Da.isSellUserAllowed();
                    }
                    isBidderCallable(t) {
                        return this.Da.isGDPR() ? this.Dx(t) : !this.Da.isCcpaApplicable() || this.Fx(t);
                    }
                }
                const Oh = (t, i, e, s) => {
                        const n = (() => {
                            return {
                                usePrebidCache: !0,
                                cache: { url: _n },
                                userSync: {
                                    syncEnabled: !0,
                                    iframeEnabled: !0,
                                    pixelEnabled: !0,
                                    filterSettings: {
                                        iframe: {
                                            bidders: '*',
                                            filter: 'include'
                                        },
                                        image: {
                                            bidders: '*',
                                            filter: 'include'
                                        }
                                    },
                                    syncsPerBidder: 0,
                                    syncDelay: 3000,
                                    auctionDelay: 0,
                                    aliasSyncEnabled: !0,
                                    userIds: [
                                        { name: 'criteo' },
                                        {
                                            name: 'pubCommonId',
                                            params: { enableSharedId: !0 },
                                            storage: {
                                                type: 'cookie',
                                                name: '_pubcid',
                                                expires: 180
                                            }
                                        },
                                        {
                                            name: 'flocId',
                                            params: { token: 'A3dHTSoNUMjjERBLlrvJSelNnwWUCwVQhZ5tNQ+sll7y+LkPPVZXtB77u2y7CweRIxiYaGwGXNlW1/dFp8VMEgIAAAB+eyJvcmlnaW4iOiJodHRwczovL3NoYXJlZGlkLm9yZzo0NDMiLCJmZWF0dXJlIjoiSW50ZXJlc3RDb2hvcnRBUEkiLCJleHBpcnkiOjE2MjYyMjA3OTksImlzU3ViZG9tYWluIjp0cnVlLCJpc1RoaXJkUGFydHkiOnRydWV9' }
                                        },
                                        { name: 'uid2' }
                                    ]
                                },
                                ix: { timeout: 900 }
                            };
                        })();
                        return e && (n.schain = (t => {
                            return {
                                validation: 'strict',
                                config: {
                                    ver: '1.0',
                                    complete: 1,
                                    nodes: [{
                                            asi: t.businessDomain,
                                            hp: 1,
                                            sid: Object(rt.h)(t.supplyChainId) ? t.supplyChainId : null
                                        }]
                                }
                            };
                        })(e)), (t || i) && (n.consentManagement = ((t, i) => {
                            return t ? {
                                gdpr: {
                                    cmpApi: 'iab',
                                    timeout: 2000,
                                    defaultGdprScope: !0,
                                    allowAuctionWithoutConsent: !1,
                                    rules: [
                                        {
                                            purpose: 'storage',
                                            enforcePurpose: !0,
                                            enforceVendor: !0
                                        },
                                        {
                                            purpose: 'basicAds',
                                            enforcePurpose: !0,
                                            enforceVendor: !0
                                        },
                                        {
                                            purpose: 'measurement',
                                            enforcePurpose: !0,
                                            enforceVendor: !0
                                        }
                                    ]
                                }
                            } : i ? {
                                usp: {
                                    cmpApi: 'iab',
                                    timeout: 2000
                                }
                            } : {};
                        })(t, i)), Object(rt.h)(s) && (n.pageUrl = s), n;
                    }, xh = [...Cn], Sh = [
                        Tn.VAST_2_WRAPPER,
                        Tn.VAST_2,
                        Tn.VAST_3,
                        Tn.VAST_3_WRAPPER
                    ], jh = [
                        Mn.VPAID_1,
                        Mn.VPAID_2
                    ], kh = (t, i, e, s, n) => {
                        const r = {
                            code: Object(Li.c)(),
                            mediaTypes: {
                                video: {
                                    playerSize: [
                                        Math.floor(t),
                                        Math.floor(i)
                                    ],
                                    context: e ? 'outstream' : 'instream',
                                    mimes: xh,
                                    protocols: Sh,
                                    linearity: Pn,
                                    api: jh,
                                    frameworks: [
                                        Mn.VPAID_1,
                                        Mn.VPAID_2
                                    ],
                                    maxduration: s,
                                    minDuration: 0
                                }
                            },
                            bids: []
                        };
                        return Object(rt.e)(n) && (r.floors = (t => {
                            return {
                                currency: 'USD',
                                schema: { fields: ['mediaType'] },
                                values: { video: t }
                            };
                        })(n)), r;
                    }, _h = {
                        [wn.AppNexus]: (t, i) => {
                            const e = Object.assign({}, t), s = i.floorPrice;
                            return Object(rt.e)(s) && (e.reserve = s), e;
                        },
                        [wn.DistrictM]: (t, i) => {
                            const e = Object.assign({}, t), s = i.floorPrice;
                            return Object(rt.e)(s) && (e.reserve = s), e;
                        },
                        [wn.Telaria]: (t, i) => {
                            const e = Object.assign({}, t);
                            return t.srcPageUrl || (e.srcPageUrl = i.pageUrl), e;
                        },
                        [wn.OneVideo]: (t, i) => {
                            Object(rt.h)(t.pubId) || Object(n.a)({
                                message: 'AdManager_HeaderBidder_OneVideo_pubId_missing',
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                throttle: 2,
                                sendMaxLog: !1
                            });
                            const e = Object.assign(Object.assign({}, t), {
                                    pubId: t.pubId,
                                    video: {
                                        playerWidth: Math.floor(i.playerWidth),
                                        playerHeight: Math.floor(i.playerHeight),
                                        mimes: xh,
                                        protocols: Sh,
                                        api: jh
                                    },
                                    site: { page: i.pageUrl }
                                }), s = i.floorPrice;
                            return Object(rt.e)(s) && (e.bidfloor = s), e;
                        },
                        [wn.IndexExchange]: (t, i) => {
                            const e = t.siteId;
                            if (!Object(rt.h)(e))
                                return void Object(n.a)({
                                    level: h.ProtoLoggingLevelEnum.FATAL,
                                    message: 'PrebidJS_IX_adapter_missing_siteId',
                                    callStack: i.lineItemId
                                });
                            const s = Object.keys(Tn).map(t => {
                                    return Tn[t];
                                }), r = {
                                    siteId: e,
                                    size: [
                                        Math.floor(i.playerWidth),
                                        Math.floor(i.playerHeight)
                                    ],
                                    video: {
                                        mimes: Cn,
                                        minduration: 0,
                                        maxduration: i.maxDuration,
                                        protocols: s
                                    }
                                };
                            Object(rt.d)(t.minduration) && (r.video.minduration = t.minduration), Object(rt.d)(t.maxduration) && t.maxduration <= i.maxDuration && (r.video.maxduration = t.maxduration), Object(rt.h)(t.id) && (r.id = t.id);
                            const a = i.floorPrice;
                            return Object(rt.e)(a) && (r.bidFloor = a, r.bidFloorCur = 'USD'), r;
                        },
                        [wn.Rubicon]: (t, i) => {
                            const e = Object.assign({}, t), s = i.floorPrice;
                            return Object(rt.e)(s) && (e.floor = s), e;
                        },
                        [wn.RhythmOne]: (t, i) => {
                            const e = Object.assign({}, t), s = i.floorPrice;
                            return Object(rt.e)(s) && (e.floor = s), e;
                        },
                        [wn.Pubmatic]: (t, i) => {
                            const e = Object.assign({}, t), s = i.floorPrice;
                            return Object(rt.e)(s) && (e.kadfloor = String(s)), e;
                        },
                        [wn.SpotX]: (t, i) => {
                            const e = Object.assign({}, t);
                            e.hide_skin = !0;
                            const s = i.floorPrice;
                            return Object(rt.e)(s) && (e.price_floor = s), i.isOutstream && (e.outstream_options = { slot: i.bidSlotId }), e;
                        },
                        [wn.MediaNet]: (t, i) => {
                            const e = Object.assign({}, t);
                            Object(rt.h)(e.cid) || Object(n.a)({
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                message: 'PrebidJS_MediaNet_adapter_missing_cid',
                                callStack: i.lineItemId
                            }), Object(rt.h)(e.crid) || Object(n.a)({
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                message: 'PrebidJS_MediaNet_adapter_missing_crid',
                                callStack: i.lineItemId
                            });
                            const s = i.floorPrice;
                            return Object(rt.e)(s) && (e.bidFloor = s), e.video = {
                                api: Object.keys(Mn).map(t => {
                                    return Mn[t];
                                }),
                                mimes: Object.keys(Cn).map(t => {
                                    return Cn[t];
                                }),
                                protocols: Object.keys(Tn).map(t => {
                                    return Tn[t];
                                }),
                                maxDuration: i.maxDuration,
                                w: i.playerWidth,
                                h: i.playerHeight
                            }, e;
                        },
                        [wn.Adman]: (t, i) => {
                            const e = Object.assign({}, t);
                            return Object(rt.h)(e.placementId) || Object(n.a)({
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                message: 'PrebidJS_Adman_adapter_missing_placementId',
                                callStack: i.lineItemId
                            }), e;
                        },
                        [wn.IronSource]: (t, i) => {
                            const e = Object.assign({}, t);
                            Object(rt.h)(e.isOrg) || Object(n.a)({
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                message: 'PrebidJS_IronSource_adapter_missing_isOrg_string',
                                callStack: i.lineItemId
                            });
                            const {floorPrice: s} = i;
                            return Object(rt.e)(s) && (e.floorPrice = s), e;
                        },
                        [wn.Undertone]: (t, i) => {
                            const e = Object.assign({}, t);
                            return Object(rt.h)(e.placementId) || Object(n.a)({
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                message: 'PrebidJS_Undertone_adapter_missing_placementId',
                                callStack: i.lineItemId
                            }), Object(rt.d)(e.publisherId) || Object(n.a)({
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                message: 'PrebidJS_Undertone_adapter_missing_publisherId',
                                callStack: i.lineItemId
                            }), e;
                        },
                        [wn.SynacorMedia]: (t, i) => {
                            const e = Object.assign({}, t);
                            Object(rt.h)(e.seatId) || Object(n.a)({
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                message: 'PrebidJS_SynacorMedia_adapter_missing_seatId',
                                callStack: i.lineItemId
                            }), Object(rt.h)(e.tagId) || Object(n.a)({
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                message: 'PrebidJS_SynacorMedia_adapter_missing_tagId',
                                callStack: i.lineItemId
                            });
                            const s = i.floorPrice;
                            return Object(rt.e)(s) && (e.bidfloor = s), e.video = {
                                api: Object.keys(Mn).map(t => {
                                    return Mn[t];
                                }),
                                mimes: Object.keys(Cn).map(t => {
                                    return Cn[t];
                                }),
                                protocols: Object.keys(Tn).map(t => {
                                    return Tn[t];
                                }),
                                maxduration: i.maxDuration
                            }, e;
                        },
                        [wn.AmxRTB]: (t, i) => {
                            const e = Object.assign({}, t), s = i.floorPrice;
                            return Object(rt.e)(s) && (e.floor = s), e;
                        },
                        [wn.Smaato]: (t, i) => {
                            const e = Object.assign({}, t);
                            return Object(rt.h)(e.publisherId) || Object(n.a)({
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                message: 'PrebidJS_Smaato_adapter_missing_publisherId',
                                callStack: i.lineItemId
                            }), Object(rt.h)(e.adspaceId) || Object(n.a)({
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                message: 'PrebidJS_Smaato_adapter_missing_adspaceId',
                                callStack: i.lineItemId
                            }), e;
                        },
                        [wn.SmartAdServer]: (t, i) => {
                            const e = Object.assign({}, t), {floorPrice: s} = i;
                            Object(rt.e)(s) && (e.bidfloor = s);
                            const r = Object.assign(Object.assign({}, t.video), { protocol: Tn.VAST_3_WRAPPER });
                            return e.video = r, Object(rt.e)(e.networkId) || Object(n.a)({
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                message: 'PrebidJS_SmartAdServer_adapter_missing_networkId_integer',
                                callStack: i.lineItemId
                            }), Object(rt.e)(e.formatId) || Object(n.a)({
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                message: 'PrebidJS_SmartAdServer_adapter_missing_formatId_integer',
                                callStack: i.lineItemId
                            }), Object(rt.e)(e.pageId) || Object(n.a)({
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                message: 'PrebidJS_SmartAdServer_adapter_missing_pageId_integer',
                                callStack: i.lineItemId
                            }), Object(rt.e)(e.siteId) || Object(n.a)({
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                message: 'PrebidJS_SmartAdServer_adapter_missing_siteId_integer',
                                callStack: i.lineItemId
                            }), e;
                        }
                    }, Ah = (t, i) => {
                        try {
                            const e = JSON.parse(t);
                            return e.length > 1 && Object(n.a)({
                                message: 'AdManager_AdSourceWrappe_multiple_bidders',
                                level: h.ProtoLoggingLevelEnum.WARNING,
                                callStack: i,
                                exception: t,
                                throttle: 1,
                                sendMaxLog: !1
                            }), e[0].bidder;
                        } catch (e) {
                            Object(n.a)({
                                message: 'AdManager_AdSourceWrapper_cannot_get_bidder',
                                level: h.ProtoLoggingLevelEnum.WARNING,
                                callStack: i,
                                exception: t,
                                throttle: 2,
                                sendMaxLog: !1
                            });
                        }
                    }, Ih = -1;
                class Ch {
                    constructor(t, i, e, s, n) {
                        this.Vx = t, this.We = i, this.gx = e, this.Ux = s, this.$x = n;
                    }
                    requestHeaderBidder(t, i, e) {
                        return new Promise((s, n) => {
                            this.Nx().then(() => {
                                const n = t.map(t => {
                                    return this.Hx(t, i, e).then(t => {
                                        return t;
                                    });
                                });
                                Promise.all(n).then(t => {
                                    s(t);
                                });
                            }).catch(t => {
                                n(h.ConnatixNoBidReasonEnum.NoBid);
                            });
                        });
                    }
                    Hx(t, i, e) {
                        return new Promise(s => {
                            let n = [];
                            if (t.availableRequests > 0) {
                                const s = t.lineItem.floorPrices;
                                if (Object(l.h)(s)) {
                                    n = this.qx(s, t.availableRequests, t.maxBidPrice).map(n => {
                                        return this.zx(t.lineItem, n.floorPrice, n.floorPriceIndex, i, e, s, t.maxAdDuration);
                                    });
                                } else {
                                    const r = Ih, h = this.zx(t.lineItem, t.lineItem.floorPrice, r, i, e, s, t.maxAdDuration);
                                    n.push(h);
                                }
                            }
                            Promise.all(n).then(i => {
                                const e = [], n = [], r = t.lineItem.advertiserLineItemId;
                                i.forEach(t => {
                                    t.reason ? n.push(t) : e.push(t);
                                }), s({
                                    bids: e,
                                    noBids: n,
                                    lineItemId: r
                                });
                            });
                        });
                    }
                    zx(t, i, e, s, n, r, h) {
                        return new Promise(a => {
                            this.Wx(t, i, e, s, n, r, h).then(t => {
                                a(t);
                            }).catch(t => {
                                a(t);
                            });
                        });
                    }
                    Nx() {
                        return new Promise((t, i) => {
                            window.pbjs ? (this.Gx = window.pbjs, t()) : Object(T.x)({ src: In }, window.document.head, window, () => {
                                this.Gx = window.pbjs, this.Jx(), t();
                            }, () => {
                                i(h.ConnatixNoBidReasonEnum.NoBid);
                            }, !0, 'AdManager_HeaderBidder_unable_to_insert_prebidJs_script');
                        });
                    }
                    Jx() {
                        const t = Oh(this.Ux, this.$x, this.Vx, this.We);
                        window.pbjs.setConfig(t);
                    }
                    Wx(t, i, e, s, r, a, o) {
                        return new Promise((c, u) => {
                            const l = kh(s, r, this.gx, o, i);
                            try {
                                const s = t.headerBidderBids;
                                l.bids = JSON.parse(s);
                            } catch (t) {
                                return Object(n.a)({
                                    message: 'AdManager_HeaderBidder_unable_to_parse_header_bidder',
                                    exception: t.message,
                                    callStack: t.stack,
                                    level: h.ProtoLoggingLevelEnum.WARNING
                                }), void u({
                                    reason: h.ConnatixNoBidReasonEnum.NoBid,
                                    floorPrice: i,
                                    floorPriceIndex: e
                                });
                            }
                            const d = Or();
                            l.bids.forEach(e => {
                                return this.Qx(e, s, r, i, t.advertiserLineItemId, o, d);
                            }), this.Gx.que.push(() => {
                                this.Gx.addAdUnits(l);
                                const s = {
                                    timeout: t.headerBidderTimeout,
                                    adUnits: [l],
                                    bidsBackHandler: () => {
                                        try {
                                            let s;
                                            if (!(s = this.Gx.getHighestCpmBids(l.code)[0]))
                                                return void u({
                                                    reason: h.ConnatixNoBidReasonEnum.CsEmptyResponse,
                                                    floorPrice: i,
                                                    floorPriceIndex: e
                                                });
                                            if (!this.Xx(s))
                                                return Object(n.a)({
                                                    level: h.ProtoLoggingLevelEnum.WARNING,
                                                    message: 'AdManager_HeaderBidder_no_content',
                                                    exception: JSON.stringify(s)
                                                }), void u({
                                                    reason: h.ConnatixNoBidReasonEnum.CsInvalidResponse,
                                                    floorPrice: i,
                                                    floorPriceIndex: e
                                                });
                                            const r = this.Yx(s), o = s.cpm || s.adResponse.ad.cpm, {advertiserLineItemId: f} = t, p = {
                                                    adTag: r,
                                                    lineItemId: f,
                                                    floorPrice: i,
                                                    floorPriceIndex: e,
                                                    cpm: o,
                                                    slotId: d
                                                };
                                            Object(rt.e)(i) && o < i && Object(n.a)({
                                                message: 'AdManager_HeaderBidderRequester_cpm_lower_than_floorprice',
                                                level: h.ProtoLoggingLevelEnum.WARNING,
                                                sendMaxLog: !1,
                                                throttle: 5,
                                                exception: `floorPrices_${ a }_index_${ e }_cpm_${ o }_li_${ t.advertiserLineItemId }`,
                                                callStack: Ah(t.headerBidderBids, t.advertiserLineItemId)
                                            }), c(p);
                                        } catch (t) {
                                            Object(n.a)({
                                                level: h.ProtoLoggingLevelEnum.WARNING,
                                                message: 'AdManager_HeaderBidder_Prebidjs_error',
                                                exception: t.message,
                                                callStack: t.stack
                                            }), u({
                                                reason: h.ConnatixNoBidReasonEnum.NoBid,
                                                floorPrice: i,
                                                floorPriceIndex: e
                                            });
                                        }
                                    }
                                };
                                this.Gx.requestBids(s);
                            });
                        });
                    }
                    Qx(t, i, e, s, n, r, h) {
                        const a = _h[t.bidder];
                        a && (t.params = a(t.params, {
                            playerWidth: i,
                            playerHeight: e,
                            maxDuration: r,
                            pageUrl: this.We,
                            floorPrice: s,
                            lineItemId: n,
                            isOutstream: this.gx,
                            bidSlotId: h
                        }));
                    }
                    Xx(t) {
                        return t.adserverTargeting && Object(rt.h)(t.adserverTargeting.hb_cache_id);
                    }
                    Yx(t) {
                        return `${ _n }?uuid=${ t.adserverTargeting.hb_cache_id }`;
                    }
                    qx(t, i, e) {
                        if (0 === i)
                            return [];
                        let s = i;
                        const n = t.map((t, i) => {
                            return {
                                floorPrice: t,
                                floorPriceIndex: i
                            };
                        }).filter(({floorPrice: t}) => {
                            return t >= e && s > 0 && (s--, !0);
                        });
                        return n.length || n.push({
                            floorPrice: e,
                            floorPriceIndex: Ih
                        }), n;
                    }
                }
                class Th {
                    constructor(t, i, e, s, n, r, h, a) {
                        this.gx = t, this.Vx = i, this.Mm = e, this.wx = s, this.Ox = n, this.Sx = r, this.jx = h, this._w = a, this.Kx = new Map(), this.Zx = new Ch(this.Vx, this.Mm.config.pageUrl, this.gx, this.Mm.services.UserManagerService.isGDPR(), this.Mm.services.UserManagerService.isCcpaApplicable()), this.tS = new wh(this.Mm.services.UserManagerService);
                    }
                    request(t) {
                        const {
                                width: i,
                                height: e
                            } = t.callingState.adContainerState.get(h.ProtoAdType.Video), s = this.Ax(i, e), n = this.iS(t.lineItemRequestDataList);
                        return Object(l.h)(n) && s ? (t.lineItemRequestDataList = n, this.eS(t).then(i => {
                            return Promise.resolve(this.sS(i, t));
                        }).catch(() => {
                            return Promise.resolve({
                                bids: [],
                                noBids: []
                            });
                        })) : Promise.resolve({
                            bids: [],
                            noBids: []
                        });
                    }
                    destroy() {
                    }
                    sS(t, i) {
                        const e = {
                            bids: [],
                            noBids: []
                        };
                        return t.forEach(t => {
                            const s = oh(i.lineItemRequestDataList, t.lineItemId);
                            t.bids.forEach(t => {
                                const n = new Hn(), r = new hh({
                                        requestedFloorPrice: t.floorPrice,
                                        requestedFloorPriceIndex: t.floorPriceIndex,
                                        prebidJsBidderName: this.nS(s)
                                    });
                                qn(s.protoLineItem.trackers, n), e.bids.push(new rh({
                                    id: Object(Li.c)(),
                                    adManagerLineItem: s,
                                    replaceTrackingMacros: !0,
                                    requestMetadata: r,
                                    trackersInformation: n,
                                    url: t.adTag,
                                    callingState: i.callingState,
                                    adMacroReplacer: this.wx,
                                    adContainer: this.Ox.get(s.protoLineItem.adType),
                                    globalDomUtilsService: this.Mm.services.GlobalDomUtilsService,
                                    viewabilityService: this.Mm.services.ViewabilityService,
                                    trackingService: this.Mm.services.TrackingService,
                                    cpm: t.cpm,
                                    adEnforcer: this.Sx,
                                    os: this.Mm.config.os.os,
                                    adSlotContainerRecycler: this.jx,
                                    bidSlotId: t.slotId,
                                    loopAdWhenFinished: this._w,
                                    pageUrl: this.Mm.config.pageUrl,
                                    urlSuffixerService: this.Mm.services.UrlSuffixerService
                                }));
                            }), t.noBids.forEach(t => {
                                const i = new hh({
                                    requestedFloorPrice: t.floorPrice,
                                    requestedFloorPriceIndex: t.floorPriceIndex
                                });
                                e.noBids.push({
                                    lineItem: s,
                                    requestMetadata: i,
                                    reason: t.reason
                                });
                            });
                        }), e;
                    }
                    eS(t) {
                        const {
                                width: i,
                                height: e
                            } = t.callingState.adContainerState.get(h.ProtoAdType.Video), s = t.lineItemRequestDataList.map(i => {
                                return this.rS(i, t.maxAdDuration, t.maxBidPrice);
                            });
                        return this.Zx.requestHeaderBidder(s, i, e);
                    }
                    rS(t, i, e) {
                        const s = t.adManagerLineItem;
                        return {
                            availableRequests: t.maxAvailableRequests,
                            lineItem: s.protoLineItem,
                            maxAdDuration: i,
                            maxBidPrice: e
                        };
                    }
                    iS(t) {
                        return t.filter(t => {
                            const i = this.nS(t.adManagerLineItem);
                            return this.hS(i);
                        });
                    }
                    Ax(t, i) {
                        return 0 !== t && 0 !== i || (Object(n.a)({
                            message: 'AdManager_PrebidAggregator_dimensions',
                            exception: `width:${ t }_height:${ i }_destroyed:${ f.a.isPlayerDestroyed() }`,
                            throttle: 5,
                            level: h.ProtoLoggingLevelEnum.FATAL,
                            sendMaxLog: !0
                        }), !1);
                    }
                    hS(t) {
                        return this.tS.isBidderCallable(t);
                    }
                    nS(t) {
                        const i = this.Kx.get(t);
                        return Object(rt.h)(i) ? i : Ah(t.protoLineItem.headerBidderBids, t.protoLineItem.advertiserLineItemId) || '';
                    }
                }
                const Ph = {
                        libPropertyName: 'apstag',
                        mediaType: 'video'
                    }, Mh = 'https://aax.amazon-adsystem.com/e/dtb/vast', Eh = 'load';
                class Lh {
                    constructor(t, i) {
                        this.Mm = t, this.aS = i, this.oS = () => {
                            this.cS || this.uS(), this.lS && clearInterval(this.lS), this.cS || Object(n.a)({
                                message: 'TamRequester_TAM_lib_not_found_on_page_loaded',
                                level: h.ProtoLoggingLevelEnum.WARNING
                            });
                        };
                        const e = this.Mm.config.topWindow;
                        this.dS = Object(Li.f)(e).topFrame, this.uS();
                    }
                    requestBids(t) {
                        const i = t.map(t => {
                            return this.fS(t);
                        });
                        return Promise.all(i);
                    }
                    destroy() {
                        this.lS && clearInterval(this.lS), this.dS.removeEventListener(Eh, this.oS);
                    }
                    fS(t) {
                        return this.pS(this.aS, Ph.mediaType, t.amazonDealId).then(i => {
                            return t.amazonDealId ? this.bS(t, i) : this.vS(t, i);
                        }).then(i => {
                            return {
                                bids: [i],
                                lineItemId: t.advertiserLineItemId,
                                noBids: []
                            };
                        }).catch(i => {
                            return {
                                bids: [],
                                lineItemId: t.advertiserLineItemId,
                                noBids: [{ reason: i }]
                            };
                        });
                    }
                    pS(t, i, e) {
                        return new Promise((s, n) => {
                            this.cS ? this.cS.fetchBids({
                                slots: [{
                                        slotID: t,
                                        mediaType: i
                                    }]
                            }, t => {
                                Object(l.h)(t) ? Object(rt.h)(e) ? s(this.mS(t, e)) : s(this.gS(t)) : n(h.ConnatixNoBidReasonEnum.EmptyResponse);
                            }) : n(h.ConnatixNoBidReasonEnum.NoLibInPage);
                        });
                    }
                    gS(t) {
                        return new Promise((i, e) => {
                            const s = this.yS(t);
                            if (!Object(l.h)(s))
                                return this.wS(), void e(h.ConnatixNoBidReasonEnum.InvalidResponse);
                            i(s[0]);
                        });
                    }
                    mS(t, i) {
                        return new Promise((e, s) => {
                            const n = this.OS(t);
                            if (!Object(l.h)(n))
                                return this.wS(), void s(h.ConnatixNoBidReasonEnum.InvalidResponse);
                            const r = t.find(t => {
                                return t.targeting.amzndeals.includes(i);
                            });
                            r ? e(r) : s(h.ConnatixNoBidReasonEnum.DealIdMismatch);
                        });
                    }
                    yS(t) {
                        return t.filter(t => {
                            var i;
                            return !!(t.amznbid || (null === (i = t.targeting) || void 0 === i ? void 0 : i.amzniid));
                        });
                    }
                    OS(t) {
                        return t.filter(t => {
                            var i;
                            return Object(l.h)(null === (i = t.targeting) || void 0 === i ? void 0 : i.amzndeals);
                        });
                    }
                    wS() {
                        Object(n.a)({
                            message: 'TamRequester_FetchBids_CreativeType_Mismatch',
                            throttle: 1,
                            level: h.ProtoLoggingLevelEnum.FATAL
                        });
                    }
                    vS(t, i) {
                        var e;
                        const s = {
                            lineItemId: t.advertiserLineItemId,
                            code: i.amznbid || (null === (e = i.targeting) || void 0 === e ? void 0 : e.amznbid),
                            metadata: this.Mm.services.TrackingService.getMetadataModel(),
                            exploration: this.Mm.config.explorationMode
                        };
                        return new Promise((t, e) => {
                            eh.a.sendProtoRequest({
                                endpoint: Vi.a.endPoints.api.tam,
                                ProtoRequest: h.ProtoCoreTamBidRequest,
                                ProtoResponse: h.ProtoCoreTamBidResponse,
                                requestData: s,
                                queryParams: { [ah.b]: He.a.version },
                                logError: !0
                            }).then(s => {
                                Object(rt.h)(s.errorMessage) ? e(h.ConnatixNoBidReasonEnum.RequestException) : s.encryptedBidPrice ? t({
                                    encryptedPrice: s.encryptedBidPrice,
                                    vastTag: this.xS(i),
                                    ofskp: s.ofskp,
                                    successRate: s.successRate,
                                    slotId: Or()
                                }) : e(h.ConnatixNoBidReasonEnum.InvalidResponse);
                            }).catch(() => {
                                e(h.ConnatixNoBidReasonEnum.RequestException);
                            });
                        });
                    }
                    bS(t, i) {
                        return {
                            encryptedPrice: null,
                            vastTag: this.SS(i),
                            ofskp: Bn(t.floorPrice),
                            successRate: t.successRate,
                            slotId: Or()
                        };
                    }
                    xS(t) {
                        var i, e;
                        const s = t.amzniid || (null === (i = t.targeting) || void 0 === i ? void 0 : i.amzniid), n = t.amznbid || (null === (e = t.targeting) || void 0 === e ? void 0 : e.amznbid);
                        return `${ Mh }?b=${ s }&pp=${ n }&rnd=${ Object(Li.c)() }`;
                    }
                    SS(t) {
                        const i = t.helpers.targetingKeys[0];
                        return `${ Mh }?b=${ t.targeting[i] }&rnd=${ Object(Li.c)() }`;
                    }
                    uS() {
                        this.dS[Ph.libPropertyName] ? this.cS = this.dS[Ph.libPropertyName] : this.lS || 'complete' !== this.dS.document.readyState && (this.dS.addEventListener(Eh, this.oS), this.lS = setInterval(() => {
                            this.uS();
                        }, qt.f)), this.cS && clearInterval(this.lS);
                    }
                }
                class Rh {
                    constructor(t, i, e, s, n, r) {
                        this.Mm = t, this.jS = i, this.wx = e, this.Ox = s, this.Sx = n, this.jx = r, this.kS = new Lh(this.Mm, this.jS);
                    }
                    request(t) {
                        const {
                            width: i,
                            height: e
                        } = t.callingState.adContainerState.get(h.ProtoAdType.Video);
                        return this.Ax(i, e) ? this._S(t).then(i => {
                            return Promise.resolve(this.AS(i, t));
                        }).catch(() => {
                            return Promise.resolve({
                                bids: [],
                                noBids: []
                            });
                        }) : Promise.resolve({
                            bids: [],
                            noBids: []
                        });
                    }
                    destroy() {
                        this.kS.destroy();
                    }
                    _S(t) {
                        const i = t.lineItemRequestDataList.map(t => {
                            return t.adManagerLineItem.protoLineItem;
                        });
                        return this.kS.requestBids(i);
                    }
                    AS(t, i) {
                        const e = {
                            bids: [],
                            noBids: []
                        };
                        return t.forEach(t => {
                            const s = oh(i.lineItemRequestDataList, t.lineItemId);
                            t.bids.forEach(t => {
                                const n = new Hn(), r = new hh({ encryptedPrice: t.encryptedPrice });
                                qn(s.protoLineItem.trackers, n), e.bids.push(new rh({
                                    id: Object(Li.c)(),
                                    adManagerLineItem: s,
                                    replaceTrackingMacros: !0,
                                    requestMetadata: r,
                                    trackersInformation: n,
                                    url: t.vastTag,
                                    bidSlotId: t.slotId,
                                    callingState: i.callingState,
                                    adMacroReplacer: this.wx,
                                    adContainer: this.Ox.get(s.protoLineItem.adType),
                                    globalDomUtilsService: this.Mm.services.GlobalDomUtilsService,
                                    viewabilityService: this.Mm.services.ViewabilityService,
                                    trackingService: this.Mm.services.TrackingService,
                                    adEnforcer: this.Sx,
                                    requestWithCredentials: !1,
                                    successRate: t.successRate,
                                    obfuscatedPrice: t.ofskp,
                                    os: this.Mm.config.os.os,
                                    adSlotContainerRecycler: this.jx,
                                    pageUrl: this.Mm.config.pageUrl,
                                    urlSuffixerService: this.Mm.services.UrlSuffixerService
                                }));
                            }), t.noBids.forEach(t => {
                                e.noBids.push({
                                    lineItem: s,
                                    requestMetadata: new hh(),
                                    reason: t.reason
                                });
                            });
                        }), e;
                    }
                    Ax(t, i) {
                        return 0 !== t && 0 !== i || (Object(n.a)({
                            message: 'AdManager_PrebidAggregator_dimensions',
                            exception: `width:${ t }_height:${ i }_destroyed:${ f.a.isPlayerDestroyed() }`,
                            throttle: 5,
                            level: h.ProtoLoggingLevelEnum.FATAL,
                            sendMaxLog: !0
                        }), !1);
                    }
                }
                const Bh = [
                        [
                            88,
                            31
                        ],
                        [
                            120,
                            20
                        ],
                        [
                            120,
                            30
                        ],
                        [
                            120,
                            60
                        ],
                        [
                            120,
                            90
                        ],
                        [
                            125,
                            125
                        ],
                        [
                            168,
                            28
                        ],
                        [
                            168,
                            42
                        ],
                        [
                            180,
                            150
                        ],
                        [
                            200,
                            200
                        ],
                        [
                            200,
                            446
                        ],
                        [
                            216,
                            36
                        ],
                        [
                            216,
                            54
                        ],
                        [
                            220,
                            90
                        ],
                        [
                            234,
                            60
                        ],
                        [
                            240,
                            133
                        ],
                        [
                            250,
                            250
                        ],
                        [
                            250,
                            360
                        ],
                        [
                            292,
                            30
                        ],
                        [
                            300,
                            31
                        ],
                        [
                            300,
                            50
                        ],
                        [
                            300,
                            75
                        ],
                        [
                            300,
                            100
                        ],
                        [
                            300,
                            250
                        ],
                        [
                            320,
                            50
                        ],
                        [
                            320,
                            100
                        ],
                        [
                            320,
                            240
                        ],
                        [
                            336,
                            280
                        ],
                        [
                            400,
                            350
                        ],
                        [
                            468,
                            60
                        ],
                        [
                            480,
                            320
                        ]
                    ], Dh = 'domains';
                class Fh {
                    constructor(t, i, e) {
                        this.IS = t, this.CS = i, this.TS = e, this.sx = `div-gpt-ad-1589549806211-${ Object(Li.c)() }`, this.nx = new ji(), this.Jy = new ji(), this.My = new ji();
                    }
                    get onCreativeReceived() {
                        return this.My.asObservable();
                    }
                    get onDisplayAd() {
                        return this.nx.asObservable();
                    }
                    get onError() {
                        return this.Jy.asObservable();
                    }
                    getAdMediaHeight() {
                        return this.PS ? this.PS.clientHeight : 0;
                    }
                    getAdMediaWidth() {
                        return this.PS ? this.PS.clientWidth : 0;
                    }
                    initializeAd(t, i) {
                        try {
                            this.MS = t, this.by(t);
                            const e = this.ES(i.width, i.height);
                            this.IS.cmd.push(() => {
                                this.LS = this.IS.defineSlot(this.TS, e, this.sx).addService(this.IS.pubads()).setTargeting(Dh, this.CS), this.IS.enableServices(), this.RS(this.LS), this.IS.pubads().isInitialLoadDisabled() && this.IS.pubads().refresh([this.LS]), this.IS.display(this.sx);
                            });
                        } catch (t) {
                            this.Jy.next(Yn.c.WrapperInitAdError);
                        }
                    }
                    destroy() {
                        this.IS.cmd.push(() => {
                            this.IS.destroySlots && this.LS && this.IS.destroySlots([this.LS]);
                        });
                    }
                    RS(t) {
                        this.IS.pubads().addEventListener('slotOnload', i => {
                            var e, s, r;
                            if (i.slot === t) {
                                try {
                                    const t = null === (r = null === (s = null === (e = i) || void 0 === e ? void 0 : e.slot) || void 0 === s ? void 0 : s.getResponseInformation()) || void 0 === r ? void 0 : r.creativeId;
                                    t && this.My.next(t.toString());
                                } catch (t) {
                                    Object(n.a)({
                                        message: 'AdManager_GptWrapper_creativeId',
                                        level: h.ProtoLoggingLevelEnum.WARNING,
                                        exception: t.message,
                                        callStack: t.stack
                                    });
                                }
                                this.nx.next();
                            }
                        }), this.IS.pubads().addEventListener('slotRenderEnded', t => {
                            var i;
                            if (t.slot === this.LS) {
                                try {
                                    this.PS = null === (i = this.MS) || void 0 === i ? void 0 : i.getElementsByTagName('iframe')[0], Object(rt.a)(this.LS) && Object(T.F)(this.PS.contentWindow, 'GPTWrapper');
                                } catch (t) {
                                }
                                t.isEmpty && this.Jy.next(Yn.c.AdxOverlayNoFill);
                            }
                        });
                    }
                    by(t) {
                        t.id = this.sx;
                    }
                    ES(t, i) {
                        return Bh.filter(e => {
                            return !Array.isArray(e) || !Object(l.i)(e) || Object(l.h)(e) && e[0] <= t && e[1] <= i;
                        });
                    }
                }
                var Vh = e(50);
                const Uh = 500;
                class $h extends cr {
                    constructor(t) {
                        super(t), this.settings = t, this.adMediaType = 'displayAdx', this.adSourceType = h.ProtoAdsourceTypeEnum.Unknown, this.lx = 'adx', this.BS = {
                            [Nt.FirstQuartile]: Pt.b.AdVideoFirstQuartile,
                            [Nt.SecondQuartile]: Pt.b.AdVideoMidpoint,
                            [Nt.ThirdQuartile]: Pt.b.AdVideoThirdQuartile,
                            [Nt.FourthQuartile]: Pt.b.AdVideoComplete
                        }, this.DS = [];
                        const i = this.settings.adManagerLineItem.protoLineItem.overlayTime * qt.f;
                        this.bx = new _i(i, Uh), this.DS.push(this.bx.onTimeUpdate.subscribe(() => {
                            this.Zg({ type: Pt.b.AdRemainingTimeChange });
                        }), this.bx.onTimeElapsed.subscribe(() => {
                            this.stopAd('adxTimerElapsed');
                        }), this.bx.onQuartile.subscribe(t => {
                            this.Zg({
                                type: this.BS[t],
                                payload: {}
                            });
                        }));
                    }
                    initAd(t, i, e, s, n, r, h) {
                        try {
                            super.initAd(t, i, e, s, n, r, h), this.FS = {
                                width: t,
                                height: i
                            }, this.VS().then(t => {
                                this.$S = new Fh(t, this.settings.domain, this.settings.adxAdUnitPath), this.DS.push(this.$S.onCreativeReceived.subscribe(t => {
                                    this.creativeId = t;
                                })), this.Zg({
                                    type: Pt.b.AdLoaded,
                                    payload: { skipOffset: 0 }
                                });
                            }).catch(t => {
                                this.Zg({
                                    type: Pt.b.AdError,
                                    payload: { errorMessage: Yn.c.AdxOverlayGptScriptLoad + `_${ t.message }` }
                                });
                            });
                        } catch (t) {
                            this.Zg({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.AdaptorInitAdError + `_${ t.message }` }
                            });
                        }
                    }
                    startAd() {
                        try {
                            super.startAd(), this.DS.push(this.$S.onDisplayAd.subscribe(() => {
                                this.Zg({ type: Pt.b.AdStarted }), this.Zg({ type: Pt.b.AdVideoStart }), this.Zg({
                                    type: Pt.b.AdImpression,
                                    payload: {}
                                }), this.bx.start();
                            }), this.$S.onError.subscribe(t => {
                                this.Zg({
                                    type: Pt.b.AdError,
                                    payload: { errorMessage: t }
                                }), this.bx.stop();
                            })), this.$S.initializeAd(this.Ng, this.FS);
                        } catch (t) {
                            this.Zg({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.AdaptorStartAdError + `_${ t.exception }` }
                            });
                        }
                    }
                    stopAd(t) {
                        try {
                            super.stopAd(t), this.bx.stop(), this.Zg({
                                type: Pt.b.AdStopped,
                                payload: { shouldTrackPostBid: !0 }
                            });
                        } catch (t) {
                            this.ky('AdxBidAdaptor', 'stopAd', t);
                        }
                    }
                    resizeAd(t, i, e) {
                        this.FS && (this.FS.width = t, this.FS.height = i);
                    }
                    pauseAd() {
                        try {
                            this.bx.stop(), this.Zg({ type: Pt.b.AdPaused });
                        } catch (t) {
                            this.ky('AdxBidAdaptor', 'pauseAd', t);
                        }
                    }
                    resumeAd() {
                        try {
                            this.bx.start(), this.Zg({ type: Pt.b.AdPlaying });
                        } catch (t) {
                            this.ky('AdxBidAdaptor', 'resumeAd', t);
                        }
                    }
                    expandAd() {
                    }
                    collapseAd() {
                    }
                    skipAd() {
                        try {
                            super.skipAd(), this.Zg({ type: Pt.b.AdSkipped });
                        } catch (t) {
                            this.ky('AdxBidAdaptor', 'skipAd', t);
                        }
                    }
                    getAdRemainingTime() {
                        return this.bx.timeRemaining / qt.f;
                    }
                    getAdDuration() {
                        return this.bx.timerDuration / qt.f;
                    }
                    getAdVolume() {
                        return 0;
                    }
                    getAdMediaSize() {
                        return {
                            width: this.$S.getAdMediaWidth(),
                            height: this.$S.getAdMediaHeight()
                        };
                    }
                    setAdVolume(t) {
                    }
                    get adVideoUrl() {
                        return this.lx;
                    }
                    get declaredDurationInSeconds() {
                        return this.settings.adManagerLineItem.protoLineItem.duration;
                    }
                    VS() {
                        const t = Object(Li.f)(window).topFrame;
                        if (t.googletag)
                            return Promise.resolve(t.googletag);
                        {
                            const i = { cmd: [] };
                            return t.googletag = window.googletag || i, new Promise((i, e) => {
                                Object(T.x)({ src: Vh.a }, t.document.head, t, () => {
                                    i(t.googletag);
                                }, () => {
                                    e();
                                });
                            });
                        }
                    }
                    fl() {
                        var t;
                        try {
                            super.fl(), this.bx.stop(), Ai(this.DS), null === (t = this.$S) || void 0 === t || t.destroy();
                        } catch (t) {
                            this.ky('AdxBidAdaptor', '_destroy', t);
                        }
                    }
                }
                const Nh = 'https://adx.connatix.com';
                class Hh {
                    constructor(t) {
                        this.settings = t, this.metrics = { created: new Date().getTime() };
                    }
                    fetchBid() {
                        this.metrics.fetchStart = new Date().getTime();
                        const t = new $h({
                            id: this.settings.id,
                            adManagerLineItem: this.settings.adManagerLineItem,
                            trackers: this.settings.trackersInformation,
                            adxAdUnitPath: this.NS(this.settings.url),
                            requestMetadata: this.settings.requestMetadata,
                            callingState: this.settings.callingState,
                            domain: this.settings.pageDomain,
                            adContainer: this.settings.adContainer,
                            globalDomUtilsService: this.settings.globalDomUtilsService,
                            viewabilityService: this.settings.viewabilityService,
                            cpm: this.settings.cpm,
                            successRate: this.settings.successRate,
                            obfuscatedPrice: this.settings.obfuscatedPrice,
                            adEnforcer: this.settings.adEnforcer,
                            os: this.settings.os,
                            adSlotContainerRecycler: this.settings.adSlotContainerRecycler,
                            bidSlotId: this.settings.bidSlotId,
                            urlSuffixerService: this.settings.urlSuffixerService
                        });
                        return this.metrics.fetchEnd = new Date().getTime(), Promise.resolve(t);
                    }
                    NS(t) {
                        return t.substr(Nh.length);
                    }
                }
                class qh extends cr {
                    constructor(t) {
                        super(t), this.settings = t, this.adMediaType = 'cnxMedia', this.adSourceType = h.ProtoAdsourceTypeEnum.CnxMedia, this.HS = [];
                    }
                    initAd(t, i, e, s, n, r, h) {
                        try {
                            let a;
                            super.initAd(t, i, e, s, n, r, h);
                            let o = !1;
                            if (Object(rt.h)(this.settings.externalMediaFile))
                                a = this.settings.externalMediaFile;
                            else if (Object(rt.h)(this.settings.externalHlsFile))
                                a = this.settings.externalHlsFile, o = !0;
                            else {
                                if (!Object(l.h)(this.settings.renditions))
                                    return void this.Zg({
                                        type: Pt.b.AdError,
                                        payload: { errorMessage: Yn.c.CnxMediaNoRenditions }
                                    });
                                a = this.qS(this.settings.renditions, i, this.settings.mediaId);
                            }
                            this.zS = a, this.WS = new Cr(this.settings.globalDomUtilsService, this.zS, this.Hg, this.settings.os, this.settings.clickUrl, this.settings.loopAdWhenFinished, this.settings.pauseAdWhenFinished, o, this.settings.inApp, this.settings.pageDomain), this.HS.push(this.WS.onVpaidEvent.subscribe(t => {
                                this.Zg(t);
                            })), this.WS.initAd(t, i, e, s, n, {
                                slot: this.Ng,
                                videoSlot: this.Hg
                            });
                        } catch (t) {
                            this.Zg({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.AdaptorInitAdError + `_${ t.message }` }
                            });
                        }
                    }
                    startAd() {
                        try {
                            super.startAd(), this.WS.startAd();
                        } catch (t) {
                            this.Zg({
                                type: Pt.b.AdError,
                                payload: { errorMessage: Yn.c.AdaptorStartAdError + `_${ t.message }` }
                            });
                        }
                    }
                    stopAd(t) {
                        super.stopAd(t), this.WS ? this.WS.stopAd(t) : Object(n.a)({
                            message: 'stopAd',
                            exception: t,
                            level: h.ProtoLoggingLevelEnum.WARNING
                        });
                    }
                    resizeAd(t, i, e) {
                        try {
                            this.WS.resizeAd(t, i, e);
                        } catch (t) {
                            this.ky('CnxMediaBidAdaptor', 'resizeAd', t);
                        }
                    }
                    pauseAd() {
                        try {
                            this.WS.pauseAd();
                        } catch (t) {
                            this.ky('CnxMediaBidAdaptor', 'pauseAd', t);
                        }
                    }
                    resumeAd() {
                        try {
                            this.WS.resumeAd();
                        } catch (t) {
                            this.ky('CnxMediaBidAdaptor', 'resumeAd', t);
                        }
                    }
                    expandAd() {
                        try {
                            this.WS.expandAd();
                        } catch (t) {
                            this.ky('CnxMediaBidAdaptor', 'expandAd', t);
                        }
                    }
                    collapseAd() {
                        try {
                            this.WS.collapseAd();
                        } catch (t) {
                            this.ky('CnxMediaBidAdaptor', 'collapseAd', t);
                        }
                    }
                    skipAd() {
                        try {
                            super.skipAd(), this.WS.skipAd();
                        } catch (t) {
                            this.ky('CnxMediaBidAdaptor', 'skipAd', t);
                        }
                    }
                    getAdRemainingTime() {
                        try {
                            return this.WS.getAdRemainingTime();
                        } catch (t) {
                            return this.ky('CnxMediaBidAdaptor', 'getAdRemainingTime', t), 0;
                        }
                    }
                    getAdDuration() {
                        try {
                            return this.WS ? this.WS.getAdDuration() : this.settings.adManagerLineItem.protoLineItem.duration;
                        } catch (t) {
                            return this.ky('CnxMediaBidAdaptor', 'getAdDuration', t), 0;
                        }
                    }
                    getAdVolume() {
                        try {
                            return this.WS.getAdVolume();
                        } catch (t) {
                            return this.ky('CnxMediaBidAdaptor', 'getAdVolume', t), 0;
                        }
                    }
                    getAdMediaSize() {
                        return {
                            width: this.WS.getAdMediaWidth(),
                            height: this.WS.getAdMediaHeight()
                        };
                    }
                    setAdVolume(t) {
                        try {
                            super.setAdVolume(t), this.WS.setAdVolume(t);
                        } catch (t) {
                            this.ky('CnxMediaBidAdaptor', 'setAdVolume', t);
                        }
                    }
                    get adVideoUrl() {
                        return this.zS;
                    }
                    get declaredDurationInSeconds() {
                        return this.settings.adManagerLineItem.protoLineItem.duration;
                    }
                    fl() {
                        var t;
                        if (!this.settings.pauseAdWhenFinished && !this.settings.loopAdWhenFinished)
                            try {
                                super.fl(), Ai(this.HS), null === (t = this.WS) || void 0 === t || t.destroy();
                            } catch (t) {
                                this.ky('CnxMediaBidAdaptor', '_destroy', t);
                            }
                    }
                    qS(t, i, e) {
                        let s, n;
                        return n = t.filter(t => {
                            return t.codec === w.H264;
                        }), s = Object(wi.b)(i, n.map(t => {
                            return t.height;
                        })), (n = n.filter(t => {
                            return t.height === s;
                        })).length > 0 ? this.Zd.appendParamsToUrl(`${ Vi.a.endPoints.base.video }${ e }/${ n[0].file }`) : null;
                    }
                }
                class zh {
                    constructor(t) {
                        this.settings = t, this.metrics = { created: new Date().getTime() };
                    }
                    fetchBid() {
                        this.metrics.fetchStart = new Date().getTime();
                        const t = new qh({
                            id: this.settings.id,
                            adManagerLineItem: this.settings.adManagerLineItem,
                            trackers: this.settings.trackersInformation,
                            mediaId: this.settings.mediaId,
                            renditions: this.settings.renditions,
                            clickUrl: this.settings.clickUrl,
                            requestMetadata: this.settings.requestMetadata,
                            callingState: this.settings.callingState,
                            globalDomUtilsService: this.settings.globalDomUtilsService,
                            viewabilityService: this.settings.viewabilityService,
                            adContainer: this.settings.adContainer,
                            cpm: this.settings.cpm,
                            obfuscatedPrice: this.settings.obfuscatedPrice,
                            adEnforcer: this.settings.adEnforcer,
                            externalMediaFile: this.settings.adManagerLineItem.protoLineItem.externalMediaFile,
                            externalHlsFile: this.settings.adManagerLineItem.protoLineItem.externalHlsFile,
                            pauseAdWhenFinished: this.settings.pauseAdWhenFinished,
                            loopAdWhenFinished: this.settings.loopAdWhenFinished,
                            inApp: this.settings.inApp,
                            os: this.settings.os,
                            adSlotContainerRecycler: this.settings.adSlotContainerRecycler,
                            bidSlotId: this.settings.bidSlotId,
                            urlSuffixerService: this.settings.urlSuffixerService,
                            pageDomain: this.settings.pageDomain
                        });
                        return this.metrics.fetchEnd = new Date().getTime(), Promise.resolve(t);
                    }
                }
                var Wh;
                !function (t) {
                    t[t.IDLE = 0] = 'IDLE', t[t.RUNNING = 1] = 'RUNNING', t[t.STOPPING = 2] = 'STOPPING';
                }(Wh || (Wh = {}));
                class Gh {
                    constructor(t) {
                        this.GS = t, this.zt = Wh.IDLE, this.JS = Promise.resolve();
                    }
                    start() {
                        this.zt === Wh.IDLE ? (this.zt = Wh.RUNNING, this.QS()) : this.zt === Wh.STOPPING && (this.zt = Wh.RUNNING, this.QS());
                    }
                    stop() {
                        this.zt = Wh.STOPPING;
                    }
                    setPromiseNotifier(t) {
                        return this.XS = t, this;
                    }
                    setIdleNotifier(t) {
                        return this.YS = t, this;
                    }
                    getState() {
                        return this.zt;
                    }
                    KS() {
                        const t = this.GS();
                        void 0 !== t ? this.JS = t.then(t => {
                            this.XS && this.XS(t);
                        }).then(() => {
                            this.zt === Wh.STOPPING && (this.zt = Wh.IDLE);
                        }) : this.zt = Wh.IDLE;
                    }
                    QS() {
                        this.zt === Wh.IDLE ? this.YS && this.YS() : this.zt === Wh.RUNNING && (this.KS(), this.JS.then(() => {
                            this.QS();
                        }));
                    }
                }
                class Jh {
                    constructor(t, i = (() => {
                        return 1;
                    })()) {
                        this.GS = t, this.ZS = i, this.tj = [], this.ij(i);
                    }
                    start() {
                        return this.tj.forEach(t => {
                            t.start();
                        }), this;
                    }
                    stop() {
                        return this.tj.forEach(t => {
                            t.stop();
                        }), this;
                    }
                    setPromiseNotifier(t) {
                        return this.tj.forEach(i => {
                            i.setPromiseNotifier(t);
                        }), this;
                    }
                    setAllThreadsIdleNotifier(t) {
                        return this.ej = t, this.sj(), this;
                    }
                    setNumberOfThreads(t) {
                        if (t <= 0)
                            return;
                        this.ZS = t;
                        const i = t - this.ZS;
                        i > 0 ? this.ij(i) : i < 0 && this.nj(i);
                    }
                    getState() {
                        return this.tj.reduce((t, i) => {
                            return t[i.getState()]++, t;
                        }, {
                            [Wh.IDLE]: 0,
                            [Wh.RUNNING]: 0,
                            [Wh.STOPPING]: 0
                        });
                    }
                    ij(t) {
                        for (let i = 0; i < t; i++) {
                            const t = new Gh(this.GS).setPromiseNotifier(this.XS);
                            this.tj.push(t);
                        }
                    }
                    nj(t) {
                        t = Math.min(t, this.tj.length);
                        for (let i = 0; i < t; i++)
                            this.tj.pop().stop();
                    }
                    sj() {
                        const t = () => {
                            this.getState()[Wh.IDLE] === this.tj.length && this.ej();
                        };
                        this.tj.forEach(i => {
                            i.setIdleNotifier(t);
                        });
                    }
                }
                class Qh {
                    constructor() {
                        this.rj = [];
                    }
                    canCall(t, i) {
                        return this.rj.every(e => {
                            return e.canCall(t, i);
                        });
                    }
                    registerRequestForLineItem(t, i) {
                        return this.rj.forEach(e => {
                            e.registerRequestForLineItem(t, i);
                        }), this;
                    }
                    registerImpressionForLineItem(t, i) {
                        return this.rj.forEach(e => {
                            e.registerImpressionForLineItem(t, i);
                        }), this;
                    }
                    registerCallingValidator(t) {
                        return this.rj.push(t), this;
                    }
                    registerCallingValidators(t) {
                        return t.forEach(t => {
                            this.registerCallingValidator(t);
                        }), this;
                    }
                    destroy() {
                        this.rj.forEach(t => {
                            t.destroy();
                        });
                    }
                }
                e(42);
                class Xh {
                    constructor() {
                        this.initialized = !1, this.logged = !1, this.startTime = 0, this.winIds = [];
                    }
                }
                class Yh {
                    constructor() {
                        this.adSlotType = h.ProtoAdBreakTypeEnum[h.ProtoAdBreakTypeEnum.PreRoll], this.timeToFirstBid = -1, this.timeToFirstWin = -1, this.timeToFirstBidReady = -1, this.timeToFirstPostBid = -1, this.timeToFirstStartAd = -1, this.timeToFirstAdImpression = -1, this.prerollLength = -1, this.numberOfBids = 0, this.numberOfBidsReady = 0, this.numberOfWins = 0, this.numberOfPostBids = 0, this.indexOfWinThatGaveImpression = -1, this.playerId = '';
                    }
                }
                class Kh {
                    constructor() {
                        this.metadata = new Xh(), this.metrics = new Yh();
                    }
                }
                const Zh = new Map();
                function ta(t) {
                    return Zh.has(t) || Zh.set(t, new Kh()), Zh.get(t);
                }
                var ia;
                !function (t) {
                    function i(t, i = (() => {
                        return !1;
                    })()) {
                        if (!Zh.has(t))
                            return;
                        if (!Object(Li.k)([
                                95,
                                5
                            ]))
                            return;
                        const e = Zh.get(t);
                        e.metadata.initialized && !e.metadata.logged && (i && (e.metrics.prerollLength = new Date().getTime() - e.metadata.startTime), e.metadata.logged = !0, e.metrics.playerId = t, Object(n.a)({
                            message: 'Preroll_Problem_Logs',
                            exception: JSON.stringify(e.metrics),
                            level: h.ProtoLoggingLevelEnum.INFO
                        }));
                    }
                    t.initialize = function (t) {
                        const i = ta(t);
                        i.metadata.initialized = !0, i.metadata.startTime = new Date().getTime();
                    }, t.log = i, t.trackBid = function (t) {
                        const i = ta(t), e = new Date().getTime();
                        0 === i.metrics.numberOfBids && (i.metrics.timeToFirstBid = e - i.metadata.startTime, i.metrics.timeToFirstBid > qt.a && (i.metrics.timeToFirstBid = 0)), i.metrics.numberOfBids++;
                    }, t.trackBidReady = function (t) {
                        const i = ta(t), e = new Date().getTime();
                        0 === i.metrics.numberOfBidsReady && (i.metrics.timeToFirstBidReady = e - i.metadata.startTime, i.metrics.timeToFirstBidReady > qt.a && (i.metrics.timeToFirstBidReady = 0)), i.metrics.numberOfBidsReady++;
                    }, t.trackStartAd = function (t) {
                        const i = ta(t);
                        -1 === i.metrics.timeToFirstStartAd && (i.metrics.timeToFirstStartAd = new Date().getTime() - i.metadata.startTime);
                    }, t.trackAdImpression = function (t, e) {
                        const s = ta(t);
                        -1 === s.metrics.timeToFirstAdImpression && (s.metrics.timeToFirstAdImpression = new Date().getTime() - s.metadata.startTime), s.metrics.indexOfWinThatGaveImpression = s.metadata.winIds.indexOf(e.settings.id), i(t);
                    }, t.trackPostBid = function (t) {
                        const i = ta(t), e = new Date().getTime();
                        0 === i.metrics.numberOfPostBids && (i.metrics.timeToFirstPostBid = e - i.metadata.startTime, i.metrics.timeToFirstPostBid > qt.a && (i.metrics.timeToFirstPostBid = 0)), i.metrics.numberOfPostBids++;
                    }, t.trackWin = function (t, i) {
                        const e = ta(t);
                        e.metadata.winIds.push(i.settings.id), 0 === e.metrics.numberOfWins && (e.metrics.timeToFirstWin = new Date().getTime() - e.metadata.startTime, e.metrics.timeToFirstWin > qt.a && (e.metrics.timeToFirstWin = 0)), e.metrics.numberOfWins++;
                    };
                }(ia || (ia = {}));
                const ea = 4;
                var sa;
                !function (t) {
                    t[t.Rtb = 1] = 'Rtb', t[t.HeaderBidder = 2] = 'HeaderBidder', t[t.Tam = 3] = 'Tam';
                }(sa || (sa = {}));
                const na = {
                    [h.ProtoCreativeTypeEnum.Rtb]: sa.Rtb,
                    [h.ProtoCreativeTypeEnum.HeaderBidder]: sa.HeaderBidder,
                    [h.ProtoCreativeTypeEnum.Tam]: sa.Tam,
                    [h.ProtoCreativeTypeEnum.TamDeal]: sa.Tam
                };
                class ra {
                    constructor(t) {
                        this.settings = t, this.hj = new Map(), this.jl = [], this.aj = !1, this.oj = new ji(), this.cj = () => {
                            const t = this.uj();
                            if (t)
                                return this.lj(t.lineItemList), this.dj(t.lineItemList, t.state).then(() => {
                                    this.fj(t.lineItemList), this.pj();
                                }).catch(() => {
                                    this.fj(t.lineItemList), this.pj();
                                });
                        }, this.bj = (t, i) => {
                            return this.settings.adCallerYo.getWinningYoScore(i.settings.id) - this.settings.adCallerYo.getWinningYoScore(t.settings.id);
                        }, this.settings.lineItemList.forEach(t => {
                            uh(t.protoLineItem.creativeType) ? t.protoLineItem.timeBetweenRequests = 10 : t.protoLineItem.timeBetweenRequests = 6;
                        }), this.jl.push(this.settings.lineItemServices.lineItemServicesTimer.onTimer().subscribe(() => {
                            this.vj();
                        }), this.settings.adBidPool.onBidConsumed.subscribe(() => {
                            this.vj();
                        }), this.settings.adBidPool.onBidLoadingConsumed.subscribe(() => {
                            this.vj();
                        }), this.settings.adBidPool.onBidReadyConsumed.subscribe(() => {
                            this.vj();
                        })), this.mj = new Qh().registerCallingValidators([
                            this.settings.lineItemServices.requestCapsService,
                            this.settings.lineItemServices.impressionCapsService,
                            this.settings.lineItemServices.timeBetweenRequestsService
                        ]), this.gj = new Jh(this.cj, ea), this.settings.lineItemList.find(t => {
                            return t.protoLineItem.creativeType === h.ProtoCreativeTypeEnum.Rtb;
                        }) && this.hj.set(sa.Rtb, {
                            auctionPending: !1,
                            caller: new vh(this.settings.isOutstream, this.settings.skipAdSettings, this.settings.app, this.settings.adMacroReplacer, this.settings.adContainerMap, this.settings.adRequestGatekeeper, this.settings.adEnforcer, this.settings.adSlotContainerRecycler)
                        }), this.settings.lineItemList.find(t => {
                            return t.protoLineItem.creativeType === h.ProtoCreativeTypeEnum.HeaderBidder;
                        }) && this.hj.set(sa.HeaderBidder, {
                            auctionPending: !1,
                            caller: new Th(this.settings.isOutstream, this.settings.schainSettings, this.settings.app, this.settings.adMacroReplacer, this.settings.adContainerMap, this.settings.adEnforcer, this.settings.adSlotContainerRecycler, this.settings.loopAdWhenFinished)
                        }), this.settings.lineItemList.find(t => {
                            return t.protoLineItem.creativeType === h.ProtoCreativeTypeEnum.Tam || t.protoLineItem.creativeType === h.ProtoCreativeTypeEnum.TamDeal;
                        }) && this.hj.set(sa.Tam, {
                            auctionPending: !1,
                            caller: new Rh(this.settings.app, this.settings.amazonSlotId, this.settings.adMacroReplacer, this.settings.adContainerMap, this.settings.adEnforcer, this.settings.adSlotContainerRecycler)
                        }), this.gj.setAllThreadsIdleNotifier(() => {
                            this.settings.lineItemServices.lineItemServicesTimer.start();
                        });
                    }
                    get onFirstAggregatedBatchFinished() {
                        return this.oj.asObservable();
                    }
                    call(t) {
                        this.gj.setNumberOfThreads(t.maxParallelCalls), this.yj = t, this.aj = !0, this.vj();
                    }
                    stop() {
                        this.aj = !1, this.gj.stop();
                    }
                    destroy() {
                        this.stop(), this.mj.destroy(), this.hj.forEach(t => {
                            t.caller.destroy();
                        }), Ai(this.jl);
                    }
                    pj() {
                        let t = !0;
                        this.hj.forEach(i => {
                            i.auctionPending && (t = !1);
                        }), t && this.oj.next();
                    }
                    wj(t) {
                        return t.filter(t => {
                            return !(t.aggregators.size > 0) && (!(!uh(t.protoLineItem.creativeType) && (t.bids.size > 0 || t.callers.size > 0)) && this.mj.canCall(t, this.Oj()));
                        }).filter(t => {
                            return !this.settings.platformCappedLineItemRepo.isLineItemPlatformCapped(t.protoLineItem);
                        });
                    }
                    vj() {
                        this.aj && this.gj.start();
                    }
                    uj() {
                        const t = this.wj(this.settings.lineItemList), i = this.settings.adCallerYo.getBestCallable(t, this.yj.stateSettings);
                        if (i && this.xj(i.lineItemList[0], i.state))
                            return i;
                    }
                    xj(t, i) {
                        if (uh(t.protoLineItem.creativeType))
                            return !0;
                        const e = this.settings.adBidPool.getAllBidsExceptStartedBid().filter(t => {
                                return this.settings.adCallerYo.isBidTargetingAllowed(t, i, this.settings.lineItemServices.impressionCapsService, this.settings.platformCappedLineItemRepo);
                            }), s = t.protoLineItem.floorPrice || t.protoLineItem.customCpm, n = this.settings.adCallerYo.getCallingYoScore(t.protoLineItem.advertiserLineItemId), r = this.settings.adBidPool.callingLineItems, h = [...e.map(t => {
                                    return t.getPrice();
                                })], a = [...r.map(t => {
                                    return this.settings.adCallerYo.getCallingYoScore(t.protoLineItem.advertiserLineItemId);
                                })];
                        for (let t = 0; t < h.length; t++)
                            if (s < h[t])
                                return !1;
                        for (let t = 0; t < a.length; t++)
                            if (n < a[t])
                                return !1;
                        return !0;
                    }
                    lj(t) {
                        this.settings.adBidPool.callingLineItems = [
                            ...this.settings.adBidPool.callingLineItems,
                            ...t
                        ];
                    }
                    fj(t) {
                        this.settings.adBidPool.callingLineItems = this.settings.adBidPool.callingLineItems.filter(i => {
                            return !Object(l.g)(i, t);
                        });
                    }
                    dj(t, i) {
                        return uh(t[0].protoLineItem.creativeType) ? this.Sj(t, i) : this.jj(t[0], i);
                    }
                    jj(t, i) {
                        this.mj.registerRequestForLineItem(t, this.Oj());
                        const e = this.kj(t, i);
                        return this._j(e), this.Aj(e);
                    }
                    Sj(t, i) {
                        const e = this.hj.get(na[t[0].protoLineItem.creativeType]);
                        t.forEach(t => {
                            return t.aggregators.add(e.caller);
                        }), e.auctionPending = !0;
                        const s = {
                            lineItemRequestDataList: t.map(t => {
                                return {
                                    adManagerLineItem: t,
                                    maxAvailableRequests: this.settings.lineItemServices.requestCapsService.getAvailableRequestsForLineItem(t, this.Oj())
                                };
                            }),
                            callingState: i,
                            maxAdDuration: i.adBreakState.maxAdDuration,
                            maxBidPrice: this.Ij(i)
                        };
                        return e.caller.request(s).then(s => {
                            s.bids.length || s.noBids.length || t.forEach(t => {
                                this.mj.registerRequestForLineItem(t, this.Oj());
                            }), t.forEach(t => {
                                return t.aggregators.delete(e.caller);
                            }), s.noBids.forEach(t => {
                                this.mj.registerRequestForLineItem(t.lineItem, this.Oj()), this.Cj(i, t.lineItem, t.reason, t.requestMetadata);
                            }), s.bids.forEach(t => {
                                return this._j(t);
                            }), s.bids.sort(this.bj);
                            const n = s.bids.map(t => {
                                return this.mj.registerRequestForLineItem(t.settings.adManagerLineItem, this.Oj()), this.Aj(t);
                            });
                            return Promise.all(n);
                        }).catch().then(() => {
                            e.auctionPending = !1;
                        });
                    }
                    Aj(t) {
                        return t.settings.adManagerLineItem.callers.add(t), t.fetchBid().catch(i => {
                            t.settings.adManagerLineItem.callers.delete(t), this.settings.adCallerYo.registerPreBid(t.settings.id);
                            const e = Jn[i] ? Jn[i] : h.ConnatixNoBidReasonEnum.RequestException;
                            return this.Cj(t.settings.callingState, t.settings.adManagerLineItem, e, t.settings.requestMetadata, t.settings.trackersInformation, Date.now() - t.metrics.fetchStart), Promise.reject();
                        }).then(i => {
                            t.settings.adManagerLineItem.callers.delete(t), this.Tj(i, Date.now() - t.metrics.fetchStart);
                        }).catch(t => {
                            void 0 !== t && Object(n.a)({
                                message: 'AdManager_AdCallerController_handleCallAdaptorRequest',
                                exception: t.message,
                                callStack: t.stack,
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                throttle: 5,
                                sendMaxLog: !0
                            });
                        });
                    }
                    Tj(t, i) {
                        const e = t.settings.adManagerLineItem, s = t.settings.requestMetadata;
                        if (t.settings.requestMetadata.data.requestTrackingHandledByServer || this.settings.trackingService.addBid({
                                advertiserLineItemId: e.protoLineItem.advertiserLineItemId,
                                publisherLineItemId: e.protoLineItem.publisherLineItemId,
                                requestedFloorPrice: s.data.requestedFloorPrice,
                                rtbRequestNumber: s.data.rtbRequestNumber,
                                syncedUser: s.data.syncedUser,
                                prebidJsBidderName: s.data.prebidJsBidderName,
                                customClientPrice: t.settings.cpm,
                                timeSpent: i,
                                dspId: s.data.dspId,
                                encryptedPrice: s.data.encryptedPrice,
                                rtbAdomain: s.data.rtbAdomain,
                                creativeId: t.creativeId,
                                rtbSeatId: s.data.rtbSeatId,
                                cnxBidId: t.settings.requestMetadata.data.cnxBidId
                            }), this.settings.adRequestGatekeeper.addBid(e.protoLineItem.advertiserLineItemId, s.data.requestedFloorPrice), !this.settings.adCallerYo.isBidTargetingAllowedEverInSession(t, t.settings.callingState))
                            return this.settings.adCallerYo.registerPreBid(t.settings.id), void this.settings.auctionInfoLogging.bidIsNotWinnableEverInSession(t);
                        ia.trackBid(this.settings.app.config.playerId), t.settings.adManagerLineItem.bids.add(t), this.settings.adBidPool.addBid(t);
                    }
                    Cj(t, i, e, s, n, r) {
                        n && Hn.track(n.adError, this.settings.adMacroReplacer, i.protoLineItem, t), s.data.requestTrackingHandledByServer || this.settings.trackingService.addPrebid({
                            advertiserLineItemId: i.protoLineItem.advertiserLineItemId,
                            publisherLineItemId: i.protoLineItem.publisherLineItemId,
                            partnerCustomHeaders: s.data.partnerCustomHeaders,
                            partnerReason: s.data.partnerReason,
                            requestedFloorPrice: s.data.requestedFloorPrice,
                            rtbRequestNumber: s.data.rtbRequestNumber,
                            syncedUser: s.data.syncedUser,
                            prebidJsBidderName: s.data.prebidJsBidderName,
                            reason: e,
                            timeSpent: r
                        }), this.settings.adRequestGatekeeper.addPrebid(i.protoLineItem.advertiserLineItemId);
                    }
                    kj(t, i) {
                        const e = new Hn();
                        qn(t.protoLineItem.trackers, e);
                        const s = {
                            id: Object(Li.c)(),
                            adManagerLineItem: t,
                            replaceTrackingMacros: !0,
                            requestMetadata: new hh(),
                            trackersInformation: e,
                            callingState: i,
                            adContainer: this.settings.adContainerMap.get(t.protoLineItem.adType),
                            globalDomUtilsService: this.settings.app.services.GlobalDomUtilsService,
                            viewabilityService: this.settings.app.services.ViewabilityService,
                            cpm: t.protoLineItem.floorPrice || t.protoLineItem.customCpm,
                            adEnforcer: this.settings.adEnforcer,
                            os: this.settings.os,
                            adSlotContainerRecycler: this.settings.adSlotContainerRecycler,
                            bidSlotId: Or(),
                            urlSuffixerService: this.settings.app.services.UrlSuffixerService
                        };
                        switch (t.protoLineItem.creativeType) {
                        case h.ProtoCreativeTypeEnum.External:
                        case h.ProtoCreativeTypeEnum.ThirdParty:
                            return t.protoLineItem.adType === h.ProtoAdType.Overlay ? new Hh(Object.assign(Object.assign({}, s), {
                                url: t.protoLineItem.adTag,
                                pageDomain: this.settings.app.config.pageDomain
                            })) : new rh(Object.assign(Object.assign({}, s), {
                                url: t.protoLineItem.adTag,
                                adMacroReplacer: this.settings.adMacroReplacer,
                                trackingService: this.settings.trackingService,
                                loopAdWhenFinished: this.settings.loopAdWhenFinished,
                                pageUrl: this.settings.app.config.pageUrl
                            }));
                        case h.ProtoCreativeTypeEnum.MediaFile:
                            return new zh(Object.assign(Object.assign({}, s), {
                                clickUrl: t.protoLineItem.mediaCreativeClickUrl,
                                mediaId: t.protoLineItem.mediaCreativeId,
                                renditions: t.protoLineItem.renditions,
                                pauseAdWhenFinished: this.settings.pauseAdWhenFinished,
                                loopAdWhenFinished: this.settings.loopAdWhenFinished,
                                inApp: this.settings.app.config.isInApp,
                                pageDomain: this.settings.app.config.pageDomain
                            }));
                        }
                    }
                    _j(t) {
                        const {
                            creativeType: i,
                            floorPrice: e,
                            successRate: s,
                            advertiserLineItemId: n,
                            lineItemPriority: r
                        } = t.settings.adManagerLineItem.protoLineItem;
                        this.settings.adCallerYo.registerBiddingInformation({
                            creativeType: i,
                            floorPrice: e,
                            lineItemId: n,
                            priority: r,
                            bidId: t.settings.id,
                            cpm: t.settings.cpm,
                            obfuscatedPrice: t.settings.obfuscatedPrice,
                            successRate: t.settings.successRate || s
                        });
                    }
                    Oj() {
                        return (this.yj.stateSettings.currentState || this.yj.stateSettings.predictedState).adOpportunity.id;
                    }
                    Ij(t) {
                        const i = [
                            ...this.settings.adBidPool.bids,
                            ...this.settings.adBidPool.bidsLoading,
                            ...this.settings.adBidPool.bidsReady
                        ].filter(i => {
                            return this.settings.adCallerYo.isBidTargetingAllowed(i, t, this.settings.lineItemServices.impressionCapsService, this.settings.platformCappedLineItemRepo);
                        });
                        return Object(l.h)(i) ? Math.max(...i.map(t => {
                            return t.getPrice();
                        })) : 0;
                    }
                }
                const ha = 'uncategorized';
                class aa {
                    resetCapsBasedOnExternalEvent(t) {
                        const i = this.Pj.keys();
                        for (const e of i)
                            this.Mj(e, t) && this.Ej(e, ha);
                    }
                    Mj(t, i) {
                        return t.protoLineItem.resetCapType === i;
                    }
                    Lj(t) {
                        return this.Mj(t, h.ProtoResetCapTypeEnum.TimeCapping) && this.Rj(t) > 0;
                    }
                }
                class oa {
                    constructor(t) {
                        this.Bj = t, this.Dj = new Map();
                    }
                    setNumberOfImpressions({
                        value: t,
                        categoryId: i
                    }) {
                        Object(rt.a)(i) && this.Bj === h.ProtoResetCapTypeEnum.OpportunityCapping || (i = ha), this.Dj.set(i, t);
                    }
                    getNumberOfImpressions({categoryId: t}) {
                        return Object(rt.a)(t) && this.Bj === h.ProtoResetCapTypeEnum.OpportunityCapping || (t = ha), this.Dj.get(t) || 0;
                    }
                }
                class ca extends aa {
                    constructor(t = (() => {
                        return Date.now();
                    })()) {
                        super(), this.Fj = t, this.Pj = new Map();
                    }
                    canCall(t, i) {
                        this.Vj(t);
                        const e = this.Pj.get(t);
                        return void 0 === e || (0 === t.protoLineItem.impressionCap || e.getNumberOfImpressions({ categoryId: i }) < t.protoLineItem.impressionCap);
                    }
                    registerImpressionForLineItem(t, i) {
                        let e = this.Pj.get(t);
                        return void 0 === e && (this.Pj.set(t, new oa(t.protoLineItem.resetCapType)), e = this.Pj.get(t), this.Lj(t) && (e.nextImpressionCapResetTimestamp = this.Uj(this.Rj(t)))), e.setNumberOfImpressions({
                            value: e.getNumberOfImpressions({ categoryId: i }) + 1,
                            categoryId: i
                        }), this;
                    }
                    registerRequestForLineItem(t, i) {
                        return this;
                    }
                    destroy() {
                        this.Pj.clear();
                    }
                    Ej(t, i) {
                        this.Pj.get(t).setNumberOfImpressions({
                            value: 0,
                            categoryId: i
                        });
                    }
                    Rj(t) {
                        return t.protoLineItem.resetImpressionsCapTime * qt.f;
                    }
                    Vj(t, i = (() => {
                        return Date.now();
                    })()) {
                        if (!this.Lj(t))
                            return;
                        const e = this.Pj.get(t);
                        void 0 !== e && this.$j(t, i) && (e.setNumberOfImpressions({ value: 0 }), e.nextImpressionCapResetTimestamp = this.Uj(this.Rj(t), i));
                    }
                    $j(t, i) {
                        return i >= this.Pj.get(t).nextImpressionCapResetTimestamp;
                    }
                    Uj(t, i = (() => {
                        return Date.now();
                    })()) {
                        const e = Math.ceil((i - this.Fj) / t) * t;
                        return this.Fj + e;
                    }
                }
                class ua {
                    constructor(t) {
                        this.Bj = t, this.Nj = new Map();
                    }
                    setNumberOfRequests({
                        value: t,
                        categoryId: i
                    }) {
                        Object(rt.a)(i) && this.Bj === h.ProtoResetCapTypeEnum.OpportunityCapping || (i = ha), this.Nj.set(i, t);
                    }
                    getNumberOfRequests({categoryId: t}) {
                        return Object(rt.a)(t) && this.Bj === h.ProtoResetCapTypeEnum.OpportunityCapping || (t = ha), this.Nj.get(t) || 0;
                    }
                }
                class la extends aa {
                    constructor(t = (() => {
                        return Date.now();
                    })()) {
                        super(), this.Fj = t, this.allowResetOnTime = !0, this.Pj = new Map();
                    }
                    canCall(t, i) {
                        this.Vj(t);
                        const e = this.Pj.get(t);
                        return void 0 === e || (0 === t.protoLineItem.requestCap || e.getNumberOfRequests({ categoryId: i }) < t.protoLineItem.requestCap);
                    }
                    registerRequestForLineItem(t, i, e = (() => {
                        return Date.now();
                    })()) {
                        let s = this.Pj.get(t);
                        return void 0 === s && (this.Pj.set(t, new ua(t.protoLineItem.resetCapType)), s = this.Pj.get(t), this.Lj(t) && (s.nextRequestCapResetTimestamp = this.Uj(this.Rj(t)))), s.setNumberOfRequests({
                            value: s.getNumberOfRequests({ categoryId: i }) + 1,
                            categoryId: i
                        }), this;
                    }
                    registerImpressionForLineItem(t) {
                        return this;
                    }
                    getAvailableRequestsForLineItem(t, i) {
                        const e = this.Pj.get(t);
                        return void 0 === e ? t.protoLineItem.requestCap : t.protoLineItem.requestCap - e.getNumberOfRequests({ categoryId: i });
                    }
                    restoreOneCapForLineItem(t, i) {
                        if (t.protoLineItem.ignoreFilledRequests) {
                            const e = this.Pj.get(t);
                            if (void 0 === e)
                                return;
                            const s = e.getNumberOfRequests({ categoryId: i });
                            s > 0 && e.setNumberOfRequests({
                                value: s - 1,
                                categoryId: i
                            });
                        }
                    }
                    destroy() {
                        this.Pj.clear();
                    }
                    Ej(t, i) {
                        this.Pj.get(t).setNumberOfRequests({
                            value: 0,
                            categoryId: i
                        });
                    }
                    Rj(t) {
                        return t.protoLineItem.resetRequestsCapTime * qt.f;
                    }
                    Vj(t, i = (() => {
                        return Date.now();
                    })()) {
                        if (!this.Lj(t))
                            return;
                        const e = this.Pj.get(t);
                        void 0 !== e && this.$j(t, i) && (e.setNumberOfRequests({ value: 0 }), e.nextRequestCapResetTimestamp = this.Uj(this.Rj(t), i));
                    }
                    $j(t, i) {
                        return i >= this.Pj.get(t).nextRequestCapResetTimestamp && this.allowResetOnTime;
                    }
                    Uj(t, i = (() => {
                        return Date.now();
                    })()) {
                        const e = Math.ceil((i - this.Fj) / t) * t;
                        return this.Fj + e;
                    }
                }
                class da {
                    constructor() {
                        this.Pj = new Map();
                    }
                    registerRequestForLineItem(t, i, e = (() => {
                        return Date.now();
                    })()) {
                        let s = this.Pj.get(t);
                        return void 0 === s && (this.Pj.set(t, {}), s = this.Pj.get(t)), s.lastRequestTimestamp = e, s.categoryId = i, this;
                    }
                    registerImpressionForLineItem(t) {
                        return this;
                    }
                    canCall(t, i, e = (() => {
                        return Date.now();
                    })()) {
                        const s = this.Pj.get(t);
                        return void 0 === s || (0 === t.protoLineItem.timeBetweenRequests || (e >= s.lastRequestTimestamp + t.protoLineItem.timeBetweenRequests * qt.f || !(s.categoryId === i || t.protoLineItem.resetCapType !== h.ProtoResetCapTypeEnum.OpportunityCapping)));
                    }
                    destroy() {
                        this.Pj.clear();
                    }
                }
                const fa = 500;
                class pa {
                    constructor() {
                        this.Hj = null, this.qj = new ji();
                    }
                    start() {
                        return this.zj(), this;
                    }
                    stop() {
                        return this.Wj(), this;
                    }
                    onTimer() {
                        return this.qj.asObservable();
                    }
                    destroy() {
                        this.Wj();
                    }
                    zj() {
                        null === this.Hj && (this.Hj = mi.setInterval(() => {
                            this.qj.next();
                        }, fa));
                    }
                    Wj() {
                        mi.clearInterval(this.Hj), this.Hj = null;
                    }
                }
                class ba extends o.a {
                    constructor(t, i, e, s) {
                        super(), this.Gj = t, this.Jj = i, this.pl = e, this.Qj = s, this.Xj = new ji(), this.forceTriggerUpdateState = () => {
                            [...this.Gj.keys()].forEach(t => {
                                return this.Yj(t);
                            });
                        }, this.Yj = (t, i) => {
                            this.Kj.set(t, this.Zj(this.Gj.get(t), i));
                        }, this.tk = t => {
                            this.ik([h.ProtoAdType.Video], t);
                        }, this.ek = t => {
                            this.ik([h.ProtoAdType.Overlay], t);
                        }, this.br = () => {
                            this.ik([
                                h.ProtoAdType.Overlay,
                                h.ProtoAdType.Video
                            ]);
                        }, this.ik = (t, i) => {
                            t.forEach(t => {
                                return this.Yj(t, i);
                            }), this.Xj.next();
                        }, this.Kj = new Map(), this.sk = {
                            [h.ProtoAdType.Video]: this.tk,
                            [h.ProtoAdType.Overlay]: this.ek
                        }, this.forceTriggerUpdateState(), this.Gj.forEach((t, i) => {
                            this.Jj.on(t, this.br), this.pl.on(t, this.sk[i], { threshold: this.Qj });
                        });
                    }
                    get onContainerStateUpdate() {
                        return this.Xj.asObservable();
                    }
                    getContainerMap() {
                        return this.Gj;
                    }
                    getContainerStateMap() {
                        return this.Kj;
                    }
                    destroy() {
                        this.Gj.forEach((t, i) => {
                            this.Jj.off(t, this.br), this.pl.off(t, this.sk[i]);
                        });
                    }
                    Zj(t, i) {
                        let e = i;
                        return void 0 === e && (e = this.pl.check({
                            element: t,
                            threshold: this.Qj
                        })), {
                            width: t.clientWidth,
                            height: t.clientHeight,
                            viewability: e
                        };
                    }
                }
                const va = 'cnxpl-vl', ma = 'cnxpl-rf';
                class ga {
                    constructor() {
                        this.nk = !0, this.rk = new ji(), this.hk = [], this.ak = t => {
                            if (this.nk)
                                return;
                            const i = t.target;
                            if (i.volume > 0 && (i.volume = 0, !i.paused)) {
                                const t = i.getAttribute(ma);
                                this.rk.next(t);
                            }
                            t.preventDefault ? t.preventDefault() : t.returnValue = !1;
                        };
                    }
                    get onVolumeDetected() {
                        return this.rk.asObservable();
                    }
                    enforce(t, i) {
                        let e = t;
                        Object(rt.c)(t) && (e = t.contentDocument || t.contentWindow.document), this.nk = !1, Object(l.c)(e.getElementsByTagName('video')).forEach(t => {
                            this.ck(t, i);
                        });
                    }
                    stopEnforce() {
                        this.nk = !0;
                    }
                    clearEnforce(t) {
                        try {
                            const i = [];
                            this.hk = this.hk.filter(e => {
                                return e.getAttribute(ma) !== t || (i.push(e), !1);
                            }), i.forEach(t => {
                                t.removeAttribute(va), t.removeAttribute(ma), t.removeEventListener('volumechange', this.ak);
                            });
                        } catch (t) {
                        }
                    }
                    ck(t, i) {
                        t && !t.getAttribute('cnxpl-vl') && (t.volume = 0, t.setAttribute(va, 'true'), t.setAttribute(ma, i), t.addEventListener('volumechange', this.ak), this.hk.push(t));
                    }
                }
                class ya {
                    constructor() {
                    }
                    uk(t) {
                        const i = function () {
                        };
                        t.Element.prototype.scrollIntoView = i, t.Element.prototype.scrollIntoViewIfNeeded = i, t.scroll = i, t.scrollTo = i, t.scrollBy = i;
                    }
                    enforce(t) {
                        Object(rt.c)(t) && this.uk(t.contentWindow);
                    }
                    stopEnforce() {
                    }
                    clearEnforce() {
                    }
                }
                class wa {
                    constructor(t) {
                        this.lk = t => {
                            return t.cnxEnfStorage ? t.cnxEnfStorage : null;
                        }, this.fe = t;
                        try {
                            this.lk(this.fe) || this.dk(this.fe);
                        } catch (t) {
                            Object(n.a)({
                                message: 'AdManager_EnforcerMemory_bind_enforcement',
                                exception: t.message,
                                callStack: t.stack,
                                level: h.ProtoLoggingLevelEnum.FATAL
                            });
                        }
                    }
                    dk(t) {
                        Object(T.w)(t.document.head, t, '!function(){function n(n){window["cnx"+n]||(window["cnx"+n]=window[n],window[n]=function(e){var t="";try{e&&(t=function n(e,t){try{if(!e)return"";if(e.cnxInnerTag)return e.cnxInnerTag;if(t<2){var r=t+1;return n(e.caller,r)}}catch(n){return""}return""}(e))}catch(n){}var r=window["cnx"+n].apply(null,arguments);if(t){var i=window.cnxEnfStorage;i[n][t]=i[n][t]||[],i[n][t].push(r)}return r})}window.cnxEnfStorage={setTimeout:{},setInterval:{},eventListeners:{},errors:[]};var e=window.location.hostname.split("."),t=window.btoa(e[e.length-2]+"."+e[e.length-1]);-1===["dG16LmNvbQ==","YmlsbGJvYXJkLmNvbQ==","aG9sbHl3b29kcmVwb3J0ZXIuY29t","dmliZS5jb20=","aG9yb3Njb3BlLmNvbQ==","YXN0cm9sb2d5LmNvbQ==","YWhvcmFtaXNtby5jb20="].indexOf(t)&&(!function(){const n=window.EventTarget?window.EventTarget.prototype:window.document;n.cnxAddEventListener||(n.cnxAddEventListener=n.addEventListener,n.addEventListener=function(n,e,t){var r=this||window;if(e&&e.cnxInnerTag){var i=window.cnxEnfStorage;i.eventListeners[e.cnxInnerTag]=i.eventListeners[e.cnxInnerTag]||[],i.eventListeners[e.cnxInnerTag].push({element:r,type:n,handler:e,options:t})}try{r.cnxAddEventListener(n,e,t)}catch(n){n.message="adlstn_"+n.message,i.errors.push(n)}})}(),n("setTimeout"),n("setInterval"))}();');
                    }
                    enforce(t, i) {
                        if (Object(rt.c)(t))
                            try {
                                t.contentWindow.self === top || t.contentWindow.Function.prototype.cnxInnerTag || t.contentWindow.Object.defineProperty(t.contentWindow.Function.prototype, 'cnxInnerTag', {
                                    enumerable: !1,
                                    writable: !0,
                                    value: i
                                }), t.contentWindow.self === top || t.contentWindow.Object.prototype.cnxInnerTag || t.contentWindow.Object.defineProperty(t.contentWindow.Object.prototype, 'cnxInnerTag', {
                                    enumerable: !1,
                                    writable: !0,
                                    value: i
                                });
                            } catch (t) {
                            }
                    }
                    stopEnforce() {
                    }
                    clearEnforce(t) {
                        try {
                            const i = this.lk(this.fe);
                            i.eventListeners[t] && (i.eventListeners[t].forEach(t => {
                                t.element.removeEventListener(t.type, t.handler, t.options);
                            }), i.eventListeners[t] = []), i.setInterval[t] && (i.setInterval[t].forEach(t => {
                                return this.fe.clearInterval(t);
                            }), i.setInterval[t] = []), i.setTimeout[t] && (i.setTimeout[t].forEach(t => {
                                return this.fe.clearTimeout(t);
                            }), i.setTimeout[t] = []);
                        } catch (t) {
                        }
                    }
                }
                class Oa {
                    constructor() {
                        this.fk = [
                            'viralgains',
                            'serving-sys.com',
                            'commercialadsdistributor'
                        ], this.pk = [
                            'beachfrontmedia',
                            'commercialadsdistributor'
                        ], this.bk = ['commercialadsdistributor'], this.vk = [
                            'pixel.clearstream.tv',
                            'pixel.clrstm.com'
                        ], this.mk = new ji(), this.gk = new ji();
                    }
                    get onMalwareDetected() {
                        return this.mk.asObservable();
                    }
                    get onBadUriDetected() {
                        return this.gk.asObservable();
                    }
                    enforce(t, i) {
                        if (Object(rt.c)(t)) {
                            this.yk = i;
                            try {
                                this.wk(t), this.Ok(t), this.xk(t), this.Sk(t);
                            } catch (t) {
                            }
                        }
                    }
                    stopEnforce() {
                    }
                    clearEnforce() {
                    }
                    jk(t, i, e, s) {
                        t.every(t => {
                            return -1 === e.indexOf(t);
                        }) && !i.getAttribute('cnx') && (i.setAttribute('cnx', 'true'), this.gk.next({
                            referenceId: this.yk,
                            enforcementMessage: `${ s }-${ i }`
                        }));
                    }
                    wk(t) {
                        const i = t.getAttribute('src');
                        i && (this.fk.forEach(t => {
                            i.indexOf(t) > -1 && this.mk.next({
                                referenceId: this.yk,
                                enforcementMessage: `malware-${ t }`
                            });
                        }), this.jk([
                            '//',
                            'about:blank',
                            'about:self',
                            'javascript:'
                        ], t, i, 'iframe'));
                    }
                    Ok(t) {
                        Object(l.c)(t.contentDocument.getElementsByTagName('script')).forEach(t => {
                            const i = t.getAttribute('src');
                            i && (this.pk.forEach(t => {
                                i.indexOf(t) > -1 && this.mk.next({
                                    referenceId: this.yk,
                                    enforcementMessage: `malware-${ t }`
                                });
                            }), this.jk(['//'], t, i, 'script'));
                        });
                    }
                    xk(t) {
                        Object(l.c)(t.contentDocument.getElementsByTagName('a')).forEach(t => {
                            const i = t.getAttribute('href');
                            i && this.bk.forEach(t => {
                                i.indexOf(t) > -1 && this.mk.next({
                                    referenceId: this.yk,
                                    enforcementMessage: `malware-${ t }`
                                });
                            });
                        });
                    }
                    Sk(t) {
                        Object(l.c)(t.contentDocument.getElementsByTagName('img')).forEach(t => {
                            const i = t.getAttribute('src');
                            i && this.vk.forEach(t => {
                                i.indexOf(t) > -1 && this.mk.next({
                                    referenceId: this.yk,
                                    enforcementMessage: `malware-${ t }`
                                });
                            });
                        });
                    }
                }
                class xa {
                    constructor(t, i, e) {
                        if (this.kk = e, this._k = null, this.Ak = new Map(), this.Ik = Xn.None, this.Ck = 300, this.jl = [], this.Tk = new Map(), this.Sy = new ji(), this.Ak.set(Xn.MemoryLeak, new wa(i)), e || this.Ak.set(Xn.ScrollHijack, new ya()), !t) {
                            const t = new ga();
                            this.Ak.set(Xn.Mute, t), this.jl.push(t.onVolumeDetected.subscribe(t => {
                                this.Pk(Qn.VOLUME_DETECTED, t, '');
                            }));
                        }
                        const s = new Oa();
                        this.jl.push(s.onBadUriDetected.subscribe(t => {
                            this.Pk(Qn.BADURI_DETECTED, t.referenceId, t.enforcementMessage);
                        }), s.onMalwareDetected.subscribe(t => {
                            this.Pk(Qn.MALWARE_DETECTED, t.referenceId, t.enforcementMessage);
                        })), this.Ak.set(Xn.Malware, s);
                    }
                    get onEnforcerEvent() {
                        return this.Sy.asObservable();
                    }
                    registerContainer(t, i) {
                        this.Tk.get(t) || this.Tk.set(t, i);
                    }
                    deregisterContainer(t) {
                        this.Tk.get(t) && (this.Ak.forEach(i => {
                            i.clearEnforce(this.Tk.get(t));
                        }), this.Tk.delete(t), this.Tk.size || this.stop(Xn.All));
                    }
                    start(t) {
                        this.kk && (t ^= Xn.ScrollHijack), this.Ik |= t, null === this._k && (this._k = setInterval(() => {
                            try {
                                this.Tk.forEach((t, i) => {
                                    this.Mk(i, t);
                                });
                            } catch (t) {
                            }
                        }, this.Ck));
                    }
                    stop(t) {
                        this.Ik &= ~t, this.Ik === Xn.None && (clearInterval(this._k), this._k = null), this.Ak.forEach((i, e) => {
                            t & e && i.stopEnforce();
                        });
                    }
                    destroy() {
                        this.stop(Xn.All), Ai(this.jl), this.Tk.forEach((t, i) => {
                            this.deregisterContainer(i);
                        });
                    }
                    Mk(t, i) {
                        Object(l.c)(t.getElementsByTagName('iframe')).forEach(t => {
                            try {
                                this.Mk(t, i);
                            } catch (t) {
                            }
                        }), this.Ak.forEach((e, s) => {
                            this.Ik & s && e.enforce(t, i);
                        });
                    }
                    Pk(t, i, e) {
                        let s;
                        this.Tk.forEach((t, e) => {
                            t === i && (s = e);
                        }), this.Sy.next({
                            message: e,
                            type: t,
                            detectedContainer: s
                        });
                    }
                }
                class Sa {
                    constructor(t) {
                        this.Wn = t, this.Ek = !1, this.Lk = void 0, this.Rk = [], this.jl = [], this.Bk = !1, this.Dk = new ji(), this.Fk = new ji(), this.Vk = [], this.jl.push(this.Wn.adBidPool.onBidReady.subscribe(() => {
                            ia.trackBidReady(this.Wn.playerId), this.Uk();
                        }), this.Wn.impressionCapsTimer.onTimer().subscribe(() => {
                            this.Uk();
                        }));
                    }
                    get onAdSelected() {
                        return this.Dk.asObservable();
                    }
                    get onAdFinished() {
                        return this.Fk.asObservable();
                    }
                    start(t) {
                        this.$k = t, this.Ek = !0, this.Uk();
                    }
                    stop() {
                        this.Ek = !1;
                    }
                    destroy() {
                        this.stop(), Ai(this.jl), this.Lk || this.Nk();
                    }
                    Uk() {
                        if (!this.Ek || this.Bk)
                            return;
                        const t = this.Hk(this.$k);
                        if (!t)
                            return;
                        const i = this.qk(t);
                        this.Lk && this.Wn.removeBidIfHigherYoScore && i ? (this.Nk(), this.Lk.stopAd('removeStartedBid'), this.zk(t)) : this.Lk || this.zk(t);
                    }
                    zk(t) {
                        this.Lk = t, this.Vk = [], this.Wn.adBidPool.moveBidToStarted(t), this.Dk.next(t), this.Wk(t), ia.trackStartAd(this.Wn.playerId), t.startAd();
                    }
                    Nk() {
                        this.Lk && (Ai(this.Rk), this.Rk = [], this.Wn.adBidPool.consumeBidStarted(this.Lk), this.Lk = void 0, this.Vk = []);
                    }
                    Gk(t) {
                        const i = t.settings.adManagerLineItem;
                        return this.Wn.impressionCapsService.canCall(i, this.$k.adOpportunity.id);
                    }
                    Hk(t) {
                        const i = this.Wn.adBidPool.bidsReady.filter(t => {
                            return this.Gk(t);
                        });
                        return this.Wn.adImpressionerYo.getBestBid(i, t);
                    }
                    qk(t) {
                        return !!this.Lk && this.Wn.adImpressionerYo.getBetterBid(t, this.Lk) !== this.Lk;
                    }
                    Jk(t, i) {
                        this.Bk && Object(n.a)({
                            message: 'AdManager_ABaseBidAdaptor_multipleImpressions',
                            exception: `advertiserLineItemId:${ t.settings.adManagerLineItem.protoLineItem.advertiserLineItemId }_creativeId:${ t.creativeId }`,
                            callStack: `${ t.adMediaType }`,
                            throttle: 1000,
                            level: h.ProtoLoggingLevelEnum.FATAL,
                            sendMaxLog: !0
                        }), this.Wn.adImpressionerYo.registerImpression(t.settings.id, t.settings.adManagerLineItem.protoLineItem.creativeType), ia.trackAdImpression(this.Wn.playerId, t), this.Bk = !0, this.Wn.adRequestGatekeeper.addImpression(t.settings.adManagerLineItem.protoLineItem.advertiserLineItemId, t.settings.obfuscatedPrice), this.Wn.impressionCapsService.registerImpressionForLineItem(t.settings.adManagerLineItem, this.$k.adOpportunity.id), this.Wn.requestCapsService.restoreOneCapForLineItem(t.settings.adManagerLineItem, this.$k.adOpportunity.id), t.settings.adManagerLineItem.bids.delete(t);
                        const e = this.Wn.auctionInfoLogging.onImpression(t);
                        this.Qk(t, i, e);
                    }
                    Xk(t, i, e, s = (() => {
                        return !0;
                    })()) {
                        this.Yk(t, i, e, s), this.Wn.loopAdWhenFinished ? t.resumeAd() : this.Wn.pauseAdWhenFinished ? t.pauseAd() : (this.Fk.next(t), this.Nk(), this.Uk());
                    }
                    Yk(t, i, e, s = (() => {
                        return !0;
                    })()) {
                        if (this.Bk)
                            return void (this.Bk = !1);
                        if (!s)
                            return;
                        this.Wn.adImpressionerYo.registerPostBid(t.settings.id, t.settings.adManagerLineItem.protoLineItem.creativeType, e);
                        const n = this.Wn.auctionInfoLogging.onPostBid(t);
                        this.Kk(t, e, i, n), t.settings.adManagerLineItem.bids.delete(t);
                    }
                    Qk(t, i, e) {
                        var s, n;
                        const r = this.$k.adBreakState, h = Object(rt.d)(Object(wi.f)(t.getAdDuration(), 2)) ? Object(wi.f)(t.getAdDuration(), 2) : 0, a = Object(rt.d)(Object(wi.f)(t.declaredDurationInSeconds, 2)) ? Object(wi.f)(t.declaredDurationInSeconds, 2) : 0, o = h - a, c = {
                                adPodSlotPosition: r.adPodSlotIndex,
                                adsourceType: t.adSourceType,
                                advertiserLineItemId: t.settings.adManagerLineItem.protoLineItem.advertiserLineItemId,
                                publisherLineItemId: t.settings.adManagerLineItem.protoLineItem.publisherLineItemId,
                                customClientPrice: t.settings.cpm,
                                encryptedPrice: t.settings.requestMetadata.data.encryptedPrice,
                                prebidJsBidderName: t.settings.requestMetadata.data.prebidJsBidderName,
                                rtbAdomain: t.settings.requestMetadata.data.rtbAdomain,
                                creativeId: t.creativeId,
                                rtbSeatId: t.settings.requestMetadata.data.rtbSeatId,
                                syncedUser: t.settings.requestMetadata.data.syncedUser,
                                timeSpent: i,
                                vastMediaType: t.adMediaType,
                                dspId: t.settings.requestMetadata.data.dspId,
                                cnxBidId: t.settings.requestMetadata.data.cnxBidId,
                                winToAdLoadedTime: null === (s = t.settings.bidLifecycle) || void 0 === s ? void 0 : s.winToAdLoadedTime,
                                startAdToImpressionTime: null === (n = t.settings.bidLifecycle) || void 0 === n ? void 0 : n.startAdToImpressionTime,
                                impressionDuration: o,
                                declaredDuration: a,
                                useExploration: this.Wn.explorationMode,
                                playerWidth: this.Wn.adContainer.getContainerStateMap().get(t.settings.adManagerLineItem.protoLineItem.adType).width
                            };
                        Object(rt.a)(e) && (c.auctionInformation = e), this.Wn.trackingService.trackVideoAdImpression(c);
                    }
                    Kk(t, i, e, s) {
                        var n;
                        const r = this.$k.adBreakState;
                        ia.trackPostBid(this.Wn.playerId);
                        const h = {
                            adPodSlotPosition: r.adPodSlotIndex,
                            adsourceType: t.adSourceType,
                            advertiserLineItemId: t.settings.adManagerLineItem.protoLineItem.advertiserLineItemId,
                            publisherLineItemId: t.settings.adManagerLineItem.protoLineItem.publisherLineItemId,
                            error: i,
                            loaded: !0,
                            prebidJsBidderName: t.settings.requestMetadata.data.prebidJsBidderName,
                            vastMediaType: t.adMediaType,
                            syncedUser: t.settings.requestMetadata.data.syncedUser,
                            rtbSeatId: t.settings.requestMetadata.data.rtbSeatId,
                            rtbAdomain: t.settings.requestMetadata.data.rtbAdomain,
                            creativeId: t.creativeId,
                            timeSpent: e,
                            dspId: t.settings.requestMetadata.data.dspId,
                            cnxBidId: t.settings.requestMetadata.data.cnxBidId,
                            winToAdLoadedTime: null === (n = t.settings.bidLifecycle) || void 0 === n ? void 0 : n.winToAdLoadedTime
                        };
                        Object(rt.a)(s) && (h.auctionInformation = s, h.auctionPostbidReason = this.Wn.auctionInfoLogging.getGeneralPostbidReason(i)), this.Wn.trackingService.addPostBid(h);
                    }
                    Zk(t, i) {
                        this.Vk.indexOf(i) >= 0 && !(this.Wn.pauseAdWhenFinished || this.Wn.loopAdWhenFinished) ? 1 === Object(Li.k)([
                            99,
                            1
                        ]) && Object(n.a)({
                            message: 'AdManager_AdImpressionerController_handleQuartilesTracking_track_same_quartile_twice',
                            level: h.ProtoLoggingLevelEnum.WARNING,
                            exception: t.settings.adManagerLineItem.protoLineItem.advertiserLineItemId,
                            callStack: t.adMediaType
                        }) : (this.Vk.push(i), this.Wn.trackingService.trackVideoAdQuartile({
                            advertiserLineItemId: t.settings.adManagerLineItem.protoLineItem.advertiserLineItemId,
                            publisherLineItemId: t.settings.adManagerLineItem.protoLineItem.publisherLineItemId,
                            quartile: i,
                            rtbSeatId: t.settings.requestMetadata.data.rtbSeatId,
                            dspId: t.settings.requestMetadata.data.dspId
                        }));
                    }
                    Wk(t) {
                        const i = Date.now();
                        this.Rk.push(t.onVpaidEvent.subscribe(e => {
                            var s;
                            const r = function (t, i) {
                                    switch (t) {
                                    case Pt.b.AdImpression:
                                        return i.adImpression;
                                    case Pt.b.AdClickThru:
                                        return i.adClick;
                                    case Pt.b.AdStarted:
                                        return i.adStarted;
                                    case Pt.b.AdVideoStart:
                                        return i.adVideoStart;
                                    case Pt.b.AdVideoFirstQuartile:
                                        return i.adQuartileFirst;
                                    case Pt.b.AdVideoMidpoint:
                                        return i.adQuartileSecond;
                                    case Pt.b.AdVideoThirdQuartile:
                                        return i.adQuartileThird;
                                    case Pt.b.AdVideoComplete:
                                        return i.adQuartileFourth;
                                    case Pt.b.AdPaused:
                                        return i.adPause;
                                    case Pt.b.AdPlaying:
                                        return i.adResume;
                                    case Pt.b.AdSkipped:
                                        return i.adSkip;
                                    case Pt.b.AdUserClose:
                                        return i.adUserClose;
                                    case Pt.b.AdUserAcceptInvitation:
                                        return i.adUserAcceptInvitation;
                                    case Pt.b.AdUserMinimize:
                                        return i.adUserMinimize;
                                    case Pt.b.AdError:
                                        return i.adError;
                                    }
                                }(e.type, t.settings.trackers), a = Date.now() - i;
                            switch (r || e.type !== Pt.b.AdImpression || (this.t_('AdManager_AdImpressionController_tracker_impression_not_found'), Object(n.a)({
                                    sendMaxLog: !1,
                                    message: 'AdManager_AdImpressionController_tracker_impression_not_found',
                                    level: h.ProtoLoggingLevelEnum.FATAL
                                })), Hn.track(r, this.Wn.adMacroReplacer, t.settings.adManagerLineItem.protoLineItem, t.settings.callingState), e.type) {
                            case Pt.b.AdError:
                                this.Xk(t, a, e.payload.errorMessage);
                                break;
                            case Pt.b.AdSkipped:
                                this.Xk(t, a, Yn.c.AdStopped);
                                break;
                            case Pt.b.AdStopped:
                                this.Xk(t, a, Yn.c.AdStopped, null === (s = e.payload) || void 0 === s ? void 0 : s.shouldTrackPostBid);
                                break;
                            case Pt.b.AdImpression:
                                this.Jk(t, a);
                                break;
                            case Pt.b.AdVideoFirstQuartile:
                                this.Zk(t, h.ProtoQuartilesEnum.First);
                                break;
                            case Pt.b.AdVideoMidpoint:
                                this.Zk(t, h.ProtoQuartilesEnum.Second);
                                break;
                            case Pt.b.AdVideoThirdQuartile:
                                this.Zk(t, h.ProtoQuartilesEnum.Third);
                                break;
                            case Pt.b.AdVideoComplete:
                                this.Zk(t, h.ProtoQuartilesEnum.Fourth);
                            }
                        })), this.Rk.push(t.onAdViewableImpression.subscribe(t => {
                            this.Wn.trackingService.trackVideoAdImpressionViewable(t);
                        }));
                    }
                    t_(t, i) {
                        var e, s;
                        Object(n.a)({
                            message: t,
                            level: h.ProtoLoggingLevelEnum.FATAL,
                            sendMaxLog: !1,
                            exception: null === (e = i) || void 0 === e ? void 0 : e.message,
                            callStack: null === (s = i) || void 0 === s ? void 0 : s.stack
                        });
                    }
                }
                const ja = {
                    [h.ProtoAdBreakTypeEnum.PreRoll]: 'preRoll',
                    [h.ProtoAdBreakTypeEnum.MidRoll]: 'midRoll',
                    [h.ProtoAdBreakTypeEnum.PostRoll]: 'postRoll'
                };
                class ka {
                    constructor(t, i) {
                        this.i_ = t, this.Da = i;
                    }
                    replace(t, i, e) {
                        this.i_.setAdWidth(e.adMacros.adWidth), this.i_.setAdHeight(e.adMacros.adHeight), this.i_.setAdPosition(ja[e.adMacros.adPostion]), e.mediaMacros.mediaDescription && this.i_.setVideoDescription(e.mediaMacros.mediaDescription), e.mediaMacros.mediaDuration && this.i_.setVideoDuration(e.mediaMacros.mediaDuration), e.mediaMacros.mediaId && this.i_.setVideoId(e.mediaMacros.mediaId), e.mediaMacros.mediaTitle && this.i_.setVideoTitle(e.mediaMacros.mediaTitle), e.mediaMacros.mediaUrl && this.i_.setVideoUrl(e.mediaMacros.mediaUrl);
                        const s = this.Da.isConsent(i);
                        this.i_.setGDPR(this.Da.isConsentRequired() ? 1 : 0), this.i_.setConsent(s ? 1 : 0), this.i_.setGDPRConsent(this.Da.getConsentPayload());
                        const n = this.Da.getTrackableUser(), r = this.Da.isConsentConnatix() && s ? n : void 0;
                        return this.i_.setUUID(r), this.i_.setupMacros(t);
                    }
                }
                const _a = 30 * qt.f;
                class Aa {
                    constructor() {
                        this.e_ = null;
                    }
                    onAdRemoved() {
                        this.e_ = null, this.s_();
                    }
                    pauseViaUserInteraction() {
                        this.e_ && (this.e_.pausedWithUserInteraction = !0);
                    }
                    resumeViaUserInteraction() {
                        this.e_ && (this.e_.pausedWithUserInteraction = !1, this.s_());
                    }
                    n_(t) {
                        this.e_ = {
                            currentAd: t,
                            isPaused: !1,
                            pausedWithUserInteraction: !1,
                            remainingTimeForAdToBePaused: _a,
                            lastAdPausedStartedTimestamp: void 0
                        }, this.s_();
                    }
                    checkPauseAd(t, i) {
                        t && (null === this.e_ && this.n_(t), i ? this.r_(t) : this.h_(t));
                    }
                    h_(t) {
                        this.a_(t) && (this.e_.isPaused = !0, this.e_.lastAdPausedStartedTimestamp = Date.now(), t.pauseAd(), this.s_(), this.o_ = setTimeout(() => {
                            t.stopAd('pauseOutOfView'), this.e_ = null, this.s_();
                        }, this.e_.remainingTimeForAdToBePaused));
                    }
                    r_(t) {
                        t.settings.adManagerLineItem.protoLineItem.pauseAdOutOfView && t.impressionStarted && this.e_.isPaused && !this.e_.pausedWithUserInteraction && (this.s_(), this.e_.isPaused = !1, this.e_.remainingTimeForAdToBePaused = this.e_.remainingTimeForAdToBePaused - (Date.now() - this.e_.lastAdPausedStartedTimestamp), t.resumeAd());
                    }
                    s_() {
                        clearTimeout(this.o_), this.o_ = void 0;
                    }
                    a_(t) {
                        return t.settings.adManagerLineItem.protoLineItem.pauseAdOutOfView && t.impressionStarted && !this.e_.isPaused && !this.e_.pausedWithUserInteraction;
                    }
                }
                function Ia(t, i) {
                    return function (e) {
                        if ('function' != typeof t)
                            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
                        return e.lift(new Ca(t, i));
                    };
                }
                var Ca = function () {
                        function t(t, i) {
                            this.project = t, this.thisArg = i;
                        }
                        return t.prototype.call = function (t, i) {
                            return i.subscribe(new Ta(t, this.project, this.thisArg));
                        }, t;
                    }(), Ta = function (t) {
                        function i(i, e, s) {
                            var n = t.call(this, i) || this;
                            return n.project = e, n.count = 0, n.thisArg = s || n, n;
                        }
                        return Wt(i, t), i.prototype._l = function (t) {
                            var i;
                            try {
                                i = this.project.call(this.thisArg, t, this.count++);
                            } catch (t) {
                                return void this.destination.error(t);
                            }
                            this.destination.next(i);
                        }, i;
                    }(ni), Pa = function (t) {
                        return function (i) {
                            for (var e = 0, s = t.length; e < s && !i.closed; e++)
                                i.next(t[e]);
                            i.complete();
                        };
                    };
                function Ma() {
                    return 'function' == typeof Symbol && Symbol.iterator ? Symbol.iterator : '@@iterator';
                }
                var Ea = Ma(), La = function (t) {
                        return t && 'number' == typeof t.length && 'function' != typeof t;
                    };
                function Ra(t) {
                    return !!t && 'function' != typeof t.subscribe && 'function' == typeof t.then;
                }
                var Ba = function (t) {
                    if (t && 'function' == typeof t[hi])
                        return s = t, function (t) {
                            var i = s[hi]();
                            if ('function' != typeof i.subscribe)
                                throw new TypeError('Provided object does not correctly implement Symbol.observable');
                            return i.subscribe(t);
                        };
                    if (La(t))
                        return Pa(t);
                    if (Ra(t))
                        return e = t, function (t) {
                            return e.then(function (i) {
                                t.closed || (t.next(i), t.complete());
                            }, function (i) {
                                return t.error(i);
                            }).then(null, Xt), t;
                        };
                    if (t && 'function' == typeof t[Ea])
                        return i = t, function (t) {
                            for (var e = i[Ea]();;) {
                                var s = void 0;
                                try {
                                    s = e.next();
                                } catch (i) {
                                    return t.error(i), t;
                                }
                                if (s.done) {
                                    t.complete();
                                    break;
                                }
                                if (t.next(s.value), t.closed)
                                    break;
                            }
                            return 'function' == typeof e.return && t.add(function () {
                                e.return && e.return();
                            }), t;
                        };
                    var i, e, s, n = Zt(t) ? 'an invalid object' : '\'' + t + '\'';
                    throw new TypeError('You provided ' + n + ' where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.');
                };
                function Da(t, i) {
                    return new ci(function (e) {
                        var s = new ii(), n = 0;
                        return s.add(i.schedule(function () {
                            n !== t.length ? (e.next(t[n++]), e.closed || s.add(this.schedule())) : e.complete();
                        })), s;
                    });
                }
                function Fa(t, i) {
                    if (null != t) {
                        if (function (t) {
                                return t && 'function' == typeof t[hi];
                            }(t))
                            return function (t, i) {
                                return new ci(function (e) {
                                    var s = new ii();
                                    return s.add(i.schedule(function () {
                                        var n = t[hi]();
                                        s.add(n.subscribe({
                                            next: function (t) {
                                                s.add(i.schedule(function () {
                                                    return e.next(t);
                                                }));
                                            },
                                            error: function (t) {
                                                s.add(i.schedule(function () {
                                                    return e.error(t);
                                                }));
                                            },
                                            complete: function () {
                                                s.add(i.schedule(function () {
                                                    return e.complete();
                                                }));
                                            }
                                        }));
                                    })), s;
                                });
                            }(t, i);
                        if (Ra(t))
                            return function (t, i) {
                                return new ci(function (e) {
                                    var s = new ii();
                                    return s.add(i.schedule(function () {
                                        return t.then(function (t) {
                                            s.add(i.schedule(function () {
                                                e.next(t), s.add(i.schedule(function () {
                                                    return e.complete();
                                                }));
                                            }));
                                        }, function (t) {
                                            s.add(i.schedule(function () {
                                                return e.error(t);
                                            }));
                                        });
                                    })), s;
                                });
                            }(t, i);
                        if (La(t))
                            return Da(t, i);
                        if (function (t) {
                                return t && 'function' == typeof t[Ea];
                            }(t) || 'string' == typeof t)
                            return function (t, i) {
                                if (!t)
                                    throw new Error('Iterable cannot be null');
                                return new ci(function (e) {
                                    var s, n = new ii();
                                    return n.add(function () {
                                        s && 'function' == typeof s.return && s.return();
                                    }), n.add(i.schedule(function () {
                                        s = t[Ea](), n.add(i.schedule(function () {
                                            if (!e.closed) {
                                                var t, i;
                                                try {
                                                    var n = s.next();
                                                    t = n.value, i = n.done;
                                                } catch (t) {
                                                    return void e.error(t);
                                                }
                                                i ? e.complete() : (e.next(t), this.schedule());
                                            }
                                        }));
                                    })), n;
                                });
                            }(t, i);
                    }
                    throw new TypeError((null !== t && typeof t || t) + ' is not observable');
                }
                var Va = function (t) {
                        function i(i) {
                            var e = t.call(this) || this;
                            return e.parent = i, e;
                        }
                        return Wt(i, t), i.prototype._l = function (t) {
                            this.parent.notifyNext(t);
                        }, i.prototype.Al = function (t) {
                            this.parent.notifyError(t), this.unsubscribe();
                        }, i.prototype.Il = function () {
                            this.parent.notifyComplete(), this.unsubscribe();
                        }, i;
                    }(ni), Ua = function (t) {
                        function i() {
                            return null !== t && t.apply(this, arguments) || this;
                        }
                        return Wt(i, t), i.prototype.notifyNext = function (t) {
                            this.destination.next(t);
                        }, i.prototype.notifyError = function (t) {
                            this.destination.error(t);
                        }, i.prototype.notifyComplete = function () {
                            this.destination.complete();
                        }, i;
                    }(ni);
                function $a(t, i, e) {
                    return void 0 === e && (e = Number.POSITIVE_INFINITY), 'function' == typeof i ? function (s) {
                        return s.pipe($a(function (e, s) {
                            return (n = t(e, s), r ? Fa(n, r) : n instanceof ci ? n : new ci(Ba(n))).pipe(Ia(function (t, n) {
                                return i(e, t, s, n);
                            }));
                            var n, r;
                        }, e));
                    } : ('number' == typeof i && (e = i), function (i) {
                        return i.lift(new Na(t, e));
                    });
                }
                var Na = function () {
                        function t(t, i) {
                            void 0 === i && (i = Number.POSITIVE_INFINITY), this.project = t, this.concurrent = i;
                        }
                        return t.prototype.call = function (t, i) {
                            return i.subscribe(new Ha(t, this.project, this.concurrent));
                        }, t;
                    }(), Ha = function (t) {
                        function i(i, e, s) {
                            void 0 === s && (s = Number.POSITIVE_INFINITY);
                            var n = t.call(this, i) || this;
                            return n.project = e, n.concurrent = s, n.hasCompleted = !1, n.buffer = [], n.active = 0, n.index = 0, n;
                        }
                        return Wt(i, t), i.prototype._l = function (t) {
                            this.active < this.concurrent ? this.c_(t) : this.buffer.push(t);
                        }, i.prototype.c_ = function (t) {
                            var i, e = this.index++;
                            try {
                                i = this.project(t, e);
                            } catch (t) {
                                return void this.destination.error(t);
                            }
                            this.active++, this.u_(i);
                        }, i.prototype.u_ = function (t) {
                            var i = new Va(this), e = this.destination;
                            e.add(i);
                            var s = function (t, i) {
                                if (!i.closed)
                                    return t instanceof ci ? t.subscribe(i) : Ba(t)(i);
                            }(t, i);
                            s !== i && e.add(s);
                        }, i.prototype.Il = function () {
                            this.hasCompleted = !0, 0 === this.active && 0 === this.buffer.length && this.destination.complete(), this.unsubscribe();
                        }, i.prototype.notifyNext = function (t) {
                            this.destination.next(t);
                        }, i.prototype.notifyComplete = function () {
                            var t = this.buffer;
                            this.active--, t.length > 0 ? this._l(t.shift()) : 0 === this.active && this.hasCompleted && this.destination.complete();
                        }, i;
                    }(Ua);
                function qa() {
                    for (var t = [], i = 0; i < arguments.length; i++)
                        t[i] = arguments[i];
                    var e, s = Number.POSITIVE_INFINITY, n = null, r = t[t.length - 1];
                    return (e = r) && 'function' == typeof e.schedule ? (n = t.pop(), t.length > 1 && 'number' == typeof t[t.length - 1] && (s = t.pop())) : 'number' == typeof r && (s = t.pop()), null === n && 1 === t.length && t[0] instanceof ci ? t[0] : function (t) {
                        return void 0 === t && (t = Number.POSITIVE_INFINITY), $a(ai, t);
                    }(s)(function (t, i) {
                        return i ? Da(t, i) : new ci(Pa(t));
                    }(t, n));
                }
                function za(t, i) {
                    return function (e) {
                        return e.lift(new Wa(t, i));
                    };
                }
                var Wa = function () {
                        function t(t, i) {
                            this.predicate = t, this.thisArg = i;
                        }
                        return t.prototype.call = function (t, i) {
                            return i.subscribe(new Ga(t, this.predicate, this.thisArg));
                        }, t;
                    }(), Ga = function (t) {
                        function i(i, e, s) {
                            var n = t.call(this, i) || this;
                            return n.predicate = e, n.thisArg = s, n.count = 0, n;
                        }
                        return Wt(i, t), i.prototype._l = function (t) {
                            var i;
                            try {
                                i = this.predicate.call(this.thisArg, t, this.count++);
                            } catch (t) {
                                return void this.destination.error(t);
                            }
                            i && this.destination.next(t);
                        }, i;
                    }(ni);
                function Ja(t, i) {
                    return void 0 === i && (i = !1), function (e) {
                        return e.lift(new Qa(t, i));
                    };
                }
                var Qa = function () {
                        function t(t, i) {
                            this.predicate = t, this.inclusive = i;
                        }
                        return t.prototype.call = function (t, i) {
                            return i.subscribe(new Xa(t, this.predicate, this.inclusive));
                        }, t;
                    }(), Xa = function (t) {
                        function i(i, e, s) {
                            var n = t.call(this, i) || this;
                            return n.predicate = e, n.inclusive = s, n.index = 0, n;
                        }
                        return Wt(i, t), i.prototype._l = function (t) {
                            var i, e = this.destination;
                            try {
                                i = this.predicate(t, this.index++);
                            } catch (t) {
                                return void e.error(t);
                            }
                            this.nextOrComplete(t, i);
                        }, i.prototype.nextOrComplete = function (t, i) {
                            var e = this.destination;
                            Boolean(i) ? e.next(t) : (this.inclusive && e.next(t), e.complete());
                        }, i;
                    }(ni);
                function Ya() {
                }
                function Ka(t, i, e) {
                    return function (s) {
                        return s.lift(new Za(t, i, e));
                    };
                }
                var Za = function () {
                        function t(t, i, e) {
                            this.nextOrObserver = t, this.error = i, this.complete = e;
                        }
                        return t.prototype.call = function (t, i) {
                            return i.subscribe(new to(t, this.nextOrObserver, this.error, this.complete));
                        }, t;
                    }(), to = function (t) {
                        function i(i, e, s, n) {
                            var r = t.call(this, i) || this;
                            return r.l_ = Ya, r.d_ = Ya, r.f_ = Ya, r.d_ = s || Ya, r.f_ = n || Ya, Gt(e) ? (r.Pl = r, r.l_ = e) : e && (r.Pl = e, r.l_ = e.next || Ya, r.d_ = e.error || Ya, r.f_ = e.complete || Ya), r;
                        }
                        return Wt(i, t), i.prototype._l = function (t) {
                            try {
                                this.l_.call(this.Pl, t);
                            } catch (t) {
                                return void this.destination.error(t);
                            }
                            this.destination.next(t);
                        }, i.prototype.Al = function (t) {
                            try {
                                this.d_.call(this.Pl, t);
                            } catch (t) {
                                return void this.destination.error(t);
                            }
                            this.destination.error(t);
                        }, i.prototype.Il = function () {
                            try {
                                this.f_.call(this.Pl);
                            } catch (t) {
                                return void this.destination.error(t);
                            }
                            return this.destination.complete();
                        }, i;
                    }(ni);
                class io {
                    constructor(t) {
                        this.bid = t, this.cancelled = !1, this.p_ = new ji(), this.b_ = !1, this.Gy = this.bid.onVpaidEvent.pipe(za(t => {
                            return t.type === Pt.b.AdLoaded;
                        }), Ja(() => {
                            return !this.b_;
                        }), Ka(() => {
                            this.b_ = !0;
                        })), this.Jy = this.bid.onVpaidEvent.pipe(za(t => {
                            return t.type === Pt.b.AdError;
                        }), Ia(t => {
                            return t.payload.errorMessage;
                        }), Ja(() => {
                            return !this.b_;
                        }), Ka(() => {
                            this.b_ = !0;
                        }));
                    }
                    get onSuccess() {
                        return this.Gy;
                    }
                    get onFailure() {
                        return qa(this.p_, this.Jy);
                    }
                    loadBid(t, i, e, s, n) {
                        this.bid.initAd(t, i, e, s, void 0, void 0, n);
                    }
                }
                const eo = 1;
                class so {
                    constructor(t) {
                        this.Wn = t, this.v_ = new Set(), this.m_ = new Map(), this.jl = [], this.vl = !1, this.g_ = () => {
                            if (this.y_())
                                return;
                            const t = this.w_();
                            if (!t.selectedBid)
                                return;
                            const i = Date.now();
                            return this.Wn.auctionInfoLogging.winBid(t.selectedBid), this.O_(t, this.x_.vastViewMode).catch(e => {
                                const {selectedBid: s} = t, n = this.Wn.auctionInfoLogging.onPostBid(t.selectedBid);
                                throw this.S_(s, i, e, n), this.j_(), t;
                            }).then(() => {
                                this.j_();
                            }).catch(i => {
                                if (i === t)
                                    return;
                                let e = '';
                                try {
                                    e = JSON.stringify(i);
                                } catch (t) {
                                }
                                Object(n.a)({
                                    message: 'AdManager_winBid_failed',
                                    level: h.ProtoLoggingLevelEnum.FATAL,
                                    exception: i,
                                    callStack: e,
                                    throttle: 3,
                                    sendMaxLog: !1
                                });
                            });
                        }, this.gj = new Jh(this.g_, eo), this.jl.push(this.Wn.adBidPool.onBid.subscribe(t => {
                            const i = this.w_();
                            this.Wn.auctionInfoLogging.newBidAdded(t, i), this.j_();
                        }), this.Wn.adBidPool.onBidStarted.subscribe(() => {
                            this.j_();
                        }), this.Wn.adBidPool.onBidReadyConsumed.subscribe(() => {
                            this.j_();
                        }), this.Wn.impressionCapsTimer.onTimer().subscribe(() => {
                            this.j_();
                        }));
                    }
                    isLoadingBids() {
                        return this.v_.size > 0;
                    }
                    win(t) {
                        this.x_ = t, this.gj.setNumberOfThreads(t.maxParallelWins), this.vl = !0, this.j_();
                    }
                    stop() {
                        this.vl = !1, this.gj.stop();
                    }
                    destroy() {
                        this.stop(), Ai(this.jl), this.m_.forEach(t => {
                            return t();
                        });
                    }
                    j_() {
                        this.vl && this.gj.start();
                    }
                    w_() {
                        const t = this.k_(), i = this.__();
                        return this.A_(t, i);
                    }
                    A_(t, i) {
                        const e = Object.assign({}, t);
                        return t.selectedBid && i.selectedBid ? (this.I_(i.selectedBid, t.selectedBid) && (e.selectedBid = void 0, e.unselectedBidList.push({
                            bid: t.selectedBid,
                            lossReason: h.ProtoAuctionLossReasonEnum.CompetitorPriority
                        })), e) : e;
                    }
                    y_() {
                        if (-1 === this.Wn.maxNumberOfWins)
                            return !1;
                        return this.Wn.adBidPool.bidsReady.length + this.v_.size + (this.Wn.adBidPool.bidStarted ? 1 : 0) >= this.Wn.maxNumberOfWins;
                    }
                    k_() {
                        return this.C_(this.Wn.adBidPool.bids);
                    }
                    __() {
                        const t = [
                            ...Object(l.d)(this.v_).map(t => {
                                return t.bid;
                            }),
                            ...this.Wn.adBidPool.bidsReady
                        ];
                        return this.C_(t);
                    }
                    C_(t) {
                        return this.Wn.adWinnerYo.selectBestBid(t, this.x_.stateSettings, this.Wn.impressionCapsService, this.Wn.platformCappedLineItemRepo);
                    }
                    I_(t, i) {
                        return !(this.Wn.adWinnerYo.getWinningYoScore(t.settings.id) <= this.Wn.adWinnerYo.getWinningYoScore(i.settings.id));
                    }
                    O_(t, i) {
                        return new Promise((e, s) => {
                            const {
                                    selectedBid: n,
                                    state: r
                                } = t, h = new io(n);
                            this.v_.add(h), this.Wn.adBidPool.moveBidToLoading(n), h.onSuccess.subscribe(() => {
                                this.v_.delete(h), this.Wn.adBidPool.moveBidToReady(n), e();
                            }), h.onFailure.subscribe(i => {
                                this.v_.delete(h), this.Wn.adBidPool.consumeBidLoading(n), t.selectedBid.settings.adManagerLineItem.bids.delete(n), s(i);
                            });
                            const {
                                width: a,
                                height: o
                            } = r.adContainerState.get(n.settings.adManagerLineItem.protoLineItem.adType);
                            h.loadBid(a, o, i, this.Wn.desiredBitRateForWins, r.soundValue), Hn.track(n.settings.trackers.adWin, this.Wn.adMacroReplacer, n.settings.adManagerLineItem.protoLineItem, r), ia.trackWin(this.Wn.playerId, n);
                        });
                    }
                    S_(t, i, e, s) {
                        this.T_(t, Date.now() - i, e, s), this.Wn.adWinnerYo.registerPostBid(t.settings.id, t.settings.adManagerLineItem.protoLineItem.creativeType, e);
                    }
                    T_(t, i, e, s) {
                        var n, r, h, a, o;
                        const c = (null === (r = null === (n = this.x_.stateSettings) || void 0 === n ? void 0 : n.currentState) || void 0 === r ? void 0 : r.adBreakState) || (null === (a = null === (h = this.x_.stateSettings) || void 0 === h ? void 0 : h.predictedState) || void 0 === a ? void 0 : a.adBreakState);
                        Hn.track(t.settings.trackers.adError, this.Wn.adMacroReplacer, t.settings.adManagerLineItem.protoLineItem, t.settings.callingState), ia.trackPostBid(this.Wn.playerId);
                        const u = {
                            adPodSlotPosition: c.adPodSlotIndex,
                            adsourceType: t.adSourceType,
                            advertiserLineItemId: t.settings.adManagerLineItem.protoLineItem.advertiserLineItemId,
                            publisherLineItemId: t.settings.adManagerLineItem.protoLineItem.publisherLineItemId,
                            error: e,
                            loaded: !1,
                            prebidJsBidderName: t.settings.requestMetadata.data.prebidJsBidderName,
                            vastMediaType: t.adMediaType,
                            syncedUser: t.settings.requestMetadata.data.syncedUser,
                            rtbSeatId: t.settings.requestMetadata.data.rtbSeatId,
                            rtbAdomain: t.settings.requestMetadata.data.rtbAdomain,
                            creativeId: t.creativeId,
                            timeSpent: i,
                            dspId: t.settings.requestMetadata.data.dspId,
                            cnxBidId: t.settings.requestMetadata.data.cnxBidId,
                            winToAdLoadedTime: null === (o = t.settings.bidLifecycle) || void 0 === o ? void 0 : o.winToAdLoadedTime
                        };
                        Object(rt.a)(s) && (u.auctionInformation = s, u.auctionPostbidReason = this.Wn.auctionInfoLogging.getGeneralPostbidReason(e)), this.Wn.trackingService.addPostBid(u);
                    }
                }
                var no;
                !function (t) {
                    function i(t, i) {
                        if (Object(l.h)(i.items) && Array.isArray(t)) {
                            const e = Object(l.b)(t, i.items).length;
                            return i.choiceCriteria === h.ProtoChoiceCriteriaEnum.Only ? e > 0 : 0 === e;
                        }
                        const e = Object(l.g)(t, i.items);
                        return i.choiceCriteria === h.ProtoChoiceCriteriaEnum.Only ? e : !e;
                    }
                    function e(t, i) {
                        return t.some(t => {
                            return function (t, i) {
                                for (let e = 0; e < t.filters.length; e++) {
                                    const s = t.filters[e], n = i.filter(t => {
                                            return s.items.includes(t);
                                        }).length;
                                    switch (s.type) {
                                    case h.ProtoLineItemContextualTargetingEnum.IncludeAny:
                                        if (0 === n)
                                            return !1;
                                        break;
                                    case h.ProtoLineItemContextualTargetingEnum.IncludeAll:
                                        if (n !== s.items.length)
                                            return !1;
                                        break;
                                    case h.ProtoLineItemContextualTargetingEnum.ExcludeAny:
                                        if (n > 0)
                                            return !1;
                                        break;
                                    case h.ProtoLineItemContextualTargetingEnum.ExcludeAll:
                                        if (n === s.items.length)
                                            return !1;
                                    }
                                }
                                return !0;
                            }(t, i);
                        });
                    }
                    t.isAllowedBySound = function (t, i) {
                        return !t.protoLineItem.sound || i.sound;
                    }, t.isAllowedByViewability = function (t, i) {
                        const e = i.adContainerState.get(t.protoLineItem.adType).viewability;
                        return !t.protoLineItem.viewability || e;
                    }, t.isAllowedByAdBreakType = function (t, i) {
                        return !t.protoLineItem.adBreakSettings || t.protoLineItem.adBreakSettings.adBreakTargeting.some(t => {
                            if (t.adRollType === i.adBreakState.adBreakType)
                                return function (t, i) {
                                    switch (t) {
                                    case h.ProtoLineItemAdBreakTypeEnum.All:
                                        return !0;
                                    case h.ProtoLineItemAdBreakTypeEnum.AdPod:
                                        return i;
                                    case h.ProtoLineItemAdBreakTypeEnum.SingleAd:
                                        return !i;
                                    }
                                }(t.adBreakTypeEnum, i.adBreakState.isAdPodBreak);
                        });
                    }, t.isAllowedByMediaTargeting = function (t, e) {
                        return !(t.protoLineItem.mediaIdTargeting && !i(e.media.mediaId, t.protoLineItem.mediaIdTargeting) || t.protoLineItem.mediaKeywordsTargeting && !i(e.media.mediaKeywords, t.protoLineItem.mediaKeywordsTargeting) || t.protoLineItem.mediaLanguageTargeting && !i(e.media.mediaLanguage, t.protoLineItem.mediaLanguageTargeting));
                    }, t.isAllowedByContextualTargeting = function (t, i) {
                        const {
                                advertiserContextualTargeting: s,
                                publisherContextualTargeting: n
                            } = t.protoLineItem, r = i.media.videoIndexes || [];
                        return !(Object(l.h)(s) && !e(s, r) || Object(l.h)(n) && !e(n, r));
                    }, t.isAllowedByPlayerSizeTargeting = function (t, i) {
                        const {playerSizeTargetings: e} = t.protoLineItem, {width: s} = i.adContainerState.get(t.protoLineItem.adType);
                        return !Object(rt.f)(e) || !Object(rt.d)(s) || (e.sizeChoiceCriteria === h.ProtoSizeChoiceCriteriaEnum.GreaterThan ? !Object(rt.d)(e.minWidth) || s >= e.minWidth : e.sizeChoiceCriteria === h.ProtoSizeChoiceCriteriaEnum.SmallerThan ? !Object(rt.d)(e.maxWidth) || s <= e.maxWidth : e.sizeChoiceCriteria !== h.ProtoSizeChoiceCriteriaEnum.Between || !Object(rt.d)(e.maxWidth) || !Object(rt.d)(e.minWidth) || s >= e.minWidth && s <= e.maxWidth);
                    }, t.isAllowedByPodTargeting = function (t, i) {
                        var e;
                        const s = null === (e = t.protoLineItem.adBreakSettings) || void 0 === e ? void 0 : e.adPodTargeting;
                        if (!s)
                            return !0;
                        if (!i.adBreakState.isAdPodBreak)
                            return !0;
                        const n = i.adBreakState.adPodSlotIndex;
                        let r = !0;
                        switch (s.adSlotTargetingType) {
                        case h.ProtoLineItemAdSlotTargetingTypeEnum.Interval:
                            (n < s.adSlotPositions[0] || n > s.adSlotPositions[1]) && (r = !1);
                            break;
                        case h.ProtoLineItemAdSlotTargetingTypeEnum.SpecificSlots:
                            -1 === s.adSlotPositions.indexOf(n) && (r = !1);
                        }
                        return s.targetingType === h.ProtoLineItemTargetingTypeEnum.Except && (r = !r), r;
                    }, t.isAllowedRegardingDuration = function (t, i) {
                        return !t || 0 === i || t <= i;
                    }, t.isAllowedRegardingSkippability = function (t, i, e) {
                        switch (e.adSkippability) {
                        case h.ProtoPlayerAdSkippability.IfLongerThan:
                            if (i === h.ProtoAdSkipMode.Never && t > e.adsMustBeSkippableIfLongerThan || i === h.ProtoAdSkipMode.IfLongerThan31Sec && t < Ht.d && t > e.adsMustBeSkippableIfLongerThan)
                                return !1;
                            break;
                        case h.ProtoPlayerAdSkippability.Always:
                            if (i === h.ProtoAdSkipMode.IfLongerThan31Sec && t && t < Ht.d)
                                return !1;
                        }
                        return !0;
                    };
                }(no || (no = {}));
                class ro {
                    constructor(t, i) {
                        this.P_ = t, this.M_ = i;
                    }
                    getCallingYoScore(t) {
                        return this.P_.getCallingYoScore(t);
                    }
                    getWinningYoScore(t) {
                        return this.P_.getWinningYoScore(t);
                    }
                    getImpressionYoScore(t) {
                        return this.P_.getImpressionYoScore(t);
                    }
                    registerBiddingInformation(t) {
                        this.P_.registerBiddingInformation(t);
                    }
                    registerPreBid(t) {
                        this.P_.registerPreBid(t);
                    }
                    registerImpression(t, i) {
                        this.P_.registerImpression(t, i);
                    }
                    registerPostBid(t, i, e) {
                        this.P_.registerPostBid(t, i, e);
                    }
                    E_(t, i) {
                        return no.isAllowedByViewability(t, i) && no.isAllowedBySound(t, i) && no.isAllowedByAdBreakType(t, i) && no.isAllowedByMediaTargeting(t, i) && no.isAllowedByPodTargeting(t, i) && no.isAllowedByContextualTargeting(t, i) && no.isAllowedByPlayerSizeTargeting(t, i);
                    }
                    L_(t, i) {
                        const e = t.getAdDuration(), s = t.settings.adManagerLineItem.protoLineItem.skipMode, n = i.adBreakState.sessionMaxAdDuration;
                        return no.isAllowedRegardingDuration(e, n) && no.isAllowedRegardingSkippability(e, s, this.M_);
                    }
                    R_(t, i) {
                        const e = t.getAdDuration(), s = i.adBreakState.remainingAdDuration;
                        return no.isAllowedRegardingDuration(e, s);
                    }
                    B_(t, i, e, s) {
                        return !s.isLineItemPlatformCapped(t.settings.adManagerLineItem.protoLineItem) && e.canCall(t.settings.adManagerLineItem, i.adOpportunity.id) && this.E_(t.settings.adManagerLineItem, i) && this.L_(t, i) && this.R_(t, i);
                    }
                }
                class ho extends ro {
                    getBestCallable(t, i) {
                        return this.D_(t, i.currentState || i.predictedState);
                    }
                    isBidTargetingAllowed(t, i, e, s) {
                        return this.B_(t, i, e, s);
                    }
                    isBidTargetingAllowedEverInSession(t, i) {
                        return this.L_(t, i);
                    }
                    D_(t, i) {
                        if (!i)
                            return;
                        const e = this.F_(t, i), s = this.V_(e);
                        return s ? {
                            state: i,
                            lineItemList: this.U_(s, e)
                        } : void 0;
                    }
                    V_(t) {
                        let i = t;
                        return t.some(t => {
                            return uh(t.protoLineItem.creativeType);
                        }) && (i = i.filter(t => {
                            return uh(t.protoLineItem.creativeType);
                        })), this.N_(i)[0];
                    }
                    N_(t = (() => {
                        return [];
                    })()) {
                        return t.sort((t, i) => {
                            return this.getCallingYoScore(i.protoLineItem.advertiserLineItemId) - this.getCallingYoScore(t.protoLineItem.advertiserLineItemId);
                        });
                    }
                    F_(t, i) {
                        return t.filter(t => {
                            return this.E_(t, i);
                        });
                    }
                    U_(t, i) {
                        const {creativeType: e} = t.protoLineItem;
                        return uh(e) ? this.N_(i.filter(t => {
                            return e === t.protoLineItem.creativeType;
                        })) : [t];
                    }
                }
                class ao extends ro {
                    getBestBid(t, i) {
                        return this.H_(t, i);
                    }
                    getBetterBid(t, i) {
                        return this.getImpressionYoScore(t.settings.id) > this.getImpressionYoScore(i.settings.id) ? t : i;
                    }
                    H_(t, i) {
                        return [...t].sort((t, i) => {
                            return this.getImpressionYoScore(i.settings.id) - this.getImpressionYoScore(t.settings.id);
                        })[0];
                    }
                }
                class oo extends ro {
                    constructor() {
                        super(...arguments), this.q_ = (t, i, e, s) => {
                            const n = [], r = [];
                            for (const h of t) {
                                this.B_(h, i.currentState || i.predictedState, e, s) ? n.push(h) : r.push(h);
                            }
                            return {
                                allowedBidList: n,
                                notAllowedBidList: r
                            };
                        };
                    }
                    selectBestBid(t, i, e, s) {
                        const n = this.q_(t, i, e, s), {
                                allowedBidList: r,
                                notAllowedBidList: a
                            } = n, o = i.currentState || i.predictedState, c = this.z_(r), u = a.map(t => {
                                return {
                                    bid: t,
                                    lossReason: this.W_(t, o)
                                };
                            }), l = r.filter(t => {
                                return t !== c;
                            }).map(t => {
                                return {
                                    bid: t,
                                    lossReason: h.ProtoAuctionLossReasonEnum.CompetitorPriority
                                };
                            });
                        return {
                            state: o,
                            selectedBid: c,
                            unselectedBidList: [
                                ...u,
                                ...l
                            ]
                        };
                    }
                    isBetterBid(t, i) {
                        return this.getWinningYoScore(t.settings.id) > this.getWinningYoScore(i.settings.id);
                    }
                    z_(t) {
                        if (Object(l.h)(t))
                            return [...t].sort((t, i) => {
                                return this.getWinningYoScore(i.settings.id) - this.getWinningYoScore(t.settings.id);
                            })[0];
                    }
                    W_(t, i) {
                        return this.R_(t, i) ? h.ProtoAuctionLossReasonEnum.AdOpportunityEnd : h.ProtoAuctionLossReasonEnum.TargetingMismatch;
                    }
                }
                class co {
                    constructor(t) {
                        this.Wn = t, this.G_ = new ji(), this.J_ = !1, this.Q_ = !1, this.X_ = null, this.Y_ = !1, this.K_ = (t, i) => {
                            return this.Wn.yoScoreManager.getCallingYoScore(i.protoLineItem.advertiserLineItemId) - this.Wn.yoScoreManager.getCallingYoScore(t.protoLineItem.advertiserLineItemId);
                        }, this.J_ = t.locked, t.adBidPool.onBid.subscribe(() => {
                            this.J_ || this.Z_();
                        });
                    }
                    get onAuctionEnd() {
                        return this.G_.asObservable();
                    }
                    startAuction(t) {
                        this.Q_ = !1, 0 !== t || this.J_ || null !== this.X_ ? this.Z_() || (this.Y_ = !1, this.tA(), this.X_ = setTimeout(() => {
                            this.Y_ = !0, this.J_ || this.G_.next();
                        }, t)) : this.G_.next();
                    }
                    lock() {
                        this.J_ = !0;
                    }
                    unlock() {
                        this.J_ = !1, this.Q_ || (this.Y_ ? this.G_.next() : this.Z_());
                    }
                    cancel() {
                        this.Q_ = !0, this.tA();
                    }
                    tA() {
                        clearTimeout(this.X_), this.X_ = null;
                    }
                    Z_() {
                        var t;
                        if (this.Q_)
                            return !1;
                        this.Wn.adBidPool.bids.sort((t, i) => {
                            return this.Wn.yoScoreManager.getWinningYoScore(i.settings.id) - this.Wn.yoScoreManager.getWinningYoScore(t.settings.id);
                        });
                        const i = this.Wn.adBidPool.bids[0];
                        if (!i)
                            return !1;
                        this.Wn.adBidPool.callingLineItems.sort(this.K_);
                        const e = this.Wn.adBidPool.callingLineItems[0], s = this.Wn.yoScoreManager.getWinningYoScore(i.settings.id), n = this.Wn.yoScoreManager.getCallingYoScore(null === (t = e) || void 0 === t ? void 0 : t.protoLineItem.advertiserLineItemId);
                        return (!e || s >= n) && (this.G_.next(), this.tA(), !0);
                    }
                }
                class uo {
                    constructor(t) {
                        this.protoLineItem = t, this.allowedSlots = [], this.bids = new Set(), this.callers = new Set(), this.aggregators = new Set();
                    }
                }
                const lo = 'cnx-ad-bid-slot', fo = 'cnx-ad-slot', po = 'cnx-ad-video-slot';
                class bo {
                    constructor(t, i) {
                        this.parentContainer = t, this.rc = i, this.isImaSlot = !1, this.slotsContainer = this.rc.createElementByString(`<div class= "${ lo }"></div>`), this.adSlot = this.rc.createElementByString(`<div class="${ fo }"></div>`), this.videoSlot = this.rc.createElementByString(`<video class="${ fo } ${ po }"></video>`), this.videoSlot.setAttribute('playsinline', ''), this.videoSlot.setAttribute('webkit-playsinline', ''), this.slotsContainer.appendChild(this.videoSlot), this.slotsContainer.appendChild(this.adSlot), this.parentContainer.appendChild(this.slotsContainer);
                    }
                    destroy() {
                        this.parentContainer.removeChild(this.slotsContainer);
                    }
                    sanitize() {
                    }
                }
                class vo extends bo {
                    constructor() {
                        super(...arguments), this.isImaSlot = !0, this.iA = !1, this.eA = {
                            imaAdDisplayContainer: void 0,
                            imaAdsLoader: void 0,
                            imaSdk: void 0
                        };
                    }
                    fetchImaDependencies() {
                        return pr.fetchImaSdk(window, !0).then(t => {
                            return this.sA(t);
                        });
                    }
                    destroy() {
                        this.eA.imaAdsLoader && this.eA.imaAdsLoader.destroy(), this.eA.imaAdDisplayContainer && this.eA.imaAdDisplayContainer.destroy(), super.destroy();
                    }
                    sanitize() {
                        this.eA.imaAdsLoader.contentComplete(), super.sanitize();
                    }
                    sA(t) {
                        if (this.iA)
                            return this.eA;
                        t.settings.setDisableCustomPlaybackForIOS10Plus(!0);
                        const i = this.nA(t), e = this.rA(t, i);
                        return this.eA = {
                            imaSdk: t,
                            imaAdDisplayContainer: i,
                            imaAdsLoader: e
                        }, this.iA = !0, this.eA;
                    }
                    nA(t) {
                        const i = new t.AdDisplayContainer(this.adSlot, this.videoSlot);
                        return i.initialize(), i;
                    }
                    rA(t, i) {
                        const e = new t.AdsLoader(i);
                        return e.getSettings().setVpaidMode(t.ImaSdkSettings.VpaidMode.INSECURE), e;
                    }
                }
                const mo = 3;
                class go {
                    constructor(t) {
                        this.settings = t, this.hA = new Set(), this.aA = new Set(), this.oA = [
                            10,
                            15,
                            20
                        ], this.cA = 0, pr.preloadImaSdk(window);
                        for (let i = 1; i <= mo; i++) {
                            const i = new vo(t.slot, this.settings.globalDomUtilsService);
                            i.fetchImaDependencies(), this.hA.add(i);
                        }
                    }
                    requestAdSlot(t) {
                        const i = new bo(t, this.settings.globalDomUtilsService);
                        return this.uA(i), this.lA(), i;
                    }
                    requestAdSlotIma(t) {
                        let i = this.dA();
                        return i || (i = new vo(t, this.settings.globalDomUtilsService)), this.uA(i), this.lA(), i;
                    }
                    destroyAdSlot(t) {
                        this.aA.delete(t), t.destroy();
                    }
                    recycleAdSlot(t) {
                        this.aA.delete(t), this.fA(t) ? (t.sanitize(), this.hA.add(t)) : this.destroyAdSlot(t);
                    }
                    fA(t) {
                        return t.isImaSlot;
                    }
                    dA() {
                        let t = null;
                        return this.hA.forEach(i => {
                            this.fA(i) && null === t && (t = i);
                        }), t;
                    }
                    uA(t) {
                        this.hA.delete(t), this.aA.add(t);
                    }
                    lA() {
                        const t = this.hA.size + this.aA.size;
                        t === this.oA[this.cA] && (this.pA(this.oA[this.cA]), t === this.oA[this.oA.length - 1] && this.oA.push(this.oA[this.oA.length - 1] + 20), this.cA++);
                    }
                    pA(t) {
                        Object(n.a)({
                            message: 'AdSlotContainerRecycler_slotcount',
                            exception: `${ t }`,
                            callStack: '',
                            level: h.ProtoLoggingLevelEnum.INFO,
                            throttle: 20,
                            sendMaxLog: !0
                        });
                    }
                }
                class yo {
                    constructor(t, i) {
                        this.bA = i, this.vA = this.mA(t);
                    }
                    registerBiddingInformation(t) {
                        const i = rr(t), {
                                priority: e,
                                successRate: s,
                                lineItemId: n,
                                bidId: r
                            } = t;
                        let h = 0;
                        h = uh(t.creativeType) ? nr({
                            cpm: i,
                            priority: e,
                            successRate: s
                        }, this.bA) : this.getCallingYoScore(t.lineItemId), this.gA(n, r, h);
                    }
                    registerPreBid(t) {
                        this.yA(t);
                    }
                    registerImpression(t, i) {
                        this.yA(t), uh(i) || this.wA(t);
                    }
                    registerPostBid(t, i, e) {
                        this.yA(t), uh(i) || e === Yn.c.Cancelled || this.OA(t);
                    }
                    getCallingYoScore(t) {
                        const i = this.xA(t);
                        return i ? i.yoScore : 0;
                    }
                    getWinningYoScore(t) {
                        const i = this.SA(t);
                        return i ? i.bidMap.get(t) : (Object(n.a)({
                            message: 'YoScoreManager_getWinningYoScore_error',
                            exception: `bid was not yet registered: ${ t }`,
                            level: h.ProtoLoggingLevelEnum.WARNING
                        }), 0);
                    }
                    getImpressionYoScore(t) {
                        return this.getWinningYoScore(t);
                    }
                    OA(t) {
                        const i = this.SA(t);
                        if (!i)
                            return;
                        const e = function (t) {
                            const i = sr(t);
                            return i[1] + i[0] * Ht.g;
                        }(i.yoScore);
                        this.jA(i, e);
                    }
                    wA(t) {
                        const i = this.SA(t);
                        if (!i)
                            return;
                        const e = function (t) {
                            const i = sr(t);
                            return i[1] + i[0] * Ht.h;
                        }(i.yoScore);
                        this.jA(i, e);
                    }
                    jA(t, i) {
                        t && (t.yoScore = i);
                    }
                    gA(t, i, e) {
                        const s = this.xA(t);
                        if (!s)
                            return;
                        const n = this.kA(s);
                        !this.bA || s.bidMap.has(i) || -1 === n ? this._A(s, i) && s.bidMap.set(i, e) : s.bidMap.set(i, n);
                    }
                    kA(t) {
                        const i = [...t.bidMap.values()];
                        return Object(l.h)(i) ? i[0] : -1;
                    }
                    _A(t, i) {
                        return !this.bA || !t.bidMap.has(i);
                    }
                    mA(t) {
                        return t.map(t => {
                            const {
                                floorPrice: i,
                                lineItemPriority: e,
                                successRate: s,
                                advertiserLineItemId: n,
                                creativeType: r
                            } = t;
                            let h;
                            return {
                                lineItemId: n,
                                yoScore: h = uh(r) ? Math.random() : nr({
                                    cpm: i,
                                    priority: e,
                                    successRate: s
                                }, this.bA),
                                bidMap: new Map()
                            };
                        });
                    }
                    xA(t) {
                        return this.vA.find(i => {
                            return i.lineItemId === t;
                        });
                    }
                    SA(t) {
                        return this.vA.find(i => {
                            return i.bidMap.has(t);
                        });
                    }
                    yA(t) {
                        if (!t)
                            return;
                        const i = this.SA(t);
                        i && 0 !== i.bidMap.size && i.bidMap.delete(t);
                    }
                }
                class wo {
                    constructor(t, i) {
                        this.AA = t, this.co = i, this.IA = new Map();
                    }
                    bidIsNotWinnableEverInSession(t) {
                        if (!this.CA(t))
                            return;
                        const i = [
                                ...this.TA(),
                                this.PA(t)
                            ].sort((t, i) => {
                                return i - t;
                            }), e = this.MA(i);
                        this.EA(t.settings.requestMetadata.data.cnxBidId, e, h.ProtoAuctionLossReasonEnum.TargetingMismatch);
                    }
                    newBidAdded(t, i) {
                        this.CA(t) && (i.selectedBid ? i.selectedBid !== t ? this.LA(t, i) : this.RA(t) : this.LA(t, i));
                    }
                    winBid(t) {
                        if (!this.CA(t))
                            return;
                        const i = this.TA(), e = this.MA(i);
                        this.IA.set(t, e);
                    }
                    onPostBid(t) {
                        return this.BA(t);
                    }
                    onImpression(t) {
                        return this.BA(t);
                    }
                    CA(t) {
                        return t.settings.requestMetadata.data.logAuctionInformation;
                    }
                    RA(t) {
                        const {cnxBidId: i} = t.settings.requestMetadata.data, e = this.TA(), s = this.MA(e);
                        this.EA(i, s, h.ProtoAuctionLossReasonEnum.CompetitorPriority);
                    }
                    BA(t) {
                        const i = this.DA(t);
                        return this.FA(t), i;
                    }
                    LA(t, i) {
                        var e, s, n, r;
                        const {cnxBidId: h} = t.settings.requestMetadata.data, a = this.TA(), o = this.VA(t, i), c = this.MA(a);
                        Object(rt.a)(o) ? this.EA(h, c, o) : this.UA('AdManager_AuctionInfoLogging_lossReason_cannot_be_found', t.settings.requestMetadata.data.cnxBidId, null === (r = null === (n = null === (s = null === (e = i.selectedBid) || void 0 === e ? void 0 : e.settings) || void 0 === s ? void 0 : s.requestMetadata) || void 0 === n ? void 0 : n.data) || void 0 === r ? void 0 : r.cnxBidId);
                    }
                    DA(t) {
                        if (this.IA.has(t))
                            return this.IA.get(t);
                        this.CA(t) && this.UA('AdManager_AuctionInfoLogging_cannot_find_win_bid_snapshot', t.settings.requestMetadata.data.cnxBidId);
                    }
                    FA(t) {
                        this.IA.has(t) && this.IA.delete(t);
                    }
                    VA(t, i) {
                        var e;
                        return null === (e = i.unselectedBidList.find(i => {
                            return i.bid === t;
                        })) || void 0 === e ? void 0 : e.lossReason;
                    }
                    getGeneralPostbidReason(t) {
                        switch (t) {
                        case Yn.c.ImaScriptFailure:
                        case Yn.c.ImaObjectNotFound:
                        case Yn.c.ImaManagerInit:
                        case Yn.c.ImaInitSdkError:
                        case Yn.c.AdxOverlayGptScriptLoad:
                        case Yn.c.DisplayIntegratorIframeLoad:
                            return h.ProtoAuctionPostbidReasonEnum.SDKFailure;
                        case Yn.c.VastUnsupportedMedia:
                        case Yn.c.CnxMediaSrcNotSupported:
                            return h.ProtoAuctionPostbidReasonEnum.UnsupportedMedia;
                        case Yn.c.DomainBlocked:
                            return h.ProtoAuctionPostbidReasonEnum.TargetingMismatch;
                        case Yn.c.AdaptorInitAdError:
                        case Yn.c.AdaptorStartAdError:
                        case Yn.c.WrapperInitAdError:
                        case Yn.c.WrapperStartAdError:
                            return h.ProtoAuctionPostbidReasonEnum.TargetingMismatch;
                        default:
                            return h.ProtoAuctionPostbidReasonEnum.CreativeError;
                        }
                    }
                    TA() {
                        return this.AA.getAllBids().map(t => {
                            return this.PA(t);
                        }).sort((t, i) => {
                            return i - t;
                        });
                    }
                    PA(t) {
                        switch (t.settings.adManagerLineItem.protoLineItem.creativeType) {
                        case h.ProtoCreativeTypeEnum.Rtb:
                        case h.ProtoCreativeTypeEnum.Tam:
                        case h.ProtoCreativeTypeEnum.TamDeal:
                            return Rn(t.settings.obfuscatedPrice);
                        case h.ProtoCreativeTypeEnum.HeaderBidder:
                            return t.settings.cpm;
                        default:
                            return t.settings.adManagerLineItem.protoLineItem.floorPrice || t.settings.adManagerLineItem.protoLineItem.customCpm;
                        }
                    }
                    MA(t) {
                        const i = t[0] ? Bn(t[0]) : void 0, e = t[1] ? Bn(t[1]) : void 0;
                        return i || this.UA('AdManager_AuctionInfoLogging_highestBidPrice_missing', `${ i }`), {
                            bidDensity: t.length,
                            highestObfuscatedBidPrice: i,
                            secondHighestObfuscatedBidPrice: e
                        };
                    }
                    EA(t, i, e) {
                        this.co.trackAuctionInfoForBid({
                            cnxBidId: t,
                            auctionInformation: i,
                            auctionLossReason: e
                        });
                    }
                    UA(t, i = (() => {
                        return '';
                    })(), e = (() => {
                        return '';
                    })()) {
                        Object(n.a)({
                            message: t,
                            level: h.ProtoLoggingLevelEnum.FATAL,
                            throttle: 5,
                            callStack: i,
                            exception: e
                        });
                    }
                }
                var Oo;
                !function (t) {
                    t[t.NoPrefetch = 0] = 'NoPrefetch', t[t.StartSessionPrefetch = 1] = 'StartSessionPrefetch', t[t.MidSessionPrefetch = 2] = 'MidSessionPrefetch';
                }(Oo || (Oo = {}));
                const xo = 0, So = 5, jo = 10, ko = -1, _o = 1, Ao = !1;
                class Io {
                    constructor(t) {
                        this.Wn = t, this.$A = !1, this.NA = !1, this.jl = [], this.HA = null, this.qA = !1, this.Rg = new ji(), this.zA = new ji(), this.WA = !1, this.GA = new Fn(), this.JA = new Aa(), this.Wn.app.services.TrackingService.addPlatformCappedLineItemSubscriber(this), this.Wn.app.services.TrackingService.setImpressionRevenueSubscriber(this), this.Wn.app.services.TrackingService.startBidRequests();
                        const i = this.Wn.lineItemList.map(t => {
                                return new uo(t);
                            }), e = new yo(this.Wn.lineItemList, this.Wn.app.config.explorationMode);
                        this.QA = new pa(), this.XA = new ca(), this.YA = new la(), this.KA = new da(), this.$m = new ba(this.Wn.adContainerMap, this.Wn.app.services.ResizeObserver, this.Wn.app.services.ViewabilityService, Ht.e);
                        const s = new go({
                            globalDomUtilsService: this.Wn.app.services.GlobalDomUtilsService,
                            recycleAdSlots: !0,
                            slot: this.$m.getContainerMap().get(h.ProtoAdType.Video)
                        });
                        this.AA = new Vn(), this.ZA = new wo(this.AA, this.Wn.app.services.TrackingService), this.tI = new co({
                            adBidPool: this.AA,
                            locked: !0,
                            yoScoreManager: e
                        }), this.xx = new Dn(), this.wx = new ka(this.Wn.app.services.MacrosService, this.Wn.app.services.UserManagerService), this.iI = new ra({
                            adBidPool: this.AA,
                            adCallerYo: new ho(e, this.Wn.skipPlayerSettings),
                            auctionInfoLogging: this.ZA,
                            adContainerMap: this.$m.getContainerMap(),
                            adMacroReplacer: this.wx,
                            amazonSlotId: this.Wn.amazonTamSlotId,
                            app: this.Wn.app,
                            isOutstream: this.Wn.outstream,
                            lineItemList: i,
                            schainSettings: this.Wn.pbjsSchainSettings,
                            skipAdSettings: this.Wn.skipPlayerSettings,
                            trackingService: this.Wn.app.services.TrackingService,
                            lineItemServices: {
                                impressionCapsService: this.XA,
                                lineItemServicesTimer: this.QA,
                                requestCapsService: this.YA,
                                timeBetweenRequestsService: this.KA
                            },
                            adRequestGatekeeper: this.xx,
                            platformCappedLineItemRepo: this.GA,
                            adEnforcer: new xa(this.Wn.app.config.isMobile, Object(T.s)(this.Wn.adContainerMap.get(h.ProtoAdType.Video)), this.Wn.disableScrollHijackEnforcement),
                            pauseAdWhenFinished: this.Wn.pauseAdWhenFinished,
                            loopAdWhenFinished: this.Wn.loopAdWhenFinished,
                            os: this.Wn.app.config.os.os,
                            adSlotContainerRecycler: s
                        }), this.eI = new so({
                            adBidPool: this.AA,
                            adWinnerYo: new oo(e, this.Wn.skipPlayerSettings),
                            auctionInfoLogging: this.ZA,
                            desiredBitRateForWins: _o,
                            maxNumberOfWins: ko,
                            trackingService: this.Wn.app.services.TrackingService,
                            impressionCapsService: this.XA,
                            impressionCapsTimer: this.QA,
                            platformCappedLineItemRepo: this.GA,
                            adMacroReplacer: this.wx,
                            playerId: this.Wn.app.config.playerId
                        }), this.sI = new Sa({
                            adBidPool: this.AA,
                            adContainer: this.$m,
                            adImpressionerYo: new ao(e, this.Wn.skipPlayerSettings),
                            auctionInfoLogging: this.ZA,
                            impressionCapsService: this.XA,
                            impressionCapsTimer: this.QA,
                            requestCapsService: this.YA,
                            playerSkippability: this.Wn.skipPlayerSettings.adSkippability,
                            removeBidIfHigherYoScore: Ao,
                            trackingService: this.Wn.app.services.TrackingService,
                            adRequestGatekeeper: this.xx,
                            pauseAdWhenFinished: this.Wn.pauseAdWhenFinished,
                            loopAdWhenFinished: this.Wn.loopAdWhenFinished,
                            adMacroReplacer: this.wx,
                            explorationMode: this.Wn.app.config.explorationMode,
                            playerId: this.Wn.app.config.playerId
                        }), this.jl.push(this.tI.onAuctionEnd.subscribe(() => {
                            this.$A = !0, this.nI();
                        }), this.$m.onContainerStateUpdate.subscribe(() => {
                            if (this.HA) {
                                const {
                                    width: t,
                                    height: i,
                                    viewability: e
                                } = this.rI();
                                this.hI(e), this.HA.resizeAd(t, i, this.aI);
                            }
                            this.NA && this.oI(), this.$A && this.nI();
                        }), this.sI.onAdSelected.subscribe(t => {
                            this.HA = t, this.cI(), t.setAdVolume(this.uI.sound);
                        }), this.sI.onAdFinished.subscribe(t => {
                            this.lI();
                        }), this.AA.onBidReady.subscribe(t => {
                            this.WA && (this.iI.stop(), this.NA = !1);
                        }));
                        const n = this.iI.onFirstAggregatedBatchFinished.subscribe(() => {
                            this.tI.unlock(), n.unsubscribe();
                        });
                    }
                    get onVpaidEvent() {
                        return this.Rg.asObservable();
                    }
                    get onImpressionRevenueEvent() {
                        return this.zA.asObservable();
                    }
                    setAdVolume(t) {
                        this.HA && (this.dI(t), this.HA.setAdVolume(t));
                    }
                    setAdViewMode(t) {
                        if (this.HA) {
                            this.aI = t;
                            const {
                                width: i,
                                height: e
                            } = this.rI();
                            this.HA.resizeAd(i, e, t);
                        }
                    }
                    stopAd(t) {
                        this.HA && this.HA.stopAd(t);
                    }
                    pauseAd(t) {
                        this.HA && this.HA.pauseAd(), t && this.JA.pauseViaUserInteraction();
                    }
                    resumeAd(t) {
                        this.HA && this.HA.resumeAd(), t && this.JA.resumeViaUserInteraction();
                    }
                    skipAd() {
                        this.HA && (this.HA.setAdVolume(0), this.HA.skipAd());
                    }
                    getVideoAdContainerState() {
                        return this.$m.getContainerStateMap().get(h.ProtoAdType.Video);
                    }
                    getCurrentAdMetadata() {
                        if (this.HA)
                            return {
                                advertiserLineItemId: this.HA.settings.adManagerLineItem.protoLineItem.advertiserLineItemId,
                                publisherLineItemId: this.HA.settings.adManagerLineItem.protoLineItem.publisherLineItemId,
                                adType: this.HA.settings.adManagerLineItem.protoLineItem.adType,
                                duration: this.HA.getAdDuration(),
                                adSkipMode: this.HA.settings.adManagerLineItem.protoLineItem.skipMode,
                                moatTrackingEnabled: this.HA.settings.adManagerLineItem.protoLineItem.moatTrackingEnabled
                            };
                    }
                    enableImpressions(t) {
                        this.disablePredict(), this.WA = !1, this.fI(t), this.uI = t, this.pI || (this.pI = this.uI), this.YA.allowResetOnTime = !0, this.$m.forceTriggerUpdateState(), this.bI(t), this.NA = !0, this.oI(), t.adOpportunity && !t.adOpportunity.startedAuctionWithTimeout ? (t.adOpportunity.startAuctionWithTimeout(), this.tI.startAuction(xo)) : this.tI.startAuction(0);
                    }
                    disableImpressions() {
                        this.$A && (this.tI.cancel(), this.sI.stop(), this.iI.stop(), this.$A = !1, this.NA = !1, this.HA && !this.qA && this.Wn.app.config.isInApp && this.HA.stopAd('inApp_disable'));
                    }
                    enablePredict(t, i) {
                        if (!(this.AA.bidsReady.length > 0)) {
                            switch (this.uI = null, this.WA = !0, this.pI = t, this.pI.prefetchStateType = i, i) {
                            case Oo.StartSessionPrefetch:
                                this.YA.allowResetOnTime = !1;
                                break;
                            case Oo.MidSessionPrefetch:
                                this.YA.allowResetOnTime = !0;
                            }
                            this.NA = !0, this.oI();
                        }
                    }
                    disablePredict() {
                        this.WA && (this.iI.stop(), this.NA = !1);
                    }
                    setPlatformCappedLineItemIdList(t) {
                        this.GA.addPlatformCappedLineItemIdList(t);
                    }
                    notifyImpressionRevenue(t) {
                        this.zA.next(t);
                    }
                    getAdMediaSize() {
                        if (this.HA) {
                            const t = this.HA.getAdMediaSize().width, i = this.HA.getAdMediaSize().height, {
                                    widthRatio: e,
                                    heightRatio: s
                                } = Object(wi.a)(t, i);
                            return {
                                width: t,
                                height: i,
                                widthRatio: e,
                                heightRatio: s,
                                adType: this.HA.settings.adManagerLineItem.protoLineItem.adType
                            };
                        }
                    }
                    destroy() {
                        this.disableImpressions(), Ai(this.jl), this.iI.destroy(), this.eI.destroy(), this.sI.destroy(), this.QA.destroy(), this.HA && (this.vI(), this.HA.stopAd('adManagerDestroy'), this.lI()), this.Wn.app.services.TrackingService.removePlatformCappedLineItemSubscriber(this), this.Wn.app.services.TrackingService.unsubscribeToImpressionRevenue(this);
                    }
                    isLoadingAds() {
                        return !!this.HA || !!this.eI.isLoadingBids();
                    }
                    nI() {
                        (this.uI || this.pI) && this.uI && this.sI.start(this.mI(this.uI));
                    }
                    oI() {
                        this.iI.call(this.gI()), this.eI.win(this.yI());
                    }
                    gI() {
                        return {
                            maxParallelCalls: So,
                            stateSettings: {
                                currentState: this.mI(this.uI),
                                predictedState: this.wI(this.pI)
                            }
                        };
                    }
                    yI() {
                        return {
                            desiredBitRate: _o,
                            maxParallelWins: jo,
                            vastViewMode: this.uI ? this.uI.vastViewMode : this.pI.vastViewMode,
                            stateSettings: {
                                currentState: this.mI(this.uI),
                                predictedState: this.wI(this.pI)
                            }
                        };
                    }
                    wI(t) {
                        if (!t)
                            return;
                        let i;
                        return t.prefetchStateType === Oo.StartSessionPrefetch ? (i = new Map(), this.$m.getContainerStateMap().forEach((t, e) => {
                            i.set(e, Object.assign(Object.assign({}, t), { viewability: !0 }));
                        })) : i = this.$m.getContainerStateMap(), {
                            clickToPlay: t.clickToPlay,
                            media: t.mediaMetada,
                            sound: !!t.sound,
                            soundValue: t.sound,
                            adContainerState: i,
                            adBreakState: t.adBreakState,
                            adOpportunity: t.adOpportunity
                        };
                    }
                    mI(t) {
                        if (t)
                            return {
                                clickToPlay: t.clickToPlay,
                                media: t.mediaMetada,
                                sound: !!t.sound,
                                soundValue: t.sound,
                                adContainerState: this.$m.getContainerStateMap(),
                                adBreakState: t.adBreakState,
                                adOpportunity: t.adOpportunity
                            };
                    }
                    cI() {
                        var t;
                        this.Rg.next({
                            type: Pt.b.AdLoaded,
                            payload: null === (t = this.HA.settings.adLoadedPayload) || void 0 === t ? void 0 : t.payload
                        }), this.OI = this.HA.onVpaidEvent.subscribe(t => {
                            if (t.type === Pt.b.AdImpression) {
                                this.qA = !0;
                                const {viewability: t} = this.rI();
                                this.hI(t);
                            }
                            this.Rg.next(t);
                        });
                    }
                    rI() {
                        return this.$m.getContainerStateMap().get(this.HA.settings.adManagerLineItem.protoLineItem.adType);
                    }
                    vI() {
                        this.OI && (this.OI.unsubscribe(), this.OI = null);
                    }
                    lI() {
                        this.qA = !1, this.JA.onAdRemoved(), this.HA = null, this.vI();
                    }
                    hI(t) {
                        this.JA.checkPauseAd(this.HA, t);
                    }
                    bI(t) {
                        const i = [
                            this.XA,
                            this.YA
                        ];
                        t.newContent && i.forEach(t => {
                            t.resetCapsBasedOnExternalEvent(h.ProtoResetCapTypeEnum.ContentCapping);
                        });
                    }
                    dI(t) {
                        const i = this.HA.getAdVolume();
                        let e = null;
                        0 === i && t > 0 ? e = this.HA.settings.trackers.adUnmute : i > 0 && 0 === t && (e = this.HA.settings.trackers.adMute), e && Hn.track(e, this.wx, this.HA.settings.adManagerLineItem.protoLineItem, this.mI(this.uI || this.pI));
                    }
                    fI(t) {
                        const {playerId: i} = this.Wn.app.config, {adOpportunity: e} = t, {adBreakType: s} = t.adBreakState;
                        e && s === h.ProtoAdBreakTypeEnum.PreRoll && ia.initialize(i), s !== h.ProtoAdBreakTypeEnum.PreRoll && ia.log(i, !0);
                    }
                }
                class Co {
                    constructor() {
                        this.xI = Object(Li.c)(), this.SI = !1;
                    }
                    get id() {
                        return this.xI;
                    }
                    get startedAuctionWithTimeout() {
                        return this.SI;
                    }
                    startAuctionWithTimeout() {
                        this.SI = !0;
                    }
                }
                const To = {
                    [h.ProtoAdSlotsEnum.PreRoll]: h.ProtoAdBreakTypeEnum.PreRoll,
                    [h.ProtoAdSlotsEnum.MidRoll]: h.ProtoAdBreakTypeEnum.MidRoll,
                    [h.ProtoAdSlotsEnum.PostRoll]: h.ProtoAdBreakTypeEnum.PostRoll
                };
                class Po extends o.a {
                    constructor(t, i, e, s, n, r = (() => {
                        return !1;
                    })(), a, o, c, u, l, d, f, p, b) {
                        super(), this.mediator = t, this.jI = i, this.kI = e, this.M_ = s, this.Mm = n, this._I = r, this.Pm = o, this.aS = c, this.AI = l, this.Aw = d, this.II = f, this.Qd = p, this._w = b, this.jl = [], this.CI = !1, this.TI = !1, this.Ox = new Map(), this.MI = Oo.NoPrefetch;
                        let v = h.ProtoAdBreakTypeEnum.MidRoll;
                        this.Qd.forEach(t => {
                            t.types.some(t => {
                                return t === h.ProtoAdBreakTypeEnum.PreRoll;
                            }) && (v = h.ProtoAdBreakTypeEnum.PreRoll);
                        });
                        const m = this.EI(this.Pm.getMaxAdSlotDuration(), v);
                        this.uI = {
                            mediaMetada: {},
                            clickToPlay: !1,
                            adOpportunity: new Co(),
                            newContent: !1,
                            sound: 0,
                            vastViewMode: Pt.a.Normal,
                            adBreakState: m
                        };
                    }
                    get adInWin() {
                        return this.Vm.isLoadingAds();
                    }
                    enableAds() {
                        this.CI = !0, this.LI(), this.mediator.publish(this, Ut.AdsEnabled);
                    }
                    disableAds(t) {
                        this.CI = !1, this.Vm && (this.Vm.disableImpressions(), this.MI === Oo.NoPrefetch && t === gi.TimeoutBetweenAds && this.RI(Oo.MidSessionPrefetch));
                    }
                    updateFilterConfig(t) {
                        this.uI.mediaMetada.mediaId = t.mediaId, this.uI.mediaMetada.mediaLanguage = t.mediaLanguage, this.uI.mediaMetada.mediaKeywords = t.mediaKeywords;
                        const i = Object.assign(this.uI.mediaMetada, t);
                        this.LI({ mediaMetada: i });
                    }
                    userInteraction(t) {
                        this.LI({ clickToPlay: !0 });
                    }
                    newAdOpportunity() {
                        this.MI === Oo.NoPrefetch && (this.uI.adOpportunity = new Co()), this.LI({ adOpportunity: this.uI.adOpportunity }), this.BI();
                    }
                    initAd(t, i, e, s, n, r) {
                        r.forEach(t => {
                            this.Ox.set(t.type, t.container), this.Ox.get(h.ProtoAdType.Overlay) || this.Ox.set(h.ProtoAdType.Overlay, this.Ox.get(h.ProtoAdType.Video));
                        }), this.Um(), this.TI = !0, this.LI({ sound: n });
                    }
                    setAdVolume(t) {
                        var i;
                        null === (i = this.Vm) || void 0 === i || i.setAdVolume(t), this.LI({ sound: t });
                    }
                    resizeAd(t, i, e) {
                        var s;
                        this.DI !== e && (this.setVastViewMode(e), null === (s = this.Vm) || void 0 === s || s.setAdViewMode(e));
                    }
                    stopAd(t) {
                        var i;
                        null === (i = this.Vm) || void 0 === i || i.stopAd(t);
                    }
                    pauseAd(t) {
                        var i;
                        null === (i = this.Vm) || void 0 === i || i.pauseAd(t);
                    }
                    resumeAd(t) {
                        var i;
                        null === (i = this.Vm) || void 0 === i || i.resumeAd(t);
                    }
                    skipAd() {
                        var t;
                        null === (t = this.Vm) || void 0 === t || t.skipAd();
                    }
                    getAdContainerWidth() {
                        var t;
                        return null === (t = this.Vm) || void 0 === t ? void 0 : t.getVideoAdContainerState().width;
                    }
                    getAdMediaSize() {
                        var t;
                        return null === (t = this.Vm) || void 0 === t ? void 0 : t.getAdMediaSize();
                    }
                    getCurrentAdClickTrackingProperties() {
                        var t;
                        const {
                            publisherLineItemId: i,
                            advertiserLineItemId: e
                        } = null === (t = this.Vm) || void 0 === t ? void 0 : t.getCurrentAdMetadata();
                        return {
                            publisherLineItemId: i,
                            advertiserLineItemId: e
                        };
                    }
                    getAdDuration() {
                        return this.Vm.getCurrentAdMetadata().duration;
                    }
                    getCurrentAdType() {
                        return this.Vm.getCurrentAdMetadata().adType;
                    }
                    getLastAdSlot(t) {
                        const i = this.Ox.get(t);
                        return {
                            height: i.clientHeight,
                            width: i.clientWidth
                        };
                    }
                    updatePodRemainingTime(t) {
                        if (t <= 0)
                            return;
                        const i = this.uI.adBreakState;
                        Math.round(t / qt.f) > i.remainingAdDuration || this.LI({ adBreakState: this.EI(t, i.adBreakType) });
                    }
                    onAdStateChange(t, i) {
                        const e = To[t];
                        this.LI({ adBreakState: this.EI(i, e) });
                    }
                    onContentChange() {
                        this.LI({ newContent: !0 });
                    }
                    setVastViewMode(t) {
                        this.DI = t, this.FI({ vastViewMode: t });
                    }
                    destroy() {
                        Ai(this.jl);
                    }
                    LI(t) {
                        this.FI(t), this.CI && this.TI && (this.Vm.enableImpressions(this.uI), this.VI());
                    }
                    FI(t) {
                        Object.assign(this.uI, t), this.uI.adBreakState = this.EI(this.uI.adBreakState.remainingAdDuration, this.uI.adBreakState.adBreakType);
                    }
                    VI() {
                        this.FI({
                            clickToPlay: !1,
                            newContent: !1
                        });
                    }
                    EI(t, i) {
                        return {
                            isAdPodBreak: this.Pm.isCurrentBreakInPod(),
                            adPodSlotIndex: this.Pm.isCurrentBreakInPod() ? this.Pm.getNextSlotIndex() : 0,
                            maxAdDuration: Math.round(this.Pm.getMaxAdSlotDuration() / qt.f || An),
                            remainingAdDuration: Math.round(t / qt.f),
                            sessionMaxAdDuration: Math.round(this.Pm.getMaxAdSlotPossibleDuration() / qt.f),
                            adBreakType: i
                        };
                    }
                    Um() {
                        this.Vm = new Io({
                            adBreakHelper: this.Pm,
                            adContainerMap: this.Ox,
                            amazonTamSlotId: this.aS,
                            app: this.Mm,
                            lineItemList: this.jI.lineItems,
                            outstream: this._I,
                            pbjsSchainSettings: this.kI,
                            prerollTimeMs: this.AI,
                            skipPlayerSettings: this.M_,
                            disableScrollHijackEnforcement: !this.jI.disableScrollHijackEnforcement,
                            pauseAdWhenFinished: this.Aw,
                            loopAdWhenFinished: this._w
                        }), this.jl.push(this.Vm.onVpaidEvent.subscribe(t => {
                            switch (t.type) {
                            case Pt.b.AdLoaded:
                                this.UI(t);
                                break;
                            case Pt.b.AdImpression:
                                this.$I(t);
                                break;
                            case Pt.b.AdVideoStart:
                            case Pt.b.AdError:
                                this.mediator.publish(this, t.type, { payload: t.payload });
                                break;
                            default: {
                                    const i = { payload: {} };
                                    this.mediator.publish(this, t.type, i);
                                }
                            }
                        })), this.Vm.onImpressionRevenueEvent.subscribe(t => {
                            this.mediator.publish(this, Tt.b.ImpressionPrice, { payload: t.impressionRevenue }), this.mediator.publish(this, Tt.b.ImpressionRevenue, { payload: t });
                        }), this.II === h.ProtoAdPlaybackMode.ScrollToPlay && this.RI(Oo.StartSessionPrefetch);
                    }
                    RI(t) {
                        this.MI = t, this.uI.adOpportunity = new Co(), this.Vm.enablePredict(this.uI, t);
                    }
                    BI() {
                        this.MI = Oo.NoPrefetch;
                    }
                    UI(t) {
                        const i = {
                            payload: {
                                adSkipMode: t.payload.adSkipMode,
                                adLoadedData: { skipOffset: t.payload.adLoadedData.skipOffset }
                            }
                        };
                        this.mediator.publish(this, t.type, i);
                    }
                    $I(t) {
                        var i, e;
                        const {
                                adId: s,
                                adVideoUrl: n,
                                creativeId: r,
                                name: h,
                                length: a,
                                imaMetadata: o,
                                moatTrackingEnabled: c
                            } = t.payload.adSourceData, u = this.Vm.getCurrentAdMetadata(), l = {
                                payload: {
                                    adSkipMode: t.payload.adSkipMode,
                                    adSourceData: {
                                        moatTrackingEnabled: c,
                                        adId: s,
                                        length: a,
                                        imaMetadata: o,
                                        adVideoUrl: n,
                                        creativeId: r,
                                        name: h
                                    },
                                    clickThroughUrl: t.payload.clickThroughUrl,
                                    customAdData: {
                                        ADVERTISER: null === (i = t.payload.customAdData) || void 0 === i ? void 0 : i.ADVERTISER,
                                        CAMPAIGN_ID: null === (e = t.payload.customAdData) || void 0 === e ? void 0 : e.CAMPAIGN_ID,
                                        CREATIVE_ID: t.payload.customAdData.CREATIVE_ID
                                    },
                                    adDuration: t.payload.adSourceData.length,
                                    selectedAdSlot: this.Ox.get(u.adType)
                                }
                            };
                        this.mediator.publish(this, t.type, l);
                    }
                }
                class Mo extends yn {
                    getNewAdManager() {
                        const t = {
                            adSkippability: this.jr.adSkippability,
                            skipAdAfter: this.jr.skipAdAfter,
                            adsMustBeSkippableIfLongerThan: this.jr.adsMustBeSkippableIfLongerThan
                        };
                        return new Po(this, this.jr.lineItemSettings, this.jr.supplyChainSettings, t, this.Mm, this.jr.isOutStreamType(), this.jr.adSkippability, this.Pm, this.jr.amazonTamSlotId, this.jr.global, this.jr.preRollBreak, this.jr.pauseAdWhenFinished, this.jr.adPlaybackMode, this.jr.adBreaks, this.jr.loopAdWhenFinished);
                    }
                    Ym(t) {
                        super.Ym(t), this.jr.outstreamAdAsContent && this.NI();
                    }
                    Xm() {
                        super.Xm(), this.subscribe(xt[xt.SkipAd], this.Hm, () => {
                            return this.skipAd();
                        }), this.jr.outstreamAdAsContent && (this.unsubscribe(Pt.b.AdStopped, this.Vm), this.unsubscribe(Pt.b.AdError, this.Vm));
                    }
                    NI() {
                        this.Hm.hideProgressBar(), this.Hm.hideAdMarker(), this.Qm();
                    }
                }
                const Eo = 480;
                class Lo extends Ii {
                    constructor(t, i, e, s) {
                        super(t, i, e, s), this.mediator = t, this.HI = !1, this.wd.inTimeout = !1, this.wd.limitAdsOnMidRoll = !0, this.onStop(), this.qI = new _i(this.controlData.minTimeBeforeAdBreak), this.qI.onTimeElapsed.subscribe(() => {
                            this.firstAdBreakStarted || (this.firstAdBreakStarted = !0), this.wd.inTimeout = !1, this.HI = !0, this.toggleEnableAds();
                        });
                    }
                    zI() {
                        this.currentPlayerAdSlot !== M.ProtoAdSlotsEnum.MidRoll || this.wd.inTimeout || this.HI || (this.firstAdBreakStarted ? this.controlData.timeBetweenAds && this.Ld && this.WI() : this.controlData.minTimeBeforeAdBreak && this.GI(), this.toggleEnableAds());
                    }
                    WI() {
                        this.wd.inTimeout = !0, this.qI.reset(this.controlData.timeBetweenAds);
                    }
                    GI() {
                        this.wd.inTimeout = !0, this.qI.reset(this.controlData.minTimeBeforeAdBreak);
                    }
                    JI(t, i) {
                        this.wd.limitAdsOnMidRoll = this.controlData.midRollOnlyOnLongContent && t === M.ProtoAdSlotsEnum.MidRoll && (!i || i < Eo);
                    }
                    canEnableAds() {
                        const t = super.canEnableAds();
                        if (!t.enableAds)
                            return t;
                        if (this.currentPlayerAdSlot === M.ProtoAdSlotsEnum.MidRoll) {
                            if (this.wd.limitAdsOnMidRoll)
                                return {
                                    enableAds: !1,
                                    disableReason: gi.Unknown
                                };
                            if (this.wd.inTimeout && this.Ld)
                                return {
                                    enableAds: !1,
                                    disableReason: gi.TimeoutBetweenAds
                                };
                        }
                        return t;
                    }
                    startAds() {
                        this.zI(), super.startAds();
                    }
                    contentChanged() {
                        this.wd.inTimeout = !1, this.wd.limitAdsOnMidRoll = !0, this.qI.stop(), this.firstAdBreakStarted = !1, this.HI = !1, this.zI(), super.contentChanged();
                    }
                    onAdStateChange(t, i, e) {
                        const s = this.wd.limitAdsOnMidRoll;
                        this.JI(t, e), s !== this.wd.limitAdsOnMidRoll && this.toggleEnableAds(), t === this.currentPlayerAdSlot && t === M.ProtoAdSlotsEnum.MidRoll || (this.HI = !1, super.onAdStateChange(t, i));
                    }
                    contentPlaybackStateChanged(t) {
                        t ? this.qI.start() : this.qI.stop();
                    }
                    onAdImpression(t) {
                        super.onAdImpression(t), this.QI = !this.Ld;
                    }
                    onAdFinished(t, i = (() => {
                        return !1;
                    })()) {
                        this.HI = !1, this.firstAdBreakStarted && !this.QI && this.Ld && !i && this.zI(), super.onAdFinished(t, i);
                    }
                    viewabilityStateChanged(t, i = (() => {
                        return !1;
                    })(), e = (() => {
                        return !1;
                    })()) {
                        i || this.zI(), super.viewabilityStateChanged(t, i, e);
                    }
                    destroy() {
                        this.qI.disable(), super.destroy();
                    }
                }
                class Ro extends Fi {
                    constructor() {
                        super(...arguments), this.Mp = L, this.Ep = d.r, this.jp = 0;
                    }
                    get type() {
                        return this.cp.playerType;
                    }
                    rp() {
                        return new Mo(this, this.cp, this.$playerContainer, this.checkFloatingViewability(this.isViewable()), this.ep, this.app, this.Zd);
                    }
                    generateHTML() {
                        this.$playerWrapper = this.app.services.GlobalDomUtilsService.createElementByString(`<cnx class="${ d.b.PlayerWrapper }"></cnx>`), this.$playerContainer = this.app.services.GlobalDomUtilsService.createElementByString('<cnx class=\'cnx-video-container\'></cnx>'), this.addPlayerSize(), this.$experienceContainer.appendChild(this.$playerWrapper), this.$playerWrapper.appendChild(this.$playerContainer);
                    }
                    addPlayerSize() {
                        this.cp.playerSize.responsive ? (this.$playerWrapper.appendChild(this.yp()), Object(T.a)(this.$playerWrapper, d.i.Responsive)) : (this.setFixedSize(this.$experienceContainer), Object(T.a)(this.$playerWrapper, d.i.Fixed));
                    }
                    setFixedSize(t) {
                        Object(T.N)(t, {
                            width: `${ this.cp.playerSize.fixedWidth }px`,
                            height: `${ this.cp.playerSize.fixedHeight }px`
                        });
                    }
                    dp() {
                        return new Lo(this, this.isViewable(), {
                            numberOfMidRolls: this.cp.midRollNumber,
                            minTimeBeforeAdBreak: this.cp.minTimeBeforeFirstAd,
                            timeBetweenAds: this.cp.timeBetweenAds,
                            viewabilityPolicy: this.cp.adViewabilityPolicy,
                            totalAdBreakLength: this.cp.outstreamSettings ? this.cp.outstreamSettings.totalAdBreakLength : void 0,
                            maxAdSlotDuration: this.ep.getMaxAdSlotDuration(),
                            maxAdPodDuration: this.ep.getMaxAdPodDuration(),
                            playerDimensions: {
                                width: this.$playerContainer.offsetWidth,
                                height: this.$playerContainer.offsetHeight
                            },
                            playerAdsSkippability: this.cp.adSkippability,
                            midRollOnlyOnLongContent: this.cp.midRollOnlyOnLongContent,
                            adsMustBeSkippableIfLongerThan: this.cp.adsMustBeSkippableIfLongerThan
                        }, this.app);
                    }
                }
                var Bo;
                !function (t) {
                    t.PreRoll = 'pre-roll', t.MidRoll = 'mid-roll', t.PostRoll = 'post-roll';
                }(Bo || (Bo = {}));
                var Do = Bo;
                const Fo = 1200;
                class Vo {
                    constructor(t, i, e, s, n = (() => {
                        return Fo;
                    })()) {
                        this.XI = t, this.YI = i, this.KI = e, this.ZI = s, this.tC = n, this.iC = null, this.eC = !1, this.sC = () => {
                            if (this.tA(), !this.eC && this.YI && this.YI.adInWin)
                                return this.eC = !0, void this.nC(this.tC);
                            this.XI.startContent();
                        };
                    }
                    destroy() {
                        this.tA();
                    }
                    changeState(t) {
                        switch (t) {
                        case y.PrerollState:
                            this.eC = !1, this.nC(this.KI);
                            break;
                        case y.PostrollState:
                            this.eC = !1, this.nC(this.ZI);
                            break;
                        default:
                            this.iC && this.tA();
                        }
                    }
                    tA() {
                        clearTimeout(this.iC), this.iC = null;
                    }
                    nC(t) {
                        this.tA(), this.iC = setTimeout(this.sC, t);
                    }
                }
                var Uo = {
                    imageMaxHeight: 160,
                    ratioWidth: 16,
                    ratioHeight: 9
                };
                const $o = 'Video';
                class No extends Ro {
                    constructor() {
                        super(...arguments), this.events = Object.assign(Object.assign({}, Tt.b), I), this.rC = !1, this.hC = !0, this.aC = {
                            [y.PlayingState]: () => {
                                this.Xf(h.ProtoAdSlotsEnum.MidRoll);
                                this.gf.contentPlaybackStateChanged(!0);
                            },
                            [y.PrerollState]: () => {
                                this.Xf(h.ProtoAdSlotsEnum.PreRoll);
                            },
                            [y.PostrollState]: () => {
                                this.Xf(h.ProtoAdSlotsEnum.PostRoll);
                            },
                            [y.PausedState]: () => {
                                this.Oh === h.ProtoAdSlotsEnum.PreRoll && this.Xf(h.ProtoAdSlotsEnum.MidRoll);
                            },
                            [y.StoppedState]: () => {
                                this.Oh === h.ProtoAdSlotsEnum.PostRoll && this.cp.upNextMode !== M.ProtoPlayerUpNextMode.Stop ? (this.Xf(h.ProtoAdSlotsEnum.MidRoll), this.Nf()) : (this.gf.onStop(), this.Nf());
                            }
                        }, this.oC = ({payload: t}) => {
                            t === y.PlayingState && (this.unsubscribe(A.StateChanged, this.XI, this.oC), this.mediator.publish(this, I.VideoStarted, { payload: this.getVideoDetails() }));
                        }, this.cC = t => {
                            const i = this.aC[t];
                            return () => {
                                if (t !== y.PlayingState) {
                                    const t = !1;
                                    this.gf.contentPlaybackStateChanged(t);
                                }
                                t === y.PausedState ? this.vf = !0 : this.vf = !1, i && i();
                            };
                        }, this.uC = () => {
                            this.lC.enterFullScreen().then(() => {
                                this.XI.enterFullscreen(), this.floatingModule && this.floatingModule.fullscreenStateChange(!0);
                            }).catch(t => {
                                Object(n.a)({
                                    level: h.ProtoLoggingLevelEnum.WARNING,
                                    message: 'BaseVideoExperience_enterFullscreen'
                                });
                            });
                        }, this.gp = () => {
                            this.XI.exitFullscreen(), this.floatingModule && this.floatingModule.fullscreenStateChange(!1), this.app.config.os.os === St.b.Ios && (this.rC = this.XI.isIosFullscreen = !1, this.Xf(this.Oh)), this.mediator.publish(this, Tt.c.FullscreenChanged, { payload: !1 }), super.gp();
                        }, this.mp = () => {
                            this.app.config.os.os === St.b.Ios && (this.rC = this.XI.isIosFullscreen = !0, this.gf.onStop()), this.mediator.publish(this, Tt.c.FullscreenChanged, { payload: !0 }), super.mp();
                        };
                    }
                    start() {
                        try {
                            super.start(), this.dC(), this.fC(), this.pC(this.XI, this.adHandler), this.bC(), this.XI.start(), this.Cp(this.XI), this.vC();
                        } catch (t) {
                            Object(n.a)({
                                message: 'BaseVideoExperience_Start',
                                exception: t.message,
                                callStack: t.stack,
                                level: h.ProtoLoggingLevelEnum.FATAL
                            });
                        }
                    }
                    changeVideo(t, i = (() => {
                        return !1;
                    })()) {
                        if (this.adHandler) {
                            if (this.adHandler.inImpression)
                                this.adHandler.stopAd('changeVideo');
                            else {
                                const t = !0;
                                this.Of(t);
                            }
                            this.adHandler.userInteraction(i);
                        }
                        this.XI.setVideo(t);
                    }
                    play(t = (() => {
                        return !0;
                    })()) {
                        this.adHandler && this.adHandler.inImpression ? this.adHandler.play() : this.XI.play(t);
                    }
                    pause(t = (() => {
                        return !0;
                    })()) {
                        this.adHandler && this.adHandler.inImpression ? this.adHandler.pause() : this.XI.pause(t);
                    }
                    setNewVolume(t) {
                        super.setNewVolume(t), this.XI.volume = t;
                    }
                    getVolume() {
                        return this.XI.volume;
                    }
                    get currentTime() {
                        return this.XI.currentTime;
                    }
                    get duration() {
                        return this.XI.duration;
                    }
                    getVideoDetails() {
                        let t;
                        return this.XI.getCurrentVideoData(i => {
                            t = this.mC(i);
                        }), t;
                    }
                    toggleFullscreen(t) {
                        Object(rt.a)(t) || (t = !this.lC.isFullscreen), this.lC.isFullscreen !== t && (t ? this.uC() : this.lC.exitFullScreen());
                    }
                    showCaptions() {
                        this.XI.showCaptions();
                    }
                    hideCaptions() {
                        this.XI.hideCaptions();
                    }
                    toggleExpandButton(t) {
                        this.XI.toggleExpandButton(t);
                    }
                    getPlaylistId() {
                        return this.cp.playlistId;
                    }
                    getQuality() {
                        return this.XI.getQuality();
                    }
                    setQuality(t) {
                        this.XI.setQuality(t);
                    }
                    setAutoQuality() {
                        this.XI.setAutoQuality();
                    }
                    getAvailableQualities() {
                        return this.XI.getAvailableQualities();
                    }
                    destroy() {
                        super.destroy(), this.gC.destroy(), this.XI && (this.XI.destroy(), this.unsubscribeAll(this.XI));
                    }
                    mC(t) {
                        const {
                                imageMaxHeight: i,
                                ratioHeight: e,
                                ratioWidth: s
                            } = Uo, n = i / e * s;
                        return {
                            id: t.id,
                            title: t.title,
                            description: t.description,
                            duration: Object(rt.d)(t.duration) ? t.duration : this.XI.duration,
                            keywords: t.keywords,
                            url: t.clickUrl ? this.app.services.MacrosService.setupMacros(t.clickUrl) : '',
                            customFields: t.customFields,
                            thumbnail: t.getThumbnailUrl(n, i)
                        };
                    }
                    Ff() {
                        if (this.hf)
                            return;
                        this.cf || this.Vf();
                        const t = Do[h.ProtoAdSlotsEnum[this.Oh]];
                        this.hf = !0, this.af = !1;
                        const i = { adBreakPosition: t };
                        this.Oh === h.ProtoAdSlotsEnum.PostRoll && (this.uf = !0), this.app.services.EventsStorageService.emitAdBreakStart(i);
                    }
                    Sf() {
                        this.hf && (this.hf = !1, this.app.services.EventsStorageService.emitAdBreakComplete(), this.uf && (this.uf = !1, this.Nf()));
                    }
                    Uf() {
                        this.af || (this.hf && this.Sf(), this.cf || this.Vf(), this.af = !0, this.app.services.EventsStorageService.emitPlay());
                    }
                    $f() {
                        this.af && (this.af = !1, this.app.services.EventsStorageService.emitPause());
                    }
                    Vf() {
                        this.cf || (this.cf = !0, this.XI.getCurrentVideoData(({
                            title: t,
                            id: i,
                            sourceItemId: e,
                            keywords: s,
                            duration: n,
                            customFields: r
                        }) => {
                            const h = this.XI.streamFormat, a = $o, o = e || i;
                            this.app.services.EventsStorageService.emitSessionStart({
                                name: t,
                                keywords: s,
                                mediaId: o,
                                length: n,
                                streamFormat: h,
                                customFieldList: r,
                                feed: a
                            });
                        }));
                    }
                    Nf() {
                        this.cf && (this.cf = !1, this.af = !1, this.hf && this.Sf(), this.app.services.EventsStorageService.emitSessionEnd());
                    }
                    Hf() {
                        this.cf && (this.app.services.EventsStorageService.emitContentComplete(), this.cp.postRollBreak || this.Nf());
                    }
                    yf() {
                        const t = this.getVideoDetails();
                        this.adHandler.setContinueReadingCard({
                            imageSrc: t.thumbnail,
                            title: t.title
                        }), super.yf(), this.XI.hide();
                    }
                    gl(t, i = (() => {
                        return !1;
                    })()) {
                        super.gl(t, i);
                    }
                    uh() {
                        super.uh(), this.XI && this.XI.resize(this.breakPointsHandler.currentBreakpointClass);
                    }
                    handleClose() {
                        this.floatingModule && this.floatingModule.isInFloating ? (this.floatingModule.destroy(), this.pause(!1)) : this.lC.isFullscreen ? this.lC.exitFullScreen() : this.triggerDestroy();
                    }
                    generateHTML() {
                        super.generateHTML(), this.yC = this.app.services.GlobalDomUtilsService.createElementByString(`<img class="${ d.b.ImagePlaceholder }">`), this.$playerWrapper.appendChild(this.yC);
                    }
                    wC(t) {
                        this.adHandler && this.adHandler.updateFilterConfig(t);
                    }
                    bC() {
                        this.subscribe(xt[xt.Volume], this.XI, ({
                            payload: {volume: t}
                        }) => {
                            this.ih(t), this.adHandler && this.adHandler.setVolume(t);
                        }), this.subscribe(O.NewVideo, this.XI, () => {
                            this.mediator.publish(this, I.NewVideo), this.subscribe(A.StateChanged, this.XI, this.oC), this.XI.getCurrentVideoData(t => {
                                const i = {
                                    mediaId: t.id,
                                    mediaKeywords: t.keywords,
                                    mediaLanguage: t.languageId,
                                    videoIndexes: t.videoIndexes
                                };
                                this.wC(i), this.app.services.TrackingService.setNewMedia({
                                    mediaId: t.id,
                                    clickUrl: t.clickUrl
                                });
                                const e = t.getThumbnailUrl(this.$experienceContainer.clientWidth, this.$experienceContainer.clientHeight);
                                this.adHandler && this.adHandler.setAdLoadingBackgroundUrl(e), this.OC(e, t.altText), this.mediator.publish(this, A.MediaMetaUpdate, {
                                    payload: {
                                        title: t.title,
                                        description: t.description
                                    }
                                });
                            });
                        }), this.subscribe(A.FirstFramePlayed, this.XI, () => {
                            this.app.services.TrackingService.setMediaStart(), this.Rp(), this.Vf();
                        }), this.subscribe(A.StateChanged, this.XI, ({payload: t}) => {
                            switch (this.gC.changeState(t), this.xC(t), t) {
                            case y.PlayingState:
                                this.mediator.publish(this, Tt.d.Play, { payload: this.getVideoDetails() }), this.Uf();
                                break;
                            case y.PausedState:
                                this.mediator.publish(this, Tt.d.Pause, { payload: this.getVideoDetails() }), this.app.services.TrackingService.setSessionPlayback(!1), this.$f();
                                break;
                            case y.StoppedState:
                                this.app.services.TrackingService.setSessionPlayback(!1);
                                break;
                            case y.PrerollState:
                            case y.PostrollState:
                                this.app.services.TrackingService.setSessionPlayback(!0), this.Ff();
                                break;
                            case y.HiddenState:
                                this.app.services.TrackingService.setSessionPlayback(!0), this.$f(), this.Ff();
                                break;
                            default:
                                this.app.services.TrackingService.setSessionPlayback(!0);
                            }
                        }), this.floatingModule && this.subscribe(c.b.UserInteraction, this.XI, this.Pf), this.adHandler && this.subscribe(c.b.UserInteraction, this.XI, ({
                            payload: {playback: t}
                        }) => {
                            !1 === t && this.gf.onStop(), this.adHandler.userInteraction(t);
                        }), this.subscribe(c.b.UserInteraction, this.XI, ({
                            payload: {
                                clickedNext: t,
                                clickedPrev: i
                            }
                        }) => {
                            (t || i) && this.Nf();
                        }), this.subscribe(A.ContentQuartiles, this.XI, ({payload: t}) => {
                            let i;
                            switch (this.app.services.TrackingService.trackMediaQuartile(t), t) {
                            case h.ProtoQuartilesEnum.First:
                                i = I.VideoCompleted25;
                                break;
                            case h.ProtoQuartilesEnum.Second:
                                i = I.VideoCompleted50;
                                break;
                            case h.ProtoQuartilesEnum.Third:
                                i = I.VideoCompleted75;
                                break;
                            case h.ProtoQuartilesEnum.Fourth:
                                i = I.VideoCompleted100;
                            }
                            i && this.mediator.publish(this, i, { payload: this.getVideoDetails() });
                        }), this.subscribe(A.ContentQuartiles, this.XI, ({payload: t}) => {
                            t === h.ProtoQuartilesEnum.Fourth && this.Hf();
                        }), this.subscribe(xt[xt.OverlayClick], this.XI, () => {
                            return this.mediator.publish(this, I.PlayerClicked, { payload: this.getVideoDetails() });
                        }), this.subscribe(x.Change, this.XI, t => {
                            return this.mediator.publish(this, Tt.d.QualityChanged, t);
                        }), this.subscribe(O.PlayError, this.XI, t => {
                            this.mediator.publish(this, Tt.d.PlayError, t), this.app.services.EventsStorageService.emitPlayError();
                        }), this.subscribe(xt[xt.CaptionOn], this.XI, () => {
                            return this.mediator.publish(this, I.SubtitlesVisibilityChanged, { payload: !0 });
                        }), this.subscribe(xt[xt.CaptionOff], this.XI, () => {
                            return this.mediator.publish(this, I.SubtitlesVisibilityChanged, { payload: !1 });
                        }), this.subscribe(xt[xt.Volume], this.adHandler, ({
                            payload: {volume: t}
                        }) => {
                            this.ih(t), this.XI.volume = t;
                        }), this.subscribe(O.NewVideo, this.XI, () => {
                            this.hC ? (this.hC = !1, this.cp.adPlaybackMode === h.ProtoAdPlaybackMode.Autoplay && this.cp.playbackMode !== h.ProtoPlayerPlaybackModeEnum.ClickToPlay && 0 === this.cp.preRollBreak && this.Xf(h.ProtoAdSlotsEnum.MidRoll)) : this.sp();
                        }), this.cp.isCloseButton && this.subscribe(xt[xt.Close], this.XI, () => {
                            return this.handleClose();
                        }), this.subscribe(c.b.GeneralUserInteraction, this.XI, ({
                            payload: {type: t}
                        }) => {
                            this.app.services.TrackingService.trackMediaClick(t);
                        });
                    }
                    fC() {
                        this.adHandler && (this.adHandler.start(this.XI.width, this.XI.height, this.cp.soundMode === M.ProtoPlayerSoundMode.On ? 1 : 0), this.gf.forceRecheck());
                    }
                    xC(t) {
                        this.cC(t)();
                    }
                    Kf(t) {
                        !this.rC && this.adHandler && this.adHandler.adStateChange(t, this.ep.getMaxAdSlotDuration());
                    }
                    Zf(t) {
                        const {duration: i} = this.XI;
                        this.gf.onAdStateChange(t, {
                            maxAdPodDuration: this.ep.getMaxAdPodDuration(),
                            maxAdSlotDuration: this.ep.getMaxAdSlotDuration()
                        }, i);
                    }
                    vC() {
                        this.lC = new _t(this, this.app.services.GlobalDomUtilsService, this.$playerContainer, this.app.config.os.os), this.SC();
                    }
                    SC() {
                        this.subscribe(xt[xt.Expand], this.XI, this.uC), this.subscribe(xt[xt.Collapse], this.XI, () => {
                            return this.lC.exitFullScreen();
                        }), this.subscribe(Ot.exit, this.lC, this.gp), this.subscribe(Ot.enter, this.lC, this.mp);
                    }
                    OC(t, i) {
                        this.yC.style.display = 'none', this.yC.onload = () => {
                            this.yC.style.display = 'block';
                        }, Object(rt.h)(t) && this.yC.setAttribute('src', t), this.yC.setAttribute('alt', i);
                    }
                    pC(t, i) {
                        const {
                            preRollBreak: e,
                            postRollBreak: s
                        } = this.cp;
                        this.gC = new Vo(t, i, e, s);
                    }
                }
                var Ho = function () {
                        function t(t, i) {
                            this.dueTime = t, this.scheduler = i;
                        }
                        return t.prototype.call = function (t, i) {
                            return i.subscribe(new qo(t, this.dueTime, this.scheduler));
                        }, t;
                    }(), qo = function (t) {
                        function i(i, e, s) {
                            var n = t.call(this, i) || this;
                            return n.dueTime = e, n.scheduler = s, n.debouncedSubscription = null, n.lastValue = null, n.hasValue = !1, n;
                        }
                        return Wt(i, t), i.prototype._l = function (t) {
                            this.clearDebounce(), this.lastValue = t, this.hasValue = !0, this.add(this.debouncedSubscription = this.scheduler.schedule(zo, this.dueTime, this));
                        }, i.prototype.Il = function () {
                            this.debouncedNext(), this.destination.complete();
                        }, i.prototype.debouncedNext = function () {
                            if (this.clearDebounce(), this.hasValue) {
                                var t = this.lastValue;
                                this.lastValue = null, this.hasValue = !1, this.destination.next(t);
                            }
                        }, i.prototype.clearDebounce = function () {
                            var t = this.debouncedSubscription;
                            null !== t && (this.remove(t), t.unsubscribe(), this.debouncedSubscription = null);
                        }, i;
                    }(ni);
                function zo(t) {
                    t.debouncedNext();
                }
                var Wo = function () {
                        function t() {
                            return Error.call(this), this.message = 'argument out of range', this.name = 'ArgumentOutOfRangeError', this;
                        }
                        return t.prototype = Object.create(Error.prototype), t;
                    }(), Go = new ci(function (t) {
                        return t.complete();
                    });
                function Jo(t) {
                    return t ? function (t) {
                        return new ci(function (i) {
                            return t.schedule(function () {
                                return i.complete();
                            });
                        });
                    }(t) : Go;
                }
                var Qo = function () {
                        function t(t) {
                            if (this.total = t, this.total < 0)
                                throw new Wo();
                        }
                        return t.prototype.call = function (t, i) {
                            return i.subscribe(new Xo(t, this.total));
                        }, t;
                    }(), Xo = function (t) {
                        function i(i, e) {
                            var s = t.call(this, i) || this;
                            return s.total = e, s.count = 0, s;
                        }
                        return Wt(i, t), i.prototype._l = function (t) {
                            var i = this.total, e = ++this.count;
                            e <= i && (this.destination.next(t), e === i && (this.destination.complete(), this.unsubscribe()));
                        }, i;
                    }(ni);
                const Yo = 400;
                var Ko, Zo;
                !function (t) {
                    t[t.StateChanged = 0] = 'StateChanged', t[t.ContentEnd = 1] = 'ContentEnd', t[t.VideoQueued = 2] = 'VideoQueued';
                }(Ko || (Ko = {}));
                class tc {
                    constructor(t, i, e, s, n, r = (() => {
                        return !1;
                    })(), h) {
                        this.mediator = t, this.jC = i, this.kC = e, this._C = s, this.AC = n, this.IC = r, this.CC = h, this.TC = !1, this.PC = !1, this.MC = !1, this.EC = !1, this.LC = 500, this.RC = !1, this.BC = new ji(), this.DC = 0, this.FC();
                    }
                    FC() {
                        this.VC = y.StoppedState, this.UC = y.StoppedState, this.CC && (this.TC = !0), this.initListeners();
                    }
                    initListeners() {
                        var t, i, e;
                        this.BC.pipe((i = Yo, void 0 === e && (e = fi), function (t) {
                            return t.lift(new Ho(i, e));
                        }), (t = 1, function (i) {
                            return 0 === t ? Jo() : i.lift(new Qo(t));
                        })).subscribe(t => {
                            this.$C(t), this.DC = 0;
                        });
                    }
                    NC(t) {
                        this.VC !== t && (this.UC = this.VC, this.VC = t, this.mediator.publish(this, Ko[Ko.StateChanged], { payload: this.VC }));
                    }
                    HC(t) {
                        return this.VC === t;
                    }
                    qC() {
                        this.NC(y.PrerollState), this.TC = !0;
                    }
                    zC() {
                        this.WC === y.PlayingState ? this.GC() : this.JC();
                    }
                    QC() {
                        this.NC(y.PostrollState);
                    }
                    XC() {
                        this.WC === y.PausedState ? (this.MC = !0, this.stop()) : (this.MC = !1, this.mediator.publish(this, Ko[Ko.ContentEnd]));
                    }
                    YC(t) {
                        t.then(() => {
                            this.RC = !0, this.VC !== y.HiddenState && this.NC(y.PlayingState);
                        }).catch(() => {
                            this.VC !== y.HiddenState && (this.kC.isPlayPending() && this.RC ? this.NC(y.PlayingState) : this.NC(y.StoppedState));
                        });
                    }
                    JC() {
                        this.kC.pause(), this.NC(y.PausedState);
                    }
                    GC() {
                        this.NC(y.BufferingState), this.jC.getCurrentVideoData(() => {
                            this.HC(y.HiddenState) || this.WC === y.PausedState || this.YC(this.kC.play());
                        });
                    }
                    KC() {
                        this.VC !== y.PostrollState && (this.TC = !1);
                    }
                    resume() {
                        this.UC && this.NC(this.UC);
                    }
                    play() {
                        this.WC = y.PlayingState, this.HC(y.PlayingState) || this.HC(y.PrerollState) || this.HC(y.PostrollState) || this.HC(y.HiddenState) || (!this._C || this.TC || this.PC ? this.HC(y.StoppedState) && this.MC ? this.XC() : this.GC() : this.qC());
                    }
                    isInPlayingState() {
                        return this.HC(y.PlayingState);
                    }
                    setVideoQueue(t, i) {
                        0 === this.BC.observers.length && this.initListeners(), i ? this.DC-- : this.DC++;
                        const e = this.jC.getAdjustedVideoIndex(t, this.DC);
                        this.BC.next(e), this.mediator.publish(this, Ko[Ko.VideoQueued], { payload: e });
                    }
                    $C(t) {
                        if (this.kC.pause(), this.KC(), this.NC(y.BufferingState), this.ZC && this.ZC.isPending)
                            try {
                                this.ZC.reject(), this.ZC = null;
                            } catch (t) {
                                this.ZC = null;
                            }
                        const i = this.jC.setVideo(t);
                        this.ZC = new jt.a(), this.ZC.resolve(i), this.ZC.promise.then(t => {
                            this.ZC = null, this.kC.setSource(t).then(() => {
                                return this.play();
                            });
                        });
                    }
                    pause(t = (() => {
                        return !1;
                    })()) {
                        this.WC = y.PausedState, this.HC(y.PrerollState) || this.HC(y.PostrollState) || this.HC(y.HiddenState) || this.JC();
                    }
                    pauseToggle() {
                        if (this.HC(y.PausedState) || this.HC(y.PlayingState))
                            return this.HC(y.PausedState) && this.EC ? (this.EC = !1, void this.play()) : this.HC(y.PlayingState) ? (this.EC = !0, void this.pause()) : void 0;
                    }
                    stop() {
                        this.kC.pause(), this.NC(y.StoppedState);
                    }
                    hide() {
                        this.kC.hide(), this.kC.pause(), this.NC(y.HiddenState);
                    }
                    show(t = (() => {
                        return !0;
                    })()) {
                        this.HC(y.HiddenState) && (this.kC.show(), this.UC !== y.PostrollState ? t && (this.WC === y.PlayingState ? this.GC() : this.JC()) : this.XC());
                    }
                    handleVideoEnd() {
                        this.AC && !this.PC ? this.QC() : this.XC();
                    }
                    onEnterBuffering() {
                        this.HC(y.PlayingState) && this.NC(y.BufferingState);
                    }
                    onExitBuffering() {
                        this.HC(y.BufferingState) && (this.WC === y.PlayingState ? this.GC() : this.JC());
                    }
                    getCurrentState() {
                        return this.VC;
                    }
                    replay() {
                        this.kC.currentTime = 0, !this._C || this.PC ? this.GC() : this.qC();
                    }
                    exitRollBreak() {
                        this.VC !== y.PostrollState ? this.zC() : this.XC();
                    }
                    onFullScreenChange(t) {
                        this.IC && (this.PC = t, t || setTimeout(() => {
                            this.WC === y.PlayingState ? (this.pause(), this.play()) : this.pause();
                        }, this.LC));
                    }
                }
                class ic {
                    constructor(t) {
                        this.tT = [], this.tT = t, this.iT(0);
                    }
                    eT() {
                        this.sT(this.nT).getMetadata();
                    }
                    iT(t) {
                        this.nT = t, this.eT();
                    }
                    sT(t) {
                        return this.tT[t];
                    }
                    setAvailableQualitiesForSourceMeta(t, i) {
                        t.setAvailableQualities(i);
                    }
                    get nextVideoIndex() {
                        return this.nT === this.tT.length - 1 ? 0 : this.nT + 1;
                    }
                    get prevVideoIndex() {
                        return 0 === this.nT ? this.tT.length - 1 : this.nT - 1;
                    }
                    get currentVideoIndex() {
                        return this.nT;
                    }
                    getCurrentVideoData(t) {
                        this.sT(this.nT).getMetadata(t);
                    }
                    getVideoData(t, i) {
                        this.sT(t).getMetadata(i);
                    }
                    getAdjustedVideoIndex(t, i) {
                        return 1 === i || -1 === i ? t : i > 0 ? t + i < this.length ? t + i : this.length - 1 : t + i < 0 ? 0 : t + i;
                    }
                    setVideo(t) {
                        return new Promise(i => {
                            this.sT(t).getMetadata(e => {
                                this.iT(t), i(e);
                            });
                        });
                    }
                    get length() {
                        return this.tT.length;
                    }
                    destroy() {
                        this.tT = [];
                    }
                }
                !function (t) {
                    t.Autoplay = 'autoplay', t.Autochain = 'autochain', t.UserInitiated = 'user initiated';
                }(Zo || (Zo = {}));
                class ec {
                    constructor(t) {
                        this.streamFormat = Zo.Autoplay, this.isMuted = !0, t === h.ProtoPlayerPlaybackModeEnum.ClickToPlay && (this.streamFormat = Zo.UserInitiated);
                    }
                    get streamFormatValue() {
                        return `${ this.streamFormat }${ this.isMuted ? ' muted' : '' }`;
                    }
                }
                const sc = {
                    [h.ProtoVideoQuality.High1080p]: {
                        quality: g.Strict,
                        height: 1080
                    },
                    [h.ProtoVideoQuality.High720p]: {
                        quality: g.Strict,
                        height: 720
                    },
                    [h.ProtoVideoQuality.Medium360p]: {
                        quality: g.Strict,
                        height: 360
                    }
                };
                class nc extends o.a {
                    constructor(t, i, e, s, n) {
                        super(), this.mediator = t, this.cp = i, this.Mm = e, this.Cm = s, this.ym = n, this.rT = !1, this.hT = !0, this.aT(), this.oT(), this.cT(), this.uT = new ec(this.cp.playbackMode);
                    }
                    start() {
                        this.Xm();
                    }
                    get streamFormat() {
                        return this.uT.streamFormatValue;
                    }
                    play(t = (() => {
                        return !1;
                    })()) {
                        t && (this.mediator.publish(this, c.b.UserInteraction, { payload: { playback: !0 } }), this.uT.streamFormat = Zo.UserInitiated), this.lT.play();
                    }
                    pause(t = (() => {
                        return !1;
                    })()) {
                        t && this.mediator.publish(this, c.b.UserInteraction, { payload: { playback: !1 } }), this.lT.pause(t);
                    }
                    setVideo(t, i = (() => {
                        return !1;
                    })()) {
                        this.lT.setVideoQueue(t, i);
                    }
                    show(t = (() => {
                        return !0;
                    })()) {
                        this.lT.show(t);
                    }
                    hide() {
                        this.lT.hide();
                    }
                    get isHidden() {
                        return this.lT.getCurrentState() === y.HiddenState;
                    }
                    enterFullscreen() {
                        this.uu = !0, this.dT.expand(), this.lT.onFullScreenChange(!0);
                    }
                    exitFullscreen() {
                        this.uu = !1, this.dT.collapse(), this.lT.onFullScreenChange(!1);
                    }
                    resize(t) {
                        this.dT.onResize(t);
                    }
                    get width() {
                        return this.kC.width;
                    }
                    get height() {
                        return this.kC.height;
                    }
                    get volume() {
                        return this.kC.volume;
                    }
                    set volume(t) {
                        this.kC.volume = t, this.dT.updateVolume(t), this.uT.isMuted = t <= 0;
                    }
                    getCurrentVideoData(t) {
                        return this.jC.getCurrentVideoData(t);
                    }
                    getVideoData(t, i) {
                        return this.jC.getVideoData(t, i);
                    }
                    get isIosFullscreen() {
                        return this.kC.isIosFullscreen;
                    }
                    set isIosFullscreen(t) {
                        this.kC.isIosFullscreen = t;
                    }
                    get currentTime() {
                        return this.kC.currentTime;
                    }
                    get duration() {
                        return this.kC.duration;
                    }
                    showCaptions() {
                        this.kC.showCaptions(), this.dT.toggleCaptionState(!0), this.mediator.publish(this, xt[xt.CaptionOn]);
                    }
                    hideCaptions() {
                        this.kC.hideCaptions(), this.dT.toggleCaptionState(!1), this.mediator.publish(this, xt[xt.CaptionOff]);
                    }
                    toggleExpandButton(t) {
                        this.dT.toggleExpandButtonDisplay(t);
                    }
                    getQuality() {
                        let t;
                        return this.jC.getCurrentVideoData(i => {
                            t = i.getClosestSourceQuality(this.kC.currentQualitySettings.height).videoHeight;
                        }), t;
                    }
                    setQuality(t) {
                        this.jC.getCurrentVideoData(i => {
                            const e = i.getClosestSourceQuality(t);
                            this.kC.setQuality({
                                height: e.videoHeight,
                                quality: g.Strict
                            });
                        });
                    }
                    setAutoQuality() {
                        this.kC.setQuality({
                            height: this.kC.height,
                            quality: g.Auto
                        });
                    }
                    getAvailableQualities() {
                        let t = [];
                        return this.jC.getCurrentVideoData(i => {
                            t = i.getAvailableQualities().map(t => {
                                return t.videoHeight;
                            });
                        }), t;
                    }
                    stop() {
                        this.lT && this.lT.stop();
                    }
                    resume() {
                        this.lT && this.lT.resume();
                    }
                    startContent() {
                        this.lT.exitRollBreak();
                    }
                    destroy() {
                        this.dT.destroy(), this.jC.destroy(), this.kC.destroy();
                    }
                    fT() {
                        this.jC.getCurrentVideoData(t => {
                            this.kC.setSource(t), this.dT.updateCurrentVideo(t), this.pT(t, this.kC.currentQualitySettings), this.cp.closedCaptionDefault ? this.showCaptions() : this.hideCaptions();
                        });
                    }
                    bT() {
                        this.subscribe(Ko[Ko.StateChanged], this.lT, ({payload: t}) => {
                            this.dT.changeState(t), this.mediator.publish(this, A.StateChanged, { payload: t });
                        }), this.subscribe(Ko[Ko.ContentEnd], this.lT, () => {
                            this.vT();
                        }), this.subscribe(Ko[Ko.VideoQueued], this.lT, ({payload: t}) => {
                            this.mediator.publish(this, A.VideoQueued, { payload: { videoIndex: t } });
                        });
                    }
                    mT() {
                        this.subscribe(xt[xt.Play], this.dT, () => {
                            if (this.hT && this.cp.playbackMode === h.ProtoPlayerPlaybackModeEnum.ClickToPlay) {
                                const t = this.cp.soundMode === h.ProtoPlayerSoundMode.On ? 1 : 0;
                                this.volume = t, this.mediator.publish(this, xt[xt.Volume], { payload: { volume: t } });
                            }
                            this.hT = !1, this.mediator.publish(this, c.b.UserInteraction, { payload: { playback: !0 } }), this.play();
                        }), this.subscribe(xt[xt.Volume], this.dT, ({payload: t}) => {
                            this.kC.volume = t, this.uT.isMuted = t <= 0, this.mediator.publish(this, c.b.UserInteraction, { payload: { volume: !0 } }), this.mediator.publish(this, xt[xt.Volume], { payload: { volume: t } });
                        }), this.subscribe(xt[xt.Pause], this.dT, () => {
                            this.mediator.publish(this, c.b.UserInteraction, { payload: { playback: !1 } });
                            this.pause(!0);
                        }), this.subscribe(xt[xt.Seek], this.dT, ({payload: t}) => {
                            this.kC.forceCurrentTime(t);
                        }), this.subscribe(xt[xt.SeekingStart], this.dT, () => {
                            this.lT.pauseToggle();
                        }), this.subscribe(xt[xt.SeekingStopped], this.dT, () => {
                            this.lT.pauseToggle();
                        }), this.subscribe(xt[xt.OverlayClick], this.dT, () => {
                            this.jC.getCurrentVideoData(t => {
                                Object(rt.h)(t.clickUrl) && (this.cp.disableClickUrl || (this.Mm.services.MacrosService.setVideoTime(this.kC.currentTime), this.Mm.services.GlobalDomUtilsService.open(this.Mm.services.MacrosService.setupMacros(t.clickUrl), kt.c.Blank)), this.mediator.publish(this, c.b.GeneralUserInteraction, { payload: { type: h.ProtoMediaClickTypeEnum.UrlClick } })), this.mediator.publish(this, xt[xt.OverlayClick]);
                            });
                        }), this.subscribe(xt[xt.Expand], this.dT, () => {
                            this.mediator.publish(this, xt[xt.Expand]);
                        }), this.subscribe(xt[xt.Collapse], this.dT, () => {
                            this.mediator.publish(this, xt[xt.Collapse]);
                        }), this.subscribe(xt[xt.Quality], this.dT, ({payload: t}) => {
                            this.kC.setQuality(t);
                        }), this.subscribe(xt[xt.Close], this.dT, () => {
                            this.mediator.publish(this, c.b.UserInteraction, {
                                payload: {
                                    playback: !1,
                                    isFullscreenClose: this.uu
                                }
                            }), this.mediator.publish(this, xt[xt.Close]);
                        }), this.subscribe(xt[xt.CaptionOn], this.dT, () => {
                            this.showCaptions();
                        }), this.subscribe(xt[xt.CaptionOff], this.dT, () => {
                            this.hideCaptions();
                        }), this.subscribe(xt[xt.CaptionOn], this.kC, () => {
                            this.dT.toggleCaptionState(!0);
                        }), this.subscribe(xt[xt.CaptionOff], this.kC, () => {
                            this.dT.toggleCaptionState(!1);
                        }), this.subscribe(xt[xt.CaptionUpdate], this.kC, ({payload: t}) => {
                            this.dT.updateCaptions(t);
                        }), this.subscribe(c.b.UserInteraction, this.dT, () => {
                            this.mediator.publish(this, xt[c.b.UserInteraction], { payload: { videoIndex: this.jC.currentVideoIndex } });
                        }), this.relay(c.b.GeneralUserInteraction, this.dT, this, this.mediator);
                    }
                    KC(t = (() => {
                        return !0;
                    })()) {
                        t && (this.jC.getCurrentVideoData(t => {
                            this.gT(t), this.dT.updateCurrentVideo(t), this.pT(t, this.kC.currentQualitySettings);
                        }), this.dT.updateCaptions()), this.mediator.publish(this, O.NewVideo, { payload: { videoIndex: this.jC.currentVideoIndex } }), this.rT = !1, this.yT();
                    }
                    Xm() {
                        this.mT(), this.wT(), this.OT(), this.xT();
                    }
                    ST() {
                        return {
                            logoPosition: this.cp.logoPosition,
                            logoUrl: this.cp.logoUrl,
                            isMobile: this.Mm.config.isMobile,
                            hasUpNext: this.cp.upNextMode === M.ProtoPlayerUpNextMode.Next,
                            accentColor: this.cp.accentColor || d.l.Connatix,
                            iconsColor: this.cp.iconsColor || d.l.Icons,
                            tooltipBackgroundColor: this.cp.tooltipBackgroundColor || d.l.Connatix,
                            tooltipTextColor: this.cp.tooltipTextColor || d.l.Icons,
                            closeButtonMode: this.cp.closeButtonMode,
                            floatingCloseButtonMode: this.cp.floatingSettings.floatingCloseButtonMode,
                            isCloseButton: this.cp.isCloseButton,
                            uiComponentsVisibility: this.cp.uiComponentsVisibility,
                            sharingDestinations: this.cp.sharingDestinations,
                            closedCaptionDefault: this.cp.closedCaptionDefault,
                            alwaysDisplayControls: this.cp.alwaysDisplayControls,
                            os: this.Mm.config.os.os
                        };
                    }
                    cT() {
                        const t = {
                                browser: this.Mm.config.browser.browserType,
                                os: this.Mm.config.os.os,
                                osVersion: this.Mm.config.os.osVersion
                            }, i = this.cp.soundMode === h.ProtoPlayerSoundMode.On && this.cp.playbackMode !== h.ProtoPlayerPlaybackModeEnum.ClickToPlay ? 1 : 0;
                        this.jT = sc[this.cp.videoQuality], this.kT(t, i), this.subscribe(x.Loaded, this.kC, ({
                            payload: {
                                qualityList: t,
                                videoMeta: i
                            }
                        }) => {
                            this.jC.setAvailableQualitiesForSourceMeta(i, t.qualityList), this.dT.updateCurrentVideo(i);
                        }), this.subscribe(O.Buffering, this.kC, () => {
                            this.lT.onEnterBuffering();
                        }), this.subscribe(O.Buffered, this.kC, () => {
                            this.lT.onExitBuffering();
                        });
                    }
                    pT(t, i) {
                        const e = t.getAvailableQualities();
                        Object(l.h)(e) && this.dT.updateQuality(t, i);
                    }
                    gT(t) {
                        this.Mm.services.MacrosService.setVideoDuration(t.duration), this.Mm.services.MacrosService.setVideoTitle(t.title), this.Mm.services.MacrosService.setVideoDescription(t.description), this.Mm.services.MacrosService.setVideoUrl(t.clickUrl), this.Mm.services.MacrosService.setVideoId(t.id);
                    }
                    oT() {
                        this.jC = new ic(this.cp.playlist), 1 === this.jC.length && this.dT.togglePlaylistControls(!1);
                    }
                    aT() {
                        const t = this.ST();
                        this._T(t), this.dT.updateVolume(this.cp.soundMode === h.ProtoPlayerSoundMode.On ? 1 : 0);
                    }
                    wT() {
                        this.relay(O.PlayError, this.kC, this, this.mediator), this.subscribe(O.NewVideo, this.kC, () => {
                            this.KC();
                        });
                    }
                    OT() {
                        this.subscribe(m.Timeupdate, this.kC, ({payload: t}) => {
                            this.dT.updateDuration(this.kC.currentTime, this.kC.duration), this.Mm.services.MacrosService.setVideoTime(this.kC.currentTime), !this.rT && t && (this.rT = !0, this.mediator.publish(this, A.FirstFramePlayed)), this.kC.currentTime !== this.AT && this.IT(t), this.AT = this.kC.currentTime;
                        }), this.subscribe(m.Ended, this.kC, () => {
                            this.lT.handleVideoEnd();
                        });
                    }
                    xT() {
                        this.subscribe(x.CurrentQuality, this.kC, ({payload: t}) => {
                            this.jC.getCurrentVideoData(i => {
                                this.pT(i, t);
                            });
                        }), this.subscribe(x.Change, this.kC, ({payload: t}) => {
                            this.jC.getCurrentVideoData(i => {
                                const e = i.getAvailableQualities();
                                if (Object(l.h)(e)) {
                                    const e = i.getClosestSourceQuality(t);
                                    this.jT = {
                                        quality: g.Strict,
                                        height: e.videoHeight
                                    }, this.mediator.publish(this, x.Change, { payload: e.videoHeight });
                                }
                            });
                        });
                    }
                }
                var rc = e(112), hc = e.n(rc);
                class ac {
                    constructor(t, i = (() => {
                        return !1;
                    })()) {
                        this.settings = t, this.CT = i, this.logoGeneralPosition = {
                            top: [
                                M.ProtoLogoPositionMode.TopLeft,
                                M.ProtoLogoPositionMode.TopRight
                            ],
                            bottom: [
                                M.ProtoLogoPositionMode.BottomLeft,
                                M.ProtoLogoPositionMode.BottomRight
                            ],
                            center: [M.ProtoLogoPositionMode.Center],
                            controlbar: [M.ProtoLogoPositionMode.ControlBar]
                        }, this.TT = (t, i = (() => {
                            return '';
                        })()) => {
                            return `<cnx class="cnx-ui-btn ${ i }">[[${ t }]]</cnx>`;
                        };
                    }
                    getLogoTemplate(t) {
                        if (t.indexOf(this.settings.logoPosition) > -1) {
                            if (this.settings.logoPosition === M.ProtoLogoPositionMode.ControlBar)
                                return `<cnx class="cnx-ui-btn cnx-d-sm-none cnx-d-md-none cnx-hide-on-volume-hover">[[${ qi.LogoComponent }]]</cnx>`;
                            if (!1 === this.CT || this.settings.logoPosition !== M.ProtoLogoPositionMode.BottomLeft)
                                return `<cnx class="cnx-logo-bar">[[${ qi.LogoComponent }]]</cnx>`;
                        }
                        return '';
                    }
                    get castButton() {
                        return this.settings.uiComponentsVisibility.casting ? this.TT(qi.CastButton) : '';
                    }
                    get shareButton() {
                        return Object(l.h)(this.settings.sharingDestinations) ? this.TT(qi.ShareButton) : '';
                    }
                    expandButton(t) {
                        return !(this.settings.isInApp && this.settings.os === St.b.Android) && this.settings.uiComponentsVisibility.expandButton ? this.TT(qi.ExpandButton, t) : '';
                    }
                    settingsButton() {
                        return this.settings.isInApp ? '' : `<cnx class="cnx-ui-btn cnx-d-md-none">[[${ qi.SettingsButton }]]</cnx>`;
                    }
                    get muteWatermark() {
                        return this.settings.uiComponentsVisibility.muteWatermark && this.settings.logoPosition !== M.ProtoLogoPositionMode.BottomLeft ? hc.a : '';
                    }
                    get closeButton() {
                        return this.settings.isCloseButton ? `<cnx class="cnx-ui-btn cnx-close-button">[[${ qi.CloseButton }]]</cnx>` : '';
                    }
                    get upNextBox() {
                        return this.settings.hasUpNext ? `[[${ qi.UpNextBox }]]` : '';
                    }
                    get livePoster() {
                        return this.CT ? `[[${ qi.LivePoster }]]` : '';
                    }
                    getLogoPositionClass(t) {
                        return t === M.ProtoLogoPositionMode.TopRight && this.settings.closeButtonMode ? '' : this.settings.logoPosition === t ? 'logo-right' : '';
                    }
                    isAlwaysOn() {
                        return this.settings.closeButtonMode === h.ProtoPlayerCloseButtonMode.AlwaysOn;
                    }
                    get desktopTemplate() {
                        return `\n            <cnx class="cnx-ui-gradient-top"></cnx>\n            [[${ qi.QueStateOverlay }]]\n            <cnx class="cnx-ui-head cnx-d-sm-none cnx-ui-bar cnx-lock-bar-on-hover ${ this.getLogoPositionClass(M.ProtoLogoPositionMode.TopRight) }">\n                <cnx class="cnx-ui-head-buttons">\n                    ${ this.castButton }\n                    ${ this.shareButton }\n                    ${ this.closeButton }\n                </cnx>\n                ${ this.getLogoTemplate(this.logoGeneralPosition.top) }\n            </cnx>\n            <cnx class="cnx-ui-spacer cnx-d-sm-none"></cnx>\n            <cnx class="cnx-ui-content cnx-ui-bar cnx-center-align"><cnx class="cnx-ui-btn">[[${ qi.BigPlayButton }]]</cnx></cnx>\n            <cnx class="cnx-ui-spacer cnx-d-sm-none"></cnx>\n            <cnx class="cnx-ui-content cnx-ui-bar cnx-d-sm-none ${ this.getLogoPositionClass(M.ProtoLogoPositionMode.BottomRight) }">\n                ${ this.muteWatermark }\n                ${ this.upNextBox }\n                ${ this.getLogoTemplate(this.logoGeneralPosition.bottom) }\n                [[${ qi.CaptionComponent }]]\n            </cnx>\n            <cnx class="cnx-ui-progress cnx-ui-bar cnx-d-sm-none">\n                ${ this.beforeProgressBarLabel }\n                <cnx class="cnx-ui-progress-bar">[[${ qi.ProgressBar }]]</cnx>\n                ${ this.afterProgressBarLabel }\n            </cnx>\n            <cnx class="cnx-ui-buttons cnx-ui-bar cnx-lock-bar-on-hover">\n                <cnx class="cnx-ui-btn cnx-hide-on-single-video">[[${ qi.PreviousButton }]]</cnx>\n                <cnx class="cnx-ui-btn">[[${ qi.PlayButton }]]</cnx>\n                <cnx class="cnx-ui-btn cnx-hide-on-single-video">[[${ qi.UpNextButton }]]</cnx>\n                <cnx class="cnx-d-sm-none cnx-d-md-none">[[${ qi.VolumeControls }]]</cnx>\n                <cnx class="cnx-ui-btn cnx-d-sm-none cnx-d-lg-none cnx-d-xl-none">[[${ qi.VolumeButton }]]</cnx>\n                <cnx class="cnx-ui-spacer cnx-d-sm-none"></cnx>\n                <cnx class="cnx-ui-btn cnx-d-sm-none cnx-d-md-none cnx-hide-on-volume-hover">[[${ qi.CaptionButton }]]</cnx>\n                ${ this.settingsButton() }\n                ${ this.expandButton('cnx-d-sm-none cnx-hide-on-volume-hover') }\n                ${ this.getLogoTemplate(this.logoGeneralPosition.controlbar) }\n            </cnx>\n            <cnx class="cnx-ui-gradient-bottom"></cnx>\n    `.trim();
                    }
                    get mobileTemplate() {
                        return `\n            [[${ qi.QueStateOverlay }]]\n            <cnx class="cnx-ui-head cnx-d-sm-none cnx-ui-bar ${ this.getLogoPositionClass(M.ProtoLogoPositionMode.TopRight) }">\n                <cnx class="cnx-ui-head-buttons">\n                    ${ this.castButton }\n                    ${ this.shareButton }\n                    <cnx class="cnx-ui-btn ${ d.g.ContextController }">[[${ qi.MoreButton }]]</cnx>\n                    ${ this.closeButton }\n                </cnx>\n                ${ this.getLogoTemplate(this.logoGeneralPosition.top) }\n            </cnx>\n            <cnx class="cnx-ui-spacer cnx-d-sm-none"></cnx>\n            <cnx class="cnx-ui-content cnx-ui-bar cnx-center-align">\n                <cnx class="cnx-ui-btn">[[${ qi.BigPlayButton }]]</cnx>\n            </cnx>\n            <cnx class="cnx-ui-content-mobile cnx-ui-bar cnx-vertical-align">\n                <cnx class="cnx-ui-spacer"></cnx>\n                <cnx class="cnx-ui-btn cnx-hide-on-single-video">[[${ qi.PreviousButton }]]</cnx>\n                <cnx class="cnx-ui-spacer"></cnx>\n                <cnx class="cnx-ui-btn">[[${ qi.PlayButton }]]</cnx>\n                <cnx class="cnx-ui-spacer"></cnx>\n                <cnx class="cnx-ui-btn cnx-hide-on-single-video">[[${ qi.UpNextButton }]]</cnx>\n                <cnx class="cnx-ui-spacer"></cnx>\n            </cnx>\n            <cnx class="cnx-ui-spacer cnx-d-sm-none"></cnx>\n            <cnx class="cnx-ui-content cnx-ui-bar cnx-d-sm-none">\n                ${ this.muteWatermark }\n                ${ this.upNextBox }\n            </cnx>\n            <cnx class="cnx-mobile-captions-bar cnx-ui-bar ">\n                [[${ qi.CaptionComponent }]]\n            </cnx>\n            <cnx class="cnx-ui-buttons cnx-ui-bar cnx-d-sm-none ">\n                <cnx class="cnx-ui-btn">[[${ qi.VolumeButton }]]</cnx>\n                <cnx class="cnx-ui-progress-bar">[[${ qi.ProgressBar }]]</cnx>\n                <cnx class="cnx-ui-btn cnx-d-md-none cnx-d-lg-none">[[${ qi.CaptionButton }]]</cnx>\n                ${ this.settingsButton() }\n                ${ this.expandButton() }\n                ${ this.getLogoTemplate(this.logoGeneralPosition.controlbar) }\n                ${ this.liveBottomLogoIfNeeded }\n            </cnx>\n        `.trim();
                    }
                    get template() {
                        const t = this.settings.isMobile ? d.g.Mobile : '', i = this.settings.isMobile ? this.mobileTemplate : this.desktopTemplate;
                        return `<cnx class="cnx-ui cnx-ui-video ${ this.isLiveFlag } ${ t }">\n                    ${ this.livePoster }\n                    ${ i }\n                    [[${ qi.QualityMenu }]]\n                    [[${ qi.ContextMenu }]]\n                    [[${ qi.ElementsSettingsMenu }]]\n                    [[${ qi.Loader }]]\n                </cnx>`.trim();
                    }
                    get beforeProgressBarLabel() {
                        return this.CT ? `[[${ qi.LiveIcon }]]` : `<cnx class="cnx-ui-progress-label cnx-d-md-none"><cnx-span>[[${ qi.ElapsedTimeLabel }]]</cnx-span></cnx>`;
                    }
                    get afterProgressBarLabel() {
                        return this.CT ? '<cnx class="cnx-ui-progress-label-live cnx-d-md-none"></cnx>' : `<cnx class="cnx-ui-progress-label cnx-d-md-none"><cnx-span>[[${ qi.TotalDurationLabel }]]</cnx-span></cnx>`;
                    }
                    get liveBottomLogoIfNeeded() {
                        return this.CT && this.settings.logoPosition === M.ProtoLogoPositionMode.BottomRight ? `<cnx class="cnx-live-bottom-logo">[[${ qi.LogoComponent }]]</cnx>` : '';
                    }
                    get isLiveFlag() {
                        return this.CT ? 'cnx-live' : '';
                    }
                }
                class oc extends Zi {
                    onClick() {
                        this.context.mediator.publish(this.context, xt[xt.OverlayClick]);
                    }
                    initState() {
                        super.initState(), this.context.overlayModule.showUiControls();
                    }
                    exitState() {
                        super.exitState();
                    }
                }
                class cc extends ie {
                    onClick() {
                    }
                    initState() {
                        super.initState(), this.context.overlayModule.disableMouseMove(), this.context.overlayModule.disableHover(), this.context.overlayModule.removeOverlayClickEvents(), this.context.overlayModule.showUiControls(!1);
                    }
                    exitState() {
                        super.exitState(), this.context.overlayModule.enableMouseMove(), this.context.overlayModule.addOverlayClickEvents(), this.context.overlayModule.enableHover();
                    }
                }
                class uc extends o.a {
                    constructor(t, i, e, s, n, r = (() => {
                        return !1;
                    })()) {
                        super(), this.mediator = t, this.hb = i, this.PT = e, this.MT = s, this.hc = n, this.Qn = r, this.ET = !1, this.LT = 3000, this.RT = !1, this.BT = t => {
                            'margin-top' !== t.propertyName && 'margin' !== t.propertyName && 'margin-bottom' !== t.propertyName || this.mediator.publish(this, xt[xt.UIShowStart]);
                        }, this.DT = t => {
                            'margin-top' !== t.propertyName && 'margin' !== t.propertyName && 'margin-bottom' !== t.propertyName || this.mediator.publish(this, xt[xt.UIEndShowHide]);
                        }, this.FT = () => {
                            this.PT && (this.PT.show(), Object(T.i)(this.hb)), Object(T.t)(this.hb, d.j.Paused) || this.showUiControls();
                        }, this.VT = () => {
                            this.UT(this.LT);
                        }, this.$T = () => {
                            this.Qn && this.ET ? this.showUiControls() : this.mediator.publish(this, xt[xt.OverlayClick]);
                        }, this.$u = t => {
                            'transform' === t.propertyName && (this.PT && this.PT.hide(), this.hb.removeEventListener('transitionend', this.$u));
                        }, this.NT = () => {
                            this.showUiControls();
                        }, this.addOverlayClickEvents = () => {
                            this.unsubscribe(ht.a[ht.a.Click], this.hc, this.$T), this.subscribe(ht.a[ht.a.Click], this.hc, this.$T);
                        }, this.removeOverlayClickEvents = () => {
                            this.unsubscribe(ht.a[ht.a.Click], this.hc, this.$T);
                        }, this.enableMouseMove = () => {
                            this.MT || this.Qn || this.hb.addEventListener('mousemove', this.NT);
                        }, this.disableMouseMove = () => {
                            this.Qn || this.hb.removeEventListener('mousemove', this.NT);
                        }, this.enableHover = () => {
                            this.MT || (this.Qn ? this.hb.addEventListener('touchstart', this.FT, { passive: !0 }) : (this.hb.addEventListener('mouseenter', this.FT), this.hb.addEventListener('mouseleave', this.VT)));
                        }, this.disableHover = () => {
                            this.Qn ? this.hb.removeEventListener('touchstart', this.FT) : (this.hb.removeEventListener('mouseenter', this.FT), this.hb.removeEventListener('mouseleave', this.VT)), clearTimeout(this.HT);
                        }, i.addEventListener('transitionend', this.DT), i.addEventListener('transitionstart', this.BT), this.Qn || this.qT(i);
                    }
                    qT(t) {
                        const i = t.getElementsByClassName('cnx-lock-bar-on-hover');
                        Object(l.c)(i).forEach(t => {
                            t.addEventListener('mouseenter', () => {
                                this.uiSticky = !0;
                            }), t.addEventListener('mouseleave', () => {
                                this.uiSticky = !1;
                            });
                        });
                    }
                    UT(t) {
                        clearTimeout(this.HT), this.HT = setTimeout(() => {
                            this.hideUiControls();
                        }, t);
                    }
                    showUiControls(t = (() => {
                        return !0;
                    })()) {
                        if (t && !this.MT && this.UT(this.LT), this.Qn) {
                            const t = Object(T.t)(this.hb, d.g.ShowControls);
                            this.ET = !t;
                        }
                        !0 !== this.zT && (this.zT = !0, this.hb.removeEventListener('transitionend', this.$u), Object(T.a)(this.hb, d.g.ShowControls), this.PT && this.PT.show());
                    }
                    hideUiControls() {
                        !1 === this.zT || this.RT || (this.zT = !1, this.mediator.publish(this, xt[xt.UIHideStart]), this.PT && this.hb.addEventListener('transitionend', this.$u), Object(T.I)(this.hb, d.g.ShowControls));
                    }
                    start() {
                        this.hc.register(this.hb, this, this.hc), this.relay(ht.a[ht.a.Scroll], this.hc, this, this.mediator), this.enableHover(), this.addOverlayClickEvents();
                    }
                    destroy() {
                        this.disableHover(), this.disableMouseMove(), this.unsubscribeAll(this.hc), this.hc.unregisterAll(this), clearTimeout(this.HT);
                    }
                    set uiSticky(t) {
                        this.RT = t, !1 !== t || this.MT || this.UT(this.LT);
                    }
                }
                class lc {
                    constructor(t) {
                        this.WT = t;
                    }
                    GT(t) {
                        return this.WT.filter(i => {
                            return t.instance !== i.instance;
                        });
                    }
                    JT(t) {
                        return this.WT.find(({name: i}) => {
                            return t === i;
                        });
                    }
                    QT(t) {
                        t.forEach(({instance: t}) => {
                            t.isOpen && t.close();
                        });
                    }
                    toggleContextMenu(t, i = (() => {
                        return {};
                    })()) {
                        const e = this.JT(t);
                        if (e.instance.isOpen)
                            return e.instance.close(), !1;
                        {
                            const {
                                    targetCoordinates: t,
                                    holdPause: s
                                } = i, n = t || e.instance.getAnchorCoordinatesTo(e.linkedComponent);
                            return e.instance.open(n, s), this.QT(this.GT(e)), !0;
                        }
                    }
                    isAnyContextMenuOpen() {
                        return !!this.WT.find(({instance: t}) => {
                            return t.isOpen;
                        });
                    }
                    closeContextMenu(t) {
                        const i = this.JT(t).instance;
                        i.isOpen && i.close();
                    }
                    closeAllContextMenus() {
                        this.QT(this.WT);
                    }
                }
                class dc extends Hi {
                    onClick() {
                    }
                    initState() {
                        this.context.$uiContainer.classList.add(d.j.Loading);
                        const t = this.context.getComponent(qi.Loader);
                        t && t.show();
                    }
                    exitState() {
                        this.context.$uiContainer.classList.remove(d.j.Loading);
                        const t = this.context.getComponent(qi.Loader);
                        t && t.hide();
                    }
                }
                class fc extends cc {
                    initState() {
                        super.initState(), this.context.overlayModule.hideUiControls();
                    }
                    exitState() {
                        super.exitState();
                    }
                }
                class pc extends Hi {
                    onClick() {
                    }
                    initState() {
                        Object(T.u)(this.context.$uiContainer);
                    }
                    exitState() {
                        Object(T.O)(this.context.$uiContainer);
                    }
                }
                class bc extends Hi {
                    onClick() {
                    }
                    initState() {
                        this.context.$uiContainer.classList.add(d.j.Preroll), this.context.getComponent(qi.QueStateOverlay).show();
                        const t = this.context.getComponent(qi.UpNextBox);
                        t && t.hide();
                    }
                    exitState() {
                        this.context.$uiContainer.classList.remove(d.j.Preroll), this.context.getComponent(qi.QueStateOverlay).hide();
                    }
                }
                class vc extends le {
                    constructor(t, i, e, s, n, r = (() => {
                        return {};
                    })(), h, a) {
                        super(t, s, i, n, new cn(i, e, s, r, a)), this.mediator = t, this.globalDomUtilsService = i, this.interactionService = e, this.$container = s, this.settings = r, this.appId = h, this.rb = {
                            [y.PlayingState]: new oc(this),
                            [y.PausedState]: new cc(this),
                            [y.BufferingState]: new dc(this),
                            [y.StoppedState]: new fc(this),
                            [y.HiddenState]: new pc(this),
                            [y.PrerollState]: new bc(this),
                            [y.PostrollState]: new bc(this)
                        }, this.bt = 0, this.XT = null, this.YT = 2000, this.KT = t => {
                            if (this.ym === d.r.Sm)
                                return;
                            if (t.preventDefault(), !this.getComponent(qi.ContextMenu))
                                return;
                            clearTimeout(this.XT), this.ZT.closeAllContextMenus();
                            const i = {
                                targetCoordinates: {
                                    clientX: t.pageX,
                                    clientY: t.pageY,
                                    height: 0,
                                    width: 0
                                }
                            };
                            this.ZT.toggleContextMenu(qi.ContextMenu, i), this.XT = setTimeout(() => {
                                this.ZT.closeContextMenu(qi.ContextMenu);
                            }, this.YT);
                        }, this.tP = () => {
                            this.Ob.disableTooltips();
                        }, this.iP = () => {
                            this.Ob.enableTooltips();
                        }, this.$T = () => {
                            this.ZT.isAnyContextMenuOpen() ? this.ZT.closeAllContextMenus() : this.currentState.onClick();
                        }, this.eP = () => {
                            this.ZT.closeAllContextMenus();
                        }, this.sP = t => {
                            t.preventDefault();
                        }, this.ym = a;
                    }
                    nP() {
                        const t = `id_${ this.appId }`;
                        this.$uiContainer.id = t;
                        const i = `\n            #${ t } .${ d.f.Icons } {\n                fill: ${ this.settings.iconsColor };\n                background-color: ${ this.settings.iconsColor };\n            }\n            #${ t } .${ d.f.AccentColor } {\n                fill: ${ this.settings.accentColor };\n                background-color: ${ this.settings.accentColor };\n                color: ${ this.settings.accentColor };\n                stroke: ${ this.settings.accentColor };\n            }\n            #${ t } svg.${ d.f.AccentColor } {\n                fill: ${ this.settings.accentColor }!important;\n                background-color: ${ this.settings.accentColor };\n                color: ${ this.settings.accentColor };\n                stroke: ${ this.settings.accentColor };\n            }\n            #${ t } .${ d.f.TooltipText } {\n                color: ${ this.settings.tooltipTextColor };\n            }\n            #${ t } .${ d.f.TooltipBackground } {\n                background-color: ${ this.settings.tooltipBackgroundColor };\n            }\n            @keyframes ${ t }-bar {\n                1% {\n                  fill: transparent; transform: scaleY(1)\n                }\n                30% {fill: ${ this.settings.accentColor }; transform: scaleY(1.1)}\n                60% {fill: transparent; transform: scaleY(1)}\n                100% {fill: transparent; transform: scaleY(1)}\n            }\n\n            #${ t } .cnx-ui-loader polygon {\n                animation-name: ${ t }-bar;\n            }\n        `.trim();
                        this.globalDomUtilsService.addCssString(i);
                    }
                    rP() {
                        const t = [], i = this.getComponent(qi.ElementsSettingsMenu);
                        i && t.push({
                            instance: i,
                            linkedComponent: this.getComponent(qi.MoreButton),
                            name: qi.ElementsSettingsMenu
                        });
                        const e = this.getComponent(qi.QualityMenu);
                        e && t.push({
                            instance: e,
                            linkedComponent: this.getComponent(qi.SettingsButton),
                            name: qi.QualityMenu
                        });
                        const s = this.getComponent(qi.ContextMenu);
                        s && t.push({
                            instance: s,
                            name: qi.ContextMenu
                        }), this.ZT = new lc(t);
                    }
                    hP() {
                        this.overlayModule = new uc(this, this.$uiContainer, this.getComponent(qi.ProgressBar), this.settings.alwaysDisplayControls, this.interactionService, this.settings.isMobile), this.subscribe(xt[xt.OverlayClick], this.overlayModule, this.$T), this.subscribe(xt[xt.UIHideStart], this.overlayModule, this.eP), this.subscribe(xt[xt.UIShowStart], this.overlayModule, this.tP), this.subscribe(xt[xt.UIEndShowHide], this.overlayModule, this.iP), this.subscribe(ht.a[ht.a.Scroll], this.overlayModule, () => {
                            this.aP(ht.a[ht.a.Scroll]);
                        }), this.overlayModule.start();
                    }
                    oP(t) {
                        this.ym !== d.r.Lg && t || this.cP.forEach(i => {
                            t ? Object(T.a)(i, d.h.Invisible) : Object(T.I)(i, d.h.Invisible);
                        });
                    }
                    uP(t) {
                        t ? Object(T.a)(this.$uiContainer, d.g.Muted) : Object(T.I)(this.$uiContainer, d.g.Muted);
                    }
                    lP(t) {
                        const i = this.getComponent(qi.CaptionButton), e = this.getComponent(qi.ElementsSettingsMenu);
                        t ? (i && i.showComponent(), e && e.showCaptionOption()) : (i && i.hideComponent(), e && e.hideCaptionOption());
                    }
                    handleComponentEvent(t, i, e) {
                        switch (super.handleComponentEvent(t, i, e), this.aP(t), t) {
                        case xt[xt.DraggingStart]:
                            this.overlayModule.uiSticky = !0;
                            break;
                        case xt[xt.DraggingStopped]:
                            this.overlayModule.uiSticky = !1;
                            break;
                        case qi[qi.UpNextButton]:
                            this.mediator.publish(this, xt[xt.Next], i);
                            break;
                        case qi[qi.PreviousButton]:
                            this.mediator.publish(this, xt[xt.Prev], i);
                            break;
                        case xt[xt.Seek]:
                            const s = 0, n = 100, r = 0, h = this.bt;
                            this.mediator.publish(this, xt[xt.Seek], { payload: Object(wi.e)(s, n, r, h, i.payload) });
                            break;
                        case xt[xt.Mute]:
                            this.uP(!0), this.mediator.publish(this, xt[xt.Volume], { payload: 0 });
                            break;
                        case xt[xt.Unmute]:
                            this.uP(!1), this.mediator.publish(this, xt[xt.Volume], { payload: 1 });
                            break;
                        case xt[xt.Volume]:
                            this.uP(!i.payload), this.mediator.publish(this, xt[xt.Volume], i);
                            break;
                        case xt[xt.VolumeHoverStart]:
                            this.oP(!0);
                            break;
                        case xt[xt.VolumeHoverStopped]:
                            this.oP(!1);
                            break;
                        case xt[xt.Settings]:
                            this.ZT.toggleContextMenu(qi.QualityMenu);
                            break;
                        case xt[xt.Quality]:
                            i.payload && this.mediator.publish(this, xt[xt.Quality], { payload: i.payload });
                            break;
                        case qi[qi.MoreButton]:
                            this.ZT.toggleContextMenu(qi.ElementsSettingsMenu);
                            break;
                        case qi[qi.CloseButton]:
                            this.mediator.publish(this, xt[xt.Close]);
                            break;
                        case xt[xt.AboutClick]:
                            this.globalDomUtilsService.open(ah.a, kt.c.Blank);
                            break;
                        case xt[xt.ContextMenuClose]:
                            this.overlayModule.uiSticky = !1;
                            break;
                        case xt[xt.ContextMenuOpen]:
                            this.overlayModule.uiSticky = !0;
                            break;
                        default:
                            this.mediator.publish(this, t, i);
                        }
                    }
                    aP(t) {
                        let i;
                        switch (t) {
                        case ht.a[ht.a.Scroll]:
                            i = h.ProtoMediaClickTypeEnum.ScrollClick;
                            break;
                        case xt[xt.Volume]:
                            i = h.ProtoMediaClickTypeEnum.VolumeClick;
                            break;
                        case qi[qi.PlayButton]:
                        case qi[qi.BigPlayButton]:
                        case qi[qi.ClickToPlayButton]:
                        case xt[xt.Play]:
                            i = h.ProtoMediaClickTypeEnum.PlayClick;
                            break;
                        case xt[xt.Pause]:
                            i = h.ProtoMediaClickTypeEnum.PauseClick;
                            break;
                        case qi[qi.UpNextButton]:
                            i = h.ProtoMediaClickTypeEnum.NextClick;
                            break;
                        case xt[xt.Prev]:
                        case qi[qi.PreviousButton]:
                            i = h.ProtoMediaClickTypeEnum.PreviousClick;
                            break;
                        case xt[xt.Mute]:
                            i = h.ProtoMediaClickTypeEnum.MuteClick;
                            break;
                        case xt[xt.Unmute]:
                            i = h.ProtoMediaClickTypeEnum.UnmuteClick;
                            break;
                        case xt[xt.Close]:
                        case qi[qi.CloseButton]:
                            i = h.ProtoMediaClickTypeEnum.CloseClick;
                            break;
                        case xt[xt.CaptionOff]:
                        case xt[xt.CaptionOn]:
                            i = h.ProtoMediaClickTypeEnum.SubtitleClick;
                            break;
                        case xt[xt.Expand]:
                            i = h.ProtoMediaClickTypeEnum.FullScreenClick;
                            break;
                        case xt[xt.Collapse]:
                            i = h.ProtoMediaClickTypeEnum.ExitFullScreenClick;
                        }
                        void 0 !== i && this.mediator.publish(this, c.b.GeneralUserInteraction, {
                            payload: {
                                mediaClick: !0,
                                type: i
                            }
                        });
                    }
                    updateUpNextBox(t, i) {
                        const e = this.getComponent(qi.UpNextBox);
                        e && e.updateCard(t, i);
                    }
                    updateVolume(t) {
                        this.uP(!t);
                        const i = this.getComponent(qi.VolumeButton), e = this.getComponent(qi.VolumeControls);
                        e ? e.setVolume(t) : i && i.setState(t > 0 ? Ms.Unmute : Ms.Mute);
                    }
                    updateDuration(t, i) {
                        super.updateDuration(t, i), this.bt = i;
                        const e = this.getComponent(qi.UpNextBox);
                        e && (i - t <= 5 ? e.isInView() || e.show() : e.isInView() && e.hide());
                    }
                    updateCaptions(t) {
                        const i = this.getComponent(qi.CaptionComponent);
                        i && i.updateCaptions(t);
                    }
                    toggleCaptionState(t) {
                        const i = this.getComponent(qi.CaptionButton), e = this.getComponent(qi.ElementsSettingsMenu);
                        i && i.isActive !== t && (i.isActive = t), e && e.toggleCaptionState(t);
                    }
                    updateQuality(t, i) {
                        const e = this.getComponent(qi.SettingsButton), s = t.getClosestSourceQuality(i.height).isHD;
                        e && e.toggleHDFlag(s);
                        const n = this.getComponent(qi.QualityMenu);
                        n && n.updateQuality(i);
                    }
                    changeState(t) {
                        super.changeState(t);
                    }
                    onResize(t) {
                        this.ym = t;
                        const i = this.getComponent(qi.QualityMenu), e = this.getComponent(qi.SettingsButton);
                        i && e && i.onResize(e.getCoordinates());
                        const s = this.getComponent(qi.ContextMenu);
                        if (s && s.onResize(), this.settings.isMobile) {
                            const t = this.getComponent(qi.ElementsSettingsMenu), i = this.getComponent(qi.MoreButton);
                            t && i && t.onResize(t.getAnchorCoordinatesTo(i), this.ym);
                        }
                    }
                    updateCurrentVideo(t) {
                        const i = t.getAvailableQualities(), e = this.getComponent(qi.QualityMenu);
                        e && e.createQualityMenu(i);
                        const s = t.getThumbnailUrl(this.$uiContainer.clientWidth, this.$uiContainer.clientHeight);
                        this.mediator.publish(this, _.NewThumbnail, { payload: { thumbnailUrl: s } }), this.lP(!!t.subtitle);
                    }
                    togglePlaylistControls(t) {
                        const i = this.$uiContainer.getElementsByClassName(d.h.HideOnSingleVideo);
                        Object(l.c)(i).forEach(i => {
                            t ? Object(T.O)(i) : Object(T.u)(i);
                        });
                    }
                    toggleExpandButtonDisplay(t) {
                        const i = this.getComponent(qi.ExpandButton);
                        i && (t ? i.showComponent() : i.hideComponent());
                    }
                    start() {
                        try {
                            this.hP(), this.rP(), this.dP(), this.$container.addEventListener('mousedown', this.sP), this.cP = Object(l.c)(this.$uiContainer.getElementsByClassName(d.h.HideOnVolumeHover)), this.settings.isMobile || this.$uiContainer.addEventListener('contextmenu', this.KT), this.nP();
                        } catch (t) {
                            Object(n.a)({
                                message: 'BaseUiContent_start',
                                exception: t.message,
                                callStack: t.stack,
                                level: h.ProtoLoggingLevelEnum.FATAL
                            });
                        }
                    }
                    destroy() {
                        super.destroy(), this.$container.removeEventListener('mousedown', this.sP);
                    }
                }
                class mc extends fc {
                    initState() {
                        super.initState();
                        const t = this.context.getComponent(qi.BigPlayButton);
                        t && t.toggleReplay(!0);
                    }
                    exitState() {
                        super.exitState();
                        const t = this.context.getComponent(qi.BigPlayButton);
                        t && t.toggleReplay(!1);
                    }
                }
                class gc extends vc {
                    constructor() {
                        super(...arguments), this.fP = { [y.ReplayState]: new mc(this) };
                    }
                    start() {
                        this.rb = Object.assign(Object.assign({}, this.rb), this.fP), super.start();
                    }
                    dP() {
                        this.rb[y.StoppedState].enterState();
                    }
                }
                class yc {
                    constructor(t) {
                        this.pP = [
                            {
                                id: w.H264,
                                extension: 'mp4',
                                type: 'video/mp4'
                            },
                            {
                                id: w.Hevc,
                                extension: 'mp4',
                                type: 'video/mp4'
                            }
                        ], this.Ho = this.pP.find(i => {
                            return i.id === t;
                        });
                    }
                    get type() {
                        const t = this.Ho.codecs ? `codecs=${ this.Ho.codecs }` : '';
                        return `${ this.Ho.type }; ${ t }`;
                    }
                    get id() {
                        return this.Ho.id;
                    }
                }
                class wc {
                    constructor(t, i, e) {
                        this.mediator = t, this.Su = i, this.mu = e, this.bP = {
                            quality: g.Auto,
                            height: 360
                        }, this.resizeObserverBinded = !1, this.vP = 30, this.Lu = () => {
                            const t = this.mu.clientHeight;
                            if (this.mP(t) && this.currentQualitySettings.quality === g.Auto) {
                                const i = {
                                    height: t,
                                    quality: g.Auto
                                };
                                this.setCurrentQualitySettings(i), this.mediator.publish(this, x.CurrentQuality, { payload: i });
                            }
                        };
                    }
                    setCurrentQualitySettings(t) {
                        this.bP.quality = t.quality, this.bP.height !== t.height && (this.bP.height = t.height, this.mediator.publish(this, x.Change));
                    }
                    mP(t) {
                        return !this.bP.height || t / this.bP.height * 100 - 100 > this.vP;
                    }
                    addResizeObserver() {
                        this.resizeObserverBinded = !0, this.Su.on(this.mu, this.Lu);
                    }
                    removeResizeObserver() {
                        this.resizeObserverBinded = !1, this.Su.off(this.mu, this.Lu);
                    }
                    setQuality(t) {
                        t.quality === g.Auto ? this.resizeObserverBinded || (this.setCurrentQualitySettings({
                            height: t.height,
                            quality: t.quality
                        }), this.addResizeObserver(), this.Lu()) : (this.resizeObserverBinded && this.removeResizeObserver(), this.setCurrentQualitySettings(t)), this.mediator.publish(this, x.CurrentQuality, { payload: this.bP });
                    }
                    get currentQualitySettings() {
                        return this.bP;
                    }
                    destroy() {
                        this.removeResizeObserver();
                    }
                }
                const Oc = { TrackLoaded: 'trackLoaded' }, xc = {
                        height: 0,
                        quality: g.Auto
                    }, Sc = 'en', jc = 'subtitle';
                class kc extends o.a {
                    constructor(t, i, e) {
                        super(), this.mediator = t, this.rc = i, this.cw = e, this.gP = [], this.yP = () => {
                            this.mediator.publish(this, Oc.TrackLoaded);
                        };
                    }
                    wP(t) {
                        this.OP = t, this.xP();
                    }
                    SP(t) {
                        this.cw.innerHTML = '', t.forEach(t => {
                            this.cw.appendChild(t);
                        });
                    }
                    jP() {
                        return this.gP;
                    }
                    xP() {
                        if (this.gP = [], this.OP && this.OP.subtitle) {
                            const t = this.rc.createElement('track');
                            t.src = this.OP.subtitle, t.srclang = Sc, t.kind = jc, t.default = !0, t.addEventListener('load', this.yP, !1), t.addEventListener('loaded', this.yP, !1), this.gP.push(t);
                        }
                    }
                }
                class _c extends kc {
                    constructor(t, i, e, s, n, r = (() => {
                        return {};
                    })(), h) {
                        super(t, i, n), this.Su = e, this.Cm = s, this.jT = h, this.kP = null, this._P = 10.13, this.AP = this.IP(r);
                    }
                    start() {
                        try {
                            this.CP = new wc(this, this.Su, this.Cm), this.Ou(), this.setQuality(this.jT);
                        } catch (t) {
                            Object(n.a)({
                                message: 'Mp4SourceHandler_start',
                                exception: t.message,
                                callStack: t.stack,
                                level: h.ProtoLoggingLevelEnum.FATAL
                            });
                        }
                    }
                    onQualityChanged() {
                        return this.attachMedia();
                    }
                    setSource(t, i = (() => {
                        return !1;
                    })()) {
                        this.wP(t), this.TP(this.PP(), i);
                    }
                    setQuality(t) {
                        this.CP.setQuality(t);
                    }
                    get currentQualitySettings() {
                        return this.CP.currentQualitySettings;
                    }
                    attachMedia() {
                        return new Promise(t => {
                            this.MP(), t();
                        });
                    }
                    detachMedia() {
                        this.cw.removeAttribute('src'), this.TP(null);
                    }
                    destroy() {
                        this.CP.destroy();
                    }
                    Ou() {
                        this.relay(x.CurrentQuality, this.CP, this, this.mediator), this.subscribe(x.Change, this.CP, () => {
                            this.EP();
                        });
                    }
                    EP() {
                        this.TP(this.PP()), this.mediator.publish(this, x.Change, { payload: this.CP.currentQualitySettings.height });
                    }
                    LP(t) {
                        this.SP(t), this.cw.load();
                    }
                    PP() {
                        return [
                            ...this.RP(),
                            ...this.jP()
                        ];
                    }
                    RP() {
                        if (!this.cw || !this.OP)
                            return [];
                        const t = [];
                        return this.OP.getSources(this.CP.currentQualitySettings.height, this.AP).forEach(i => {
                            const e = this.rc.createElement('source');
                            e.src = i.src, e.type = i.type, t.push(e);
                        }), t;
                    }
                    MP() {
                        this.kP && (this.LP(this.kP), this.kP = null);
                    }
                    TP(t, i = (() => {
                        return !1;
                    })()) {
                        this.kP = t, i && this.MP();
                    }
                    IP(t) {
                        let i;
                        switch (t.os) {
                        case St.b.Ios:
                            i = [
                                w.Hevc,
                                w.H264
                            ];
                            break;
                        case St.b.Mac:
                            i = t.osVersion > this._P && t.browser === kt.a.Safari ? [
                                w.Hevc,
                                w.H264
                            ] : [w.H264];
                            break;
                        default:
                            i = [w.H264];
                        }
                        return i.map(t => {
                            return new yc(t);
                        });
                    }
                }
                const Ac = {
                    UnexpectedError: 'unexpectedError',
                    BufferingError: 'bufferingError',
                    FragBuffered: 'fragBuffered',
                    ManifestLoaded: 'manifestLoaded',
                    LevelSwitching: 'levelSwitching',
                    StreamEnded: 'streamEnded'
                };
                var Ic;
                !function (t) {
                    t.Http = 'http', t.Https = 'https';
                }(Ic || (Ic = {}));
                const Cc = {
                    enableWorker: !1,
                    capLevelToPlayerSize: !0,
                    cnxRenderWindow: window,
                    maxBufferSize: 5000000,
                    maxBufferLength: 5,
                    maxMaxBufferLength: 10,
                    liveBackBufferLength: 0
                };
                class Tc extends kc {
                    constructor(t, i, e, s, n, r, h) {
                        super(t, i, e), this.BP = s, this.jT = n, this.DP = r, this.Zd = h, this.lw = [], this.FP = g.Auto, this.VP = 320, this.UP = !1, this.$P = !1, this.NP = !1, this.vw = () => {
                            this.pw.off(xr.Events.MEDIA_ATTACHED, this.vw);
                            const t = this.HP(this.qP);
                            this.pw.loadSource(t), this.pw.once(xr.Events.MANIFEST_PARSED, this.mw);
                        }, this.mw = () => {
                            this.pw.off(xr.Events.MANIFEST_PARSED, this.mw), this.pw.on(xr.Events.LEVEL_SWITCHING, this.zP), this.pw.on(xr.Events.LEVEL_SWITCHED, this.WP), this.pw.on(xr.Events.FRAG_BUFFERED, this.GP), this.pw.on(xr.Events.FRAG_LOADING, this.JP), this.pw.on(xr.Events.FRAG_LOADED, this.QP), this.pw.on(xr.Events.BUFFER_APPENDING, this.XP), this.pw.on(xr.Events.BUFFER_APPENDED, this.YP), this.pw.on(xr.Events.BUFFER_EOS, this.KP), this.qP = null, this.gw(), this.ZP(), this.tM(), this.iM.resolve();
                        }, this.eM = () => {
                            this.qP = null, this.cw.removeEventListener(m.LoadedMetadata, this.eM), this.sM.resolve();
                        }, this.ZP = () => {
                            const t = this.lw.map(t => {
                                return {
                                    videoHeight: t.height,
                                    isHD: t.height >= j,
                                    label: t.level.toString()
                                };
                            });
                            this.mediator.publish(this, Ac.ManifestLoaded, { payload: { qualityList: t } });
                        }, this.GP = () => {
                            this.mediator.publish(this, Ac.FragBuffered);
                        }, this.JP = () => {
                            this.UP = !0;
                        }, this.QP = () => {
                            this.UP = !1;
                        }, this.XP = () => {
                            this.$P = !0;
                        }, this.YP = () => {
                            this.$P = !1;
                        }, this.KP = () => {
                            this.mediator.publish(this, Ac.StreamEnded);
                        }, this.dw = (t, i) => {
                            if (i.details === xr.ErrorDetails.BUFFER_STALLED_ERROR && (this.UP || this.$P ? this.mediator.publish(this, Ac.BufferingError) : (this.NP || (this.pw.recoverMediaError(), this.cw.play().then(() => {
                                    this.NP = !1;
                                }).catch(() => {
                                    this.NP = !1;
                                })), this.NP = !0)), i.fatal)
                                switch (i.type) {
                                case xr.ErrorTypes.NETWORK_ERROR:
                                    if (i.details === xr.ErrorDetails.MANIFEST_PARSING_ERROR)
                                        return void this.nM('hls_network_error_manifest_parsing_error_FATAL');
                                    if (i.details === xr.ErrorDetails.MANIFEST_LOAD_ERROR)
                                        return void this.mediator.publish(this, Ac.UnexpectedError);
                                    this.pw.startLoad();
                                    break;
                                case xr.ErrorTypes.MEDIA_ERROR:
                                    this.pw.recoverMediaError();
                                    break;
                                default:
                                    this.nM('hls_unexpected_error_FATAL', `type_${ i.type }_details_${ i.details }`);
                                }
                            else
                                i.type === xr.ErrorTypes.MEDIA_ERROR && i.details === xr.ErrorDetails.BUFFER_APPENDING_ERROR && this.nM('hls_media_error_buffer_appending_error'), i.type === xr.ErrorTypes.NETWORK_ERROR && i.details === xr.ErrorDetails.MANIFEST_PARSING_ERROR && this.nM('hls_network_error_manifest_parsing_error');
                        }, this.rM = () => {
                            this.nM('hls_video_tag_error', `code_${ this.cw.error.code }_message_${ this.cw.error.message }`);
                        }, this.WP = (t, i) => {
                            this.VP = this.lw.find(t => {
                                return t.level === i.level;
                            }).height, this.mediator.publish(this, x.Change, { payload: this.currentQualitySettings.height }), this.mediator.publish(this, x.CurrentQuality, { payload: this.currentQualitySettings });
                        }, this.zP = () => {
                            this.mediator.publish(this, Ac.LevelSwitching);
                        }, Sr && (this.pw = this.rc.initHls(Cc), this.DP && (this.pw.autoLevelCapping = 1)), this.VP = this.jT.height, this.FP = this.jT.quality;
                    }
                    start() {
                    }
                    get liveSyncPosition() {
                        if (this.pw)
                            return this.pw.liveSyncPosition;
                    }
                    setSource(t, i = (() => {
                        return !1;
                    })()) {
                        this.hM = t.id, this.wP(t), this.qP = t, i && this.attachMedia();
                    }
                    attachMedia() {
                        return new Promise(t => {
                            if (this.pw ? this.pw.on(xr.Events.ERROR, this.dw) : this.cw.addEventListener(m.Error, this.rM), this.qP) {
                                const i = this.jP();
                                this.SP(i), this.pw ? this.aM().then(() => {
                                    t();
                                }) : this.oM().then(() => {
                                    t();
                                });
                            } else
                                t();
                        });
                    }
                    detachMedia() {
                        this.lw = [], this.pw ? (this.pw.detachMedia(), this.cM()) : (this.cw.removeAttribute('src'), this.cw.removeEventListener(m.LoadedMetadata, this.eM), this.cw.removeEventListener(m.Error, this.rM));
                    }
                    setQuality(t) {
                        this.FP = t.quality, this.VP = t.height, this.pw && this.tM(), this.mediator.publish(this, x.Change, { payload: this.currentQualitySettings.height }), this.mediator.publish(this, x.CurrentQuality, { payload: this.currentQualitySettings });
                    }
                    get currentQualitySettings() {
                        return {
                            quality: this.FP,
                            height: this.VP
                        };
                    }
                    onQualityChanged() {
                        return new Promise(() => {
                        });
                    }
                    destroy() {
                        this.pw ? (this.cM(), this.pw.destroy(), this.pw = null) : (this.cw.removeEventListener(m.LoadedMetadata, this.eM), this.cw.removeEventListener(m.Error, this.rM));
                    }
                    aM() {
                        return this.iM = new jt.a(), this.pw.attachMedia(this.cw), this.pw.once(xr.Events.MEDIA_ATTACHED, this.vw), this.iM.promise;
                    }
                    oM() {
                        return this.sM = new jt.a(), this.cw.src = this.HP(this.qP), this.cw.addEventListener(m.LoadedMetadata, this.eM), this.sM.promise;
                    }
                    cM() {
                        this.pw.off(xr.Events.MEDIA_ATTACHED, this.vw), this.pw.off(xr.Events.MANIFEST_PARSED, this.mw), this.pw.off(xr.Events.ERROR, this.dw), this.pw.off(xr.Events.LEVEL_SWITCHING, this.zP), this.pw.off(xr.Events.LEVEL_SWITCHED, this.WP), this.pw.off(xr.Events.FRAG_BUFFERED, this.GP), this.pw.off(xr.Events.FRAG_LOADING, this.JP), this.pw.off(xr.Events.FRAG_LOADED, this.QP), this.pw.off(xr.Events.BUFFER_APPENDING, this.XP), this.pw.off(xr.Events.BUFFER_APPENDED, this.YP), this.pw.off(xr.Events.BUFFER_EOS, this.KP);
                    }
                    gw() {
                        this.pw.levels.forEach((t, i) => {
                            this.DP && i > 1 || this.lw.push({
                                level: i,
                                height: t.height
                            });
                        });
                    }
                    nM(t, i) {
                        Object(n.a)({
                            message: t,
                            exception: this.hM,
                            level: h.ProtoLoggingLevelEnum.WARNING,
                            callStack: i
                        }), this.mediator.publish(this, Ac.UnexpectedError);
                    }
                    tM() {
                        if (this.FP === g.Auto)
                            this.pw.currentLevel = -1;
                        else
                            try {
                                this.pw.currentLevel = this.lw.find(t => {
                                    return t.height === this.VP;
                                }).level;
                            } catch (t) {
                                Object(n.a)({
                                    message: 'HlsSourceHandler_quality_not_present_in_hls_manifest',
                                    exception: t.message,
                                    callStack: t.stack,
                                    level: h.ProtoLoggingLevelEnum.FATAL
                                });
                            }
                    }
                    HP(t) {
                        try {
                            const i = t.getHlsSource(), e = Object(Li.g)(i);
                            return e && e.protocol ? this.Zd.appendParamsToUrl(i) : this.Zd.appendParamsToUrl(`${ this.BP }:${ i }`);
                        } catch (t) {
                            Object(n.a)({
                                exception: t.message,
                                message: 'HlsSourceHandler_undefined_sourceMeta',
                                level: h.ProtoLoggingLevelEnum.FATAL,
                                callStack: t.stack,
                                throttle: 5,
                                sendMaxLog: !1
                            });
                        }
                    }
                }
                var Pc;
                !function (t) {
                    t.Disabled = 'disabled', t.Hidden = 'hidden', t.Showing = 'showing';
                }(Pc || (Pc = {}));
                class Mc {
                    constructor(t, i, e, s, n) {
                        this.mediator = t, this.cw = i, this.Pw = e, this.Mm = n, this.uM = !1, this.lM = !1, this.dM = Pc.Hidden, this.fM = 0, this.Mw = !1, this.pM = null, this.bM = t => {
                            switch (t.type) {
                            case m.Play:
                                if (!this.Mw && this.Mm.config.isInAppAndroid)
                                    return void this.pause();
                                this.uM = !0;
                                break;
                            case m.Timeupdate:
                                this.mediator.publish(this, t.type, { payload: this.uM });
                                break;
                            case m.Error:
                                const i = this.cw.error ? this.cw.error.message : '';
                                this.mediator.publish(this, O.PlayError, { payload: i });
                                break;
                            case m.LoadedMetadata:
                                this.lM = !0, Object(rt.d)(this.vM) && (this.currentTime = this.vM, this.vM = null), this.mediator.publish(this, t.type);
                                break;
                            default:
                                this.mediator.publish(this, t.type);
                            }
                        }, this.play = () => {
                            return this.Mw = !0, this.pM = this.cw.play(), null !== this.pM ? (this.fM++, this.pM.then(() => {
                                this.uM = !0, this.Mm.config.os.os === St.b.Ios && Object(T.z)(this.cw), this.fM--, this.mM(), this.pM = null;
                            }).catch(t => {
                                throw this.mediator.publish(this, O.PlayError, { payload: t }), this.uM = !1, this.fM--, this.pM = null, t;
                            })) : Promise.resolve();
                        }, this.pause = () => {
                            null !== this.pM ? this.pM.then(this.gM).catch(this.gM) : this.yM();
                        }, this.gM = () => {
                            this.fM > 1 || this.yM();
                        }, this.volume = s, this.Ou();
                    }
                    Ou() {
                        this.Pw.forEach(t => {
                            this.cw.addEventListener(t, this.bM);
                        });
                    }
                    mM() {
                        this.cw.textTracks && 0 !== this.cw.textTracks.length && Object.keys(this.cw.textTracks).forEach(t => {
                            this.cw.textTracks[t].mode = this.dM;
                        });
                    }
                    set poster(t) {
                        Object(rt.h)(t) && (this.cw.poster = t);
                    }
                    get poster() {
                        return this.cw.poster;
                    }
                    yM() {
                        this.cw.pause(), this.uM = !1, this.Mw = !1;
                    }
                    get volume() {
                        return this.pp;
                    }
                    set volume(t) {
                        this.pp = t <= 1 ? t : t / 100, this.cw.volume = this.pp, Object(T.R)(this.cw, this.pp);
                    }
                    get currentTime() {
                        return this.cw.currentTime;
                    }
                    set currentTime(t) {
                        this.lM ? this.cw.currentTime = t : this.vM = t;
                    }
                    get duration() {
                        return this.cw.duration;
                    }
                    get playing() {
                        return this.uM;
                    }
                    destroy() {
                        this.Pw.forEach(t => {
                            this.cw.removeEventListener(t, this.bM);
                        });
                    }
                    setTrackModes(t) {
                        this.dM = t, this.mM();
                    }
                    setMetaLoaded(t) {
                        this.lM = t;
                    }
                    setCrossOriginAttribute() {
                        this.cw.getAttribute('crossorigin') || this.cw.setAttribute('crossorigin', 'anonymous');
                    }
                    setPoster(t) {
                        this.poster = t.getThumbnailUrl(this.cw.clientWidth, this.cw.clientHeight);
                    }
                    getCurrentTrack() {
                        return this.cw.textTracks && 0 !== this.cw.textTracks.length ? this.cw.textTracks[0] : null;
                    }
                    isPlayPending() {
                        return this.fM > 0;
                    }
                }
                class Ec extends o.a {
                    constructor(t, i, e, s, r, a, o = (() => {
                        return {};
                    })(), c, u) {
                        if (super(), this.mediator = t, this.Mm = i, this.rc = e, this.Cm = s, this.Su = r, this.wM = a, this.Ho = o, this.CC = c, this.jT = u, this.OM = !0, this.rC = !1, this.xM = !1, this.SM = () => {
                                let t;
                                this.currentTrack.activeCues && this.currentTrack.activeCues.length > 0 && (t = this.currentTrack.activeCues[0]), this.mediator.publish(this, xt[xt.CaptionUpdate], { payload: t });
                            }, this.yP = () => {
                                this.currentTrack && (this.currentTrack.mode = this.jM ? Pc.Hidden : Pc.Disabled, this.currentTrack.oncuechange = this.SM);
                            }, this.kM(), this._M.appendChild(this.cw), this.Cm.appendChild(this._M), this.jT = this.jT || xc, this.AM = new _c(this, e, this.Su, this.Cm, this.cw, this.Ho, this.jT), Sr || jr(this.cw)) {
                            const t = this.rc.isHttpsProtocolUsed() ? Ic.Https : Ic.Http, i = Object(rt.h)(this.Mm.config.bundleID);
                            this.Hw = new Tc(this, this.rc, this.cw, t, this.jT, i, this.Mm.services.UrlSuffixerService), this.IM();
                        } else
                            this.OM = !1, Object(n.a)({
                                message: 'Hls_not_supported',
                                level: h.ProtoLoggingLevelEnum.INFO
                            });
                    }
                    start() {
                        try {
                            this.Pw = Object(u.a)(m), this.CM = new Mc(this, this.cw, this.Pw, this.wM, this.Mm), this.TM(), this.PM(), this.MM();
                        } catch (t) {
                            Object(n.a)({
                                message: 'VideoHandler_start',
                                exception: t.message,
                                callStack: t.stack,
                                level: h.ProtoLoggingLevelEnum.FATAL
                            });
                        }
                    }
                    EM() {
                        const t = this.currentTime;
                        this.setSource(this.LM, !0, this.AM), this.RM.attachMedia().then(() => {
                            this.CM.play().then(() => {
                                this.xM = !1, this.BM.resolve(), this.CM.currentTime = t;
                            }).catch(t => {
                                this.BM && this.BM.isPending && (this.xM = !1, this.BM.reject(), Object(n.a)({
                                    message: 'VideoHandler_hls_error_content_player_play',
                                    exception: t.message,
                                    callStack: t.callStack,
                                    level: h.ProtoLoggingLevelEnum.FATAL
                                }));
                            });
                        }).catch(t => {
                            this.BM && this.BM.isPending && (this.xM = !1, this.BM.reject()), Object(n.a)({
                                message: 'VideoHandler_hls_error_attach_media',
                                exception: t.message,
                                callStack: t.callStack,
                                level: h.ProtoLoggingLevelEnum.FATAL
                            });
                        });
                    }
                    IM() {
                        this.subscribe(Ac.UnexpectedError, this.Hw, () => {
                            this.xM = !0, this.EM();
                        }), this.subscribe(Ac.ManifestLoaded, this.Hw, ({payload: t}) => {
                            this.mediator.publish(this, x.Loaded, {
                                payload: {
                                    qualityList: t,
                                    videoMeta: this.LM
                                }
                            }), this.CM.setMetaLoaded(!0);
                        }), this.subscribe(Ac.BufferingError, this.Hw, () => {
                            this.mediator.publish(this, O.Buffering);
                        }), this.subscribe(Ac.FragBuffered, this.Hw, () => {
                            this.mediator.publish(this, O.Buffered);
                        }), this.subscribe(Ac.StreamEnded, this.Hw, () => {
                            this.mediator.publish(this, O.EndOfStream);
                        }), this.subscribe(Ac.LevelSwitching, this.Hw, () => {
                            this.mediator.publish(this, O.LevelSwitching);
                        });
                    }
                    TM() {
                        this.DM(this.AM);
                    }
                    PM() {
                        this.Hw && this.DM(this.Hw);
                    }
                    DM(t) {
                        t.start(), this.FM(t);
                    }
                    MM() {
                        this.Pw.forEach(t => {
                            this.subscribe(t, this.CM, i => {
                                t === m.Canplay && this.CC && (this.currentTime = this.CC, this.CC = null), this.mediator.publish(this, t, i);
                            });
                        }), this.relay(O.PlayError, this.CM, this, this.mediator);
                    }
                    FM(t) {
                        this.relay([
                            x.CurrentQuality,
                            O.NewVideo
                        ], t, this, this.mediator), this.subscribe(x.Change, t, ({payload: t}) => {
                            this.onQualityChanged(t);
                        }), this.subscribe(Oc.TrackLoaded, t, () => {
                            this.yP();
                        });
                    }
                    get width() {
                        return this._M.getBoundingClientRect().width;
                    }
                    get height() {
                        return this._M.getBoundingClientRect().height;
                    }
                    get currentTime() {
                        return this.CM.currentTime;
                    }
                    set currentTime(t) {
                        this.CM.currentTime = t;
                    }
                    forceCurrentTime(t) {
                        this.CM.currentTime = t, this.CC = t;
                    }
                    get duration() {
                        return this.CM.duration;
                    }
                    get volume() {
                        return this.CM.volume;
                    }
                    set volume(t) {
                        this.CM.volume = t;
                    }
                    get playing() {
                        return this.CM.playing;
                    }
                    get isIosFullscreen() {
                        return this.rC;
                    }
                    set isIosFullscreen(t) {
                        this.rC = t, this.rC && this.jM ? this.VM() : this.UM();
                    }
                    get currentQualitySettings() {
                        return this.RM.currentQualitySettings;
                    }
                    hide() {
                        Object(T.a)(this._M, d.d);
                    }
                    show() {
                        Object(T.I)(this._M, d.d);
                    }
                    setSource(t, i = (() => {
                        return !1;
                    })(), e) {
                        return this.CC = null, new Promise((s, r) => {
                            try {
                                this.LM = t, this.RM && this.RM.detachMedia(), e ? this.$M(e) : Object(rt.h)(t.hlsFilePath) && this.Hw ? this.RM = this.Hw : this.$M(this.AM), t && t.subtitle && this.CM.setCrossOriginAttribute(), this.CM.setPoster(t), this.CM.setTrackModes(this.jM ? Pc.Hidden : Pc.Disabled), i && this.CM.setMetaLoaded(!1), this.RM.setSource(t, i), this.mediator.publish(this, O.NewVideo), s();
                            } catch (t) {
                                Object(n.a)({
                                    message: 'VideoHandler_set_video_source',
                                    exception: t.message,
                                    callStack: t.stack,
                                    level: h.ProtoLoggingLevelEnum.FATAL
                                }), r();
                            }
                        });
                    }
                    setQuality(t) {
                        this.RM.setQuality(t);
                    }
                    pause() {
                        this.CM.pause();
                    }
                    play() {
                        return this.BM = new jt.a(), this.RM.attachMedia().then(() => {
                            this.CM.play().then(() => {
                                this.BM.resolve();
                            }).catch(t => {
                                !this.xM && this.BM && this.BM.isPending && (this.BM.reject(), Object(n.a)({
                                    message: 'VideoHandler_public_play_content_player_play',
                                    exception: t.message,
                                    callStack: t.callStack,
                                    level: h.ProtoLoggingLevelEnum.FATAL
                                }));
                            });
                        }).catch(t => {
                            this.BM && this.BM.isPending && this.BM.reject(t), Object(n.a)({
                                message: 'VideoHandler_public_play_attach_media_error',
                                exception: t.message,
                                callStack: t.callStack,
                                level: h.ProtoLoggingLevelEnum.FATAL
                            });
                        }), this.BM.promise;
                    }
                    isPlayPending() {
                        return this.CM.isPlayPending();
                    }
                    showCaptions() {
                        this.jM = !0, this.CM.setTrackModes(Pc.Hidden);
                    }
                    hideCaptions() {
                        this.jM = !1, this.CM.setTrackModes(Pc.Disabled), this.currentTrack && this.mediator.publish(this, xt[xt.CaptionUpdate]);
                    }
                    destroy() {
                        this.RM.destroy(), this._M.parentNode.removeChild(this._M);
                    }
                    kM() {
                        this._M = this.rc.createElementByString('<cnx class="cnx-video-wrapper"></cnx>'), this.cw = this.rc.createElementByString('<video class="cnx-video-tag"></video>'), this.Ho.os === St.b.Ios && (this.cw.setAttribute('playsinline', ''), this.cw.setAttribute('webkit-playsinline', ''));
                    }
                    $M(t) {
                        this.RM = t, this.RM.setQuality({
                            quality: g.Auto,
                            height: 0
                        });
                    }
                    onQualityChanged(t) {
                        const i = this.CM.playing;
                        this.CC = this.currentTime, i && this.RM.onQualityChanged && this.RM.onQualityChanged().then(() => {
                            this.CM.setMetaLoaded(!1), this.CM.play().catch(t => {
                                Object(n.a)({
                                    message: 'VideoHandler_quality_changed',
                                    exception: t.message,
                                    callStack: t.stack,
                                    level: h.ProtoLoggingLevelEnum.FATAL
                                });
                            });
                        }), this.mediator.publish(this, x.Change, { payload: t });
                    }
                    get currentTrack() {
                        return this.CM.getCurrentTrack();
                    }
                    VM() {
                        this.currentTrack && (this.currentTrack.oncuechange = null, this.mediator.publish(this, xt[xt.CaptionUpdate]), this.currentTrack.mode = Pc.Showing);
                    }
                    UM() {
                        if (this.currentTrack) {
                            switch (this.currentTrack.mode) {
                            case Pc.Showing:
                            case Pc.Hidden:
                                this.jM = !0;
                                break;
                            case Pc.Disabled:
                                this.jM = !1;
                            }
                            this.mediator.publish(this, this.jM ? xt[xt.CaptionOn] : xt[xt.CaptionOff]);
                        }
                        this.yP();
                    }
                }
                const Lc = {
                        width: 168,
                        height: 91
                    }, Rc = 6;
                class Bc extends nc {
                    constructor() {
                        super(...arguments), this.NM = !1, this.sd = h.ProtoQuartilesEnum.Start, this.HM = new Map();
                    }
                    start() {
                        super.start(), this.kC.start(), this.fT(), this.bT();
                    }
                    getCurrentVideoIndex() {
                        return this.jC.currentVideoIndex;
                    }
                    _T(t) {
                        t = Object.assign(Object.assign({}, t), { isInApp: Object(rt.h)(this.Mm.config.bundleID) });
                        const i = new ac(t, !1);
                        this.dT = new gc(this, this.Mm.services.GlobalDomUtilsService, this.Mm.services.InteractionService, this.Cm, i.template, t, this.Mm.config.appId, this.ym), this.dT.start();
                    }
                    IT(t) {
                        this.cp.upNextMode === M.ProtoPlayerUpNextMode.Next && this.kC.duration - this.kC.currentTime <= Rc && !this.NM && (this.NM = !0, this.jC.getVideoData(this.jC.nextVideoIndex, t => {
                            const i = t.getThumbnailUrl(Lc.width, Lc.height);
                            this.dT.updateUpNextBox(i, t.description);
                        })), this.qM(this.kC.currentTime, this.kC.duration);
                    }
                    yT() {
                        this.NM = !1, this.sd = h.ProtoQuartilesEnum.Start;
                    }
                    vT() {
                        switch (this.cp.upNextMode) {
                        case M.ProtoPlayerUpNextMode.Loop:
                            this.zM();
                            break;
                        case M.ProtoPlayerUpNextMode.Next:
                            this.WM(), this.uT.streamFormat = Zo.Autochain;
                            break;
                        case M.ProtoPlayerUpNextMode.Stop:
                            this.lT.stop(), this.dT.changeState(y.ReplayState);
                        }
                    }
                    bT() {
                        const {
                                preRollBreak: t,
                                postRollBreak: i
                            } = this.cp, e = Object(rt.e)(t), s = Object(rt.e)(i);
                        this.lT = new tc(this, this.jC, this.kC, e, s, this.Mm.config.os.os === St.b.Ios, this.cp.videoPosition), super.bT();
                    }
                    mT() {
                        super.mT(), this.subscribe(xt[xt.Replay], this.dT, () => {
                            this.mediator.publish(this, c.b.UserInteraction, { payload: { playback: !0 } }), this.zM();
                        }), this.subscribe(xt[xt.Next], this.dT, () => {
                            this.mediator.publish(this, c.b.UserInteraction, {
                                payload: {
                                    playback: !0,
                                    clickedNext: !0
                                }
                            }), this.WM(), this.uT.streamFormat = Zo.UserInitiated;
                        }), this.subscribe(xt[xt.Prev], this.dT, () => {
                            this.mediator.publish(this, c.b.UserInteraction, {
                                payload: {
                                    playback: !0,
                                    clickedPrev: !0
                                }
                            }), this.GM();
                        });
                    }
                    kT(t, i) {
                        this.kC = new Ec(this, this.Mm, this.Mm.services.GlobalDomUtilsService, this.Cm, this.Mm.services.ResizeObserver, i, t, this.cp.videoPosition, this.jT);
                    }
                    JM(t, i) {
                        return i && t ? Math.floor(Object(wi.e)(0, i, 0, 4, t)) : h.ProtoQuartilesEnum.Start;
                    }
                    qM(t, i) {
                        const e = this.JM(t, i);
                        e > h.ProtoQuartilesEnum.Start && e !== this.sd && (this.HM.get(e) || (this.mediator.publish(this, A.ContentQuartiles, { payload: e }), this.HM.set(e, !0)), this.sd = e);
                    }
                    GM() {
                        this.setVideo(this.jC.prevVideoIndex, !0), this.uT.streamFormat = Zo.UserInitiated;
                    }
                    WM() {
                        this.setVideo(this.jC.nextVideoIndex);
                    }
                    KC(t = (() => {
                        return !0;
                    })()) {
                        super.KC(t), this.HM.clear();
                    }
                    zM() {
                        this.lT.replay(), this.KC(!1);
                    }
                }
                var Dc;
                !function (t) {
                    t[t.Play = 0] = 'Play', t[t.Pause = 1] = 'Pause';
                }(Dc || (Dc = {}));
                class Fc {
                    constructor(t, i) {
                        switch (this.mediator = t, this.inView = !1, this.QM = !1, this.XM = !1, this.YM = () => {
                            }, i) {
                        case h.ProtoPlayerPlaybackModeEnum.Autoplay:
                            this.KM(this.ZM);
                            break;
                        case h.ProtoPlayerPlaybackModeEnum.ClickToPlay:
                            this.KM(this.tE);
                            break;
                        case h.ProtoPlayerPlaybackModeEnum.ScrollToPlay:
                            this.KM(this.iE);
                        }
                    }
                    KM(t) {
                        this.YM = () => {
                            this.QM || t.call(this);
                        };
                    }
                    ZM() {
                        !this.XM && this.inView && (this.XM = !0, this.mediator.publish(this, Dc[Dc.Play]));
                    }
                    iE() {
                        this.inView ? this.mediator.publish(this, Dc[Dc.Play]) : this.mediator.publish(this, Dc[Dc.Pause]);
                    }
                    tE() {
                    }
                    setViewability(t) {
                        this.inView = t, this.YM();
                    }
                    setUserPlayback(t) {
                        !this.XM && t && (this.XM = t), this.QM = !t;
                    }
                }
                class Vc extends No {
                    constructor() {
                        super(...arguments), this.eE = !0;
                    }
                    start() {
                        try {
                            super.start(), this.sE(), this.nE();
                        } catch (t) {
                            Object(n.a)({
                                message: 'VideoExperience_start',
                                exception: t.message,
                                callStack: t.stack,
                                level: h.ProtoLoggingLevelEnum.FATAL
                            });
                        }
                    }
                    nextVideo() {
                        let t = this.XI.getCurrentVideoIndex();
                        this.changeVideo(++t, !1);
                    }
                    prevVideo() {
                        let t = this.XI.getCurrentVideoIndex();
                        this.changeVideo(--t, !1);
                    }
                    destroy() {
                        this.unsubscribeAll(this.rE), super.destroy();
                    }
                    op() {
                        this.ep.isInAdPod() ? this.up(() => {
                            super.op(), this.gf.onAdFinished(this.adHandler.inImpression, this.ep.isInAdPod());
                            this.XI.show(!0);
                        }) : (super.op(), this.XI.show(this.eE), this.eE = !0);
                    }
                    uh() {
                        super.uh(), this.hE && this.aE(), this.rE && this.rE.onResize(this.$experienceContainer.clientWidth);
                    }
                    generateHTML() {
                        super.generateHTML(), this.cp.gallery && this.oE();
                    }
                    dC() {
                        this.XI = new Bc(this, this.cp, this.app, this.$playerContainer, this.breakPointsHandler.currentBreakpointClass);
                    }
                    gl(t, i = (() => {
                        return !1;
                    })()) {
                        super.gl(t, i), this.cE.setViewability(t);
                    }
                    sE() {
                        this.cE = new Fc(this, this.cp.playbackMode), this.subscribe(Dc[Dc.Play], this.cE, () => {
                            this.XI.play();
                        }), this.subscribe(Dc[Dc.Pause], this.cE, () => {
                            this.XI.pause();
                        }), this.subscribe(c.b.UserInteraction, this.XI, ({
                            payload: {playback: t}
                        }) => {
                            Object(rt.a)(t) && this.cE.setUserPlayback(t);
                        });
                    }
                    aE() {
                        this.cp.gallery.orientation === M.ProtoGalleryOrientationEnum.Landscape && Object(T.N)(this.hE, { height: `${ this.$playerWrapper.clientHeight }px` });
                    }
                    oE() {
                        this.hE = this.app.services.GlobalDomUtilsService.createElementByString('<cnx class="cnx-g-container"></cnx>'), this.$experienceContainer.appendChild(this.hE);
                        const t = this.cp.gallery.orientation === M.ProtoGalleryOrientationEnum.Landscape ? d.g.GalleryLandscape : d.g.GalleryPortrait;
                        Object(T.a)(this.$experienceContainer, t);
                    }
                    nE() {
                        this.cp.gallery && (this.rE = new wt(this, this.app.services.ResizeObserver, this.app.services.GlobalDomUtilsService, this.app.services.InteractionService, this.hE, this.app.config.device, this.cp.gallery.style, this.cp.gallery.orientation, this.cp.playlist), this.subscribe(A.ChangeVideo, this.rE, ({
                            payload: {videoIndex: t}
                        }) => {
                            this.eE = !this.XI.isHidden, this.ep.endPod(), this.changeVideo(t, !0), this.XI.getVideoData(t, t => {
                                this.mediator.publish(this, I.GalleryCardClicked, { payload: this.mC(t) }), this.app.services.TrackingService.trackMediaClick(h.ProtoMediaClickTypeEnum.GalleryClick);
                            }), this.Nf();
                        }), this.subscribe(O.NewVideo, this.XI, ({
                            payload: {videoIndex: t}
                        }) => {
                            this.rE.setCurrentIndex(t);
                        }), this.subscribe(A.VideoQueued, this.XI, ({
                            payload: {videoIndex: t}
                        }) => {
                            this.rE.setCurrentIndex(t);
                        }), this.subscribe(ht.a[ht.a.Scroll], this.rE, () => {
                            this.app.services.TrackingService.trackMediaClick(h.ProtoMediaClickTypeEnum.ScrollClick);
                        }), this.rE.start(), this.rE.onResize(this.$experienceContainer.clientWidth));
                    }
                }
                class Uc {
                    constructor() {
                        this.jl = {};
                    }
                    on(t, i) {
                        if (this.jl[t] = this.jl[t] || [], !Object(rt.b)(i))
                            throw new Error(`${ t } event callback is not a function`);
                        return this.jl[t].push(i), () => {
                            return this.jl[t] = this.jl[t].filter(t => {
                                return t !== i;
                            });
                        };
                    }
                    once(t, i) {
                        const e = this.on(t, t => {
                            try {
                                i(t);
                            } catch (t) {
                            }
                            e();
                        });
                    }
                    remove(t, i) {
                        this.jl[t] && (this.jl[t] = this.jl[t].filter(t => {
                            return t !== i;
                        }));
                    }
                    removeAll() {
                        this.jl = {};
                    }
                    trigger(t, i) {
                        this.jl[t] && this.jl[t].forEach(t => {
                            try {
                                t(i);
                            } catch (t) {
                            }
                        });
                    }
                }
                class $c {
                    constructor(t) {
                        this.experience = t, this.uE = (t, i) => {
                            return this.bo.on(t, i);
                        }, this.lE = (t, i) => {
                            this.bo.remove(t, i);
                        }, this.dE = () => {
                            this.bo.removeAll();
                        }, this.fE = (t, i) => {
                            this.bo.once(t, i);
                        }, this.pE = () => {
                            return this.experience.isViewable();
                        }, this.bE = t => {
                            this.experience.setViewableThreshold(t);
                        }, this.vE = () => {
                            this.experience.play();
                        }, this.mE = () => {
                            this.experience.pause();
                        }, this.gE = () => {
                            return this.experience.getVolume();
                        }, this.yE = t => {
                            this.experience.setVolume(t);
                        }, this.fl = () => {
                            this.experience.triggerDestroy();
                        }, this.wE = () => {
                            this.experience.disableAdvertising();
                        }, this.OE = () => {
                            this.experience.enableAdvertising();
                        }, this.xE = t => {
                            this.experience.setCustomMacros(t);
                        }, this.SE = t => {
                            this.experience.setAmpUserConsent(t);
                        }, this.bo = new Uc();
                    }
                    trigger(t, i) {
                        this.bo.trigger(t, i);
                    }
                    setDestroyed() {
                        this.trigger(Tt.b.Removed);
                    }
                    getApiMethods() {
                        return {
                            on: this.uE,
                            remove: this.lE,
                            removeAll: this.dE,
                            once: this.fE,
                            isViewable: this.pE,
                            setViewableThreshold: this.bE,
                            play: this.vE,
                            pause: this.mE,
                            getVolume: this.gE,
                            setVolume: this.yE,
                            disableAdvertising: this.wE,
                            enableAdvertising: this.OE,
                            setMacros: this.xE,
                            setAmpUserConsent: this.SE,
                            destroy: this.fl
                        };
                    }
                }
                class Nc extends $c {
                    constructor() {
                        super(...arguments), this.jE = () => {
                            return this.experience.type;
                        }, this.aw = () => {
                            return this.experience.getSize();
                        }, this.kE = (t, i) => {
                            this.experience.setSize(t, i);
                        };
                    }
                    getApiMethods() {
                        return Object.assign(Object.assign({}, super.getApiMethods()), {
                            getPlayerType: this.jE,
                            getSize: this.aw,
                            setSize: this.kE
                        });
                    }
                }
                class Hc extends Nc {
                    constructor(t) {
                        super(t), this.experience = t, this._E = () => {
                            return this.experience.getVideoDetails();
                        }, this.AE = () => {
                            return this.experience.getPlaylistId();
                        }, this.IE = () => {
                            return this.experience.currentTime;
                        }, this.CE = () => {
                            return this.experience.duration;
                        }, this.TE = t => {
                            this.experience.toggleFullscreen(t);
                        }, this.PE = t => {
                            t ? this.experience.showCaptions() : this.experience.hideCaptions();
                        }, this.ME = t => {
                            this.experience.toggleExpandButton(t);
                        }, this.EE = () => {
                            return this.experience.getQuality();
                        }, this.LE = t => {
                            this.experience.setQuality(t);
                        }, this.RE = () => {
                            this.experience.setAutoQuality();
                        }, this.BE = () => {
                            return this.experience.getAvailableQualities();
                        }, this.DE = () => {
                            this.experience.nextVideo();
                        }, this.FE = () => {
                            this.experience.prevVideo();
                        };
                    }
                    getApiMethods() {
                        return Object.assign(Object.assign({}, super.getApiMethods()), {
                            getVideoDetails: this._E,
                            getVideoCurrentPosition: this.IE,
                            getVideoDuration: this.CE,
                            toggleFullscreen: this.TE,
                            toggleSubtitles: this.PE,
                            toggleFullscreenButton: this.ME,
                            getPlaylistId: this.AE,
                            getQuality: this.EE,
                            setQuality: this.LE,
                            setAutoQuality: this.RE,
                            getAvailableQualities: this.BE,
                            nextVideo: this.DE,
                            prevVideo: this.FE
                        });
                    }
                }
                class qc extends re {
                    constructor(t, i, e, s, n = (() => {
                        return {};
                    })(), r) {
                        super(t, i, e, r, new cn(e, s, i, n)), this.mediator = t, this.$container = i, this.rb = {}, this.$uiContainer.style.backgroundColor = `${ n.backgroundColor }`;
                    }
                    handleComponentEvent(t) {
                        switch (t) {
                        case qi[qi.CloseButton]:
                            this.mediator.publish(this, xt[xt.Close]);
                            break;
                        case xt[xt.Expand]:
                            this.mediator.publish(this, xt[xt.Expand]);
                            break;
                        case xt[xt.Collapse]:
                            this.mediator.publish(this, xt[xt.Collapse]);
                        }
                    }
                }
                class zc extends ac {
                    getLogoPositionClass(t) {
                        switch (t) {
                        case M.ProtoLogoPositionMode.BottomLeft:
                            return 'ui-home-screen-logo-bottom-left';
                        case M.ProtoLogoPositionMode.BottomRight:
                            return 'ui-home-screen-logo-bottom-right';
                        case M.ProtoLogoPositionMode.TopLeft:
                            return 'ui-home-screen-logo-top-left';
                        case M.ProtoLogoPositionMode.TopRight:
                            return this.settings.isCloseButton ? 'ui-home-screen-logo-top-left' : 'ui-home-screen-logo-top-right';
                        case M.ProtoLogoPositionMode.Center:
                            return 'ui-home-screen-logo-center';
                        default:
                            return;
                        }
                    }
                    getLogoTemplate() {
                        return `<cnx class="cnx-logo-bar ${ this.getLogoPositionClass(this.settings.logoPosition) }">[[${ qi.LogoOutstream }]]</cnx>`;
                    }
                    get template() {
                        var t, i;
                        return `\n        <cnx class="cnx-ui cnx-ui-home-screen">\n        ${ this.getLogoTemplate() }\n            <cnx class="cnx-ui-bar">\n                <cnx class="cnx-ui-head-buttons">\n                    ${ this.isAlwaysOn() ? '' : this.closeButton }\n                </cnx>\n                ${ this.isAlwaysOn() ? this.closeButton : '' }\n            </cnx>\n          ${ (null === (i = null === (t = this.settings) || void 0 === t ? void 0 : t.uiComponentsVisibility) || void 0 === i ? void 0 : i.expandButton) ? `<cnx class="cnx-ad-expand-button cnx-ui-btn">[[${ qi.ExpandButton }]]</cnx>` : '' }\n        </cnx>`.trim();
                    }
                }
                class Wc extends Mo {
                    constructor() {
                        super(...arguments), this.enterFullScreen = () => {
                            this.lC.enterFullScreen().then().catch(t => {
                                Object(n.a)({
                                    level: h.ProtoLoggingLevelEnum.WARNING,
                                    message: 'OutstreamAdHandler_enterFullscreen'
                                });
                            });
                        }, this.exitFullscreen = () => {
                            this.lC.exitFullScreen();
                        }, this.gp = () => {
                            this.mediator.publish(this, Tt.c.FullscreenChanged, { payload: !1 }), this.mediator.publish(this, xt[xt.Collapse], { payload: !1 }), this.Mm.services.InteractionService.enableScrollEvent(), this.Mm.services.EventsStorageService.emitOnExitFullscreen(), this.Hm.collapse(), this.setVastViewMode(Pt.a.Normal);
                        }, this.mp = () => {
                            this.mediator.publish(this, Tt.c.FullscreenChanged, { payload: !0 }), this.mediator.publish(this, xt[xt.Expand], { payload: !1 }), this.Mm.services.InteractionService.disableScrollEvent(), this.Mm.services.EventsStorageService.emitOnEnterFullscreen(), this.Hm.expand(), this.setVastViewMode(Pt.a.Fullscreen);
                        };
                    }
                    initFullScreen() {
                        this.lC = new _t(this, this.Mm.services.GlobalDomUtilsService, this.$m.parentElement, this.Mm.config.os.os), this.SC();
                    }
                    SC() {
                        this.subscribe(xt[xt.Expand], this.Hm, this.enterFullScreen), this.subscribe(xt[xt.Collapse], this.Hm, this.exitFullscreen), this.subscribe(Ot.exit, this.lC, this.gp), this.subscribe(Ot.enter, this.lC, this.mp);
                    }
                    ng() {
                        return !1;
                    }
                }
                class Gc extends Ro {
                    constructor() {
                        super(...arguments), this.events = Object.assign(Object.assign({}, Tt.b), C), this.VE = !1, this.UE = !1, this.$E = !1, this.NE = t => {
                            'max-height' === t.propertyName && (this.$experienceContainer.removeEventListener('transitionend', this.NE), this.handleClose());
                        };
                    }
                    rp() {
                        return new Wc(this, this.cp, this.$playerContainer, this.checkFloatingViewability(this.isViewable()), this.ep, this.app, this.Zd);
                    }
                    HE() {
                        this.adHandler && this.adHandler.inImpression ? this.VE = !0 : this.qE();
                    }
                    qE() {
                        this.adHandler && this.unsubscribeAll(this.adHandler), this.gf.onStop(), this.cp.outstreamSettings.endAdBreakPolicy === M.ProtoOutstreamEndAdBreakPolicyEnum.Hide && this.zE(!0), this.mediator.publish(this, C.AdCycleComplete);
                    }
                    WE() {
                        const t = {
                                logoPosition: this.cp.logoPosition,
                                logoUrl: this.cp.logoUrl,
                                isCloseButton: this.cp.isCloseButton,
                                closeButtonMode: this.cp.closeButtonMode,
                                backgroundColor: this.cp.outstreamSettings.houseScreenBackgroundColor,
                                uiComponentsVisibility: { expandButton: this.cp.uiComponentsVisibility.expandButton && this.app.config.os.os !== St.b.Ios }
                            }, i = new zc(t).template;
                        this.GE = new qc(this, this.$playerContainer, this.app.services.GlobalDomUtilsService, this.app.services.InteractionService, t, i), this.subscribe(xt[xt.Close], this.GE, () => {
                            this.handleClose();
                        }), this.subscribe(xt[xt.Expand], this.GE, () => {
                            this.adHandler.enterFullScreen();
                        }), this.subscribe(xt[xt.Collapse], this.GE, () => {
                            this.adHandler.exitFullscreen();
                        });
                    }
                    JE() {
                        this.$E && (Object(T.I)(this.$experienceContainer, d.g.Collapsed), this.mediator.publish(this, C.Collapsed, { payload: !1 }), this.$E = !1, this.Qf());
                    }
                    zE(t = (() => {
                        return !1;
                    })()) {
                        if (!this.$E) {
                            if (t) {
                                const t = setTimeout(() => {
                                    this.$experienceContainer.removeEventListener('transitionend', this.NE), this.handleClose();
                                }, 1000);
                                this.$experienceContainer.addEventListener('transitionend', i => {
                                    clearTimeout(t), this.NE(i);
                                });
                            }
                            Object(T.a)(this.$experienceContainer, d.g.Collapsed), this.mediator.publish(this, C.Collapsed, { payload: !0 }), this.$E = !0, this.Jf();
                        }
                    }
                    QE() {
                        this.$experienceContainer.style.maxHeight = `${ this.$playerContainer.clientHeight }px`;
                    }
                    XE() {
                        this.GE && this.GE.hide();
                    }
                    YE() {
                        this.GE && this.GE.show();
                    }
                    handleClose() {
                        this.triggerDestroy();
                    }
                    uh() {
                        super.uh(), this.QE();
                    }
                    Of(t = (() => {
                        return !1;
                    })()) {
                        super.Of(t), this.VE && this.qE();
                    }
                    gl(t, i = (() => {
                        return !1;
                    })()) {
                        super.gl(t, i), !this.UE && t && (this.UE = !0, this.KE());
                    }
                    op() {
                        this.ep.isInAdPod() ? this.up(() => {
                            this.gf.onAdFinished(this.adHandler.inImpression, this.ep.isInAdPod()), super.op(), this.YE(), this.ep.setNewBreak(M.ProtoAdSlotsEnum.MidRoll);
                        }) : (super.op(), this.ep.setNewBreak(M.ProtoAdSlotsEnum.MidRoll), this.YE());
                    }
                    yf() {
                        super.yf(), this.XE();
                    }
                    addPlayerSize() {
                        super.addPlayerSize(), this.cp.playerSize.responsive ? this.$playerWrapper.appendChild(this.yp()) : this.setFixedSize(this.$playerWrapper);
                    }
                    bp() {
                    }
                    KE() {
                        if (this.cp.adPlaybackMode === M.ProtoAdPlaybackMode.ScrollToPlay && !this.UE)
                            return;
                        this.Xf(M.ProtoAdSlotsEnum.MidRoll);
                        this.gf.contentPlaybackStateChanged(!0);
                    }
                    tp() {
                        this.qf(Mi.a.Standalone);
                    }
                    ZE() {
                    }
                    start() {
                        try {
                            super.start(), this.adHandler ? (this.adHandler.start(this.$playerContainer.clientWidth, this.$playerContainer.clientHeight, this.cp.soundMode === M.ProtoPlayerSoundMode.On ? 1 : 0, this.cp.uiComponentsVisibility.expandButton && this.app.config.os.os !== St.b.Ios), this.adHandler.initFullScreen(), this.gf.forceRecheck(), this.subscribe(Pt.b.AdImpression, this.adHandler, () => {
                                this.JE();
                            }), this.subscribe(xt[xt.Volume], this.adHandler, ({
                                payload: {volume: t}
                            }) => {
                                this.ih(t);
                            }), this.subscribe(xt[xt.Expand], this.adHandler, () => {
                                this.expand();
                            }), this.subscribe(xt[xt.Collapse], this.adHandler, () => {
                                this.collapse();
                            })) : this.zE(), this.KE(), this.subscribe($t.MidRollCapped, this.gf, () => {
                                this.HE();
                            }), this.subscribe($t.TotalAdBreakLengthExpired, this.gf, () => {
                                this.HE();
                            }), this.cp.outstreamSettings.initialRendering === M.ProtoOutstreamInitialRenderingEnum.ExpandWithAd && (this.zE(), Object(T.i)(this.$playerContainer)), Object(T.a)(this.$experienceContainer, d.h.Collapsable), this.QE(), this.cp.outstreamAdAsContent || this.WE();
                        } catch (t) {
                            Object(n.a)({
                                message: 'Outsream_start',
                                exception: t.message,
                                callStack: t.stack,
                                level: h.ProtoLoggingLevelEnum.FATAL
                            });
                        }
                    }
                    getVolume() {
                        if (this.adHandler)
                            return this.adHandler.getVolume();
                    }
                    get currentTime() {
                        return 0;
                    }
                    get duration() {
                        return 0;
                    }
                    destroy() {
                        super.destroy(), this.GE && this.GE.destroy();
                    }
                    expand() {
                        var t;
                        null === (t = this.GE) || void 0 === t || t.getComponent(qi.ExpandButton).setState(he.expand);
                    }
                    collapse() {
                        var t;
                        null === (t = this.GE) || void 0 === t || t.getComponent(qi.ExpandButton).setState(he.collapse);
                    }
                }
                class Jc extends Nc {
                }
                class Qc extends tc {
                    play() {
                        if (this.tL)
                            return this.WC = y.PlayingState, this.tL = !1, void this.qC();
                        this.HC(y.LiveStreamStarting) ? this.jC.getCurrentVideoData(() => {
                            this.kC.play().then(() => {
                                this.JC();
                            }).catch(() => {
                            });
                        }) : super.play();
                    }
                    pause(t = (() => {
                        return !1;
                    })()) {
                        this.HC(y.LiveStreamEnded) || this.HC(y.LiveStreamStarting) || this.HC(y.LiveStreamStopped) || (t && (this.tL = !0), super.pause());
                    }
                    endOfStream() {
                        this.pause(), this.handleVideoEnd();
                    }
                    enterLiveNotSupported() {
                        this.NC(y.LiveStreamNotSupported);
                    }
                    FC() {
                        this.VC = y.LiveStreamStarting, this.UC = y.LiveStreamStarting;
                    }
                    XC() {
                        this.NC(y.LiveStreamEnded);
                    }
                    JC() {
                        this.kC.pause(), this.NC(y.LiveStreamStopped);
                    }
                }
                class Xc extends Hi {
                    initState() {
                        const t = this.context.getComponent(qi.LivePoster);
                        t.setMessageToStarting(), t.show(), this.context.overlayModule.removeOverlayClickEvents(), this.context.overlayModule.disableHover();
                    }
                    exitState() {
                        this.context.getComponent(qi.LivePoster).hide(), this.context.setFullProgressBarUI(), this.context.overlayModule.addOverlayClickEvents(), this.context.overlayModule.enableHover();
                    }
                }
                class Yc extends Hi {
                    initState() {
                        const t = this.context.getComponent(qi.LivePoster);
                        this.context.$uiContainer.classList.add(d.j.LiveEnded), t.setMessageToEnded(), t.show(), this.context.getComponent(qi.LiveIcon).hideComponent(), this.context.overlayModule.removeOverlayClickEvents(), this.context.overlayModule.disableHover();
                    }
                    exitState() {
                    }
                }
                class Kc extends cc {
                    initState() {
                        super.initState();
                        const t = this.context.getComponent(qi.LivePoster);
                        t.hideMessage(), t.show(), this.context.getComponent(qi.LiveIcon).showComponent();
                    }
                    exitState() {
                        super.exitState();
                        const t = this.context.getComponent(qi.LivePoster);
                        t.hide(), t.showMessage();
                    }
                }
                class Zc extends Hi {
                    initState() {
                        const t = this.context.getComponent(qi.LivePoster);
                        Object(T.a)(this.context.$uiContainer, d.j.LiveEnded), t.setMessageToNotSupported(), t.show(), this.context.overlayModule.hideUiControls(), this.context.overlayModule.destroy();
                    }
                    exitState() {
                    }
                }
                class tu extends vc {
                    constructor() {
                        super(...arguments), this.iL = {
                            [y.LiveStreamStarting]: new Xc(this),
                            [y.LiveStreamEnded]: new Yc(this),
                            [y.LiveStreamStopped]: new Kc(this),
                            [y.LiveStreamNotSupported]: new Zc(this)
                        };
                    }
                    start() {
                        this.rb = Object.assign(Object.assign({}, this.rb), this.iL), super.start();
                    }
                    onResize(t) {
                        super.onResize(t), this.setFullProgressBarUI();
                    }
                    updateDuration() {
                        this.setFullProgressBarUI();
                    }
                    setFullProgressBarUI() {
                        const t = this.getComponent(qi.ProgressBar);
                        t && t.setProgress(100);
                    }
                    dP() {
                        this.rb[y.LiveStreamStarting].enterState();
                    }
                    updateCurrentVideo(t) {
                        super.updateCurrentVideo(t);
                        const i = this.getComponent(qi.LivePoster);
                        if (i) {
                            const e = t.getThumbnailUrl(this.$uiContainer.clientWidth, this.$uiContainer.clientHeight);
                            i.setPosterSrc(e), i.setPosterAltText(t.altText), Object(rt.h)(t.startDate) && i.handleDelayedStart(t.startDate);
                        }
                    }
                }
                class iu extends Ec {
                    play() {
                        const t = this.RM.liveSyncPosition;
                        return t && (this.CM.currentTime = t), super.play();
                    }
                    endOfStream() {
                        this.RM.detachMedia();
                    }
                    get hlsSupported() {
                        return this.OM;
                    }
                    EM() {
                        this.BM && this.BM.isPending && this.BM.reject(), this.RM.detachMedia(), this.mediator.publish(this, O.LiveStreamNotPlayable);
                    }
                }
                const eu = 10, su = 10;
                class nu extends nc {
                    constructor() {
                        super(...arguments), this.eL = () => {
                            this.play();
                        }, this.sL = () => {
                            this.lT.endOfStream(), this.kC.endOfStream();
                        };
                    }
                    start() {
                        super.start(), this.nL(), this.rL(), this.bT(), this.kC.hlsSupported ? (this.kC.start(), this.fT(), this.eL()) : this.lT.enterLiveNotSupported();
                    }
                    destroy() {
                        this.hL(), this.aL(), super.destroy();
                    }
                    nL() {
                        this.subscribe(O.EndOfStream, this.kC, this.sL), this.subscribe(O.LevelSwitching, this.kC, () => {
                            this.lT.onEnterBuffering();
                        });
                    }
                    rL() {
                        this.relay(_.NewThumbnail, this.dT, this, this.mediator);
                    }
                    _T(t) {
                        const i = new ac(t, !0);
                        this.dT = new tu(this, this.Mm.services.GlobalDomUtilsService, this.Mm.services.InteractionService, this.Cm, i.template, t, this.Mm.config.appId, this.ym), this.dT.start();
                    }
                    IT(t) {
                        this.oL(t);
                    }
                    yT() {
                    }
                    vT() {
                    }
                    bT() {
                        const {
                                preRollBreak: t,
                                postRollBreak: i
                            } = this.cp, e = Object(rt.e)(t), s = Object(rt.e)(i);
                        this.lT = new Qc(this, this.jC, this.kC, e, s, this.Mm.config.os.os === St.b.Ios, this.cp.videoPosition), super.bT();
                    }
                    cT() {
                        super.cT(), this.subscribe(O.LiveStreamNotPlayable, this.kC, () => {
                            clearTimeout(this.cL), this.cL = setTimeout(this.eL, su * qt.f);
                        });
                    }
                    kT(t, i) {
                        this.kC = new iu(this, this.Mm, this.Mm.services.GlobalDomUtilsService, this.Cm, this.Mm.services.ResizeObserver, i, t, this.cp.videoPosition);
                    }
                    oL(t) {
                        this.hL(), t && (this.uL = setInterval(() => {
                            this.lT.isInPlayingState() && (this.sL(), this.hL());
                        }, eu * qt.f));
                    }
                    hL() {
                        this.uL && (clearInterval(this.uL), this.uL = null);
                    }
                    aL() {
                        this.cL && (clearInterval(this.cL), this.cL = null);
                    }
                }
                class ru extends No {
                    start() {
                        try {
                            super.start();
                        } catch (t) {
                            Object(n.a)({
                                message: 'LiveExperience_start',
                                exception: t.message,
                                callStack: t.stack,
                                level: h.ProtoLoggingLevelEnum.FATAL
                            });
                        }
                    }
                    dC() {
                        this.XI = new nu(this, this.cp, this.app, this.$playerContainer, this.breakPointsHandler.currentBreakpointClass);
                    }
                    op() {
                        this.ep.isInAdPod() ? this.up(() => {
                            this.gf.onAdFinished(this.adHandler.inImpression, this.ep.isInAdPod()), super.op(), this.XI.show(!0);
                        }) : (super.op(), this.XI.show(!0));
                    }
                    bC() {
                        super.bC(), this.subscribe(_.NewThumbnail, this.XI, ({
                            payload: {thumbnailUrl: t}
                        }) => {
                            this.adHandler && this.adHandler.setAdLoadingBackgroundUrl(t);
                        });
                    }
                }
                class hu extends v {
                    constructor() {
                        super(...arguments), this.To = 'cnx-el';
                    }
                    createExperience(t, i) {
                        t.isInStreamType() ? (this.experience = new Vc(this, this.Hs, i, this.app.services.UrlSuffixerService), this.experienceApi = new Hc(this.experience)) : t.isLiveType() ? (this.experience = new ru(this, this.Hs, i, this.app.services.UrlSuffixerService), this.experienceApi = new Hc(this.experience)) : (this.experience = new Gc(this, this.Hs, i, this.app.services.UrlSuffixerService), this.experienceApi = new Jc(this.experience));
                    }
                    isSupportedBreakpoint(t) {
                        return !0;
                    }
                    subscribeToEvents() {
                        super.subscribeToEvents(), this.playerModel.html && this.subscribe(A.MediaMetaUpdate, this.experience, ({
                            payload: {
                                title: t,
                                description: i
                            }
                        }) => {
                            this.updateMacroContent(this.macroElements.title, t), this.updateMacroContent(this.macroElements.description, i);
                        });
                    }
                    getApiMethods() {
                        return this.experienceApi.getApiMethods();
                    }
                }
                class au {
                    constructor() {
                        this.lL = [], this.dL = 0, this.fL = !1, this.pL = t => {
                            this.lL.forEach(i => {
                                t && t !== i.element || this.bL(i, this.dL);
                            });
                        };
                    }
                    vL(t) {
                        let i = this.lL.find(i => {
                            return i.element === t;
                        });
                        return i || (i = {
                            element: t,
                            list: [],
                            cachedPercentInView: 0
                        }, this.lL.push(i)), i.list;
                    }
                    bL(t, i) {
                        t.list.forEach(t => {
                            !t.callbackSent && t.threshold <= i ? (t.callbackSent = !0, t.timeout = Object(Li.a)(t.callback, t.callbackDelay, !0, this.fL)) : t.callbackSent && t.threshold > i && (t.callbackSent = !1, clearTimeout(t.timeout), t.timeout = Object(Li.a)(t.callback, 0, !1, this.fL));
                        });
                    }
                    on(t, i, e) {
                        this.vL(t).push({
                            threshold: e.threshold,
                            callbackSent: !1,
                            callbackDelay: e.callbackDelay,
                            timeout: null,
                            callback: i
                        }), this.pL();
                    }
                    off(t, i) {
                        const e = this.lL.find(i => {
                            return i.element === t;
                        });
                        if (e) {
                            for (let t = e.list.length; t--;)
                                e.list[t].callback === i && e.list.splice(t, 1);
                            0 === e.list.length && this.lL.splice(this.lL.indexOf(e));
                        }
                    }
                    check(t = (() => {
                        return { threshold: 0.1 };
                    })()) {
                        return this.dL >= t.threshold;
                    }
                    triggerRecheck(t) {
                        this.pL(t);
                    }
                    mL(t) {
                        this.fL = t;
                    }
                    setViewableThreshold(t) {
                        this.dL = t, this.triggerRecheck();
                    }
                    getIsTabInFocus() {
                        return !0;
                    }
                    subscribe(t, i) {
                    }
                    destroy() {
                        for (let t = this.lL.length; t--;) {
                            const i = this.lL[t];
                            for (let t = i.list.length; t--;)
                                clearTimeout(i.list[t].timeout), this.off(i.element, i.list[t].callback);
                        }
                    }
                }
                var ou, cu, uu = e(30);
                !function (t) {
                    t[t.none = 0] = 'none', t[t.friendly = 1] = 'friendly', t[t.safe = 2] = 'safe';
                }(ou || (ou = {}));
                class lu {
                    constructor(t, i, e) {
                        this.fe = t, this.gL = i, this.lL = [], this.yL = ou.none, this.wL = {
                            intersectionObserver: !1,
                            fallbackImplementation: !1
                        }, this.OL = null, this.xL = [
                            0,
                            0.01,
                            0.1,
                            0.2,
                            0.5
                        ], this.SL = 250, this.jL = !1, this.kL = t => {
                            this.jL = t, this.pL(), f.a.setFocusState(t), uu.a.pageFocus = t;
                        }, this.pL = () => {
                            this.lL.forEach(t => {
                                const i = this.dL(t.element);
                                this.onViewHandle(t, i);
                            });
                        }, this._L = () => {
                            null === this.OL && (this.OL = setTimeout(() => {
                                this.pL(), clearTimeout(this.OL), this.OL = null;
                            }, this.SL));
                        }, this.AL(e), this.IL(), this.CL();
                    }
                    CL() {
                        this.gL.on(this.kL), uu.a.pageFocus = this.gL.isDocumentVisible();
                    }
                    AL(t) {
                        this.fe.IntersectionObserver && !t ? this.wL.intersectionObserver = !0 : this.wL.fallbackImplementation = !0, this.fe.self !== this.fe.top ? (this.TL = this.PL(this.fe), null !== this.TL ? this.yL = ou.friendly : this.yL = ou.safe) : this.TL = this.fe.frameElement;
                    }
                    PL(t) {
                        let i;
                        try {
                            if ((i = t.parent) === this.fe.top)
                                return t.frameElement;
                        } catch (t) {
                            return null;
                        }
                        return this.PL(i);
                    }
                    IL() {
                        this.wL.intersectionObserver ? this.ML = new this.fe.IntersectionObserver(this.onObserverEnter.bind(this), {
                            root: null,
                            rootMargin: '0px',
                            threshold: this.xL
                        }) : (this.fe.addEventListener('scroll', this._L), this.fe.addEventListener('load', this.pL), this.fe.addEventListener('resize', this.pL));
                    }
                    EL(t) {
                        return this.lL.find(i => {
                            return i.element === t;
                        });
                    }
                    dL(t) {
                        if (this.yL === ou.safe) {
                            const i = this.EL(t);
                            return i ? i.cachedPercentInView : 0;
                        }
                        let i = 1;
                        const e = t.getBoundingClientRect(), s = {
                                bottomRatio: e.bottom / e.height,
                                topRatio: (this.fe.top.innerHeight - e.top) / e.height,
                                leftRatio: (this.fe.top.innerWidth - e.left) / e.width,
                                rightRatio: e.right / e.width
                            };
                        return Object.keys(s).forEach(t => {
                            s[t] <= 0 && (i = 0), s[t] > 0 && s[t] < 1 && (i *= s[t]);
                        }), i;
                    }
                    onObserverEnter(t) {
                        t.forEach(t => {
                            this.lL.filter(i => {
                                return i.element === t.target;
                            }).forEach(i => {
                                this.onViewHandle(i, t.intersectionRatio);
                            });
                        });
                    }
                    onViewHandle(t, i) {
                        t.cachedPercentInView = i, t.list.forEach(t => {
                            !t.callbackSent && t.threshold <= i && this.jL ? (t.callbackSent = !0, t.timeout = Object(Li.a)(t.callback, t.callbackDelay, !0)) : t.callbackSent && (t.threshold > i || !this.jL) && (t.callbackSent = !1, clearTimeout(t.timeout), t.timeout = Object(Li.a)(t.callback, 0, !1));
                        });
                    }
                    on(t, i, e = (() => {
                        return {};
                    })()) {
                        let s = !1;
                        if (this.wL.fallbackImplementation)
                            if (this.yL === ou.friendly && t.ownerDocument.defaultView !== this.fe.top)
                                t = this.TL;
                            else if (this.yL === ou.safe)
                                return void Object(Li.a)(i, 0, !1);
                        let n = this.lL.find(i => {
                            return i.element === t;
                        });
                        n ? s = !0 : (n = {
                            element: t,
                            list: [],
                            cachedPercentInView: 0
                        }, this.lL.push(n)), n.list.push({
                            threshold: e.threshold,
                            callbackSent: !1,
                            callbackDelay: e.callbackDelay,
                            timeout: null,
                            callback: i
                        }), this.wL.intersectionObserver ? (s && this.ML.unobserve(t), this.ML.observe(t)) : this.wL.fallbackImplementation && this.pL();
                    }
                    off(t, i) {
                        const e = this.lL.find(i => {
                            return i.element === t;
                        });
                        if (e) {
                            let s = e.list.length;
                            for (; s;)
                                s--, e.list[s].callback === i && e.list.splice(s, 1);
                            0 === e.list.length && (this.ML && this.ML.unobserve(t), this.lL.splice(this.lL.indexOf(e), 1));
                        }
                    }
                    check(t = (() => {
                        return { threshold: 0.1 };
                    })()) {
                        if (!t.element)
                            return !1;
                        let i = t.element;
                        return this.yL === ou.friendly && (i = this.TL), this.dL(i) >= t.threshold && this.jL;
                    }
                    triggerRecheck(t) {
                        this.wL.fallbackImplementation && t && this.lL.forEach(i => {
                            if (i.element === t) {
                                const t = this.dL(i.element);
                                this.onViewHandle(i, t);
                            }
                        });
                    }
                    setViewableThreshold(t) {
                    }
                    getIsTabInFocus() {
                        return this.jL;
                    }
                    subscribe(t, i) {
                    }
                    destroy() {
                        this.fe.removeEventListener('scroll', this._L), this.fe.removeEventListener('load', this.pL), this.fe.removeEventListener('resize', this.pL), [].slice.call(this.lL).forEach(t => {
                            [].slice.call(t.list).forEach(i => {
                                this.off(t.element, i.callback), this.fe.clearTimeout(i.timeout);
                            });
                        }), this.gL.off(this.kL), clearTimeout(this.OL);
                    }
                }
                class du {
                    constructor(t = (() => {
                        return 0;
                    })()) {
                        this.LL = t, this.RL = 16, this.BL = 9;
                    }
                    getHeightByRatio(t) {
                        return Math.round(t / this.RL * this.BL) + this.LL;
                    }
                }
                class fu {
                    constructor(t, i, e = (() => {
                        return {};
                    })()) {
                        this.floatingMode = Object(rt.a)(e.mode) ? e.mode : t.floatingMode, Object(l.h)(e.devices) ? this.floatingDeviceMode = e.devices : this.floatingDeviceMode = Object(l.h)(t.floatingDeviceMode) ? t.floatingDeviceMode : [h.ProtoDeviceType.Desktop], Object(rt.a)(e.closeButton) ? this.floatingCloseButtonMode = e.closeButton : Object(rt.a)(t.floatingCloseButtonMode) ? this.floatingCloseButtonMode = t.floatingCloseButtonMode : this.floatingCloseButtonMode = h.ProtoPlayerCloseButtonMode.OnHover, this.floatingPosition = Object(rt.a)(e.fixedPosition) ? e.fixedPosition : t.floatingFixedPosition, this.floatingScrollPosition = Object(rt.a)(e.scrollPosition) ? e.scrollPosition : t.floatingScrollPosition, this.floatingWidth = Object(rt.a)(e.floatingWidth) ? e.floatingWidth : t.floatingWidth || Mt, this.floatingGutterX = Object(rt.a)(e.floatingGutterX) ? e.floatingGutterX : t.floatingGutterX, this.floatingGutterY = Object(rt.a)(e.floatingGutterY) ? e.floatingGutterY : t.floatingGutterY, this.pageElement = t.floatingPageElement, this.appendLocation = t.floatingAppendLocation, this.floatingYAxisPadding = t.floatingYAxisPadding, this.DL = this.floatingScrollPosition === h.ProtoPositionMode.BottomLeft || this.floatingScrollPosition === h.ProtoPositionMode.TopLeft, this.FL = this.floatingScrollPosition === h.ProtoPositionMode.BottomRight || this.floatingScrollPosition === h.ProtoPositionMode.TopRight, this.VL = this.floatingScrollPosition === h.ProtoPositionMode.TopLeft || this.floatingScrollPosition === h.ProtoPositionMode.TopRight, this.UL = this.floatingScrollPosition === h.ProtoPositionMode.BottomRight || this.floatingScrollPosition === h.ProtoPositionMode.BottomLeft, this.$L = new du(i);
                    }
                    get isPositionedLeft() {
                        return this.DL;
                    }
                    get isPositionedRight() {
                        return this.FL;
                    }
                    get isPositionedTop() {
                        return this.VL;
                    }
                    get isPositionedBottom() {
                        return this.UL;
                    }
                    set isPositionedLeft(t) {
                        this.DL = t;
                    }
                    set isPositionedRight(t) {
                        this.FL = t;
                    }
                    set isPositionedBottom(t) {
                        this.UL = t;
                    }
                    get positionClass() {
                        switch (this.floatingScrollPosition) {
                        case h.ProtoPositionMode.BottomLeft:
                            return 'bottom-left';
                        case h.ProtoPositionMode.TopLeft:
                            return 'top-left';
                        case h.ProtoPositionMode.TopRight:
                            return 'top-right';
                        default:
                            return 'bottom-right';
                        }
                    }
                    set width(t) {
                        this.floatingWidth = t;
                    }
                    get width() {
                        return this.floatingWidth;
                    }
                    getHeight(t) {
                        return `${ this.$L.getHeightByRatio(t) }px`;
                    }
                }
                function pu(t) {
                    return Object(rt.f)(t) && '[object RegExp]' !== Object.prototype.toString.call(t) && '[object Date]' !== Object.prototype.toString.call(t);
                }
                function bu(t) {
                    return pu(t) ? vu({}, t) : t;
                }
                function vu(t, i) {
                    return function (t, i) {
                        const e = {};
                        return pu(t) && Object.keys(t).forEach(i => {
                            e[i] = bu(t[i]);
                        }), Object.keys(i).forEach(s => {
                            pu(i[s]) && t[s] ? e[s] = vu(t[s], i[s]) : e[s] = bu(i[s]);
                        }), e;
                    }(t, i);
                }
                !function (t) {
                    t[t.Normal = 0] = 'Normal', t[t.Buzzfeed = 1] = 'Buzzfeed';
                }(cu || (cu = {}));
                class mu {
                    constructor(t, i, e, s, r, a, o, c, u, d, f, p = (() => {
                        return 0;
                    })()) {
                        if (this.global = t, this.targetContainer = i, this.NL = e, this.Dc = s, this.secondLevelDomain = r, this.apiConfig = a, this.supplyChainSettings = c, this.isSeoTraffic = u, this.Zd = d, this.videoPosition = f, this.sharingDestinations = [], this.disableAdvertising = !1, this.adBreaks = [], this.disableClickUrl = !1, this.moatTrackingEnabled = !1, this.pauseAdWhenFinished = !1, this.loopAdWhenFinished = !1, this.adsMustBeSkippableIfLongerThan = Ht.d, Object(rt.h)(e.initializationSettingsJson))
                            try {
                                const t = JSON.parse(e.initializationSettingsJson);
                                this.apiConfig = vu(this.apiConfig, t);
                            } catch (t) {
                                Object(n.a)({
                                    message: 'invalid_init_json',
                                    exception: t.message,
                                    callStack: t.callStack,
                                    level: h.ProtoLoggingLevelEnum.FATAL
                                });
                            }
                        (this.apiConfig.playerMode === cu.Buzzfeed || this.apiConfig.settings.pauseAdWhenFinished) && (this.pauseAdWhenFinished = !0), this.HL(this.NL.lineItems);
                        const b = [];
                        this.soundMode = Object(rt.a)(this.apiConfig.settings.defaultSoundMode) ? this.apiConfig.settings.defaultSoundMode : e.soundMode, this.playbackMode = Object(rt.a)(this.apiConfig.settings.playbackMode) ? this.apiConfig.settings.playbackMode : e.playbackMode, this.playbackMode === h.ProtoPlayerPlaybackModeEnum.ClickToPlay || this.soundMode === h.ProtoPlayerSoundMode.Mute || Object(Li.b)() || (this.soundMode = h.ProtoPlayerSoundMode.Mute), this.html = e.html, this.css = e.css, this.floatingSettings = new fu(e, p, this.apiConfig.settings.customization.floating), this.logoUrl = Object(rt.h)(this.apiConfig.settings.customization.logoUrl) ? this.apiConfig.settings.customization.logoUrl : e.logoUrl;
                        const v = e.amazonTamSlotId;
                        if (Object(rt.h)(v) && (this.amazonTamSlotId = v), Object(rt.a)(this.apiConfig.settings.advertising.macros) && (this.externalMacros = this.apiConfig.settings.advertising.macros), Object(rt.a)(this.apiConfig.settings.disableAdvertising) && (this.disableAdvertising = this.apiConfig.settings.disableAdvertising), this.qL(), this.zL(), Object(l.h)(this.apiConfig.settings.advertising.lineItems)) {
                            const t = e.lineItems.filter(t => {
                                return t.creativeType === h.ProtoCreativeTypeEnum.External;
                            });
                            this.apiConfig.settings.advertising.lineItems.forEach(i => {
                                if (this.WL(i), o) {
                                    const t = this.GL(), e = this.JL(i, t);
                                    b.push(e);
                                } else
                                    t.forEach(t => {
                                        if (i.id === t.advertiserLineItemId && (i.url || i.headerBidderBids || i.externalMediaFile || i.externalHlsFile)) {
                                            const e = this.JL(i, t);
                                            b.push(e);
                                        }
                                    });
                            });
                        }
                        !0 !== this.apiConfig.settings.advertising.blockConnatixDemand && b.push(...e.lineItems.filter(t => {
                            return t.creativeType !== h.ProtoCreativeTypeEnum.External;
                        })), b.forEach(t => {
                            t.creativeType === h.ProtoCreativeTypeEnum.External && (t.headerBidderBids && '[]' !== t.headerBidderBids ? t.creativeType = h.ProtoCreativeTypeEnum.HeaderBidder : t.externalMediaFile || t.externalHlsFile ? t.creativeType = h.ProtoCreativeTypeEnum.MediaFile : t.creativeType = h.ProtoCreativeTypeEnum.ThirdParty);
                        });
                        const m = this.QL(b), g = Object(rt.a)(this.apiConfig.settings.rendering.scrollHijackingProtection) ? this.apiConfig.settings.rendering.scrollHijackingProtection : e.scrollHijackingProtection;
                        this.lineItemSettings = {
                            lineItems: m,
                            disableScrollHijackEnforcement: g
                        }, this.midRollNumber = Object(rt.a)(this.apiConfig.settings.advertising.maxNumberOfMidRolls) ? this.apiConfig.settings.advertising.maxNumberOfMidRolls : e.midRollNumber, this.adViewabilityPolicy = e.adViewabilityPolicy, this.preRollBreak = (Object(rt.a)(this.apiConfig.settings.advertising.preRollBreak) ? this.apiConfig.settings.advertising.preRollBreak : e.preRollBreak) * qt.f, this.postRollBreak = (Object(rt.a)(this.apiConfig.settings.advertising.postRollBreak) ? this.apiConfig.settings.advertising.postRollBreak : e.postRollBreak) * qt.f, this.playerId = e.playerId, this.floatingSettings.floatingMode === h.ProtoPlayerFloatingMode.Always ? this.closeButtonMode = this.floatingSettings.floatingCloseButtonMode : this.closeButtonMode = Object(rt.a)(this.apiConfig.settings.customization.closeButtonMode) ? this.apiConfig.settings.customization.closeButtonMode : e.closeButtonMode, this.isCloseButton = !!this.closeButtonMode || !!this.floatingSettings.floatingCloseButtonMode, this.uiComponentsVisibility = {
                            casting: !1,
                            expandButton: Object(rt.a)(this.apiConfig.settings.customization.showExpandButton) ? this.apiConfig.settings.customization.showExpandButton : e.expandButton
                        }, this.sharingDestinations = void 0, this.adPlaybackMode = e.adPlaybackMode, Object(rt.a)(this.apiConfig.settings.disableClickUrl) && (this.disableClickUrl = this.apiConfig.settings.disableClickUrl);
                        const {skipAdAfter: y} = a.settings.advertising.skipAdSettings || {}, {adSkippability: w} = a.settings.advertising.skipAdSettings || {}, {adsMustBeSkippableIfLongerThan: O} = a.settings.advertising.skipAdSettings || {};
                        this.skipAdAfter = Object(rt.a)(y) ? y : e.skipAdAfter, this.adSkippability = Object(rt.a)(w) ? w : e.adSkippability, Object(rt.a)(O) ? O > 0 && O <= Ht.d && (this.adsMustBeSkippableIfLongerThan = O) : Object(rt.a)(w) || e.adsMustBeSkippableIfLongerThan && (this.adsMustBeSkippableIfLongerThan = e.adsMustBeSkippableIfLongerThan);
                        const {disableTracking: x} = a.settings._connatixInternals;
                        (x || o || this.isSeoTraffic) && (this.disableTracking = !0), this.sessionId = this.NL.sessionId, this.moatTrackingEnabled = this.lineItemSettings.lineItems.some(t => {
                            return t.moatTrackingEnabled;
                        });
                    }
                    XL(t, i) {
                        i.adTag = Object(rt.a)(t.url) ? t.url : i.adTag, i.requestCap = Object(rt.a)(t.contentRequestCap) ? t.contentRequestCap : i.requestCap, i.impressionCap = Object(rt.a)(t.contentImpressionCap) ? t.contentImpressionCap : i.impressionCap, i.viewability = Object(rt.a)(t.viewability) ? t.viewability : i.viewability, i.sound = Object(rt.a)(t.sound) ? t.sound : i.sound, i.ignoreFilledRequests = Object(rt.a)(t.ignoreFilledRequests) ? t.ignoreFilledRequests : i.ignoreFilledRequests, i.headerBidderBids = Object(rt.a)(t.headerBidderBids) ? t.headerBidderBids : i.headerBidderBids, i.headerBidderTimeout = Object(rt.a)(t.headerBidderTimeout) ? t.headerBidderTimeout : i.headerBidderTimeout, i.resetRequestsCapTime = Object(rt.a)(t.resetRequestsCapTime) ? t.resetRequestsCapTime : i.resetRequestsCapTime, i.resetImpressionsCapTime = Object(rt.a)(t.resetImpressionsCapTime) ? t.resetImpressionsCapTime : i.resetImpressionsCapTime, i.resetCapType = Object(rt.a)(t.resetCapType) ? t.resetCapType : i.resetCapType, i.timeBetweenRequests = Object(rt.a)(t.timeBetweenRequests) ? t.timeBetweenRequests : i.timeBetweenRequests, i.skipMode = Object(rt.a)(t.skipMode) ? t.skipMode : i.skipMode, i.floorPrice = Object(rt.a)(t.floorPrice) ? t.floorPrice : i.floorPrice, i.adBreakSettings = Object(rt.a)(t.adBreakSettings) ? t.adBreakSettings : i.adBreakSettings, i.pauseAdOutOfView = Object(rt.a)(t.pauseAdOutOfView) ? t.pauseAdOutOfView : i.pauseAdOutOfView;
                    }
                    qL() {
                        this.YL(this.apiConfig.settings.advertising.preRollBreak, h.ProtoAdBreakTypeEnum.PreRoll), this.YL(this.apiConfig.settings.advertising.postRollBreak, h.ProtoAdBreakTypeEnum.PostRoll), this.YL(this.apiConfig.settings.advertising.maxNumberOfMidRolls, h.ProtoAdBreakTypeEnum.MidRoll);
                    }
                    YL(t, i) {
                        const e = this.KL(this.apiConfig.settings.advertising.adBreaks, i), s = this.KL(this.NL.adBreaks, i), n = {
                                maxAdPodDuration: 0,
                                maxAdSlotDuration: 0,
                                numberOfAdSlots: 1,
                                types: [i]
                            };
                        e ? this.adBreaks.push(e) : !Object(rt.a)(t) || e || s ? !e && s && this.adBreaks.push(s) : this.adBreaks.push(n);
                    }
                    KL(t, i) {
                        if (!t)
                            return;
                        let e;
                        return t.forEach(t => {
                            t.types.includes(i) && ((e = Object.assign({}, t)).types = [i]);
                        }), e;
                    }
                    QL(t) {
                        const {adBreaks: i} = this;
                        let e = t;
                        const s = [];
                        return i.forEach(t => {
                            t.types.forEach(i => {
                                return s.push(Object.assign(Object.assign({}, t), { types: [i] }));
                            });
                        }), s.forEach(t => {
                            e = this.removeCompatibleLineItems(t, e);
                        }), t.filter(t => {
                            return !e.includes(t);
                        });
                    }
                    removeCompatibleLineItems(t, i) {
                        const e = t.types[0], s = t.numberOfAdSlots > 1 ? h.ProtoLineItemAdBreakTypeEnum.AdPod : h.ProtoLineItemAdBreakTypeEnum.SingleAd;
                        return i.filter(t => {
                            return !t.adBreakSettings.adBreakTargeting.some(t => {
                                return t.adRollType === e && (t.adBreakTypeEnum === h.ProtoLineItemAdBreakTypeEnum.All || t.adBreakTypeEnum === s);
                            });
                        });
                    }
                    HL(t) {
                        t.forEach(t => {
                            t.adBreakSettings || this.ZL(t), this.WL(t);
                        });
                    }
                    ZL(t) {
                        t.adBreakSettings = {
                            adBreakTargeting: [
                                {
                                    adRollType: h.ProtoAdBreakTypeEnum.PreRoll,
                                    adBreakTypeEnum: h.ProtoLineItemAdBreakTypeEnum.All
                                },
                                {
                                    adRollType: h.ProtoAdBreakTypeEnum.MidRoll,
                                    adBreakTypeEnum: h.ProtoLineItemAdBreakTypeEnum.All
                                },
                                {
                                    adRollType: h.ProtoAdBreakTypeEnum.PostRoll,
                                    adBreakTypeEnum: h.ProtoLineItemAdBreakTypeEnum.All
                                }
                            ]
                        };
                    }
                    WL(t) {
                        0 === t.requestCap && (t.requestCap = 20);
                    }
                    zL() {
                        this.adBreaks.forEach(t => {
                            t.maxAdSlotDuration *= qt.f, t.maxAdPodDuration *= qt.f, t.numberOfAdSlots <= 1 ? t.maxAdPodDuration = 0 : t.maxAdSlotDuration > t.maxAdPodDuration && (t.maxAdSlotDuration = t.maxAdPodDuration);
                        });
                    }
                    JL(t, i) {
                        const e = Object.assign({}, i);
                        return this.XL(t, e), Object(rt.a)(t.externalMediaFile) && (e.externalMediaFile = t.externalMediaFile), Object(rt.a)(t.externalHlsFile) && (e.externalHlsFile = t.externalHlsFile), e.customCpm = t.cpm, e;
                    }
                    GL() {
                        return h.ProtoLineItem.toObject(h.ProtoLineItem.fromObject({}), {
                            defaults: !0,
                            arrays: !0,
                            objects: !0
                        });
                    }
                }
                class gu {
                    constructor(t) {
                        this.Iv = [], this.xI = t.id, this.tR = t.title, this.Fd = t.altText, this.iR = t.description, this.eR = t.imageUrl, this.kP = t.sources, this.kw = t.clickUrl || '', this.sR = t.hlsFilePath || '', this.nR = t.liveStreamFilePath || '', this.rR = t.liveStramStartDate || '', this.kP && this.kP.forEach(t => {
                            this.Iv.push({
                                label: S[t.quality],
                                videoHeight: t.quality,
                                isHD: t.quality >= j
                            });
                        });
                    }
                    get id() {
                        return this.xI;
                    }
                    get title() {
                        return this.tR;
                    }
                    get altText() {
                        return Object(rt.a)(this.Fd) ? this.Fd : '';
                    }
                    get description() {
                        return this.iR;
                    }
                    get clickUrl() {
                        return this.kw;
                    }
                    getSources(t) {
                        return [{
                                src: this.kP.find(i => {
                                    return i.quality === this.getClosestSourceQuality(t).videoHeight;
                                }).file,
                                type: new yc(w.H264).type
                            }];
                    }
                    getHlsSource() {
                        return this.nR || this.sR;
                    }
                    getAvailableQualities() {
                        return this.Iv.sort((t, i) => {
                            return t.videoHeight - i.videoHeight;
                        });
                    }
                    getThumbnailUrl() {
                        return this.eR;
                    }
                    get hlsFilePath() {
                        return this.nR || this.sR;
                    }
                    getClosestSourceQuality(t) {
                        let i;
                        const e = Object(wi.b)(t, this.Iv.map(t => {
                            return t.videoHeight;
                        }));
                        return this.Iv.forEach(t => {
                            t.videoHeight === e && (i = t);
                        }), i;
                    }
                    setAvailableQualities(t) {
                        this.Iv = t;
                    }
                    get startDate() {
                        return this.rR;
                    }
                }
                class yu {
                    constructor(t) {
                        this.hR = new gu(t);
                    }
                    getMetadata(t) {
                        t && t(this.hR);
                    }
                    setAvailableQualities(t) {
                        this.hR.setAvailableQualities(t);
                    }
                }
                class wu {
                    constructor(t, i, e) {
                        this.aR = !1, this.oR = [], this.cR = !1, this.xI = t, this.uR = i, this.lR = e;
                    }
                    getMetadata(t) {
                        this.aR ? t && t(this.hR) : this.dR(t);
                    }
                    setAvailableQualities(t) {
                        this.hR.setAvailableQualities(t);
                    }
                    dR(t) {
                        t && this.oR.push(t), this.cR || (this.cR = !0, this.fR().then(t => {
                            this.cR = !1, this.aR = !0, this.hR = this.pR(t), this.oR.forEach(t => {
                                return t(this.hR);
                            }), this.oR = [];
                        }).catch(() => {
                            this.cR = !1;
                        }));
                    }
                }
                class Ou {
                    constructor(t, i, e, s) {
                        this.xI = t, this.lR = i, this.Zd = s, this.bR = [], this.vR = [], this.mR = [], this.gR = [], this.yR = [], this.Iv = [], this.tR = e.title, this.Fd = e.altText, this.iR = e.description, this.kw = e.clickUrl, this.bR = e.keywordList, this.wR = e.languageId, this.vR = e.trackList, this.OR = e.thumbnail, this.bt = e.duration, this.gR = e.customFields, this.sR = e.hlsFilePath, this.xR = e.sourceItemId, this.yR = e.videoIndexes, Object(l.h)(e.renditionList) && (this.mR = this.SR(e.renditionList), this.jR(e.renditionList));
                    }
                    SR(t) {
                        return t.sort((t, i) => {
                            return t.height - i.height;
                        });
                    }
                    setAvailableQualities(t) {
                        this.Iv = t;
                    }
                    jR(t) {
                        Object(l.e)('height', t).forEach((t, i) => {
                            this.Iv.push({
                                videoHeight: t.height,
                                label: `${ t.height }p`,
                                isHD: t.height >= j
                            });
                        });
                    }
                    kR(t, i) {
                        return this.mR.find(e => {
                            return e.codec === t && e.height === i;
                        });
                    }
                    _R(t, i) {
                        let e = `${ t }${ this.xI }/`;
                        return Object(rt.h)(this.lR) ? e += `${ this.lR }/${ i }` : e += i, e;
                    }
                    AR(t, i) {
                        const e = Object(wi.b)(t, this.Iv.map(t => {
                            return t.videoHeight;
                        }));
                        return this.kR(i, e);
                    }
                    get hlsFilePath() {
                        return this.sR;
                    }
                    getAvailableQualities() {
                        return this.Iv;
                    }
                    getClosestSourceQuality(t) {
                        let i;
                        const e = Object(wi.b)(t, this.Iv.map(t => {
                            return t.videoHeight;
                        }));
                        return this.Iv.forEach(t => {
                            t.videoHeight === e && (i = t);
                        }), i;
                    }
                    getSources(t, i) {
                        const e = [];
                        return i.forEach(i => {
                            const s = this.AR(t, i.id);
                            Object(l.h)(e) || s && e.push({
                                src: this.Zd.appendParamsToUrl(this._R(Vi.a.endPoints.base.video, s.file)),
                                type: i.type
                            });
                        }), e;
                    }
                    getHlsSource() {
                        return this.Zd.appendParamsToUrl(this._R(Vi.a.endPoints.base.video, this.sR));
                    }
                    getThumbnailUrl(t, i) {
                        const e = this._R(Vi.a.endPoints.base.image, this.OR);
                        return Ni.getSmartCroppedImageUrl(e, t, i, this.Zd);
                    }
                    get title() {
                        return this.tR;
                    }
                    get altText() {
                        return Object(rt.a)(this.Fd) ? this.Fd : '';
                    }
                    get description() {
                        return this.iR;
                    }
                    get clickUrl() {
                        return this.kw;
                    }
                    get keywords() {
                        return this.bR;
                    }
                    get languageId() {
                        return this.wR;
                    }
                    get sourceItemId() {
                        return this.xR;
                    }
                    get subtitle() {
                        if (this.vR && this.vR[0])
                            return this.Zd.appendParamsToUrl(this._R(Vi.a.endPoints.base.video, this.vR[0].file));
                    }
                    get spriteSheet() {
                        return this.IR;
                    }
                    get duration() {
                        return this.bt;
                    }
                    get id() {
                        return this.xI;
                    }
                    get customFields() {
                        return this.gR;
                    }
                    get videoIndexes() {
                        return this.yR;
                    }
                }
                var xu = e(45);
                const Su = 'VideoSourceWrapper';
                class ju extends wu {
                    constructor(t, i, e, s) {
                        super(t, i, e), this.Zd = s, this.CR = new xu.a(h.ProtoMediaMetadataResponse, Su);
                    }
                    fR() {
                        let t = `${ Vi.a.endPoints.base.metadata }${ this.xI }/`;
                        return Object(rt.h)(this.lR) ? t += `${ this.lR }/${ this.uR }_media.bin` : t += `${ this.uR }_media.bin`, this.CR.fetchMetadata(this.Zd.appendParamsToUrl(t));
                    }
                    pR(t) {
                        return new Ou(this.xI, this.lR, t, this.Zd);
                    }
                }
                class ku {
                    constructor(t, i) {
                        this.Iv = [], this.xI = t, this.Fd = i.altText, this.sR = i.outputUrl, this.OR = i.thumbnailUrl, this.TR = i.startDate;
                    }
                    getSources(t, i) {
                        return null;
                    }
                    setAvailableQualities(t) {
                        this.Iv = t;
                    }
                    get hlsFilePath() {
                        return this.sR;
                    }
                    getAvailableQualities() {
                        return this.Iv;
                    }
                    getClosestSourceQuality(t) {
                        let i;
                        const e = Object(wi.b)(t, this.Iv.map(t => {
                            return t.videoHeight;
                        }));
                        return this.Iv.forEach(t => {
                            t.videoHeight === e && (i = t);
                        }), i;
                    }
                    getHlsSource() {
                        return this.sR;
                    }
                    getThumbnailUrl(t, i) {
                        return this.OR;
                    }
                    get id() {
                        return this.xI;
                    }
                    get altText() {
                        return Object(rt.a)(this.Fd) ? this.Fd : '';
                    }
                    get startDate() {
                        return this.TR;
                    }
                }
                const _u = 'LiveVideoSourceWrapper';
                class Au extends wu {
                    constructor(t, i, e) {
                        super(t, i, e), this.CR = new xu.a(h.ProtoLiveMediaMetadataResponse, _u);
                    }
                    fR() {
                        const t = `${ Vi.a.endPoints.base.metadata }${ this.xI }/${ this.uR }_liveStream.bin`;
                        return this.CR.fetchMetadata(t);
                    }
                    pR(t) {
                        return new ku(this.xI, t);
                    }
                }
                const Iu = 10;
                class Cu extends mu {
                    constructor(t, i, e, s, r, a, o, c, u, d, f) {
                        if (super(t, i, e, s, r, a, o, c, f, u, d), this.global = t, this.targetContainer = i, this.NL = e, this.Zd = u, this.videoPosition = d, this.playlist = [], this.outstreamAdAsContent = !1, this.alwaysDisplayControls = this.apiConfig.settings.customization.alwaysDisplayControls, this.playerSize = this.PR(), this.midRollOnlyOnLongContent = Object(rt.a)(this.apiConfig.settings.advertising.midRollOnlyOnLongContent) ? this.apiConfig.settings.advertising.midRollOnlyOnLongContent : e.midRollOnlyOnLongContent, this.uiComponentsVisibility.watermark = Object(rt.a)(this.apiConfig.settings.customization.showMuteWatermark) ? this.apiConfig.settings.customization.showMuteWatermark : e.muteWatermark, this.playlistId = e.playlistId, this.accentColor = Object(rt.h)(this.apiConfig.settings.customization.accentColor) ? this.apiConfig.settings.customization.accentColor : e.accentColor, this.iconsColor = Object(rt.h)(this.apiConfig.settings.customization.iconsColor) ? this.apiConfig.settings.customization.iconsColor : e.iconsColor, this.tooltipTextColor = Object(rt.h)(this.apiConfig.settings.customization.tooltipTextColor) ? this.apiConfig.settings.customization.tooltipTextColor : e.tooltipTextColor, this.tooltipBackgroundColor = Object(rt.h)(this.apiConfig.settings.customization.tooltipBackgroundColor) ? this.apiConfig.settings.customization.tooltipBackgroundColor : e.tooltipBackgroundColor, this.minTimeBeforeFirstAd = (Object(rt.a)(this.apiConfig.settings.advertising.timeBeforeFirstAd) ? this.apiConfig.settings.advertising.timeBeforeFirstAd : e.minTimeBeforeFirstAd) * qt.f, this.timeBetweenAds = (Object(rt.a)(this.apiConfig.settings.advertising.timeBetweenAds) ? this.apiConfig.settings.advertising.timeBetweenAds : e.timeBetweenAds) * qt.f, this.upNextMode = Object(rt.a)(this.apiConfig.settings.nextVideoMode) ? this.apiConfig.settings.nextVideoMode : e.upNextMode, this.closedCaptionDefault = Object(rt.a)(this.apiConfig.settings.customization.closedCaptionDefault) ? this.apiConfig.settings.customization.closedCaptionDefault : e.closedCaption, this.logoPosition = Object(rt.a)(this.apiConfig.settings.customization.logoPosition) ? this.apiConfig.settings.customization.logoPosition : e.logoPosition, this.playerType = e.playerType, this.playerType !== M.ProtoElementsTypeEnum.OutStream || !this.apiConfig.settings.outstreamAdAsContent && this.apiConfig.playerMode !== cu.Buzzfeed || (this.outstreamAdAsContent = !0), (Object(rt.a)(this.apiConfig.settings.outstreamSettings.endAdBreakPolicy) ? this.apiConfig.settings.outstreamSettings.endAdBreakPolicy === M.ProtoOutstreamEndAdBreakPolicyEnum.Loop : e.outstreamEndAdBreakPolicy === M.ProtoOutstreamEndAdBreakPolicyEnum.Loop) && (this.outstreamAdAsContent = !0, this.loopAdWhenFinished = !0), Object(rt.e)(this.minTimeBeforeFirstAd) || this.apiConfig.playerMode === cu.Buzzfeed || this.outstreamAdAsContent || (this.minTimeBeforeFirstAd = Iu), Object(rt.h)(this.apiConfig._appSettings.bundleID) && !this.isInApp() && Object(n.a)({
                                message: 'Elements_PlayerModel_bundle_id_for_non_in_app',
                                level: h.ProtoLoggingLevelEnum.FATAL
                            }), !Object(rt.h)(this.apiConfig._appSettings.bundleID) && this.isInApp() && Object(n.a)({
                                message: 'Elements_PlayerModel_bundle_id_missing_for_in_app',
                                level: h.ProtoLoggingLevelEnum.FATAL
                            }), this.videoQuality = Object(rt.a)(this.NL.videoQuality) ? this.NL.videoQuality : M.ProtoVideoQuality.Auto, Object(l.h)(this.apiConfig.settings.playlist) && !Object(rt.h)(this.apiConfig.mediaId) ? this.apiConfig.settings.playlist.forEach(t => {
                                Object(rt.h)(t.liveStreamFilePath) && (this.playerType = M.ProtoElementsTypeEnum.Live, this.playbackMode = M.ProtoPlayerPlaybackModeEnum.ClickToPlay), this.playlist.push(new yu(t));
                            }) : e.playlist.length > 0 && e.playlist.forEach(({
                                mediaId: t,
                                revisionNumber: i,
                                mediaContentVersionId: e
                            }) => {
                                this.NL.playerType === M.ProtoElementsTypeEnum.Live ? this.playlist.push(new Au(t, i, e)) : this.playlist.push(new ju(t, i, e, this.Zd));
                            }), this.isOutStreamType()) {
                            const t = Object(rt.a)(this.apiConfig.settings.outstreamSettings.initialRendering) ? this.apiConfig.settings.outstreamSettings.initialRendering : e.outstreamInitialRendering, i = Object(rt.h)(this.apiConfig.settings.outstreamSettings.houseScreenColor) ? this.apiConfig.settings.outstreamSettings.houseScreenColor : e.outstreamHouseBackgroundColor, s = (Object(rt.a)(this.apiConfig.settings.outstreamSettings.totalAdBreakLength) ? this.apiConfig.settings.outstreamSettings.totalAdBreakLength : e.outstreamTotalAdBreakLength) * qt.f, n = Object(rt.a)(this.apiConfig.settings.outstreamSettings.endAdBreakPolicy) ? this.apiConfig.settings.outstreamSettings.endAdBreakPolicy : e.outstreamEndAdBreakPolicy;
                            this.outstreamSettings = {
                                initialRendering: t,
                                houseScreenBackgroundColor: i,
                                totalAdBreakLength: s,
                                endAdBreakPolicy: n
                            };
                        }
                        (Object(rt.a)(this.apiConfig.settings.gallery.style) && this.apiConfig.settings.gallery.style !== M.ProtoGalleryStyleMode.None || !Object(rt.a)(this.apiConfig.settings.gallery.style) && e.galleryStyle !== M.ProtoGalleryStyleMode.None) && this.floatingSettings.floatingMode !== M.ProtoPlayerFloatingMode.Always && (this.gallery = {
                            style: Object(rt.a)(this.apiConfig.settings.gallery.style) ? this.apiConfig.settings.gallery.style : e.galleryStyle,
                            orientation: this.MR()
                        });
                    }
                    get urlSuffixerService() {
                        return this.Zd;
                    }
                    isInApp() {
                        return Object(l.g)(this.playerType, [M.ProtoElementsTypeEnum.InStreamInApp]);
                    }
                    isInStreamType() {
                        return Object(l.g)(this.playerType, [
                            M.ProtoElementsTypeEnum.InStream,
                            M.ProtoElementsTypeEnum.InStreamInApp
                        ]);
                    }
                    isOutStreamType() {
                        return Object(l.g)(this.playerType, [M.ProtoElementsTypeEnum.OutStream]);
                    }
                    isLiveType() {
                        return Object(l.g)(this.playerType, [M.ProtoElementsTypeEnum.Live]);
                    }
                    PR() {
                        return {
                            responsive: Object(rt.a)(this.apiConfig.settings.customization.responsive) ? this.apiConfig.settings.customization.responsive : this.NL.responsive,
                            ratioWidth: Object(rt.a)(this.apiConfig.settings.customization.ratioWidth) ? this.apiConfig.settings.customization.ratioWidth : this.NL.ratioWidth,
                            ratioHeight: Object(rt.a)(this.apiConfig.settings.customization.ratioHeight) ? this.apiConfig.settings.customization.ratioHeight : this.NL.ratioHeight,
                            fixedWidth: Object(rt.a)(this.apiConfig.settings.customization.fixedWidth) ? this.apiConfig.settings.customization.fixedWidth : this.NL.fixedWidth,
                            fixedHeight: Object(rt.a)(this.apiConfig.settings.customization.fixedHeight) ? this.apiConfig.settings.customization.fixedHeight : this.NL.fixedHeight
                        };
                    }
                    MR() {
                        return this.Dc === h.ProtoDeviceType.Smartphone || this.Dc === h.ProtoDeviceType.Tablet ? M.ProtoGalleryOrientationEnum.Portrait : this.apiConfig.settings.gallery.orientation ? this.apiConfig.settings.gallery.orientation : this.NL.galleryOrientation;
                    }
                }
                const Tu = Object.assign(Object.assign(Object.assign({}, Tt.b), I), C), Pu = {
                        PlaybackModeEnum: {
                            AutoPlay: h.ProtoPlayerPlaybackModeEnum.Autoplay,
                            ScrollToPlay: h.ProtoPlayerPlaybackModeEnum.ScrollToPlay,
                            ClickToPlay: h.ProtoPlayerPlaybackModeEnum.ClickToPlay
                        },
                        DefaultSoundModeEnum: {
                            On: h.ProtoPlayerSoundMode.On,
                            Off: h.ProtoPlayerSoundMode.Mute,
                            OnHover: h.ProtoPlayerSoundMode.Hover
                        },
                        InsertPositionEnum: {
                            WithinContainer: h.ProtoPlayerInsertMode.WithinContainer,
                            BeforeContainer: h.ProtoPlayerInsertMode.BeforeContainer,
                            AfterContainer: h.ProtoPlayerInsertMode.AfterContainer,
                            ReplaceContainer: h.ProtoPlayerInsertMode.ReplaceContainer,
                            HideContainer: h.ProtoPlayerInsertMode.HideContainer
                        },
                        CloseButtonModeEnum: {
                            Off: h.ProtoPlayerCloseButtonMode.Off,
                            On: h.ProtoPlayerCloseButtonMode.OnHover,
                            OnAfterFirstAd: h.ProtoPlayerCloseButtonMode.OnHoverAfterFirstAd,
                            OnHover: h.ProtoPlayerCloseButtonMode.OnHover,
                            OnHoverAfterFirstAd: h.ProtoPlayerCloseButtonMode.OnHoverAfterFirstAd,
                            AlwaysOn: h.ProtoPlayerCloseButtonMode.AlwaysOn
                        },
                        QualityEnum: S,
                        LineItemExcludedSlotsEnum: {
                            PreRoll: h.ProtoAdSlotsEnum.PreRoll,
                            MidRoll: h.ProtoAdSlotsEnum.MidRoll,
                            PostRoll: h.ProtoAdSlotsEnum.PostRoll
                        },
                        ErrorTypesEnum: {
                            SetupError: Tt.a.SetupError,
                            NoPlayer: Tt.a.NoPlayer
                        },
                        FloatingModeEnum: {
                            Off: h.ProtoPlayerFloatingMode.Off,
                            OnPageLoad: h.ProtoPlayerFloatingMode.OnPageLoad,
                            AfterInView: h.ProtoPlayerFloatingMode.AfterInView,
                            Always: h.ProtoPlayerFloatingMode.Always
                        },
                        FloatingDevicesEnum: {
                            Desktop: h.ProtoDeviceType.Desktop,
                            Smartphone: h.ProtoDeviceType.Smartphone,
                            Tablet: h.ProtoDeviceType.Tablet,
                            Other: h.ProtoDeviceType.GameConsole
                        },
                        FloatingFixedPositionModeEnum: {
                            Page: h.ProtoFloatingFixedPositionMode.Page,
                            Element: h.ProtoFloatingFixedPositionMode.Element
                        },
                        FloatingScrollPositionEnum: {
                            BottomRight: h.ProtoPositionMode.BottomRight,
                            BottomLeft: h.ProtoPositionMode.BottomLeft,
                            TopRight: h.ProtoPositionMode.TopRight,
                            TopLeft: h.ProtoPositionMode.TopLeft
                        },
                        FloatingStatesEnum: {
                            Float: Ct.Float,
                            Embed: Ct.Embed
                        },
                        ImplementationTypeEnum: {
                            Amp: h.ProtoImplementationType.Amp,
                            Web: h.ProtoImplementationType.Web
                        }
                    }, Mu = Object.assign(Object.assign({}, Pu), {
                        NextVideoModeEnum: {
                            Next: M.ProtoPlayerUpNextMode.Next,
                            Loop: M.ProtoPlayerUpNextMode.Loop,
                            Stop: M.ProtoPlayerUpNextMode.Stop
                        },
                        LogoPositionEnum: {
                            None: M.ProtoLogoPositionMode.None,
                            ControlBar: M.ProtoLogoPositionMode.ControlBar,
                            BottomRight: M.ProtoLogoPositionMode.BottomRight,
                            BottomLeft: M.ProtoLogoPositionMode.BottomLeft,
                            TopRight: M.ProtoLogoPositionMode.TopRight,
                            TopLeft: M.ProtoLogoPositionMode.TopLeft
                        },
                        PlayerTypesEnum: {
                            InStream: M.ProtoElementsTypeEnum.InStream,
                            OutStream: M.ProtoElementsTypeEnum.OutStream,
                            InStreamInApp: M.ProtoElementsTypeEnum.InStream,
                            Live: M.ProtoElementsTypeEnum.Live
                        },
                        GalleryStyleModeEnum: {
                            None: M.ProtoGalleryStyleMode.None,
                            Detailed: M.ProtoGalleryStyleMode.Detailed,
                            Visual: M.ProtoGalleryStyleMode.Visual
                        },
                        GalleryOrientationEnum: {
                            Landscape: M.ProtoGalleryOrientationEnum.Landscape,
                            Portrait: M.ProtoGalleryOrientationEnum.Portrait
                        },
                        InitialRenderingEnum: {
                            ExpandWithAd: M.ProtoOutstreamInitialRenderingEnum.ExpandWithAd,
                            FullyRendered: M.ProtoOutstreamInitialRenderingEnum.FullyRendered
                        },
                        EndAdBreakPolicyEnum: {
                            Hide: M.ProtoOutstreamEndAdBreakPolicyEnum.Hide,
                            HouseScreen: M.ProtoOutstreamEndAdBreakPolicyEnum.HouseScreen,
                            Loop: M.ProtoOutstreamEndAdBreakPolicyEnum.Loop
                        }
                    });
                function Eu(t, i) {
                    const e = t.toObject({}, {
                            defaults: !0,
                            arrays: !0,
                            objects: !0
                        }), s = function (t) {
                            return t.toObject({}, {
                                defaults: !0,
                                arrays: !0,
                                objects: !0
                            });
                        }(i);
                    return e.players.push(s), e.browser = h.Browser.toObject(h.Browser.fromObject({}), {
                        defaults: !0,
                        arrays: !0,
                        objects: !0
                    }), e.geoLocation = h.GeoLocation.toObject(h.GeoLocation.fromObject({}), {
                        defaults: !0,
                        arrays: !0,
                        objects: !0
                    }), e;
                }
                var Lu = e(25);
                class Ru extends au {
                    constructor(t, i) {
                        super(), this.fe = t;
                        try {
                            this.bo = new Uc(), this.ys();
                        } catch (t) {
                            Object(n.a)({
                                message: 'omid_verification_client_error',
                                exception: t.message,
                                callStack: t.callStack,
                                level: i ? h.ProtoLoggingLevelEnum.FATAL : h.ProtoLoggingLevelEnum.INFO
                            });
                        }
                    }
                    subscribe(t, i) {
                        return this.bo.on(t, i);
                    }
                    ys() {
                        const t = this.ER();
                        if (this.LR = new t(), !this.LR.isSupported())
                            throw new Error('omid_not_implemented');
                        this.RR(), this.Xm();
                    }
                    ER() {
                        if (!this.fe.OmidVerificationClient)
                            throw new Error('omid_verification_client_not_found');
                        if (!this.fe.OmidVerificationClient[Lu.k])
                            throw new Error('omid_verification_client_wrong_version');
                        return this.fe.OmidVerificationClient[Lu.k];
                    }
                    RR() {
                        this.LR.registerSessionObserver(t => {
                            t && t.type === Lu.e.sessionError && Object(n.a)({
                                message: 'omid_verification_client_session_error',
                                exception: t.data.message,
                                level: h.ProtoLoggingLevelEnum.WARNING
                            });
                        });
                    }
                    Xm() {
                        this.LR.addEventListener(Lu.e.geometryChange, t => {
                            try {
                                const {
                                        percentageInView: i,
                                        reasons: e
                                    } = t.data.adView, s = [
                                        Lu.a.backgrounded,
                                        Lu.a.notFound
                                    ].some(t => {
                                        return e.includes(t);
                                    });
                                this.mL(s);
                                const r = i / 100;
                                this.setViewableThreshold(r), this.bo.trigger(Tt.e.OmidViewabilityThreshold, r);
                            } catch (t) {
                                Object(n.a)({
                                    message: 'omid_verification_client_geometry_change_error',
                                    exception: t.message,
                                    callStack: t.callStack,
                                    level: h.ProtoLoggingLevelEnum.FATAL,
                                    throttle: 1
                                });
                            }
                        });
                    }
                }
                const Bu = `cnx-player-css-${ He.a.version }`, Du = {
                        src: Vi.a.endPoints.assets.css.elements,
                        id: Bu
                    };
                class Fu extends a.a {
                    Cn() {
                        return Du;
                    }
                    getDelegateHandler() {
                        return {
                            getCurrentPlaybackTime: () => {
                                if (!this.renderer)
                                    return 0;
                                const t = this.renderer.getApiMethods();
                                return t.getPlayerType() === M.ProtoElementsTypeEnum.OutStream ? 0 : t.getVideoCurrentPosition();
                            },
                            getCurrentVolume: () => {
                                return this.renderer.getApiMethods().getVolume();
                            }
                        };
                    }
                    getRendererInstance(t, i, e, s, n) {
                        return new hu(this, t, i, e, s, n);
                    }
                    getViewabilityService(t, i, e = (() => {
                        return !1;
                    })()) {
                        return this.externalAttributes.settings.useExternalViewabilityService ? new au() : this.cs ? new Ru(window, this.Ls) : new lu(t.global, i, t.isOutStreamType() || e);
                    }
                    getPlayerResponse(t, i) {
                        return new Promise((i, e) => {
                            eh.a.sendProtoRequest({
                                ProtoResponse: M.ProtoElementsResponse,
                                ProtoRequest: M.ProtoElementsRequest,
                                requestData: t,
                                endpoint: Vi.a.endPoints.api.pls,
                                withCredentials: !0,
                                queryParams: { [ah.b]: He.a.version },
                                logError: !0
                            }).then(t => {
                                window.parent.connatixDummy && Object(pn.b)('connatixDummy', this.pageUrl) && (t.players[0] = Object.assign(Object.assign({}, t.players[0]), window.parent.connatixDummy)), i(t);
                            }).catch(t => {
                                e(t);
                            });
                        });
                    }
                    getPlayerModel(t, i, e, s) {
                        const r = new Cu(t.insertWindow ? t.insertWindow : this.GLOBAL, t.insertContainer, i.players[s], i.browser.device, i.secondLevelDomain, this.externalAttributes, this.isServerlessMode, i.supplyChain, e, this.queryParams.cnxVideoPosition, i.isSeoTraffic || this.queryParams.cnxIsSeoTraffic);
                        return 0 === r.playlist.length ? (Object(n.a)({
                            message: 'ElementsLoader_no_playlist_items',
                            level: h.ProtoLoggingLevelEnum.FATAL
                        }), null) : r;
                    }
                    getApiConfigEnums() {
                        return Mu;
                    }
                    getApiConfigEvents() {
                        return Tu;
                    }
                    getSpecificRequestData() {
                        const t = { localTimestamp: Object(nt.c)() };
                        this.queryParams.cnxMediaId ? t.forceMediaId = this.queryParams.cnxMediaId : this.externalAttributes.mediaId && (t.forceMediaId = this.externalAttributes.mediaId), this.queryParams.cnxPlaylistId ? t.forcePlaylistId = this.queryParams.cnxPlaylistId : this.externalAttributes.playlistId && !Object(l.h)(this.externalAttributes.settings.playlist) && (t.forcePlaylistId = this.externalAttributes.playlistId);
                        const i = this.externalAttributes.settings.forceSourceItemId;
                        return Object(rt.h)(i) && (t.forceSourceItemId = i), t;
                    }
                    zs() {
                        super.zs(), this.externalAttributes.settings.gallery = {}, this.externalAttributes.settings.outstreamSettings = {};
                    }
                    BR(t) {
                        t.forEach(t => {
                            t.ratioWidth = 16, t.ratioHeight = 9;
                        });
                    }
                    defaultInitFromProto() {
                        const t = Eu(M.ProtoElementsResponse, M.ProtoElements);
                        return this.BR(t.players), t;
                    }
                }
                var Vu = e(12);
                class Uu {
                    constructor(t = (() => {
                        return !1;
                    })()) {
                        this._debugLogging = t, this.DR = 'eventEmitted', this.bo = new Uc();
                    }
                    subscribe(t) {
                        return this.bo.on(this.DR, t);
                    }
                    unsubscribe(t) {
                        this.bo.remove(this.DR, t);
                    }
                    emitSessionStart(t) {
                        const i = { videoMetadata: t };
                        this.FR({
                            metadata: i,
                            name: Vu.a.SessionStart
                        });
                    }
                    emitContentComplete() {
                        this.FR({ name: Vu.a.ContentComplete });
                    }
                    emitSessionEnd() {
                        this.FR({ name: Vu.a.SessionEnd });
                    }
                    emitPlay() {
                        this.FR({ name: Vu.a.Play });
                    }
                    emitPause() {
                        this.FR({ name: Vu.a.Pause });
                    }
                    emitAdPlay() {
                        this.FR({ name: Vu.a.AdPlay });
                    }
                    emitAdPause() {
                        this.FR({ name: Vu.a.AdPause });
                    }
                    emitAdPlaying() {
                        this.FR({ name: Vu.a.AdPlaying });
                    }
                    emitAdPaused() {
                        this.FR({ name: Vu.a.AdPaused });
                    }
                    emitAdImpression(t, i) {
                        const e = {
                            adMetadata: t,
                            customAdMetadata: i
                        };
                        this.FR({
                            metadata: e,
                            name: Vu.a.AdImpression
                        });
                    }
                    emitAdComplete() {
                        this.FR({ name: Vu.a.AdComplete });
                    }
                    emitAdStopped() {
                        this.FR({ name: Vu.a.AdStopped });
                    }
                    emitAdBreakStart(t) {
                        const i = { adBreakMetadata: t };
                        this.FR({
                            metadata: i,
                            name: Vu.a.AdBreakStart
                        });
                    }
                    emitAdBreakComplete() {
                        this.FR({ name: Vu.a.AdBreakComplete });
                    }
                    emitPlayerResized(t) {
                        const i = { playerDimensionsMetadata: t };
                        this.FR({
                            metadata: i,
                            name: Vu.a.PlayerResized
                        });
                    }
                    emitOnEnterFullscreen() {
                        this.FR({ name: Vu.a.OnEnterFullscreen });
                    }
                    emitOnExitFullscreen() {
                        this.FR({ name: Vu.a.OnExitFullscreen });
                    }
                    emitOnPlayerCollapsed() {
                        this.FR({ name: Vu.a.PlayerCollapsed });
                    }
                    emitOnPlayerExpanded() {
                        this.FR({ name: Vu.a.PlayerExpanded });
                    }
                    emitAdError() {
                        this.FR({ name: Vu.a.AdError });
                    }
                    emitPlayError() {
                        this.FR({ name: Vu.a.PlayError });
                    }
                    emitRenderError() {
                        this.FR({ name: Vu.a.RenderError });
                    }
                    emitAdClickThru() {
                        this.FR({ name: Vu.a.AdClickThru });
                    }
                    emitAdInteraction() {
                        this.FR({ name: Vu.a.AdInteraction });
                    }
                    emitAdVideoStart(t) {
                        const i = { adVideoStartMetadata: t };
                        this.FR({
                            metadata: i,
                            name: Vu.a.AdVideoStart
                        });
                    }
                    emitAdLoaded(t) {
                        const i = { adLoadedMetadata: t };
                        this.FR({
                            metadata: i,
                            name: Vu.a.AdLoaded
                        });
                    }
                    emitAdStateChange(t) {
                        const i = { adStateChangedMetadata: t };
                        this.FR({
                            metadata: i,
                            name: Vu.a.AdStateChange
                        });
                    }
                    emitAdVideoFirstQuartile() {
                        this.FR({ name: Vu.a.AdVideoFirstQuartile });
                    }
                    emitAdVideoMidpoint() {
                        this.FR({ name: Vu.a.AdVideoMidpoint });
                    }
                    emitAdVideoThirdQuartile() {
                        this.FR({ name: Vu.a.AdVideoThirdQuartile });
                    }
                    emitAdVideoComplete() {
                        this.FR({ name: Vu.a.AdVideoComplete });
                    }
                    emitVolumeChange(t) {
                        this.FR({
                            name: Vu.a.VolumeChange,
                            metadata: { volume: t }
                        });
                    }
                    emitAdVolumeChange() {
                        this.FR({ name: Vu.a.AdVolumeChange });
                    }
                    emitAdSkipped() {
                        this.FR({ name: Vu.a.AdSkipped });
                    }
                    FR(t) {
                        this._debugLogging && console.log('Connatix Player Elements debugging: ', t), this.bo.trigger(this.DR, t);
                    }
                    destroy() {
                        this.FR({ name: Vu.a.Destroy }), this.bo.removeAll();
                    }
                }
                var $u, Nu = e(34);
                !function (t) {
                    t.connatix = 'connatix.com', t.elements = 'elements.video';
                }($u || ($u = {}));
                const Hu = {
                    [$u.connatix]: 'cnx',
                    [$u.elements]: 'cnxel'
                };
                const qu = window.parent, zu = [], Wu = function (t) {
                        if (!t || 'SCRIPT' !== t.tagName)
                            return Object(n.a)({
                                message: 'Prerender_Elements_getBundleDomain_no_currentScript',
                                level: h.ProtoLoggingLevelEnum.FATAL
                            }), null;
                        const i = t.src;
                        return i.indexOf($u.elements) > -1 ? $u.elements : i.indexOf($u.connatix) > -1 ? $u.connatix : (Object(n.a)({
                            message: 'Prerender_Elements_getBundleDomain_unkown_src',
                            level: h.ProtoLoggingLevelEnum.FATAL
                        }), null);
                    }(window.document.currentScript);
                window.addEventListener('unload', function (t) {
                    zu.forEach(t => {
                        return t.destroy();
                    });
                });
                const Gu = Object(Li.f)(qu).topFrame;
                Nu.a.abServiceType = Nu.b.ElementsABService;
                const Ju = (t, i) => {
                        return i.AMP_CONTEXT_DATA || t.settings.implementationType === h.ProtoImplementationType.Amp;
                    }, Qu = function (t, i, e, s, r, a) {
                        var o, c;
                        const u = Ju(t, qu), l = new Fu(e, qu, s, u, r, a);
                        zu.push(l);
                        const d = function () {
                            Object(Li.j)(() => {
                                return new Promise((t, i) => {
                                    if (Object(T.l)(Du.id, Gu))
                                        return t();
                                    Object(T.y)(Du, Gu.document.head, Gu, () => {
                                        return t();
                                    }, t => {
                                        return i(t);
                                    });
                                });
                            }).catch(t => {
                                throw Object(n.a)({
                                    message: 'Prerender_Elements_Loader_add_css_link',
                                    exception: t.message,
                                    callStack: t.stack,
                                    level: h.ProtoLoggingLevelEnum.INFO,
                                    throttle: 1000
                                }), t;
                            }).then(() => {
                                try {
                                    Object(T.S)(qu), l.updateQueryParams(), l.loadScriptTag(t, i) ? l.insertRenderer() : Object(n.a)({
                                        message: 'Prerender_Elements_main_no_script_tag',
                                        level: h.ProtoLoggingLevelEnum.INFO,
                                        throttle: 1000
                                    });
                                } catch (t) {
                                    Object(n.a)({
                                        message: 'Prerender_Elements_main_insertRenderer',
                                        exception: t.message,
                                        callStack: t.stack,
                                        level: h.ProtoLoggingLevelEnum.INFO,
                                        throttle: 1000
                                    });
                                }
                            }).catch(() => {
                            });
                        };
                        s ? d() : l.findPageUrl(qu, null === (c = null === (o = t) || void 0 === o ? void 0 : o.settings) || void 0 === c ? void 0 : c.ampUrl).then(() => {
                            return d();
                        }).catch(t => {
                            Object(n.a)({
                                message: 'Prerender_Elements_main_init',
                                exception: t.message,
                                callStack: t.stack,
                                level: h.ProtoLoggingLevelEnum.INFO,
                                throttle: 1000
                            }), l.registerApiError();
                        });
                    };
                try {
                    !function () {
                        if (-1 !== navigator.userAgent.toLowerCase().indexOf('msie'))
                            return void Object(n.a)({
                                message: 'Prerender_Elements_main_IE_check',
                                level: h.ProtoLoggingLevelEnum.INFO,
                                throttle: 1000
                            });
                        if (!Wu)
                            return;
                        const t = Hu[Wu];
                        let i = [];
                        qu[t] && (i = qu[t].cmd), qu[t] = function () {
                            const i = {};
                            return i[t] = function (t) {
                                var i, e;
                                t.settings = t.settings || {}, t._appSettings = t._appSettings || {}, t._appSettings.cmp = t._appSettings.cmp || {}, t._appSettings.tcf = t._appSettings.tcf || {}, t.settings.customization = t.settings.customization || {}, t.settings.rendering = t.settings.rendering || {}, t.settings.advertising = t.settings.advertising || {}, t.settings.outstreamSettings = t.settings.outstreamSettings || {}, t.settings.gallery = t.settings.gallery || {}, t.settings._connatixInternals = t.settings._connatixInternals || {}, t.settings.plugins = t.settings.plugins || {}, t.settings.advertising.skipAdSettings = t.settings.advertising.skipAdSettings || {};
                                return [
                                    '602660809',
                                    'com.thomsonreuters.reuters',
                                    '12345',
                                    'com.cnx.androidsdkapp'
                                ].includes(null === (e = null === (i = t) || void 0 === i ? void 0 : i._appSettings) || void 0 === e ? void 0 : e.bundleID) && Object(n.a)({
                                    level: h.ProtoLoggingLevelEnum.INFO,
                                    message: 'CNX_REUTERS_APPSETTINGS',
                                    exception: JSON.stringify(t._appSettings)
                                }), t = (t => {
                                    var i, e, s, n, r;
                                    const h = Object.assign({}, t), a = null === (i = h._appSettings) || void 0 === i ? void 0 : i.cmp;
                                    (Object(rt.h)(null === (e = h._appSettings) || void 0 === e ? void 0 : e.gdprConsentString) || Object(rt.h)(null === (s = h._appSettings) || void 0 === s ? void 0 : s.gdprParsedVendorString)) && (h._appSettings.cmp = {
                                        consentString: Object(rt.h)(null === (n = a) || void 0 === n ? void 0 : n.consentString) ? a.consentString : h._appSettings.gdprConsentString,
                                        parsedVendorConsents: Object(rt.h)(null === (r = a) || void 0 === r ? void 0 : r.parsedVendorConsents) ? a.parsedVendorConsents : h._appSettings.gdprParsedVendorString
                                    });
                                    const o = Object.assign({}, Je(Object.assign({}, h._appSettings.cmp))), c = Object.assign({}, Je(Object.assign({}, h._appSettings.tcf))), {
                                            usPrivacyString: u,
                                            deviceID: l,
                                            appPageURL: d
                                        } = Je({
                                            usPrivacyString: h._appSettings.usPrivacyString,
                                            deviceID: h._appSettings.deviceID,
                                            appPageURL: h._appSettings.appPageURL
                                        });
                                    return h._appSettings = Object.assign(Object.assign({}, h._appSettings), {
                                        cmp: o,
                                        tcf: c,
                                        usPrivacyString: u,
                                        deviceID: l,
                                        appPageURL: d
                                    }), h;
                                })(t), {
                                    render: function (i, e) {
                                        try {
                                            const s = Object(rt.h)(t._appSettings.bundleID), a = Object(rt.h)(t._appSettings.sdkVersion);
                                            if (a) {
                                                const i = parseInt(t._appSettings.sdkVersion.substr(0, 1), 10);
                                                t.settings.useExternalViewabilityService = !(i >= 3);
                                            }
                                            const o = ((t, i) => {
                                                    const {
                                                            settings: {plugins: e}
                                                        } = t, {
                                                            cmp: s,
                                                            tcf: n,
                                                            usPrivacyString: h,
                                                            deviceID: a
                                                        } = t._appSettings, o = Ju(t, qu);
                                                    return {
                                                        UserManagerService: new r.b(qu, i, o, {
                                                            cmp: s,
                                                            tcf: n,
                                                            usPrivacyString: h,
                                                            deviceID: a
                                                        }),
                                                        EventsStorageService: new Uu(e._debugLogging)
                                                    };
                                                })(t, s), c = '6798a61a-9b1e-4058-9d88-510c30b37ad6', u = '2620fd96-18c9-4f05-a649-14542c9cb37c';
                                            if (!1) {
                                                if (!Object(Li.k)([
                                                        50,
                                                        50
                                                    ]))
                                                    return void Object(T.E)(u, i, qu);
                                                t.playerId = c;
                                            }
                                            Qu(t, i, o, s, a, e);
                                        } catch (t) {
                                            Object(n.a)({
                                                message: 'Prerender_Elements_main_initPlayer',
                                                exception: t.message,
                                                callStack: t.stack,
                                                level: h.ProtoLoggingLevelEnum.INFO,
                                                throttle: 1000
                                            });
                                        }
                                    }
                                };
                            }, i[t].cmd = {
                                push: function (t) {
                                    try {
                                        t();
                                    } catch (t) {
                                        Object(n.a)({
                                            message: 'Prerender_Elements_main_push_callback',
                                            level: h.ProtoLoggingLevelEnum.INFO,
                                            callStack: t.stack,
                                            exception: t.message,
                                            throttle: 1000
                                        });
                                    }
                                }
                            }, i[t].configEnums = Mu, i[t].configEvents = Tu, i[t];
                        }(), i.forEach(t => {
                            try {
                                t();
                            } catch (t) {
                                Object(n.a)({
                                    message: 'Prerender_Elements_main_commands_callback',
                                    exception: t.message,
                                    callStack: t.stack,
                                    level: h.ProtoLoggingLevelEnum.INFO,
                                    throttle: 1000
                                });
                            }
                        });
                    }();
                } catch (t) {
                    Object(n.a)({
                        message: 'Prerender_Elements_main',
                        exception: t.message,
                        callStack: t.stack,
                        level: h.ProtoLoggingLevelEnum.INFO,
                        throttle: 1000
                    });
                }
            }
        ]);
    }())
}